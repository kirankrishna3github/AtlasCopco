*&---------------------------------------------------------------------*
*& Report  Z_SHOW_ACC_ASS                                              *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  Z_SHOW_ACC_ASS.

* selection parameters
PARAMETER: s_vbeln LIKE vbap-vbeln,
           s_posnr LIKE vbap-posnr.

* flags
DATA:      no_data(1)   TYPE c,
           no_origin(1) TYPE c,
           da_exit(1)   TYPE c,
           single_co(1) TYPE c,
           loekz,
           statistical,
           no_update,
           rrb,
           sched.

* workareas
DATA:      ybedar LIKE t459a-bedar,
           yknttp LIKE t163k-knttp,
           ykzvbr LIKE v_t459k-kzvbr,
           yknumv LIKE vbak-knumv,
           yfplnr LIKE vbkd-fplnr,
           yvbak  LIKE vbak,
           ybukrs LIKE t001k-bukrs,
           ycmgst LIKE vbuk-cmgst,
           accass LIKE cobl_rec_object,
           paobjnr_ae LIKE vbap-paobjnr.


* internal tables                          .

DATA:      yvbap   LIKE TABLE OF vbap  WITH HEADER LINE,
           xvbap   LIKE TABLE OF vbap  WITH HEADER LINE,
           ytvepz  LIKE TABLE OF tvepz WITH HEADER LINE,
           ykonv   LIKE TABLE OF konv  WITH HEADER LINE,
           xkonv   LIKE TABLE OF konv  WITH HEADER LINE,
           yfplt   LIKE TABLE OF fplt  WITH HEADER LINE,
*           yfplt   LIKE TABLE OF FPLTVB  WITH HEADER LINE,
           yvbup   LIKE TABLE OF vbup  WITH HEADER LINE,
           no_update_reason LIKE TABLE OF hlpext WITH HEADER LINE,
           ytvag LIKE tvag OCCURS 1 WITH HEADER LINE.




WRITE: / 'selection ', s_vbeln, '/', s_posnr.

* Selection
PERFORM origin_select.
IF no_data IS INITIAL.
  IF no_origin IS INITIAL.
    WRITE: / '= origin document item'.
    ULINE.
    NEW-LINE.
  ELSE.
    READ TABLE xvbap WITH KEY vbeln = s_vbeln posnr = s_posnr.
    IF NOT xvbap-vbelv IS INITIAL.
    WRITE: / '<> origin document item: ', xvbap-vbelv, '/', xvbap-posnv.
    ELSE.
      WRITE: / 'no origin document item'.
    ENDIF.
    ULINE.
    NEW-LINE.
  ENDIF.

* Account Assignment Data
  PERFORM accountassignment_check.

  NEW-LINE.
  WRITE: 'Accounting data:'.
  FORMAT INTENSIFIED OFF.
  NEW-LINE.
  WRITE: 'Requirement type:      ', xvbap-bedae,
  / 'Requirement class:     ', ybedar,
  / 'Consumption indicator: ', ykzvbr.
  ULINE.
  NEW-LINE.
  FORMAT INTENSIFIED.
  WRITE: 'Determination of the req. type: '.
  FORMAT INTENSIFIED OFF.
  NEW-LINE.
  LOOP AT ytvepz.
    WRITE: 'Item category: ', ytvepz-pstyv, ', ',
    'MRP type:      ', ytvepz-dismm, ', ',
    'Source:        ', ytvepz-bedhk.
    NEW-LINE.
    NEW-LINE.
  ENDLOOP.
  IF sy-subrc NE 0.
    WRITE: 'No determination in transaction OVZI found'.
  ENDIF.
  ULINE.
  NEW-LINE.

* Real account assignment
  PERFORM  realaccountassignment.

  NEW-LINE.
  FORMAT INTENSIFIED.
  WRITE: 'The real account assignment is: '.
  FORMAT INTENSIFIED OFF.
  NEW-LINE.
  IF NOT accass-kostl IS INITIAL.
    WRITE: /'Costcenter: ',accass-kostl.
  ELSEIF NOT accass-aufnr IS INITIAL.
    WRITE: /'Internal Order: ', accass-aufnr.
  ELSEIF NOT accass-ps_psp_pnr IS INITIAL.
    WRITE: /'WBS/PSP Element: ',accass-ps_psp_pnr.
  ELSEIF NOT accass-kdauf IS INITIAL.
    WRITE: /'Single Order Controlling: ', accass-kdauf.
    WRITE: /'Item: ', accass-kdpos.
  ELSEIF NOT accass-paobjnr IS INITIAL.
    WRITE: /'Profitability Segment: ', accass-paobjnr.
  ENDIF.
  ULINE.
  NEW-LINE.

  IF NOT paobjnr_ae IS INITIAL.
    WRITE: /'Profitability Segment ', '(no real account assignment',
            'but relevant e.g. for update of incoming orders or ',
            'as a receiver in the settlement rule): ',
               paobjnr_ae.
  ENDIF.


ENDIF.

*++++++++++++++++++++++++++++++++++++++++++++++++++++
*+            select the origin document            +
*++++++++++++++++++++++++++++++++++++++++++++++++++++
FORM origin_select.

  SELECT SINGLE * FROM vbap INTO yvbap
         WHERE vbeln = s_vbeln AND
               posnr = s_posnr.

  IF sy-subrc NE 0.
    no_data = 'X'.
  ELSE.
    IF yvbap-vbelv NE yvbap-vbeln OR
       yvbap-posnv NE yvbap-posnr.
      no_origin = 'X'.
      DO 50 TIMES.
        IF da_exit = 'X'.
          EXIT.
        ENDIF.
        s_vbeln = yvbap-vbelv.
        s_posnr = yvbap-posnv.
        SELECT SINGLE * FROM vbap INTO yvbap
                                  WHERE vbeln = s_vbeln AND
                                        posnr = s_posnr.
        IF sy-subrc NE 0.
          da_exit   = 'X'.
        ENDIF.
        IF yvbap-vbelv EQ yvbap-vbeln AND
           yvbap-posnv EQ yvbap-posnr.


          da_exit = 'X'.
        ENDIF.
      ENDDO.
    ENDIF.
    APPEND yvbap TO xvbap.
  ENDIF.
ENDFORM.                    "origin_select

*++++++++++++++++++++++++++++++++++++++++++++++++++++
*+            check the account assignment          +
*++++++++++++++++++++++++++++++++++++++++++++++++++++
FORM accountassignment_check.

  READ TABLE xvbap INDEX 1.
  IF NOT xvbap-objnr IS INITIAL.
    single_co = 'X'.
  ENDIF.
* which requirement class ?
  SELECT SINGLE bedar FROM t459a INTO ybedar
     WHERE bedae = xvbap-bedae.
  IF sy-subrc = 0.
*   what does the requirement class contain?
    SELECT SINGLE knttp FROM t459k INTO yknttp
       WHERE bedar = ybedar.
    SELECT SINGLE kzvbr FROM t163k INTO ykzvbr
       WHERE knttp = yknttp.
*   how did we determine the requirement type?
    SELECT pstyv dismm bedhk FROM tvepz
        INTO CORRESPONDING FIELDS OF TABLE ytvepz
        WHERE bedae = xvbap-bedae.
  ENDIF.
ENDFORM.                    "accountassignment_check

*++++++++++++++++++++++++++++++++++++++++++++++++++++
*+            check the real object                 +
*++++++++++++++++++++++++++++++++++++++++++++++++++++
FORM realaccountassignment.

  READ TABLE xvbap INDEX 1.


  CALL FUNCTION 'SD_VBAP_GET_ACCOUNT_ASSIGNMENT'
    EXPORTING
      i_vbeln          = xvbap-vbeln
      i_posnr          = xvbap-posnr
    IMPORTING
      e_paobjnr        = paobjnr_ae
      e_cobl_rec_obj   = accass
    EXCEPTIONS
      record_not_found = 1
      OTHERS           = 2.

  IF sy-subrc = 0.

  ENDIF.

ENDFORM.                    "realaccountassignment

*Selection text£º
*S_POSNR:D       Sales Document Item
*S_VBELN:D       Sales document
