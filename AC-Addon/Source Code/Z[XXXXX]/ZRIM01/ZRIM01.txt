REPORT ZRIM01.

* Search string in programs...
******************************************************************************
* DATA DECLARATION
******************************************************************************
* Tables
TABLES: TRDIR.
* Internal tables
DATA: BEGIN OF GI_PROGS OCCURS 0,
        NAME LIKE TRDIR-NAME,
      END OF GI_PROGS.

DATA: BEGIN OF GI_CONTENT OCCURS 0,
        TEXT(250) TYPE C,
      END OF GI_CONTENT.

DATA: BEGIN OF GI_RESULT OCCURS 0,
        NAME LIKE TRDIR-NAME,
        ROW LIKE SY-TABIX,
        TEXT(72) TYPE C,
      END OF GI_RESULT.

DATA: L_T_RSPARAMS TYPE STANDARD TABLE OF RSPARAMS INITIAL SIZE 0
        WITH HEADER LINE.


* Variables
DATA: GV_STRING1 TYPE STRING,
      GV_STRING2 TYPE STRING.


CONSTANTS: C_X TYPE C VALUE 'X'.

******************************************************************************
* S E L E C T I O N - S C R E E N
******************************************************************************
SELECT-OPTIONS: S_PROG FOR TRDIR-NAME OBLIGATORY.

PARAMETERS: P_STRING(50) TYPE C OBLIGATORY,
            P_FULL RADIOBUTTON GROUP SPEC DEFAULT 'X',  "Full word
            P_PART RADIOBUTTON GROUP SPEC.              "Partial word


******************************************************************************
* S T A R T - O F - S E L E C T I O N
******************************************************************************
START-OF-SELECTION.


  CALL FUNCTION 'RS_REFRESH_FROM_SELECTOPTIONS'
    EXPORTING
      CURR_REPORT           = SY-CPROG
* IMPORTING
*   SP                    =
    TABLES
      SELECTION_TABLE       = L_T_RSPARAMS
* EXCEPTIONS
*   NOT_FOUND             = 1
*   NO_REPORT             = 2
*   OTHERS                = 3
            .
  IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.


  SELECT NAME INTO TABLE GI_PROGS FROM TRDIR
             WHERE NAME IN S_PROG.
  IF SY-SUBRC NE 0.
    WRITE: /'No programs found for your selection.'.
    EXIT.
  ENDIF.

  IF P_PART EQ C_X.
    CONCATENATE '*' P_STRING INTO GV_STRING1.
    CONCATENATE P_STRING '*' INTO GV_STRING2.
  ENDIF.

  LOOP AT GI_PROGS.
    CLEAR GI_RESULT
    .
    MOVE GI_PROGS-NAME TO GI_RESULT-NAME.
    REFRESH GI_CONTENT.
    READ REPORT GI_PROGS-NAME INTO GI_CONTENT.

    IF P_PART EQ C_X.

      SEARCH GI_CONTENT FOR GV_STRING1.
      IF SY-SUBRC EQ 0.
        MOVE SY-TABIX TO GI_RESULT-ROW.
        READ TABLE GI_CONTENT INDEX SY-TABIX.
        MOVE GI_CONTENT-TEXT TO GI_RESULT-TEXT.
        APPEND GI_RESULT.
      ENDIF.

      SEARCH GI_CONTENT FOR GV_STRING2.
      IF SY-SUBRC EQ 0.
        MOVE SY-TABIX TO GI_RESULT-ROW.
        READ TABLE GI_CONTENT INDEX SY-TABIX.
        MOVE GI_CONTENT-TEXT TO GI_RESULT-TEXT.
        APPEND GI_RESULT.
      ENDIF.

    ELSEIF P_FULL EQ C_X.

      SEARCH GI_CONTENT FOR P_STRING.
      IF SY-SUBRC EQ 0.
        MOVE SY-TABIX TO GI_RESULT-ROW.
        READ TABLE GI_CONTENT INDEX SY-TABIX.
        MOVE GI_CONTENT-TEXT TO GI_RESULT-TEXT.
        APPEND GI_RESULT.
      ENDIF.
    ENDIF.

  ENDLOOP.

  LOOP AT GI_RESULT.
    AT NEW NAME.
      SKIP.
      WRITE:/ 'Program:', GI_RESULT-NAME.
    ENDAT.
    WRITE:/ GI_RESULT-ROW,
            GI_RESULT-TEXT.
  ENDLOOP.
  IF SY-SUBRC NE 0.
    WRITE:/ 'String not found in selected programs'.
  ENDIF.

*Selection text£º
*P_FULL:        As a word
*P_PART:        As a string
*P_STRING:        String
*S_PROG:D       Program name
