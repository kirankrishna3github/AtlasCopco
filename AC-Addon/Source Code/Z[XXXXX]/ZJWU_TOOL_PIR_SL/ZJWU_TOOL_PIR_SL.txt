*&---------------------------------------------------------------------*
*& Report  ZJWU_TOOL_PIR_SL
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

report  zjwu_tool_pir_sl.

types: begin of ty_source,
          lifnr like eord-lifnr,
          matnr like eord-matnr,
          ekorg like eine-ekorg,
          werks like eord-werks,
          seperator(1) type c,
          kbetr(11) type c, "like konp-kbetr,"100
          konwa like konp-konwa,"RMB
          kpein(5) type c," like konp-kpein,"1
          kmein like konp-kmein,"PC
          datab like rv13a-datab,"Date Begin
       end of ty_source.

types: begin of ty_file,
         v_text(250)  type c,            " FILE UPLOAD TEXT
       end of ty_file.

types: begin of ty_upload,
          matnr like eord-matnr,
          werks like eord-werks,
          lifnr like eord-lifnr,
       end of ty_upload.

constants: c_filetype(10)   type c value 'ASC',     " FILE TYPE
           c_blanc          type c value ' '.
constants:
        con_tab  type c value cl_abap_char_utilities=>horizontal_tab.

data: gt_source type table of ty_source,
      gt_upload type table of ty_upload,
      gt_down type table of ty_source.

data: gt_file type table of ty_file,
      gv_filename type string.

parameters: p_source type ibipparms-path lower case,
            p_upload type ibipparms-path lower case,
            p_down type ibipparms-path lower case.

at selection-screen on value-request for p_source.
  call function 'F4_FILENAME'
    importing
      file_name = p_source.

at selection-screen on value-request for p_upload.
  call function 'F4_FILENAME'
    importing
      file_name = p_upload.

at selection-screen on value-request for p_down.
  call function 'F4_FILENAME'
    importing
      file_name = p_down.

start-of-selection.
  perform get_file_list.
  perform download.
*&---------------------------------------------------------------------*
*&      Form  GET_FILE_LIST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form get_file_list .
  data: ls_source type ty_source,
        ls_upload type ty_upload,
        lv_string type string.
  "Upload the source.
  gv_filename = p_source.
  perform get_from_pres in program yam_common_routines
                                    tables  gt_file
                                    using   gv_filename
                                            c_filetype
                                            c_blanc.
  "Delete Header
  if gt_file[] is not initial.
    delete gt_file[] index 1.
  endif.
  loop at gt_file into lv_string.
    split lv_string at con_tab
     into ls_source-lifnr ls_source-matnr
          ls_source-ekorg ls_source-werks
          ls_source-seperator ls_source-kbetr
          ls_source-konwa ls_source-kpein
          ls_source-kmein ls_source-datab.
    append ls_source to gt_source.
  endloop.

  "Upload the upload.
  clear: gt_file[].
  gv_filename = p_upload.
  perform get_from_pres in program yam_common_routines
                                    tables  gt_file
                                    using   gv_filename
                                            c_filetype
                                            c_blanc.
  "Delete Header
  if gt_file[] is not initial.
    delete gt_file[] index 1.
  endif.
  loop at gt_file into lv_string.
    split lv_string at con_tab
     into ls_upload-matnr
          ls_upload-werks ls_upload-lifnr.
    append ls_upload to gt_upload.
  endloop.
endform.                    " GET_FILE_LIST
*&---------------------------------------------------------------------*
*&      Form  DOWNLOAD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form download .
  data: ls_download type ty_source,
        ls_source type ty_source,
        lv_string type string.

  sort gt_upload by matnr werks lifnr.
  loop at gt_source into ls_source.
    read table gt_upload transporting no fields
          with key matnr = ls_source-matnr
                   werks = ls_source-werks
                   lifnr = ls_source-lifnr binary search.

    if sy-subrc <> 0."Source list is not created.
      clear: ls_download.
      ls_download = ls_source.
      append ls_download to gt_down.
    endif.
  endloop.

  clear: gt_file[].
  loop at gt_down into ls_download.
    concatenate ls_download-lifnr ls_download-matnr
          ls_download-ekorg ls_download-werks
          ls_download-seperator ls_download-kbetr
          ls_download-konwa ls_download-kpein
          ls_download-kmein ls_download-datab into lv_string
          separated by con_tab.
    append lv_string to gt_file.
  endloop.
  gv_filename = p_down.
  call method cl_gui_frontend_services=>gui_download
    exporting
*      bin_filesize              =
      filename                  = gv_filename
*      filetype                  = 'ASC'
*      append                    = SPACE
*      write_field_separator     = SPACE
*      header                    = '00'
*      trunc_trailing_blanks     = SPACE
*      write_lf                  = 'X'
*      col_select                = SPACE
*      col_select_mask           = SPACE
*      dat_mode                  = SPACE
*      confirm_overwrite         = SPACE
*      no_auth_check             = SPACE
*      codepage                  = SPACE
*      ignore_cerr               = ABAP_TRUE
*      replacement               = '#'
*      write_bom                 = SPACE
*      trunc_trailing_blanks_eol = 'X'
*      wk1_n_format              = SPACE
*      wk1_n_size                = SPACE
*      wk1_t_format              = SPACE
*      wk1_t_size                = SPACE
*      show_transfer_status      = 'X'
*      fieldnames                =
*      write_lf_after_last_line  = 'X'
*    importing
*      filelength                =
    changing
      data_tab                  = gt_file
*    exceptions
*      file_write_error          = 1
*      no_batch                  = 2
*      gui_refuse_filetransfer   = 3
*      invalid_type              = 4
*      no_authority              = 5
*      unknown_error             = 6
*      header_not_allowed        = 7
*      separator_not_allowed     = 8
*      filesize_not_allowed      = 9
*      header_too_long           = 10
*      dp_error_create           = 11
*      dp_error_send             = 12
*      dp_error_write            = 13
*      unknown_dp_error          = 14
*      access_denied             = 15
*      dp_out_of_memory          = 16
*      disk_full                 = 17
*      dp_timeout                = 18
*      file_not_found            = 19
*      dataprovider_exception    = 20
*      control_flush_error       = 21
*      not_supported_by_gui      = 22
*      error_no_gui              = 23
*      others                    = 24
          .
  if sy-subrc <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  endif.

endform.                    " DOWNLOAD

*Selection text£º
*P_DOWN:        Download
*P_SOURCE:        Source
*P_UPLOAD:        Upload
