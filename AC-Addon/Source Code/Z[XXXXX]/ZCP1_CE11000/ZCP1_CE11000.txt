REPORT ZAL_ABAP message-id 26 line-size 255
no standard page heading.
* ZCP1_CE11000.
PARAMETER DOWNLOAD(1) DEFAULT 'S' lower case. "N-svr,Y-clnt
PARAMETER EXECMODE(1) DEFAULT 'B' lower case. "D-dlg,B-btch
PARAMETER OUT_DIR(48) DEFAULT "output file dir
'/var/load/CD1/UK/read' lower case.
PARAMETER IN_DIR(48) DEFAULT "input file dir
'/var/load/CD1/UK/read' lower case.
PARAMETER P_DEST TYPE RFCDES-RFCDEST DEFAULT
'NONE'.
PARAMETER P_PROGID TYPE RFCOPT-RFCEXEC DEFAULT
SPACE.
PARAMETER P_GWHOST TYPE RFCOPT-RFCGWHOST DEFAULT
SPACE.
PARAMETER P_GWSERV TYPE RFCOPT-RFCGWSERV DEFAULT
SPACE.
PARAMETER P_SRVFM(30) DEFAULT "Server Callback function
SPACE.
PARAMETER P_PKGSZ TYPE I DEFAULT "Stream package size
5000.
PARAMETER P_SNC_ON(1) DEFAULT "X-on SPACE-off
SPACE.

PARAMETER $PARAM1(50) TYPE C.

PARAMETER P_DF_VK(40) DEFAULT "ABAP data flow object key
'' lower case.
PARAMETER P_DI_GEN(40) DEFAULT "DI version that generated ABAP
'' lower case.

*** Machine generated ABAP. Do not modify.            ***
*** (C)Copyright Business Objects S.A.  All rights reserved. ***
*
* Date Time:
*    12/24/15 07:39:23
* SAP used for generated this ABAP:
*    Release: 701
*    Host   : 10.25.3.82
*
* ABAP Dataflow Name:
*    DF_R3_CTS_LZ_SAP_CP1_CE11000_D
* ABAP program name in SAP:
*  ZCP1_CE11000
* Generated ABAP file name:
*    //AIRSBEAP0512/D$/Data/SAPLogistics/VAL/ABAP/ZCP1_CE11000
TABLES CE11000.
TABLES ZSTC_SALES_COMP.

DATA: begin of ITAB3 occurs 0,
ABSMG(16) TYPE P DECIMALS 3,
ABSMG_ME(3) TYPE C,
ALTPERIO(7) TYPE N,
ARTNR(18) TYPE C,
AUART(4) TYPE C,
BELNR(10) TYPE C,
BEMOT(2) TYPE C,
BUDAT TYPE D,
BUKRS(4) TYPE C,
COPA_AWORG(10) TYPE C,
COPA_AWSYS(10) TYPE C,
COPA_AWTYP(5) TYPE C,
COPA_BWZPT(1) TYPE C,
EQUNR(18) TYPE C,
FADAT TYPE D,
FKART(4) TYPE C,
FRWAE(5) TYPE C,
GJAHR(4) TYPE N,
GSBER(4) TYPE C,
HRKFT(4) TYPE C,
HZDAT TYPE D,
KAUFN(10) TYPE C,
KDPOS(6) TYPE N,
KNDNR(10) TYPE C,
KOKRS(4) TYPE C,
KSTAR(10) TYPE C,
KSTRG(12) TYPE C,
KTGRD(2) TYPE C,
KUNWE(10) TYPE C,
KURSBK(16) TYPE P DECIMALS 5,
KURSF(16) TYPE P DECIMALS 5,
KURSKZ(16) TYPE P DECIMALS 5,
MANDT(3) TYPE C,
MATKL(9) TYPE C,
PALEDGER(2) TYPE C,
PAOBJNR(10) TYPE N,
PAPAOBJNR(10) TYPE N,
PAPASUBNR(4) TYPE N,
PASUBNR(4) TYPE N,
PERDE(3) TYPE N,
PERIO(7) TYPE N,
PLIKZ(1) TYPE C,
POSNR(6) TYPE C,
PPRCTR(10) TYPE C,
PRCTR(10) TYPE C,
PRODH(18) TYPE C,
PRZNR(12) TYPE C,
PSPNR(8) TYPE N,
RBELN(10) TYPE C,
REC_WAERS(5) TYPE C,
RKAUFNR(12) TYPE C,
RKESTATU(10) TYPE C,
RPOSN(6) TYPE C,
SKOST(10) TYPE C,
SPART(2) TYPE C,
STO_BELNR(10) TYPE C,
STO_POSNR(6) TYPE C,
TIMESTMP(16) TYPE P DECIMALS 0,
USNAM(12) TYPE C,
VERSI(3) TYPE C,
VKBUR(4) TYPE C,
VKORG(4) TYPE C,
VRGAR(1) TYPE C,
VTWEG(2) TYPE C,
VV010(16) TYPE P DECIMALS 3,
VV010_ME(3) TYPE C,
VV100(16) TYPE P DECIMALS 2,
VV101(16) TYPE P DECIMALS 2,
VV110(16) TYPE P DECIMALS 2,
VV111(16) TYPE P DECIMALS 2,
VV112(16) TYPE P DECIMALS 2,
VV113(16) TYPE P DECIMALS 2,
VV114(16) TYPE P DECIMALS 2,
VV115(16) TYPE P DECIMALS 2,
VV116(16) TYPE P DECIMALS 2,
VV117(16) TYPE P DECIMALS 2,
VV118(16) TYPE P DECIMALS 2,
VV120(16) TYPE P DECIMALS 2,
VV130(16) TYPE P DECIMALS 2,
VV140(16) TYPE P DECIMALS 2,
VV150(16) TYPE P DECIMALS 2,
VV199(16) TYPE P DECIMALS 2,
VV200(16) TYPE P DECIMALS 2,
VV300(16) TYPE P DECIMALS 2,
VV400(16) TYPE P DECIMALS 2,
VV500(16) TYPE P DECIMALS 2,
VV600(16) TYPE P DECIMALS 2,
VV650(16) TYPE P DECIMALS 2,
VV700(16) TYPE P DECIMALS 2,
VV710(16) TYPE P DECIMALS 2,
VV720(16) TYPE P DECIMALS 2,
VV730(16) TYPE P DECIMALS 2,
WADAT TYPE D,
WERKS(4) TYPE C,
WW001(1) TYPE C,
WW002(3) TYPE C,
WW003(2) TYPE C,
WW004(10) TYPE C,
WW005(4) TYPE C,
WW006(4) TYPE C,
WW007(4) TYPE C,
WW008(6) TYPE C,
WW009(3) TYPE C,
Z_BUKRS(4) TYPE C,
Z_VKORG(4) TYPE C,
Z_WERKS(4) TYPE C,
Z_EKORG(4) TYPE C,
Z_MAMUSERCMPY(4) TYPE C,
Z_REGION(40) TYPE C,
Z_COUNTRY(40) TYPE C,
Z_COUNTRYDSCR(255) TYPE C,
Z_SALESCOMPANY(40) TYPE C,
Z_SALESCMPDSCR(255) TYPE C.
DATA: end of ITAB3.

data: append_flag(1) value ' ',
      cntbuf type i,
      delimleng type i,last_batch(1) value ' '.

CONSTANTS C_DF_VK(40) VALUE '1640'.
CONSTANTS C_DI_GEN(40) VALUE '14.2.3.660'.
DATA WARN_MSG(50).


DATA: gv_directory     TYPE epsdirnam  VALUE '/var/load/xxx/UK/read/',
      gv_logsys        LIKE tbdlst-logsys.

start-of-selection.
* Logical system
  CALL FUNCTION 'OWN_LOGICAL_SYSTEM_GET'
    IMPORTING
      own_logical_system             = gv_logsys
    EXCEPTIONS
      own_logical_system_not_defined = 1
      OTHERS                         = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE 'E' NUMBER sy-msgno
         WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    STOP.
  ENDIF.
  REPLACE 'xxx' IN out_dir WITH gv_logsys(3).
  REPLACE 'xxx' IN in_dir WITH gv_logsys(3).


  IF DOWNLOAD = 'S' OR
     DOWNLOAD = 'N' OR
     DOWNLOAD = 'Y'.
      .
  ELSE.
     DATA: m_xfer_err_msg(700).
     CONCATENATE
'ABAP program does not recognize this new '
'data transfer method: ' DOWNLOAD
'. Regenerate the ABAP program and upload to this system.'
     INTO m_xfer_err_msg.
     MESSAGE  E240(S#) WITH m_xfer_err_msg.
  ENDIF.

  IF EXECMODE = 'B' OR
     EXECMODE = 'D'.
      .
  ELSE.
     DATA: m_exec_err_msg(700).
     CONCATENATE
'ABAP program does not recognize this new '
'execution option: ' EXECMODE
'. Regenerate the ABAP program and upload to this system.'
     INTO m_exec_err_msg.
     MESSAGE  E240(S#) WITH m_exec_err_msg.
  ENDIF.

  IF DOWNLOAD = 'S'.
     PERFORM CONNECT_RFCDEST_TO_PROGID.
  ENDIF.



PERFORM FORM3.
last_batch = 'X'.
PERFORM FORM4.
FREE ITAB3.
  IF DOWNLOAD = 'S'.
     PERFORM DISCONNECT_RFCDEST_FROM_PROGID.
  ENDIF.


end-of-selection.

CLEAR WARN_MSG.

IF NOT P_DF_VK IS INITIAL.
  IF P_DF_VK <> C_DF_VK.
     CONCATENATE '$$Warning$'
                 C_DF_VK
                 '$' INTO WARN_MSG.
  ENDIF.
ENDIF.
IF NOT P_DI_GEN IS INITIAL.
  IF P_DI_GEN <> C_DI_GEN.
     IF WARN_MSG IS INITIAL.
       CONCATENATE '$$Warning$$'
                   C_DI_GEN
                   INTO WARN_MSG.
     ELSE.
       CONCATENATE WARN_MSG
                   C_DI_GEN
                   INTO WARN_MSG.
     ENDIF.
  ENDIF.
ENDIF.

IF NOT WARN_MSG IS INITIAL.
  IF EXECMODE = 'D'.
    WRITE WARN_MSG.
    NEW-LINE.
  ELSE.
    MESSAGE S240(S#) with WARN_MSG.
  ENDIF.
ENDIF.


write  '* Program Complete *'.
write  '(C)Copyright Business Objects S.A.  All rights reserved.'.

FORM FORM3.
DATA ALTMP862(16) TYPE P DECIMALS 3.
DATA ALTMP863(3) TYPE C.
DATA ALTMP864(7) TYPE N.
DATA ALTMP865(18) TYPE C.
DATA ALTMP866(4) TYPE C.
DATA ALTMP867(10) TYPE C.
DATA ALTMP868(2) TYPE C.
DATA ALTMP869 TYPE D.
DATA ALTMP870(4) TYPE C.
DATA ALTMP871(10) TYPE C.
DATA ALTMP872(10) TYPE C.
DATA ALTMP873(5) TYPE C.
DATA ALTMP874(1) TYPE C.
DATA ALTMP875(18) TYPE C.
DATA ALTMP876 TYPE D.
DATA ALTMP877(4) TYPE C.
DATA ALTMP878(5) TYPE C.
DATA ALTMP879(4) TYPE N.
DATA ALTMP880(4) TYPE C.
DATA ALTMP881(4) TYPE C.
DATA ALTMP882 TYPE D.
DATA ALTMP883(10) TYPE C.
DATA ALTMP884(6) TYPE N.
DATA ALTMP885(10) TYPE C.
DATA ALTMP886(4) TYPE C.
DATA ALTMP887(10) TYPE C.
DATA ALTMP888(12) TYPE C.
DATA ALTMP889(2) TYPE C.
DATA ALTMP890(10) TYPE C.
DATA ALTMP891(16) TYPE P DECIMALS 5.
DATA ALTMP892(16) TYPE P DECIMALS 5.
DATA ALTMP893(16) TYPE P DECIMALS 5.
DATA ALTMP894(3) TYPE C.
DATA ALTMP895(9) TYPE C.
DATA ALTMP896(2) TYPE C.
DATA ALTMP897(10) TYPE N.
DATA ALTMP898(10) TYPE N.
DATA ALTMP899(4) TYPE N.
DATA ALTMP900(4) TYPE N.
DATA ALTMP901(3) TYPE N.
DATA ALTMP902(7) TYPE N.
DATA ALTMP903(1) TYPE C.
DATA ALTMP904(6) TYPE C.
DATA ALTMP905(10) TYPE C.
DATA ALTMP906(10) TYPE C.
DATA ALTMP907(18) TYPE C.
DATA ALTMP908(12) TYPE C.
DATA ALTMP909(8) TYPE N.
DATA ALTMP910(10) TYPE C.
DATA ALTMP911(5) TYPE C.
DATA ALTMP912(12) TYPE C.
DATA ALTMP913(10) TYPE C.
DATA ALTMP914(6) TYPE C.
DATA ALTMP915(10) TYPE C.
DATA ALTMP916(2) TYPE C.
DATA ALTMP917(10) TYPE C.
DATA ALTMP918(6) TYPE C.
DATA ALTMP919(16) TYPE P DECIMALS 0.
DATA ALTMP920(12) TYPE C.
DATA ALTMP921(3) TYPE C.
DATA ALTMP922(4) TYPE C.
DATA ALTMP923(4) TYPE C.
DATA ALTMP924(1) TYPE C.
DATA ALTMP925(2) TYPE C.
DATA ALTMP926(16) TYPE P DECIMALS 3.
DATA ALTMP927(3) TYPE C.
DATA ALTMP928(16) TYPE P DECIMALS 2.
DATA ALTMP929(16) TYPE P DECIMALS 2.
DATA ALTMP930(16) TYPE P DECIMALS 2.
DATA ALTMP931(16) TYPE P DECIMALS 2.
DATA ALTMP932(16) TYPE P DECIMALS 2.
DATA ALTMP933(16) TYPE P DECIMALS 2.
DATA ALTMP934(16) TYPE P DECIMALS 2.
DATA ALTMP935(16) TYPE P DECIMALS 2.
DATA ALTMP936(16) TYPE P DECIMALS 2.
DATA ALTMP937(16) TYPE P DECIMALS 2.
DATA ALTMP938(16) TYPE P DECIMALS 2.
DATA ALTMP939(16) TYPE P DECIMALS 2.
DATA ALTMP940(16) TYPE P DECIMALS 2.
DATA ALTMP941(16) TYPE P DECIMALS 2.
DATA ALTMP942(16) TYPE P DECIMALS 2.
DATA ALTMP943(16) TYPE P DECIMALS 2.
DATA ALTMP944(16) TYPE P DECIMALS 2.
DATA ALTMP945(16) TYPE P DECIMALS 2.
DATA ALTMP946(16) TYPE P DECIMALS 2.
DATA ALTMP947(16) TYPE P DECIMALS 2.
DATA ALTMP948(16) TYPE P DECIMALS 2.
DATA ALTMP949(16) TYPE P DECIMALS 2.
DATA ALTMP950(16) TYPE P DECIMALS 2.
DATA ALTMP951(16) TYPE P DECIMALS 2.
DATA ALTMP952(16) TYPE P DECIMALS 2.
DATA ALTMP953(16) TYPE P DECIMALS 2.
DATA ALTMP954 TYPE D.
DATA ALTMP955(4) TYPE C.
DATA ALTMP956(1) TYPE C.
DATA ALTMP957(3) TYPE C.
DATA ALTMP958(2) TYPE C.
DATA ALTMP959(10) TYPE C.
DATA ALTMP960(4) TYPE C.
DATA ALTMP961(4) TYPE C.
DATA ALTMP962(4) TYPE C.
DATA ALTMP963(6) TYPE C.
DATA ALTMP964(3) TYPE C.
DATA ALTMP965(4) TYPE C.
DATA ALTMP966(4) TYPE C.
DATA ALTMP967(4) TYPE C.
DATA ALTMP968(4) TYPE C.
DATA ALTMP969(4) TYPE C.
DATA ALTMP970(40) TYPE C.
DATA ALTMP971(40) TYPE C.
DATA ALTMP972(255) TYPE C.
DATA ALTMP973(40) TYPE C.
DATA ALTMP974(255) TYPE C.

DATA CE110009ABSMG LIKE CE11000-ABSMG.
DATA CE110009ABSMG_ME LIKE CE11000-ABSMG_ME.
DATA CE110009ALTPERIO LIKE CE11000-ALTPERIO.
DATA CE110009ARTNR LIKE CE11000-ARTNR.
DATA CE110009AUART LIKE CE11000-AUART.
DATA CE110009BELNR LIKE CE11000-BELNR.
DATA CE110009BEMOT LIKE CE11000-BEMOT.
DATA CE110009BUDAT LIKE CE11000-BUDAT.
DATA CE110009BUKRS LIKE CE11000-BUKRS.
DATA CE110009COPA_AWORG LIKE CE11000-COPA_AWORG.
DATA CE110009COPA_AWSYS LIKE CE11000-COPA_AWSYS.
DATA CE110009COPA_AWTYP LIKE CE11000-COPA_AWTYP.
DATA CE110009COPA_BWZPT LIKE CE11000-COPA_BWZPT.
DATA CE110009EQUNR LIKE CE11000-EQUNR.
DATA CE110009FADAT LIKE CE11000-FADAT.
DATA CE110009FKART LIKE CE11000-FKART.
DATA CE110009FRWAE LIKE CE11000-FRWAE.
DATA CE110009GJAHR LIKE CE11000-GJAHR.
DATA CE110009GSBER LIKE CE11000-GSBER.
DATA CE110009HRKFT LIKE CE11000-HRKFT.
DATA CE110009HZDAT LIKE CE11000-HZDAT.
DATA CE110009KAUFN LIKE CE11000-KAUFN.
DATA CE110009KDPOS LIKE CE11000-KDPOS.
DATA CE110009KNDNR LIKE CE11000-KNDNR.
DATA CE110009KOKRS LIKE CE11000-KOKRS.
DATA CE110009KSTAR LIKE CE11000-KSTAR.
DATA CE110009KSTRG LIKE CE11000-KSTRG.
DATA CE110009KTGRD LIKE CE11000-KTGRD.
DATA CE110009KUNWE LIKE CE11000-KUNWE.
DATA CE110009KURSBK LIKE CE11000-KURSBK.
DATA CE110009KURSF LIKE CE11000-KURSF.
DATA CE110009KURSKZ LIKE CE11000-KURSKZ.
DATA CE110009MANDT LIKE CE11000-MANDT.
DATA CE110009MATKL LIKE CE11000-MATKL.
DATA CE110009PALEDGER LIKE CE11000-PALEDGER.
DATA CE110009PAOBJNR LIKE CE11000-PAOBJNR.
DATA CE110009PAPAOBJNR LIKE CE11000-PAPAOBJNR.
DATA CE110009PAPASUBNR LIKE CE11000-PAPASUBNR.
DATA CE110009PASUBNR LIKE CE11000-PASUBNR.
DATA CE110009PERDE LIKE CE11000-PERDE.
DATA CE110009PERIO LIKE CE11000-PERIO.
DATA CE110009PLIKZ LIKE CE11000-PLIKZ.
DATA CE110009POSNR LIKE CE11000-POSNR.
DATA CE110009PPRCTR LIKE CE11000-PPRCTR.
DATA CE110009PRCTR LIKE CE11000-PRCTR.
DATA CE110009PRODH LIKE CE11000-PRODH.
DATA CE110009PRZNR LIKE CE11000-PRZNR.
DATA CE110009PSPNR LIKE CE11000-PSPNR.
DATA CE110009RBELN LIKE CE11000-RBELN.
DATA CE110009REC_WAERS LIKE CE11000-REC_WAERS.
DATA CE110009RKAUFNR LIKE CE11000-RKAUFNR.
DATA CE110009RKESTATU LIKE CE11000-RKESTATU.
DATA CE110009RPOSN LIKE CE11000-RPOSN.
DATA CE110009SKOST LIKE CE11000-SKOST.
DATA CE110009SPART LIKE CE11000-SPART.
DATA CE110009STO_BELNR LIKE CE11000-STO_BELNR.
DATA CE110009STO_POSNR LIKE CE11000-STO_POSNR.
DATA CE110009TIMESTMP LIKE CE11000-TIMESTMP.
DATA CE110009USNAM LIKE CE11000-USNAM.
DATA CE110009VERSI LIKE CE11000-VERSI.
DATA CE110009VKBUR LIKE CE11000-VKBUR.
DATA CE110009VKORG LIKE CE11000-VKORG.
DATA CE110009VRGAR LIKE CE11000-VRGAR.
DATA CE110009VTWEG LIKE CE11000-VTWEG.
DATA CE110009VV010 LIKE CE11000-VV010.
DATA CE110009VV010_ME LIKE CE11000-VV010_ME.
DATA CE110009VV100 LIKE CE11000-VV100.
DATA CE110009VV101 LIKE CE11000-VV101.
DATA CE110009VV110 LIKE CE11000-VV110.
DATA CE110009VV111 LIKE CE11000-VV111.
DATA CE110009VV112 LIKE CE11000-VV112.
DATA CE110009VV113 LIKE CE11000-VV113.
DATA CE110009VV114 LIKE CE11000-VV114.
DATA CE110009VV115 LIKE CE11000-VV115.
DATA CE110009VV116 LIKE CE11000-VV116.
DATA CE110009VV117 LIKE CE11000-VV117.
DATA CE110009VV118 LIKE CE11000-VV118.
DATA CE110009VV120 LIKE CE11000-VV120.
DATA CE110009VV130 LIKE CE11000-VV130.
DATA CE110009VV140 LIKE CE11000-VV140.
DATA CE110009VV150 LIKE CE11000-VV150.
DATA CE110009VV199 LIKE CE11000-VV199.
DATA CE110009VV200 LIKE CE11000-VV200.
DATA CE110009VV300 LIKE CE11000-VV300.
DATA CE110009VV400 LIKE CE11000-VV400.
DATA CE110009VV500 LIKE CE11000-VV500.
DATA CE110009VV600 LIKE CE11000-VV600.
DATA CE110009VV650 LIKE CE11000-VV650.
DATA CE110009VV700 LIKE CE11000-VV700.
DATA CE110009VV710 LIKE CE11000-VV710.
DATA CE110009VV720 LIKE CE11000-VV720.
DATA CE110009VV730 LIKE CE11000-VV730.
DATA CE110009WADAT LIKE CE11000-WADAT.
DATA CE110009WERKS LIKE CE11000-WERKS.
DATA CE110009WW001 LIKE CE11000-WW001.
DATA CE110009WW002 LIKE CE11000-WW002.
DATA CE110009WW003 LIKE CE11000-WW003.
DATA CE110009WW004 LIKE CE11000-WW004.
DATA CE110009WW005 LIKE CE11000-WW005.
DATA CE110009WW006 LIKE CE11000-WW006.
DATA CE110009WW007 LIKE CE11000-WW007.
DATA CE110009WW008 LIKE CE11000-WW008.
DATA CE110009WW009 LIKE CE11000-WW009.
DATA ZSTC_SALE_019BUKRS LIKE ZSTC_SALES_COMP-BUKRS.
DATA ZSTC_SALE_019VKORG LIKE ZSTC_SALES_COMP-VKORG.
DATA ZSTC_SALE_019WERKS LIKE ZSTC_SALES_COMP-WERKS.
DATA ZSTC_SALE_019EKORG LIKE ZSTC_SALES_COMP-EKORG.
DATA ZSTC_SALE_019MAMUSERCMPY LIKE ZSTC_SALES_COMP-MAMUSERCMPY.
DATA ZSTC_SALE_019REGION LIKE ZSTC_SALES_COMP-REGION.
DATA ZSTC_SALE_019COUNTRY LIKE ZSTC_SALES_COMP-COUNTRY.
DATA ZSTC_SALE_019COUNTRYDSCR LIKE ZSTC_SALES_COMP-COUNTRYDSCR.
DATA ZSTC_SALE_019SALESCOMPANY LIKE ZSTC_SALES_COMP-SALESCOMPANY.
DATA ZSTC_SALE_019SALESCMPDSCR LIKE ZSTC_SALES_COMP-SALESCMPDSCR.



SELECT
  CE110009~ABSMG
  CE110009~ABSMG_ME
  CE110009~ALTPERIO
  CE110009~ARTNR
  CE110009~AUART
  CE110009~BELNR
  CE110009~BEMOT
  CE110009~BUDAT
  CE110009~BUKRS
  CE110009~COPA_AWORG
  CE110009~COPA_AWSYS
  CE110009~COPA_AWTYP
  CE110009~COPA_BWZPT
  CE110009~EQUNR
  CE110009~FADAT
  CE110009~FKART
  CE110009~FRWAE
  CE110009~GJAHR
  CE110009~GSBER
  CE110009~HRKFT
  CE110009~HZDAT
  CE110009~KAUFN
  CE110009~KDPOS
  CE110009~KNDNR
  CE110009~KOKRS
  CE110009~KSTAR
  CE110009~KSTRG
  CE110009~KTGRD
  CE110009~KUNWE
  CE110009~KURSBK
  CE110009~KURSF
  CE110009~KURSKZ
  CE110009~MANDT
  CE110009~MATKL
  CE110009~PALEDGER
  CE110009~PAOBJNR
  CE110009~PAPAOBJNR
  CE110009~PAPASUBNR
  CE110009~PASUBNR
  CE110009~PERDE
  CE110009~PERIO
  CE110009~PLIKZ
  CE110009~POSNR
  CE110009~PPRCTR
  CE110009~PRCTR
  CE110009~PRODH
  CE110009~PRZNR
  CE110009~PSPNR
  CE110009~RBELN
  CE110009~REC_WAERS
  CE110009~RKAUFNR
  CE110009~RKESTATU
  CE110009~RPOSN
  CE110009~SKOST
  CE110009~SPART
  CE110009~STO_BELNR
  CE110009~STO_POSNR
  CE110009~TIMESTMP
  CE110009~USNAM
  CE110009~VERSI
  CE110009~VKBUR
  CE110009~VKORG
  CE110009~VRGAR
  CE110009~VTWEG
  CE110009~VV010
  CE110009~VV010_ME
  CE110009~VV100
  CE110009~VV101
  CE110009~VV110
  CE110009~VV111
  CE110009~VV112
  CE110009~VV113
  CE110009~VV114
  CE110009~VV115
  CE110009~VV116
  CE110009~VV117
  CE110009~VV118
  CE110009~VV120
  CE110009~VV130
  CE110009~VV140
  CE110009~VV150
  CE110009~VV199
  CE110009~VV200
  CE110009~VV300
  CE110009~VV400
  CE110009~VV500
  CE110009~VV600
  CE110009~VV650
  CE110009~VV700
  CE110009~VV710
  CE110009~VV720
  CE110009~VV730
  CE110009~WADAT
  CE110009~WERKS
  CE110009~WW001
  CE110009~WW002
  CE110009~WW003
  CE110009~WW004
  CE110009~WW005
  CE110009~WW006
  CE110009~WW007
  CE110009~WW008
  CE110009~WW009
  ZSTC_SALE_019~BUKRS
  ZSTC_SALE_019~VKORG
  ZSTC_SALE_019~WERKS
  ZSTC_SALE_019~EKORG
  ZSTC_SALE_019~MAMUSERCMPY
  ZSTC_SALE_019~REGION
  ZSTC_SALE_019~COUNTRY
  ZSTC_SALE_019~COUNTRYDSCR
  ZSTC_SALE_019~SALESCOMPANY
  ZSTC_SALE_019~SALESCMPDSCR
into (CE110009ABSMG,
  CE110009ABSMG_ME,
  CE110009ALTPERIO,
  CE110009ARTNR,
  CE110009AUART,
  CE110009BELNR,
  CE110009BEMOT,
  CE110009BUDAT,
  CE110009BUKRS,
  CE110009COPA_AWORG,
  CE110009COPA_AWSYS,
  CE110009COPA_AWTYP,
  CE110009COPA_BWZPT,
  CE110009EQUNR,
  CE110009FADAT,
  CE110009FKART,
  CE110009FRWAE,
  CE110009GJAHR,
  CE110009GSBER,
  CE110009HRKFT,
  CE110009HZDAT,
  CE110009KAUFN,
  CE110009KDPOS,
  CE110009KNDNR,
  CE110009KOKRS,
  CE110009KSTAR,
  CE110009KSTRG,
  CE110009KTGRD,
  CE110009KUNWE,
  CE110009KURSBK,
  CE110009KURSF,
  CE110009KURSKZ,
  CE110009MANDT,
  CE110009MATKL,
  CE110009PALEDGER,
  CE110009PAOBJNR,
  CE110009PAPAOBJNR,
  CE110009PAPASUBNR,
  CE110009PASUBNR,
  CE110009PERDE,
  CE110009PERIO,
  CE110009PLIKZ,
  CE110009POSNR,
  CE110009PPRCTR,
  CE110009PRCTR,
  CE110009PRODH,
  CE110009PRZNR,
  CE110009PSPNR,
  CE110009RBELN,
  CE110009REC_WAERS,
  CE110009RKAUFNR,
  CE110009RKESTATU,
  CE110009RPOSN,
  CE110009SKOST,
  CE110009SPART,
  CE110009STO_BELNR,
  CE110009STO_POSNR,
  CE110009TIMESTMP,
  CE110009USNAM,
  CE110009VERSI,
  CE110009VKBUR,
  CE110009VKORG,
  CE110009VRGAR,
  CE110009VTWEG,
  CE110009VV010,
  CE110009VV010_ME,
  CE110009VV100,
  CE110009VV101,
  CE110009VV110,
  CE110009VV111,
  CE110009VV112,
  CE110009VV113,
  CE110009VV114,
  CE110009VV115,
  CE110009VV116,
  CE110009VV117,
  CE110009VV118,
  CE110009VV120,
  CE110009VV130,
  CE110009VV140,
  CE110009VV150,
  CE110009VV199,
  CE110009VV200,
  CE110009VV300,
  CE110009VV400,
  CE110009VV500,
  CE110009VV600,
  CE110009VV650,
  CE110009VV700,
  CE110009VV710,
  CE110009VV720,
  CE110009VV730,
  CE110009WADAT,
  CE110009WERKS,
  CE110009WW001,
  CE110009WW002,
  CE110009WW003,
  CE110009WW004,
  CE110009WW005,
  CE110009WW006,
  CE110009WW007,
  CE110009WW008,
  CE110009WW009,
  ZSTC_SALE_019BUKRS,
  ZSTC_SALE_019VKORG,
  ZSTC_SALE_019WERKS,
  ZSTC_SALE_019EKORG,
  ZSTC_SALE_019MAMUSERCMPY,
  ZSTC_SALE_019REGION,
  ZSTC_SALE_019COUNTRY,
  ZSTC_SALE_019COUNTRYDSCR,
  ZSTC_SALE_019SALESCOMPANY,
  ZSTC_SALE_019SALESCMPDSCR)
FROM ZSTC_SALES_COMP AS ZSTC_SALE_019
 INNER JOIN CE11000 AS CE110009
 ON ( CE110009~VKORG = ZSTC_SALE_019~VKORG )
WHERE ( ( CE110009~TIMESTMP >= $PARAM1 )
 AND ( ( CE110009~VTWEG = '11' )
 AND ( NOT ( ( CE110009~VKORG like '%04' ) )
 AND ( NOT ( ( CE110009~VKORG like '%03' ) )
 AND NOT ( ( CE110009~VKORG like '%02' ) ) ) ) ) ).
ALTMP862 = CE110009ABSMG.
ALTMP863 = CE110009ABSMG_ME.
ALTMP864 = CE110009ALTPERIO.
ALTMP865 = CE110009ARTNR.
ALTMP866 = CE110009AUART.
ALTMP867 = CE110009BELNR.
ALTMP868 = CE110009BEMOT.
ALTMP869 = CE110009BUDAT.
ALTMP870 = CE110009BUKRS.
ALTMP871 = CE110009COPA_AWORG.
ALTMP872 = CE110009COPA_AWSYS.
ALTMP873 = CE110009COPA_AWTYP.
ALTMP874 = CE110009COPA_BWZPT.
ALTMP875 = CE110009EQUNR.
ALTMP876 = CE110009FADAT.
ALTMP877 = CE110009FKART.
ALTMP878 = CE110009FRWAE.
ALTMP879 = CE110009GJAHR.
ALTMP880 = CE110009GSBER.
ALTMP881 = CE110009HRKFT.
ALTMP882 = CE110009HZDAT.
ALTMP883 = CE110009KAUFN.
ALTMP884 = CE110009KDPOS.
ALTMP885 = CE110009KNDNR.
ALTMP886 = CE110009KOKRS.
ALTMP887 = CE110009KSTAR.
ALTMP888 = CE110009KSTRG.
ALTMP889 = CE110009KTGRD.
ALTMP890 = CE110009KUNWE.
ALTMP891 = CE110009KURSBK.
ALTMP892 = CE110009KURSF.
ALTMP893 = CE110009KURSKZ.
ALTMP894 = CE110009MANDT.
ALTMP895 = CE110009MATKL.
ALTMP896 = CE110009PALEDGER.
ALTMP897 = CE110009PAOBJNR.
ALTMP898 = CE110009PAPAOBJNR.
ALTMP899 = CE110009PAPASUBNR.
ALTMP900 = CE110009PASUBNR.
ALTMP901 = CE110009PERDE.
ALTMP902 = CE110009PERIO.
ALTMP903 = CE110009PLIKZ.
ALTMP904 = CE110009POSNR.
ALTMP905 = CE110009PPRCTR.
ALTMP906 = CE110009PRCTR.
ALTMP907 = CE110009PRODH.
ALTMP908 = CE110009PRZNR.
ALTMP909 = CE110009PSPNR.
ALTMP910 = CE110009RBELN.
ALTMP911 = CE110009REC_WAERS.
ALTMP912 = CE110009RKAUFNR.
ALTMP913 = CE110009RKESTATU.
ALTMP914 = CE110009RPOSN.
ALTMP915 = CE110009SKOST.
ALTMP916 = CE110009SPART.
ALTMP917 = CE110009STO_BELNR.
ALTMP918 = CE110009STO_POSNR.
ALTMP919 = CE110009TIMESTMP.
ALTMP920 = CE110009USNAM.
ALTMP921 = CE110009VERSI.
ALTMP922 = CE110009VKBUR.
ALTMP923 = CE110009VKORG.
ALTMP924 = CE110009VRGAR.
ALTMP925 = CE110009VTWEG.
ALTMP926 = CE110009VV010.
ALTMP927 = CE110009VV010_ME.
ALTMP928 = CE110009VV100.
ALTMP929 = CE110009VV101.
ALTMP930 = CE110009VV110.
ALTMP931 = CE110009VV111.
ALTMP932 = CE110009VV112.
ALTMP933 = CE110009VV113.
ALTMP934 = CE110009VV114.
ALTMP935 = CE110009VV115.
ALTMP936 = CE110009VV116.
ALTMP937 = CE110009VV117.
ALTMP938 = CE110009VV118.
ALTMP939 = CE110009VV120.
ALTMP940 = CE110009VV130.
ALTMP941 = CE110009VV140.
ALTMP942 = CE110009VV150.
ALTMP943 = CE110009VV199.
ALTMP944 = CE110009VV200.
ALTMP945 = CE110009VV300.
ALTMP946 = CE110009VV400.
ALTMP947 = CE110009VV500.
ALTMP948 = CE110009VV600.
ALTMP949 = CE110009VV650.
ALTMP950 = CE110009VV700.
ALTMP951 = CE110009VV710.
ALTMP952 = CE110009VV720.
ALTMP953 = CE110009VV730.
ALTMP954 = CE110009WADAT.
ALTMP955 = CE110009WERKS.
ALTMP956 = CE110009WW001.
ALTMP957 = CE110009WW002.
ALTMP958 = CE110009WW003.
ALTMP959 = CE110009WW004.
ALTMP960 = CE110009WW005.
ALTMP961 = CE110009WW006.
ALTMP962 = CE110009WW007.
ALTMP963 = CE110009WW008.
ALTMP964 = CE110009WW009.
ALTMP965 = ZSTC_SALE_019BUKRS.
ALTMP966 = ZSTC_SALE_019VKORG.
ALTMP967 = ZSTC_SALE_019WERKS.
ALTMP968 = ZSTC_SALE_019EKORG.
ALTMP969 = ZSTC_SALE_019MAMUSERCMPY.
ALTMP970 = ZSTC_SALE_019REGION.
ALTMP971 = ZSTC_SALE_019COUNTRY.
ALTMP972 = ZSTC_SALE_019COUNTRYDSCR.
ALTMP973 = ZSTC_SALE_019SALESCOMPANY.
ALTMP974 = ZSTC_SALE_019SALESCMPDSCR.
 move ALTMP862 to ITAB3-ABSMG.
 move ALTMP863 to ITAB3-ABSMG_ME.
 move ALTMP864 to ITAB3-ALTPERIO.
 move ALTMP865 to ITAB3-ARTNR.
 move ALTMP866 to ITAB3-AUART.
 move ALTMP867 to ITAB3-BELNR.
 move ALTMP868 to ITAB3-BEMOT.
 move ALTMP869 to ITAB3-BUDAT.
 move ALTMP870 to ITAB3-BUKRS.
 move ALTMP871 to ITAB3-COPA_AWORG.
 move ALTMP872 to ITAB3-COPA_AWSYS.
 move ALTMP873 to ITAB3-COPA_AWTYP.
 move ALTMP874 to ITAB3-COPA_BWZPT.
 move ALTMP875 to ITAB3-EQUNR.
 move ALTMP876 to ITAB3-FADAT.
 move ALTMP877 to ITAB3-FKART.
 move ALTMP878 to ITAB3-FRWAE.
 move ALTMP879 to ITAB3-GJAHR.
 move ALTMP880 to ITAB3-GSBER.
 move ALTMP881 to ITAB3-HRKFT.
 move ALTMP882 to ITAB3-HZDAT.
 move ALTMP883 to ITAB3-KAUFN.
 move ALTMP884 to ITAB3-KDPOS.
 move ALTMP885 to ITAB3-KNDNR.
 move ALTMP886 to ITAB3-KOKRS.
 move ALTMP887 to ITAB3-KSTAR.
 move ALTMP888 to ITAB3-KSTRG.
 move ALTMP889 to ITAB3-KTGRD.
 move ALTMP890 to ITAB3-KUNWE.
 move ALTMP891 to ITAB3-KURSBK.
 move ALTMP892 to ITAB3-KURSF.
 move ALTMP893 to ITAB3-KURSKZ.
 move ALTMP894 to ITAB3-MANDT.
 move ALTMP895 to ITAB3-MATKL.
 move ALTMP896 to ITAB3-PALEDGER.
 move ALTMP897 to ITAB3-PAOBJNR.
 move ALTMP898 to ITAB3-PAPAOBJNR.
 move ALTMP899 to ITAB3-PAPASUBNR.
 move ALTMP900 to ITAB3-PASUBNR.
 move ALTMP901 to ITAB3-PERDE.
 move ALTMP902 to ITAB3-PERIO.
 move ALTMP903 to ITAB3-PLIKZ.
 move ALTMP904 to ITAB3-POSNR.
 move ALTMP905 to ITAB3-PPRCTR.
 move ALTMP906 to ITAB3-PRCTR.
 move ALTMP907 to ITAB3-PRODH.
 move ALTMP908 to ITAB3-PRZNR.
 move ALTMP909 to ITAB3-PSPNR.
 move ALTMP910 to ITAB3-RBELN.
 move ALTMP911 to ITAB3-REC_WAERS.
 move ALTMP912 to ITAB3-RKAUFNR.
 move ALTMP913 to ITAB3-RKESTATU.
 move ALTMP914 to ITAB3-RPOSN.
 move ALTMP915 to ITAB3-SKOST.
 move ALTMP916 to ITAB3-SPART.
 move ALTMP917 to ITAB3-STO_BELNR.
 move ALTMP918 to ITAB3-STO_POSNR.
 move ALTMP919 to ITAB3-TIMESTMP.
 move ALTMP920 to ITAB3-USNAM.
 move ALTMP921 to ITAB3-VERSI.
 move ALTMP922 to ITAB3-VKBUR.
 move ALTMP923 to ITAB3-VKORG.
 move ALTMP924 to ITAB3-VRGAR.
 move ALTMP925 to ITAB3-VTWEG.
 move ALTMP926 to ITAB3-VV010.
 move ALTMP927 to ITAB3-VV010_ME.
 move ALTMP928 to ITAB3-VV100.
 move ALTMP929 to ITAB3-VV101.
 move ALTMP930 to ITAB3-VV110.
 move ALTMP931 to ITAB3-VV111.
 move ALTMP932 to ITAB3-VV112.
 move ALTMP933 to ITAB3-VV113.
 move ALTMP934 to ITAB3-VV114.
 move ALTMP935 to ITAB3-VV115.
 move ALTMP936 to ITAB3-VV116.
 move ALTMP937 to ITAB3-VV117.
 move ALTMP938 to ITAB3-VV118.
 move ALTMP939 to ITAB3-VV120.
 move ALTMP940 to ITAB3-VV130.
 move ALTMP941 to ITAB3-VV140.
 move ALTMP942 to ITAB3-VV150.
 move ALTMP943 to ITAB3-VV199.
 move ALTMP944 to ITAB3-VV200.
 move ALTMP945 to ITAB3-VV300.
 move ALTMP946 to ITAB3-VV400.
 move ALTMP947 to ITAB3-VV500.
 move ALTMP948 to ITAB3-VV600.
 move ALTMP949 to ITAB3-VV650.
 move ALTMP950 to ITAB3-VV700.
 move ALTMP951 to ITAB3-VV710.
 move ALTMP952 to ITAB3-VV720.
 move ALTMP953 to ITAB3-VV730.
 move ALTMP954 to ITAB3-WADAT.
 move ALTMP955 to ITAB3-WERKS.
 move ALTMP956 to ITAB3-WW001.
 move ALTMP957 to ITAB3-WW002.
 move ALTMP958 to ITAB3-WW003.
 move ALTMP959 to ITAB3-WW004.
 move ALTMP960 to ITAB3-WW005.
 move ALTMP961 to ITAB3-WW006.
 move ALTMP962 to ITAB3-WW007.
 move ALTMP963 to ITAB3-WW008.
 move ALTMP964 to ITAB3-WW009.
 move ALTMP965 to ITAB3-Z_BUKRS.
 move ALTMP966 to ITAB3-Z_VKORG.
 move ALTMP967 to ITAB3-Z_WERKS.
 move ALTMP968 to ITAB3-Z_EKORG.
 move ALTMP969 to ITAB3-Z_MAMUSERCMPY.
 move ALTMP970 to ITAB3-Z_REGION.
 move ALTMP971 to ITAB3-Z_COUNTRY.
 move ALTMP972 to ITAB3-Z_COUNTRYDSCR.
 move ALTMP973 to ITAB3-Z_SALESCOMPANY.
 move ALTMP974 to ITAB3-Z_SALESCMPDSCR.
 append ITAB3.
 cntbuf = cntbuf + 1.
 if download = 'N'.
  if cntbuf > 5000.
    perform FORM4.
    clear cntbuf.
    refresh ITAB3.
    append_flag = 'A'.
  endif.
 endif.
 if download = 'S'.
  if cntbuf > P_PKGSZ.
    perform FORM4.
    clear cntbuf.
    refresh ITAB3.
  endif.
 endif.
ENDSELECT.
ENDFORM.

FORM FORM4.
data: outfile(512), ldfile(50).
ldfile = 'Z_SAP_CP1_CE11000_D'.
concatenate out_dir ldfile into outfile
  separated by '/'.
  IF DOWNLOAD = 'S'.
     DATA: error_message(700),mtext(800),iEOP(1).
     CALL FUNCTION P_SRVFM
          DESTINATION P_DEST
          KEEPING LOGICAL UNIT OF WORK
          EXPORTING
            EOS = last_batch
          IMPORTING
            EOP = iEOP
          TABLES
            E_TABLE = ITAB3
          EXCEPTIONS
            READ_ERROR = 1
            SYSTEM_FAILURE = 2
            MESSAGE error_message
            COMMUNICATION_FAILURE = 3
            MESSAGE error_message
            OTHERS = 4.

     IF sy-subrc ne 0.
        Case sy-subrc.
        when 1.
        CONCATENATE
        'Data Services read error. '
        'Check Data Services error log.'
        INTO mtext.
        MESSAGE  E240(S#) WITH mtext.
        when 2.
        CONCATENATE
'SAP System Failure while calling DS remote function: '
      error_message INTO mtext.
        MESSAGE  E240(S#) WITH mtext.
        when 3.
        CONCATENATE
'SAP System Failure while calling DS remote function: '
      error_message INTO mtext.
        MESSAGE  E240(S#) WITH mtext.
        when 4.
        MESSAGE  E240(S#) WITH
'Other SAP System Failure while calling DS remote function.'.
        endcase.
      ENDIF.
      IF iEOP = 'X'.
         PERFORM DISCONNECT_RFCDEST_FROM_PROGID.
         LEAVE PROGRAM.
       ENDIF.
  ELSE.
data  dlmtlen type i value '1'.
data xdlmtlen type i value '1'.
data:
  ht(1) type c,
  xht(1) type x,
  conv type ref to cl_abap_conv_in_ce.
xht = '7F'.
conv = cl_abap_conv_in_ce=>create(
  encoding = '1100'
  input = xht
).
call method conv->read(
  exporting n    = xdlmtlen
  importing data = ht
            len = dlmtlen
).
data return_code type i.
 perform write_delimited_file
           tables   ITAB3
           using    outfile
                    append_flag
                    ht
                    dlmtlen
                    download
           changing return_code.

  case return_code.
    when 1.
      IF EXECMODE = 'D'.
        WRITE: /5 'No line selected'.
      ELSE.
        MESSAGE E047(S#).
      ENDIF.
    when 2.
      IF EXECMODE = 'D'.
        WRITE: /5 'Open File Error -- ', 25 OUTFILE.
      ELSE.
        MESSAGE  E084(E0) WITH OUTFILE.
      ENDIF.
    when 3.
      IF EXECMODE = 'D'.
        WRITE: /5 'Data exceed length limit (8192) '.
      ELSE.
        MESSAGE  E240(S#) WITH
             'Data exceed length limit (8192) '.
      ENDIF.
    when 4.
      IF EXECMODE = 'D'.
        WRITE: /5 'Call function WS_DOWNLOAD error'.
      ELSE.
        MESSAGE  E240(S#) WITH
             'Call function WS_DOWNLOAD error'.
      ENDIF.
  endcase.
 ENDIF.
ENDFORM.

FORM SUBSTRING USING SRC BEG LEN CHANGING RET.

DATA: VA1 TYPE I.
DATA: VA2 TYPE I.
DATA: VA3 TYPE I.

VA3 = STRLEN( SRC ).

IF  BEG = 0.   VA1 = 0.
ELSE.
  IF  BEG < 0.
    VA1 = VA3 + BEG.
    IF  VA1 < 0.   VA1 = 0.
    ENDIF.
  ELSE.          VA1 = BEG - 1.
  ENDIF.
ENDIF.

IF  LEN < 0.   VA2 = 0.
ELSE.          VA2 = VA3 - VA1.
ENDIF.

IF  VA2 > LEN. VA2 = LEN.
ENDIF.

IF  VA2 < 1.   MOVE ''           TO RET.
ELSE.          MOVE SRC+VA1(VA2) TO RET.
ENDIF.

ENDFORM.

form write_delimited_file
           tables   datatab
           using    file
                    append
                    delimit
                    dlength
                    dwnload
          changing rc.

  data: type1,
        appd(1),
        temp(32),
        time1(8),
        date1(10),
        output(8192),
        rcount type i,
        offset type i,
        tablen type i,
        maxlen type i value '8192'.

  data: begin of clientab occurs 0,
             output(8192),
          end of clientab.

  field-symbols: <f>.
  field-symbols <delim1>.
  data delim2(16).
  data l_filename type string.

  appd = append.
  if appd is not initial.
     appd = 'X'.
  endif.
  move file to l_filename.
  describe table datatab lines tablen.


  if dwnload = 'Y'.
     clear clientab. refresh clientab.
     rcount = 0.
  else.
     if appd = space.
   open dataset file for output in text mode ENCODING UTF-8.
     else.
    open dataset file for appending in text mode ENCODING UTF-8.
     endif.
     if sy-subrc <> 0.
         rc = 2. exit.
     endif.
  endif.

  loop at datatab.
    clear: tablen, offset, output.
    do.
      assign component sy-index of
         structure datatab to <f>.
      if sy-subrc <> 0. exit. endif.
      if sy-index > 1.
         assign delimit(dlength) TO <delim1> CASTING TYPE C.
         delim2 = <delim1>.
         write delim2(dlength) to output+offset(dlength).
         add dlength to offset.
      endif.

      describe field <f> type type1.

      if type1 = 'I' or type1 = 'N'.
          type1 = 'P'.
      endif.

      case type1.
        when 'D'.
          if <f> = '00000000'.
             <f> = ' '.
          else.
             move <f> to time1.
             assign time1 to <f>.
          endif.
        when 'F'.
          if <f> = '0.0'.
            temp = '0.0'.
          else.
             write <f> to temp exponent 0.
          endif.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
        when 'P'.
          if <f> < 0.
             write '-' to output+offset(1).
             add 1 to offset.
             <f> = <f> * ( -1 ).
          endif.
          move <f> to temp.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
      endcase.

      sy-fdpos = strlen( <f> ).

      tablen = offset + sy-fdpos.
      if tablen > maxlen.
         rc = 3. exit.
      endif.
      write <f> to output+offset(sy-fdpos).
      add sy-fdpos to offset.
    enddo.

    if dwnload = 'Y'.
       clientab-output = output.
       append clientab.
       rcount = rcount + 1.
       if rcount >= 50.
          SY-BATCH = SPACE.
          CALL FUNCTION 'GUI_DOWNLOAD'
            EXPORTING
              FILENAME = l_filename
              FILETYPE = 'ASC'
              CODEPAGE = '4110'
              APPEND   = appd
              WRITE_FIELD_SEPARATOR = 'X'
*            IMPORTING
*              FILELENGTH =
            TABLES
              DATA_TAB = clientab
            EXCEPTIONS
              OTHERS = 1.
          if sy-subrc <> 0.
             rc = 4.
          endif.
          clear clientab. refresh clientab.
          rcount = 0. appd = 'A'.
       endif.
    else.
       transfer output to file.
    endif.
  endloop.

  if dwnload = 'Y'.
       SY-BATCH = SPACE.
       CALL FUNCTION 'GUI_DOWNLOAD'
         EXPORTING
           FILENAME = l_filename
           FILETYPE = 'ASC'
              CODEPAGE = '4110'
           APPEND   = appd
           WRITE_FIELD_SEPARATOR = 'X'
*         IMPORTING
*           FILELENGTH =
         TABLES
           DATA_TAB = clientab
         EXCEPTIONS
           OTHERS = 1.
          if sy-subrc <> 0.
             rc = 4.
          endif.
  else.
       close dataset file.
  endif.
endform.

FORM CONNECT_RFCDEST_TO_PROGID.
 INCLUDE rfctypes.

 DATA: len     type i,
       R3NAME(4),
       SYSTNR(2),
       uid     LIKE SYS_UID,
       options LIKE RFCOPT,
       isunicode  TYPE n.

 DATA: NTOTAL     LIKE GWY_STRUCT-NOREG,
       GWY_GWHOST LIKE GWY_STRUCT-GWHOST,
       GWY_GWSERV LIKE GWY_STRUCT-GWSERV,
       GWY_TPNAME LIKE GWY_SYSTEM-TPNAME.

 TABLES: RFCSI.

* Check program ID
 IF P_PROGID = SPACE.							
    RAISE INVALID_PROGRAM_ID.
 ENDIF.

* determine if the RFC destination authority
  CALL FUNCTION 'RFC_READ_TCPIP_DESTINATION'
       EXPORTING destination = P_DEST
                 authority_check = 'X'
  IMPORTING rfcunicode = isunicode.

* Use current gateway if no info exits
 IF P_GWHOST = SPACE OR P_GWSERV = SPACE.
  CALL FUNCTION 'RFC_SYSTEM_INFO'
      IMPORTING
          RFCSI_EXPORT = RFCSI.

  len = strlen( rfcsi-rfcdest ) - 2.
  systnr = rfcsi-rfcdest+len.
  len = len - 1 - 3.
  r3name = rfcsi-rfcdest+len(3).
  len = len - 1.
  options-rfcgwhost = rfcsi-rfcdest(len).
  CONCATENATE 'sapgw' SYSTNR INTO options-rfcgwserv.
 ELSE.
   options-rfcgwhost = P_GWHOST.
   options-rfcgwserv = P_GWSERV.
 ENDIF.

* Parameters for GWY function call
  GWY_GWHOST = OPTIONS-RFCGWHOST.
  GWY_GWSERV = OPTIONS-RFCGWSERV.
  GWY_TPNAME = P_PROGID.

* Check gateway and server program registered
  CALL FUNCTION 'GWY_GET_NO_REG_PROGRAMS'
     EXPORTING
        GWHOST      = GWY_GWHOST
        GWSERV      = GWY_GWSERV
        TPNAME      = GWY_TPNAME
     IMPORTING
        NOREG_TOTAL = NTOTAL
     EXCEPTIONS
        OTHERS      = 1.

  IF sy-subrc NE 0.
     raise CONNECT_TO_GATEWAY_FAILED.
  ENDIF.

  IF NTOTAL = 0.
     raise SERVER_NOT_REGISTERED.
  ENDIF.

  IF NTOTAL GT 1.
     raise DUPLICATE_REG_PROGRAMS.
  ENDIF.

* build new connection to a registered server
  options-rfcexec   = gwy_tpname.
  options-rfcgwhost = gwy_gwhost.
  options-rfcgwserv = gwy_gwserv.
  options-rfchost   = '%%RFCSERVER%%'.
  IF P_SNC_ON = 'X'.
    options-rfcsnc  = 'X'.
  ENDIF.

  CALL 'RFCControl' ID 'CODE' FIELD 'O'
                    ID 'DESTINATION' FIELD P_DEST
                    ID 'TYPE' FIELD rfctype_external_tcp
                    ID 'OPTIONS' FIELD options.

  IF sy-subrc NE 0.
     RAISE CONNECT_TO_REG_SERVER_FAILED.
   ENDIF.

* and set exclusive mode to keep server owned
  CALL FUNCTION 'SYSTEM_SET_REG_SERVER_PROPERTY'
      EXPORTING  destination = P_DEST
                 exclusiv    = 'Y'
      EXCEPTIONS connect_to_reg_server_failed = 1
                 exclusiv_not_supported       = 2.

  IF SY-SUBRC NE 0.
     CASE SY-SUBRC.
          WHEN 1.
              RAISE CONNECT_TO_REG_SERVER_FAILED.
          WHEN 2.
              RAISE EXCLUSIV_NOT_SUPPORTED.
     ENDCASE.
  ENDIF.

ENDFORM.

FORM DISCONNECT_RFCDEST_FROM_PROGID.
* set exclusive mode to E to end the session
  CALL FUNCTION 'SYSTEM_SET_REG_SERVER_PROPERTY'
     EXPORTING
         destination = P_DEST
         exclusiv    = 'E'
     EXCEPTIONS
         connect_to_reg_server_failed = 1				
         exclusiv_not_supported       = 2.
ENDFORM.
