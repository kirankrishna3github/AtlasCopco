REPORT ZAL_ABAP message-id 26 line-size 255
no standard page heading.
* YBO_ChangeDoc.
PARAMETER DOWNLOAD(1) DEFAULT 'N' lower case. "N-svr,Y-clnt
PARAMETER EXECMODE(1) DEFAULT 'B' lower case. "D-dlg,B-btch
PARAMETER OUT_DIR(48) DEFAULT "output file dir
*'/var/load/CP1/UK/read' LOWER CASE.
'/var/load/xxx/UK/read' LOWER CASE.
PARAMETER IN_DIR(48) DEFAULT "input file dir
*'/var/load/CP1/UK/read' LOWER CASE.
'/var/load/xxx/UK/read' LOWER CASE.

PARAMETER $PARAM1(8) TYPE C.

PARAMETER $PARAM2(8) TYPE C.

PARAMETER P_DF_VK(40) DEFAULT "ABAP data flow object key
'' lower case.
PARAMETER P_DI_GEN(40) DEFAULT "DI version that generated ABAP
'' lower case.

*** Machine generated ABAP. Do not modify.            ***
*** # Copyright Business Objects S.A.  All rights reserved. ***
*
* Date Time:
*    06/09/15 06:42:00
* SAP used for generated this ABAP:
*    Release: 701
*    Host   : 10.25.3.26
*
* ABAP Dataflow Name:
*    DF_SDMM_R3_ChangeLog
* ABAP Dataflow comments:
*    SAP source : CDHDR, CDPOS
* ABAP program name in SAP:
*    YBO_CHANGEDOC
* Generated ABAP file name:
*    D:/Data/SAPLogistics/PRD/ABAP/YBO_ChangeDoc
TABLES CDHDR.
TABLES CDPOS.

DATA: begin of ITAB3 occurs 0,
MANDANT(3) TYPE C,
OBJECTCLAS(15) TYPE C,
OBJECTID(90) TYPE C,
CHANGENR(10) TYPE C,
USERNAME(12) TYPE C,
UDATE TYPE D,
UTIME TYPE T,
TCODE(20) TYPE C,
TABNAME(30) TYPE C,
TABKEY(70) TYPE C,
FNAME(30) TYPE C,
CHNGIND(1) TYPE C,
UNIT_OLD(3) TYPE C,
UNIT_NEW(3) TYPE C,
CUKY_OLD(5) TYPE C,
CUKY_NEW(5) TYPE C,
VALUE_NEW(254) TYPE C,
VALUE_OLD(254) TYPE C.
DATA: end of ITAB3.

data: append_flag(1) value ' ',
      cntbuf type i,
      delimleng type i.

CONSTANTS C_DF_VK(40) VALUE '14034'.
CONSTANTS C_DI_GEN(40) VALUE '12.2.2.3'.
DATA WARN_MSG(50).
DATA: gv_directory     TYPE epsdirnam  VALUE '/var/load/xxx/UK/read/',
      gv_logsys        like tbdlst-logsys.

start-of-selection.
* Logical system
  CALL FUNCTION 'OWN_LOGICAL_SYSTEM_GET'
    IMPORTING
      own_logical_system             = gv_logsys
    EXCEPTIONS
      own_logical_system_not_defined = 1
      OTHERS                         = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE 'E' NUMBER sy-msgno
         WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    STOP.
  ENDIF.
  REPLACE 'xxx' IN out_dir WITH gv_logsys(3).
  REPLACE 'xxx' IN in_dir WITH gv_logsys(3).



PERFORM FORM3.
PERFORM FORM4.
FREE ITAB3.

end-of-selection.

CLEAR WARN_MSG.

IF NOT P_DF_VK IS INITIAL.
  IF P_DF_VK <> C_DF_VK.
     CONCATENATE '$$Warning$'
                 C_DF_VK
                 '$' INTO WARN_MSG.
  ENDIF.
ENDIF.
IF NOT P_DI_GEN IS INITIAL.
  IF P_DI_GEN <> C_DI_GEN.
     IF WARN_MSG IS INITIAL.
       CONCATENATE '$$Warning$$'
                   C_DI_GEN
                   INTO WARN_MSG.
     ELSE.
       CONCATENATE WARN_MSG
                   C_DI_GEN
                   INTO WARN_MSG.
     ENDIF.
  ENDIF.
ENDIF.

IF NOT WARN_MSG IS INITIAL.
  IF EXECMODE = 'D'.
    WRITE WARN_MSG.
    NEW-LINE.
  ELSE.
    MESSAGE S000 with WARN_MSG.
  ENDIF.
ENDIF.


write  '* Program Complete *'.
write  '# Copyright Business Objects S.A.  All rights reserved.'
.

FORM FORM3.
DATA ALTMP1(3) TYPE C.
DATA ALTMP2(15) TYPE C.
DATA ALTMP3(90) TYPE C.
DATA ALTMP4(10) TYPE C.
DATA ALTMP5(12) TYPE C.
DATA ALTMP6 TYPE D.
DATA ALTMP7 TYPE T.
DATA ALTMP8(20) TYPE C.
DATA ALTMP9(30) TYPE C.
DATA ALTMP10(70) TYPE C.
DATA ALTMP11(30) TYPE C.
DATA ALTMP12(1) TYPE C.
DATA ALTMP13(3) TYPE C.
DATA ALTMP14(3) TYPE C.
DATA ALTMP15(5) TYPE C.
DATA ALTMP16(5) TYPE C.
DATA ALTMP17(254) TYPE C.
DATA ALTMP18(254) TYPE C.




SELECT
  MANDANT
  OBJECTCLAS
  OBJECTID
  CHANGENR
  USERNAME
  UDATE
  UTIME
  TCODE
INTO CORRESPONDING FIELDS OF CDHDR
FROM CDHDR
WHERE ( ( UDATE <= $PARAM2 )
 AND ( ( UDATE >= $PARAM1 )
 AND OBJECTCLAS IN ('MATERIAL',
'EINKBELEG',
'VERKBELEG') ) ).
ALTMP1 = CDHDR-MANDANT.
ALTMP2 = CDHDR-OBJECTCLAS.
ALTMP3 = CDHDR-OBJECTID.
ALTMP4 = CDHDR-CHANGENR.
ALTMP5 = CDHDR-USERNAME.
ALTMP6 = CDHDR-UDATE.
ALTMP7 = CDHDR-UTIME.
ALTMP8 = CDHDR-TCODE.

SELECT
  TABNAME
  TABKEY
  FNAME
  CHNGIND
  UNIT_OLD
  UNIT_NEW
  CUKY_OLD
  CUKY_NEW
  VALUE_NEW
  VALUE_OLD
  OBJECTCLAS
  OBJECTID
  CHANGENR
INTO CORRESPONDING FIELDS OF CDPOS
FROM CDPOS
WHERE ( ( CHANGENR = CDHDR-CHANGENR )
 AND ( ( OBJECTID = CDHDR-OBJECTID )
 AND ( OBJECTCLAS = CDHDR-OBJECTCLAS ) ) ).
ALTMP9 = CDPOS-TABNAME.
ALTMP10 = CDPOS-TABKEY.
ALTMP11 = CDPOS-FNAME.
ALTMP12 = CDPOS-CHNGIND.
ALTMP13 = CDPOS-UNIT_OLD.
ALTMP14 = CDPOS-UNIT_NEW.
ALTMP15 = CDPOS-CUKY_OLD.
ALTMP16 = CDPOS-CUKY_NEW.
ALTMP17 = CDPOS-VALUE_NEW.
ALTMP18 = CDPOS-VALUE_OLD.
 move ALTMP1 to ITAB3-MANDANT.
 move ALTMP2 to ITAB3-OBJECTCLAS.
 move ALTMP3 to ITAB3-OBJECTID.
 move ALTMP4 to ITAB3-CHANGENR.
 move ALTMP5 to ITAB3-USERNAME.
 move ALTMP6 to ITAB3-UDATE.
 move ALTMP7 to ITAB3-UTIME.
 move ALTMP8 to ITAB3-TCODE.
 move ALTMP9 to ITAB3-TABNAME.
 move ALTMP10 to ITAB3-TABKEY.
 move ALTMP11 to ITAB3-FNAME.
 move ALTMP12 to ITAB3-CHNGIND.
 move ALTMP13 to ITAB3-UNIT_OLD.
 move ALTMP14 to ITAB3-UNIT_NEW.
 move ALTMP15 to ITAB3-CUKY_OLD.
 move ALTMP16 to ITAB3-CUKY_NEW.
 move ALTMP17 to ITAB3-VALUE_NEW.
 move ALTMP18 to ITAB3-VALUE_OLD.
 append ITAB3.
 cntbuf = cntbuf + 1.
 if download = 'N'.
  if cntbuf > 5000.
    perform FORM4.
    clear cntbuf.
    refresh ITAB3.
    append_flag = 'A'.
  endif.
 endif.
ENDSELECT.
ENDSELECT.
ENDFORM.

FORM FORM4.
data: outfile(128), ldfile(50).
ldfile = 'CHDR_CDPOS_CHANGEDOC'.
concatenate out_dir ldfile into outfile
  separated by '/'.
data  dlmtlen type i value '1'.
data xdlmtlen type i value '1'.
data:
  ht(1) type c,
  xht(1) type x,
  conv type ref to cl_abap_conv_in_ce.
xht = '7F'.
conv = cl_abap_conv_in_ce=>create(
  encoding = '4110'
  input = xht
).
call method conv->read(
  exporting n    = xdlmtlen
  importing data = ht
            len = dlmtlen
).
data return_code type i.
 perform write_delimited_file
           tables   ITAB3
           using    outfile
                    append_flag
                    ht
                    dlmtlen
                    download
           changing return_code.

  case return_code.
    when 1.
      IF EXECMODE = 'D'.
        WRITE: /5 'No line selected'.
      ELSE.
        MESSAGE E098.
      ENDIF.
    when 2.
      IF EXECMODE = 'D'.
        WRITE: /5 'Open File Error -- ', 25 OUTFILE.
      ELSE.
        MESSAGE  E107 WITH OUTFILE.
      ENDIF.
    when 3.
      IF EXECMODE = 'D'.
        WRITE: /5 'Data exceed length limit (8192) '.
      ELSE.
        MESSAGE  E000 WITH
             'Data exceed length limit (8192) '.
      ENDIF.
    when 4.
      IF EXECMODE = 'D'.
        WRITE: /5 'Call function WS_DOWNLOAD error'.
      ELSE.
        MESSAGE  E000 WITH
             'Call function WS_DOWNLOAD error'.
      ENDIF.
  endcase.
ENDFORM.

FORM SUBSTRING USING SRC BEG LEN CHANGING RET.

DATA: VA1 TYPE I.
DATA: VA2 TYPE I.
DATA: VA3 TYPE I.

VA3 = STRLEN( SRC ).

IF  BEG = 0.   VA1 = 0.
ELSE.
  IF  BEG < 0.
    VA1 = VA3 + BEG.
    IF  VA1 < 0.   VA1 = 0.
    ENDIF.
  ELSE.          VA1 = BEG - 1.
  ENDIF.
ENDIF.

IF  LEN < 0.   VA2 = 0.
ELSE.          VA2 = VA3 - VA1.
ENDIF.

IF  VA2 > LEN. VA2 = LEN.
ENDIF.

IF  VA2 < 1.   MOVE ''           TO RET.
ELSE.          MOVE SRC+VA1(VA2) TO RET.
ENDIF.

ENDFORM.

form write_delimited_file
           tables   datatab
           using    file
                    append
                    delimit
                    dlength
                    dwnload
          changing rc.

  data: type1,
        appd(1),
        temp(32),
        time1(8),
        date1(10),
        output(8192),
        rcount type i,
        offset type i,
        tablen type i,
        maxlen type i value '8192'.

  data: begin of clientab occurs 0,
             output(8192),
          end of clientab.

  field-symbols: <f>.
  field-symbols <delim1>.
  data delim2(16).
  data l_filename type string.

  appd = append.
  if appd is not initial.
     appd = 'X'.
  endif.
  move file to l_filename.
  describe table datatab lines tablen.


  if dwnload = 'Y'.
     clear clientab. refresh clientab.
     rcount = 0.
  else.
     if appd = space.
         open dataset file for output in text mode ENCODING
UTF-8.
     else.
         open dataset file for appending in text mode ENCODING
UTF-8.
     endif.
     if sy-subrc <> 0.
         rc = 2. exit.
     endif.
  endif.

  loop at datatab.
    clear: tablen, offset, output.
    do.
      assign component sy-index of
         structure datatab to <f>.
      if sy-subrc <> 0. exit. endif.
      if sy-index > 1.
         assign delimit(dlength) TO <delim1> CASTING TYPE C.
         delim2 = <delim1>.
         write delim2(dlength) to output+offset(dlength).
         add dlength to offset.
      endif.

      describe field <f> type type1.

      if type1 = 'I' or type1 = 'N'.
          type1 = 'P'.
      endif.

      case type1.
        when 'D'.
          if <f> = '00000000'.
             <f> = ' '.
          else.
             move <f> to time1.
             assign time1 to <f>.
          endif.
        when 'F'.
          if <f> = '0.0'.
            temp = '0.0'.
          else.
             write <f> to temp exponent 0.
          endif.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
        when 'P'.
          if <f> < 0.
             write '-' to output+offset(1).
             add 1 to offset.
             <f> = <f> * ( -1 ).
          endif.
          move <f> to temp.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
      endcase.

      sy-fdpos = strlen( <f> ).

      tablen = offset + sy-fdpos.
      if tablen > maxlen.
         rc = 3. exit.
      endif.
      write <f> to output+offset(sy-fdpos).
      add sy-fdpos to offset.
    enddo.

    if dwnload = 'Y'.
       clientab-output = output.
       append clientab.
       rcount = rcount + 1.
       if rcount >= 50.
          SY-BATCH = SPACE.
          CALL FUNCTION 'GUI_DOWNLOAD'
            EXPORTING
              FILENAME = l_filename
              FILETYPE = 'ASC'
              CODEPAGE = '4110'
              APPEND   = appd
              WRITE_FIELD_SEPARATOR = 'X'
*            IMPORTING
*              FILELENGTH =
            TABLES
              DATA_TAB = clientab
            EXCEPTIONS
              OTHERS = 1.
          if sy-subrc <> 0.
             rc = 4.
          endif.
          clear clientab. refresh clientab.
          rcount = 0. appd = 'A'.
       endif.
    else.
       transfer output to file.
    endif.
  endloop.

  if dwnload = 'Y'.
       SY-BATCH = SPACE.
       CALL FUNCTION 'GUI_DOWNLOAD'
         EXPORTING
           FILENAME = l_filename
           FILETYPE = 'ASC'
              CODEPAGE = '4110'
           APPEND   = appd
           WRITE_FIELD_SEPARATOR = 'X'
*         IMPORTING
*           FILELENGTH =
         TABLES
           DATA_TAB = clientab
         EXCEPTIONS
           OTHERS = 1.
          if sy-subrc <> 0.
             rc = 4.
          endif.
  else.
       close dataset file.
  endif.
endform.
