************************************************************************
* Report ZZTFAKRS *
* Reset status TFAK (=PTBL) for items *
************************************************************************


REPORT ZZTFAKRS.

TABLES: VBAK, VBAP, T100.
DATA: BEGIN OF TAB OCCURS 1000,
VBELN LIKE VBAP-VBELN,
POSNR LIKE VBAP-POSNR,
END OF TAB.

DATA: DA_OLD_VBELN LIKE VBAK-VBELN.

SELECT-OPTIONS S_VBELN FOR VBAP-VBELN.
PARAMETERS: TEST DEFAULT 'X' AS CHECKBOX.
CHECK: NOT S_VBELN IS INITIAL.
WRITE: / TEXT-001, 18 TEXT-002.
ULINE.
* Sales items with CO object
SELECT *
FROM VBAP
INTO CORRESPONDING FIELDS OF TABLE TAB
WHERE VBELN IN S_VBELN.

CLEAR DA_OLD_VBELN.

* Postprocessing of the document items found
LOOP AT TAB.
  WRITE: /10(10) TAB-VBELN, 18(6) TAB-POSNR.
  IF NOT TEST IS INITIAL.
    WRITE ' test'.
  ENDIF.
* Do not save in test mode;
* do not save after the first run or if - after an error occurs during
* reading -
* DA_OLD_VBELN is cleared again;
* do not save if an item of this document is still processed.
  IF TEST IS INITIAL AND
  NOT DA_OLD_VBELN IS INITIAL AND
  TAB-VBELN NE DA_OLD_VBELN.
* Saving document
    CALL FUNCTION 'SD_SALES_DOCUMENT_SAVE'
      EXPORTING
        SYNCHRON                   = ' '
        STATUS_BUFFER_REFRESH      = 'X'
        REQUISITION_BUFFER_REFRESH = 'X'
      EXCEPTIONS
        ERROR_MESSAGE              = 1
        OTHERS                     = 2.
    IF SY-SUBRC = 1.
      PERFORM FEHLER_AUSGEBEN.
    ENDIF.
    IF SY-SUBRC = 0.
      COMMIT WORK.
    ENDIF.
  ENDIF.
  IF TAB-VBELN NE DA_OLD_VBELN.
* Reading sales document
    CALL FUNCTION 'SD_SALES_DOCUMENT_READ'
      EXPORTING
        DOCUMENT_NUMBER = TAB-VBELN
      EXCEPTIONS
        ERROR_MESSAGE   = 1
        OTHERS          = 2.
    IF SY-SUBRC = 1.
      PERFORM FEHLER_AUSGEBEN.
      CLEAR DA_OLD_VBELN.
    ENDIF.
    CHECK SY-SUBRC = 0.
    DA_OLD_VBELN = TAB-VBELN.
  ENDIF.
* Reading item
  CALL FUNCTION 'SD_SALES_ITEM_READ'
    EXPORTING
      ITEM_NUMBER = TAB-POSNR.
* Preparing VBAP processing
  CALL FUNCTION 'SD_SALES_DOCUMENT_PERFORM'
    EXPORTING
      IN_PROGRAM    = 'SAPFV45P'
      PERFORM       = 'VBAP_BEARBEITEN_VORBEREITEN'
    EXCEPTIONS
      ERROR_MESSAGE = 1
      OTHERS        = 2.
  IF SY-SUBRC = 1.
    PERFORM FEHLER_AUSGEBEN.
  ENDIF.
  CHECK SY-SUBRC = 0.
* Change in *VBAP so that EO can be deleted
  CALL FUNCTION 'SD_SALES_DOCUMENT_PERFORM'
    EXPORTING
      IN_PROGRAM    = 'SAPFV45P'
      PERFORM       = 'STATUS_LOESCHEN_TFAK_POS'
    EXCEPTIONS
      ERROR_MESSAGE = 1
      OTHERS        = 2.
  IF SY-SUBRC = 1.
    PERFORM FEHLER_AUSGEBEN.
  ENDIF.
  CHECK SY-SUBRC = 0.
ENDLOOP.
IF TEST IS INITIAL.
* Saving document
  CALL FUNCTION 'SD_SALES_DOCUMENT_SAVE'
    EXPORTING
      SYNCHRON                   = ' '
      STATUS_BUFFER_REFRESH      = 'X'
      REQUISITION_BUFFER_REFRESH = 'X'
    EXCEPTIONS
      ERROR_MESSAGE              = 1
      OTHERS                     = 2.
  IF SY-SUBRC = 1.
    PERFORM FEHLER_AUSGEBEN.
  ENDIF.
  IF SY-SUBRC = 0.
    COMMIT WORK.
  ENDIF.
ENDIF.
*                                  *
* FORM FEHLER_AUSGEBEN             *
*                                  *
* Outputting error message in list *
*                                  *
FORM FEHLER_AUSGEBEN.
  DATA: DA_OUTPUT(160).
  SELECT SINGLE * FROM T100 WHERE ARBGB = SY-MSGID
                         AND MSGNR = SY-MSGNO
                         AND SPRSL = SY-LANGU.
  DA_OUTPUT = T100-TEXT.
  REPLACE '&' WITH SY-MSGV1 INTO DA_OUTPUT. CONDENSE DA_OUTPUT.
  REPLACE '&' WITH SY-MSGV2 INTO DA_OUTPUT. CONDENSE DA_OUTPUT.
  REPLACE '&' WITH SY-MSGV3 INTO DA_OUTPUT. CONDENSE DA_OUTPUT.
  REPLACE '&' WITH SY-MSGV4 INTO DA_OUTPUT. CONDENSE DA_OUTPUT.
  SUMMARY.
  WRITE: / TAB-VBELN, 19 SY-MSGID, SY-MSGNO, DA_OUTPUT(93).
  DETAIL.
ENDFORM. "FEHLER_AUSGEBEN

*Selection text£º
*S_VBELN:D       .
*TEST:        TEST?
