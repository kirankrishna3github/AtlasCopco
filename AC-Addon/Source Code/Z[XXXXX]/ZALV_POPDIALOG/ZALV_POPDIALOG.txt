*&---------------------------------------------------------------------*
*& Report  ZALV_POPDIALOG
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

report  zalv_popdialog.

*Type pools for ALV declarations
type-pools : slis.
*Internal table and wa declarations for T582A.
data : it_t582a type standard table of t582a initial size 0,
       wa_t582a type t582a.
*Internal table and wa declarations for T582S.
data : it_text type standard table of t582s,
       wa_text type t582s.
*Structure declaration for output
types : begin of ty_output,
        infty type infty,
        zeitb type dzeitb,
        itext type intxt,
        pnnnn type pnnnn_d,
        dname type dianm,
        namst type namst,
        edynr type edynp,
        ldynr type ldynp,
        stypt type stypt,
        sytxt type sytxt,
        zbtab type dzbtab,
        checkbox(1),
        end of ty_output.
*Internal table and work area declaration for output in pop up
data : it_output type standard table of ty_output initial size 0,
       wa_output type ty_output.
*Internal table and workarea declaration for alv dialog display
data : it_display type standard table of ty_output initial size 0,
       wa_display type ty_output.
*data declarations for ALV
data:ls_fieldcat type slis_fieldcat_alv,
    lt_fieldcat type slis_t_fieldcat_alv,
    ls_fieldcatlog type slis_fieldcat_alv,
    lt_fieldcatlog type slis_t_fieldcat_alv,
    lt_layout type slis_layout_alv.
*Initialization event
initialization.
*Start of selection event
start-of-selection.
*Select to fetch all the infotypes and details in sap system
  select *
         from t582a
         into corresponding fields of table it_t582a.
*Select to fetch the infotypes text
  if it_t582a[] is not initial.
    select * from t582s into corresponding fields of table it_text
  for all entries in it_t582a where infty = it_t582a-infty
  and sprsl = 'E'.
  endif.
*Appending the selected values to the output table
  loop at it_t582a into wa_t582a.
    wa_output-infty = wa_t582a-infty.
    wa_output-zeitb = wa_t582a-zeitb.
    wa_output-pnnnn = wa_t582a-pnnnn.
    wa_output-dname = wa_t582a-dname.
    wa_output-namst = wa_t582a-namst.
    wa_output-edynr = wa_t582a-edynr.
    wa_output-ldynr = wa_t582a-ldynr.
    wa_output-stypt = wa_t582a-stypt.
    wa_output-sytxt = wa_t582a-sytxt.
    wa_output-zbtab = wa_t582a-zbtab.
    read table it_text into wa_text with key infty = wa_t582a-infty.
    wa_output-itext = wa_text-itext.
    append wa_output to it_output.
    clear wa_output.
  endloop.
*Subroutine to display the pop up values.
  perform popup_display.
*Subroutine to display the ALV dialog display
  perform alv_output.
*----------------------------------------------------------------*
*      Form  popup_display
*------------------------------------------------------------*
form popup_display.
*field catalogue for pop up
  clear ls_fieldcat.
  ls_fieldcat-row_pos   = '1'.
  ls_fieldcat-col_pos   = '1'.
  ls_fieldcat-fieldname = 'CHECKBOX'.
  ls_fieldcat-tabname   = 'IT_OUTPUT'.
  ls_fieldcat-seltext_m = 'SELECT'.
  append ls_fieldcat to lt_fieldcat.  clear ls_fieldcat.  ls_fieldcat-row_pos   = '1'.
  ls_fieldcat-col_pos   = '2'.
  ls_fieldcat-fieldname = 'ITEXT'.
  ls_fieldcat-tabname   = 'IT_OUTPUT'.
  ls_fieldcat-seltext_m = 'DESCRIPTION'.
  ls_fieldcat-outputlen = 50.
  append ls_fieldcat to lt_fieldcat.
* Display data in a POPUP
  call function 'REUSE_ALV_POPUP_TO_SELECT'
    exporting
      i_zebra              = 'X'
      it_fieldcat          = lt_fieldcat
      i_tabname            = 'IT_OUTPUT'
      i_checkbox_fieldname = 'CHECKBOX'
    tables
      t_outtab             = it_output.
*Appending the selected infotypes only to internal table
  loop at it_output into wa_output where checkbox = 'X'.
    wa_display-itext = wa_output-itext.
    wa_display-infty = wa_output-infty.
    wa_display-zeitb = wa_output-zeitb.
    wa_display-pnnnn = wa_output-pnnnn.
    wa_display-dname = wa_output-dname.
    wa_display-namst = wa_output-namst.
    wa_display-edynr = wa_output-edynr.
    wa_display-ldynr = wa_output-ldynr.
    wa_display-sytxt = wa_output-sytxt.
    wa_display-stypt = wa_output-stypt.
    wa_display-zbtab = wa_output-zbtab.
    append wa_display to it_display.
    clear wa_display.
  endloop.
endform.                               " popup_display
*&-------------------------------------------------------------*
*&      Form  alv_output
*&-------------------------------------------------------------*
form alv_output .
*fieldcatalogue for ALV dialog
  perform build_fieldcat.
*Layout for ALV dialog
  perform build_layout.
**ALV dialog output
  perform alv.
endform.                    " alv_output
*&------------------------------------------------------------*
*&      Form  build_fieldcat
*&------------------------------------------------------------*
form build_fieldcat .
*fieldcatalogue for alv dialog
  clear ls_fieldcatlog.
*  ls_fieldcatlog-row_pos   = '1'.
  ls_fieldcatlog-col_pos   = '1'.
  ls_fieldcatlog-fieldname = 'INFTY'.
  ls_fieldcatlog-tabname   = 'IT_DISPLAY'.
  ls_fieldcatlog-seltext_m = 'Infotype'.
  append ls_fieldcatlog to lt_fieldcatlog.

  clear ls_fieldcatlog.
*  ls_fieldcatlog-row_pos   = '1'.
  ls_fieldcatlog-col_pos   = '2'.
  ls_fieldcatlog-fieldname = 'ITEXT'.
  ls_fieldcatlog-tabname   = 'IT_DISPLAY'.
  ls_fieldcatlog-seltext_m = 'Description'.
  append ls_fieldcatlog to lt_fieldcatlog.

  clear ls_fieldcatlog.
*  ls_fieldcatlog-row_pos   = '1'.
  ls_fieldcatlog-col_pos   = '3'.
  ls_fieldcatlog-fieldname = 'ZEITB'.
  ls_fieldcatlog-tabname   = 'IT_DISPLAY'.
  ls_fieldcatlog-seltext_m = 'TimeConstraint'.
  append ls_fieldcatlog to lt_fieldcatlog.

  clear ls_fieldcatlog.
*  ls_fieldcatlog-row_pos   = '1'.
  ls_fieldcatlog-col_pos   = '4'.
  ls_fieldcatlog-fieldname = 'PNNNN'.
  ls_fieldcatlog-tabname   = 'IT_DISPLAY'.
  ls_fieldcatlog-seltext_m = 'Structure'.
  append ls_fieldcatlog to lt_fieldcatlog.

  clear ls_fieldcatlog.
*  ls_fieldcatlog-row_pos   = '1'.
  ls_fieldcatlog-col_pos   = '5'.
  ls_fieldcatlog-fieldname = 'DNAME'.
  ls_fieldcatlog-tabname   = 'IT_DISPLAY'.
  ls_fieldcatlog-seltext_m = 'DialogModule'.
  append ls_fieldcatlog to lt_fieldcatlog.

  clear ls_fieldcatlog.
*  ls_fieldcatlog-row_pos   = '1'.
  ls_fieldcatlog-col_pos   = '6'.
  ls_fieldcatlog-fieldname = 'NAMST'.
  ls_fieldcatlog-tabname   = 'IT_DISPLAY'.
  ls_fieldcatlog-seltext_m = 'Subtypefield'.
  append ls_fieldcatlog to lt_fieldcatlog.

  clear ls_fieldcatlog.
*  ls_fieldcatlog-row_pos   = '1'.
  ls_fieldcatlog-col_pos   = '7'.
  ls_fieldcatlog-fieldname = 'EDYNR'.
  ls_fieldcatlog-tabname   = 'IT_DISPLAY'.
  ls_fieldcatlog-seltext_m = 'Singlescreenno'.
  append ls_fieldcatlog to lt_fieldcatlog.

  clear ls_fieldcatlog.
*  ls_fieldcatlog-row_pos   = '1'.
  ls_fieldcatlog-col_pos   = '8'.
  ls_fieldcatlog-fieldname = 'LDYNR'.
  ls_fieldcatlog-tabname   = 'IT_DISPLAY'.
  ls_fieldcatlog-seltext_m = 'Listscreenno'.
  append ls_fieldcatlog to lt_fieldcatlog.

  clear ls_fieldcatlog.
*  ls_fieldcatlog-row_pos   = '1'.
  ls_fieldcatlog-col_pos   = '9'.
  ls_fieldcatlog-fieldname = 'STYPT'.
  ls_fieldcatlog-tabname   = 'IT_DISPLAY'.
  ls_fieldcatlog-seltext_m = 'SubtypTable'.
  append ls_fieldcatlog to lt_fieldcatlog.

  clear ls_fieldcatlog.
*  ls_fieldcatlog-row_pos   = '1'.
  ls_fieldcatlog-col_pos   = '10'.
  ls_fieldcatlog-fieldname = 'SYTXT'.
  ls_fieldcatlog-tabname   = 'IT_DISPLAY'.
  ls_fieldcatlog-seltext_m = 'Subtyptexttable'.
  append ls_fieldcatlog to lt_fieldcatlog.

  clear ls_fieldcatlog.
*  ls_fieldcatlog-row_pos   = '1'.
  ls_fieldcatlog-col_pos   = '11'.
  ls_fieldcatlog-fieldname = 'ZBTAB'.
  ls_fieldcatlog-tabname   = 'IT_DISPLAY'.
  ls_fieldcatlog-seltext_m = 'SubtypeTCTable'.
  append ls_fieldcatlog to lt_fieldcatlog.

  clear ls_fieldcatlog.
*  ls_fieldcatlog-row_pos   = '1'.
  ls_fieldcatlog-col_pos   = '12'.
  ls_fieldcatlog-fieldname = 'CHECKBOX'.
  ls_fieldcatlog-tabname   = 'IT_DISPLAY'.
  ls_fieldcatlog-seltext_m = 'CheckBox'.
*  ls_fieldcatlog-checkbox  = 'X'.
  ls_fieldcatlog-no_out    = 'X'.
  append ls_fieldcatlog to lt_fieldcatlog.
endform.  " build_fieldcat
*&----------------------------------------------------------*
*&      Form  build_layout
*&----------------------------------------------------------*
*Layout for ALV dialog
form build_layout .
  lt_layout-zebra = 'X'.
  lt_layout-colwidth_optimize = 'X'.
*  lt_layout-BOX_FIELDNAME = 'CHECKBOX'.
endform.                    " build_layout
*&---------------------------------------------------------------*
*&      Form  alv
*&---------------------------------------------------------------*
*Alv dialog output.
form alv .
  data: ls_display type ty_output.
  call function 'REUSE_ALV_GRID_DISPLAY'
    exporting
      i_callback_program      = 'ZJWU_CALLBACK'"sy-repid
      i_grid_title            = 'INFOTYPE DETAILS'
      i_callback_user_command = 'F_USER_COMMAND'
      is_layout               = lt_layout
      it_fieldcat             = lt_fieldcatlog
      i_screen_start_column   = 10
      i_screen_start_line     = 20
      i_screen_end_column     = 100
      i_screen_end_line       = 40
    tables
      t_outtab                = it_display
    exceptions
      program_error           = 1
      others                  = 2.
  if sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  endif.

*  export rs_selfield-tabindex to MEMORY id 'YINDEX'.
  import p1 = sy-tabix from memory id 'YINDEX'.
  read table it_display into ls_display index sy-tabix.
  write: 'Index:', sy-tabix.
  write: / 'Infotype:', ls_display-infty.
  write: / 'Description:', ls_display-itext.
endform.                    " alv
