*&---------------------------------------------------------------------*
*& Report  ZCWU_BBS_DYNAMIC_ALV
*&
*&---------------------------------------------------------------------*
**动态显示内表数据，用到面向对象构造数据的方法
*&---------------------------------------------------------------------*

REPORT  zcwu_bbs_dynamic_alv.

TYPE-POOLS: abap.

PARAMETERS: p_tabnm TYPE tabname.

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-b01.
PARAMETERS: rb_1 RADIOBUTTON GROUP g1,
            rb_2 RADIOBUTTON GROUP g1,
            rb_3 RADIOBUTTON GROUP g1.
SELECTION-SCREEN END OF BLOCK b1.

START-OF-SELECTION.

  IF rb_1 IS NOT INITIAL.
    PERFORM frm_dyn_1.
  ELSEif rb_2 IS NOT INITIAL.
    PERFORM frm_dyn_2.
  ELSEif rb_3 IS NOT INITIAL.
    PERFORM frm_dyn_3.
  ENDIF.

******************************Part 1******BEGIN*************************
******************************Part 1******BEGIN*************************
******************************Part 1******BEGIN*************************

FORM frm_dyn_1.
  DATA: lt_tfield   TYPE TABLE OF dfies,
        ls_tfield   TYPE dfies,
        lr_struct   TYPE REF TO cl_abap_structdescr,
        lr_table    TYPE REF TO cl_abap_tabledescr,
        lr_type     TYPE REF TO cl_abap_typedescr,
        lr_data     TYPE REF TO cl_abap_datadescr,
        lt_comp     TYPE abap_component_tab,
        ls_comp     LIKE LINE OF lt_comp,
        dyn_wa      TYPE REF TO data,
        dyn_tab     TYPE REF TO data,
        lv_string   TYPE string.

  FIELD-SYMBOLS: <fs_dyn_table> TYPE STANDARD TABLE,
                 <fs_dyn_wa>    TYPE ANY.

  CHECK p_tabnm IS NOT INITIAL.
*1.获取表中的字段结构
  CALL FUNCTION 'DDIF_NAMETAB_GET'
    EXPORTING
      tabname   = p_tabnm
    TABLES
      dfies_tab = lt_tfield
    EXCEPTIONS
      not_found = 1
      OTHERS    = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

*2. 获取字段类型
  LOOP AT lt_tfield INTO ls_tfield.
    CONCATENATE  ls_tfield-tabname '-' ls_tfield-fieldname
      INTO lv_string.
    ls_comp-name = ls_tfield-fieldname.
    CALL METHOD cl_abap_datadescr=>describe_by_name
      EXPORTING
        p_name         = lv_string
      RECEIVING
        p_descr_ref    = lr_type
      EXCEPTIONS
        type_not_found = 1
        OTHERS         = 2.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.

    ls_comp-type ?= lr_type.
    APPEND ls_comp TO lt_comp.
    CLEAR: ls_comp.

  ENDLOOP.

*根据字段目录创建动态结构类型
  TRY.
      CALL METHOD cl_abap_structdescr=>create
        EXPORTING
          p_components = lt_comp
        RECEIVING
          p_result     = lr_struct.
    CATCH cx_sy_struct_creation .
  ENDTRY.

*根据动态结构创建动态内表类型
  TRY.
      CALL METHOD cl_abap_tabledescr=>create
        EXPORTING
          p_line_type = lr_struct
        RECEIVING
          p_result    = lr_table.
    CATCH cx_sy_table_creation .
  ENDTRY.
*参照动态结构类型和动态内表类型创建内表与工作区
  CREATE DATA dyn_wa    TYPE HANDLE lr_struct.
  CREATE DATA dyn_tab   TYPE HANDLE lr_table.

*指定内表与工作区到字段符号
  ASSIGN dyn_wa->* TO <fs_dyn_wa>.
  ASSIGN dyn_tab->* TO <fs_dyn_table>.

  SELECT *
    INTO CORRESPONDING FIELDS OF TABLE <fs_dyn_table>
    FROM (p_tabnm)
    UP TO 100 ROWS.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     I_INTERFACE_CHECK                 = ' '
*     I_BYPASSING_BUFFER                = ' '
*     I_BUFFER_ACTIVE                   = ' '
      i_callback_program                = sy-repid
*     I_CALLBACK_PF_STATUS_SET          = ' '
*     I_CALLBACK_USER_COMMAND           = ' '
*     I_CALLBACK_TOP_OF_PAGE            = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
      i_structure_name                  = p_tabnm
*     I_BACKGROUND_ID                   = ' '
*     I_GRID_TITLE                      =
*     I_GRID_SETTINGS                   =
*     IS_LAYOUT                         =
*     IT_FIELDCAT                       =
*     IT_EXCLUDING                      =
*     IT_SPECIAL_GROUPS                 =
*     IT_SORT                           =
*     IT_FILTER                         =
*     IS_SEL_HIDE                       =
*     I_DEFAULT                         = 'X'
*     I_SAVE                            = ' '
*     IS_VARIANT                        =
*     IT_EVENTS                         =
*     IT_EVENT_EXIT                     =
*     IS_PRINT                          =
*     IS_REPREP_ID                      =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE                 = 0
*     I_HTML_HEIGHT_TOP                 = 0
*     I_HTML_HEIGHT_END                 = 0
*     IT_ALV_GRAPHICS                   =
*     IT_HYPERLINK                      =
*     IT_ADD_FIELDCAT                   =
*     IT_EXCEPT_QINFO                   =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*   IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
    TABLES
      t_outtab                          = <fs_dyn_table>
*   EXCEPTIONS
*     PROGRAM_ERROR                     = 1
*     OTHERS                            = 2
            .
  IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.                    "frm_dyn_1

******************************Part 1********END*************************
******************************Part 1********END*************************
******************************Part 1********END*************************

******************************Part 2*******BEGIN************************
******************************Part 2*******BEGIN************************
******************************Part 2*******BEGIN************************
FORM frm_dyn_2.
  DATA: lv_ref   TYPE REF TO data,
        lt_fcat  TYPE TABLE OF lvc_s_fcat,
        ls_fcat  LIKE LINE OF lt_fcat.

  DATA: lt_table TYPE TABLE OF dntab,
        ls_table TYPE dntab.

  FIELD-SYMBOLS: <fs_dyn_table>   TYPE table,
                 <fs_dyn_wa>      TYPE ANY,
                 <fs_field>       TYPE ANY.

*  取出表结构的字段目录
  CALL FUNCTION 'NAMETAB_GET'
    EXPORTING
      langu               = sy-langu
      tabname             = p_tabnm
    TABLES
      nametab             = lt_table
    EXCEPTIONS
      internal_error      = 1
      table_has_no_fields = 2
      table_not_activ     = 3
      no_texts_found      = 4
      OTHERS              = 5.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

*  根据取出的字段目录生成参考字段目录
  LOOP AT lt_table INTO ls_table.
    ls_fcat-fieldname = ls_table-fieldname.
    ls_fcat-ref_table = p_tabnm.
    ls_fcat-ref_field = ls_table-fieldname.
    APPEND ls_fcat TO lt_fcat.
    CLEAR ls_fcat.
  ENDLOOP.

*  内表创建
  CALL METHOD cl_alv_table_create=>create_dynamic_table
    EXPORTING
*      i_style_table             =
      it_fieldcatalog           = lt_fcat
*      i_length_in_byte          =
    IMPORTING
      ep_table                  = lv_ref
*      e_style_fname             =
    EXCEPTIONS
      generate_subpool_dir_full = 1
      OTHERS                    = 2
          .
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
               WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

*  指定生成的内表到字段符号
  ASSIGN lv_ref->* TO <fs_dyn_table>.

*  从动态表中取数到动态内表中
  SELECT *
    FROM (p_tabnm)
    UP TO 100 ROWS
    INTO CORRESPONDING FIELDS OF TABLE <fs_dyn_table>.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     I_INTERFACE_CHECK                 = ' '
*     I_BYPASSING_BUFFER                = ' '
*     I_BUFFER_ACTIVE                   = ' '
*     I_CALLBACK_PROGRAM                = ' '
*     I_CALLBACK_PF_STATUS_SET          = ' '
*     I_CALLBACK_USER_COMMAND           = ' '
*     I_CALLBACK_TOP_OF_PAGE            = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
      i_structure_name                  = p_tabnm
*     I_BACKGROUND_ID                   = ' '
*     I_GRID_TITLE                      =
*     I_GRID_SETTINGS                   =
*     IS_LAYOUT                         =
*     IT_FIELDCAT                       =
*     IT_EXCLUDING                      =
*     IT_SPECIAL_GROUPS                 =
*     IT_SORT                           =
*     IT_FILTER                         =
*     IS_SEL_HIDE                       =
*     I_DEFAULT                         = 'X'
*     I_SAVE                            = ' '
*     IS_VARIANT                        =
*     IT_EVENTS                         =
*     IT_EVENT_EXIT                     =
*     IS_PRINT                          =
*     IS_REPREP_ID                      =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE                 = 0
*     I_HTML_HEIGHT_TOP                 = 0
*     I_HTML_HEIGHT_END                 = 0
*     IT_ALV_GRAPHICS                   =
*     IT_HYPERLINK                      =
*     IT_ADD_FIELDCAT                   =
*     IT_EXCEPT_QINFO                   =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*   IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
    TABLES
      t_outtab                          = <fs_dyn_table>
    EXCEPTIONS
      program_error                     = 1
      OTHERS                            = 2
            .
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.                    "frm_dyn_2

******************************Part 2*******END**************************
******************************Part 2*******END**************************
******************************Part 2*******END**************************

******************************Part 3*******BEGIN************************
******************************Part 3*******BEGIN************************
******************************Part 3*******BEGIN************************
FORM frm_dyn_3.

  DATA: lt_dyn_table TYPE REF TO data.
  FIELD-SYMBOLS: <fs_dyn_table> TYPE table.
  CREATE DATA lt_dyn_table TYPE TABLE OF (p_tabnm).
  ASSIGN lt_dyn_table->* TO <fs_dyn_table>.

  SELECT *
    FROM (p_tabnm)
    UP TO 100 ROWS
    INTO CORRESPONDING FIELDS OF TABLE <fs_dyn_table>.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     I_INTERFACE_CHECK                 = ' '
*     I_BYPASSING_BUFFER                = ' '
*     I_BUFFER_ACTIVE                   = ' '
*     I_CALLBACK_PROGRAM                = ' '
*     I_CALLBACK_PF_STATUS_SET          = ' '
*     I_CALLBACK_USER_COMMAND           = ' '
*     I_CALLBACK_TOP_OF_PAGE            = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
      I_STRUCTURE_NAME                  = p_tabnm
*     I_BACKGROUND_ID                   = ' '
*     I_GRID_TITLE                      =
*     I_GRID_SETTINGS                   =
*     IS_LAYOUT                         =
*     IT_FIELDCAT                       =
*     IT_EXCLUDING                      =
*     IT_SPECIAL_GROUPS                 =
*     IT_SORT                           =
*     IT_FILTER                         =
*     IS_SEL_HIDE                       =
*     I_DEFAULT                         = 'X'
*     I_SAVE                            = ' '
*     IS_VARIANT                        =
*     IT_EVENTS                         =
*     IT_EVENT_EXIT                     =
*     IS_PRINT                          =
*     IS_REPREP_ID                      =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE                 = 0
*     I_HTML_HEIGHT_TOP                 = 0
*     I_HTML_HEIGHT_END                 = 0
*     IT_ALV_GRAPHICS                   =
*     IT_HYPERLINK                      =
*     IT_ADD_FIELDCAT                   =
*     IT_EXCEPT_QINFO                   =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*   IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
    TABLES
      t_outtab                          = <fs_dyn_table>
*   EXCEPTIONS
*     PROGRAM_ERROR                     = 1
*     OTHERS                            = 2
            .
  IF sy-subrc <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.


ENDFORM.                    "frm_dyn_3
******************************Part 3*******END**************************
******************************Part 3*******END**************************

******************************Part 3*******END**************************
*Text symbol text：

*B01:显示方式
*Selection text：
*P_TABNM:D       .
*RB_1:        方式1-cl_abap_tabledescr=>create
*RB_2:        方式2-cl_alv_table_create=>creat
*RB_3:        方式3-(Table Name
