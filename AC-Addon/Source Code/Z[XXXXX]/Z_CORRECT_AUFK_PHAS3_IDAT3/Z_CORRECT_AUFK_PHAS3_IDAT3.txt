REPORT  Z_CORRECT_AUFK_PHAS3_IDAT3.

  TABLES: VIORA, AUFK, JCDS.

  DATA: BEGIN OF lt_viora OCCURS 0,
          aufnr LIKE VIORA-aufnr,
          objnr LIKE VIORA-objnr,
          stat  LIKE VIORA-stat,
          iphas LIKE VIORA-iphas,
          aedat LIKE VIORA-aedat,
          idat2 LIKE VIORA-idat2,
          idat3 LIKE VIORA-idat3,
          loekz LIKE VIORA-loekz,
        END OF lt_viora,
        ls_viora LIKE lt_viora.
  DATA: BEGIN OF lt_jcds OCCURS 0,
           objnr LIKE JCDS-objnr,
           stat  LIKE JCDS-objnr,
           udate LIKE JCDS-udate,
        END OF lt_jcds,
        ls_jcds LIKE lt_jcds.
  DATA: BEGIN OF lt_aufk_upd OCCURS 0,
          aufnr LIKE AUFK-aufnr,
          stat  LIKE VIORA-stat,
          phas3 LIKE AUFK-phas3,
          idat3 LIKE AUFK-idat3,
        END OF lt_aufk_upd,
        ls_aufk_upd LIKE lt_aufk_upd.
  DATA: l_yx    TYPE C VALUE 'X',
        l_count TYPE SY-tabix,
        l_error TYPE SY-tabix,
        l_autyp LIKE AUFK-autyp VALUE '30',
        l_iphas LIKE VIORA-iphas VALUE '4',
        l_i0076 LIKE VIORA-stat VALUE 'I0076',
        l_i0046 LIKE VIORA-stat VALUE 'I0046',
        l_idat3 LIKE VIORA-idat3 VALUE '00000000'.

  SELECTION-SCREEN COMMENT /1(80) TEXT1.
  SELECTION-SCREEN COMMENT /1(80) TEXT2.
  SELECTION-SCREEN COMMENT /1(80) TEXT3.
  SELECTION-SCREEN COMMENT /1(80) TEXT4.

  SELECTION-SCREEN ULINE.
  SELECTION-SCREEN COMMENT /1(80) TEXT5.
  SELECTION-SCREEN COMMENT /1(80) TEXT6.
  SELECTION-SCREEN ULINE.

  PARAMETERS:     test AS CHECKBOX DEFAULT 'X'.

  SELECTION-SCREEN SKIP 1.

  INITIALIZATION.
  TEXT1 = 'Dear Customer.'.
  TEXT2 = 'You are just running a correction report.'.
  TEXT3 = 'This report has been specifically developed for the '
          & 'symptom described in'.
  TEXT4 = 'note 1237395.'.
  TEXT5 = 'Please check wether this symptom actually applies to '
            & 'your case before starting.'.
  TEXT6 = 'In case of doubt please contact SAP.'.

  START-OF-SELECTION.

  IF test IS INITIAL.
     WRITE: / 'Mode.........: Update-Run'.
  ELSE.
     WRITE: / 'Mode.........: Test-Run'.
  ENDIF.

  SKIP TO LINE 5.
  ULINE.

  SELECT * FROM VIORA
           INTO CORRESPONDING FIELDS OF TABLE lt_viora
           WHERE autyp = l_autyp
           AND   stat  = l_i0076
           AND   iphas = l_iphas
           AND   idat3 = l_idat3.

  IF lt_viora[] IS INITIAL.
    WRITE: / 'No entries found;....nothing to do',
           / 'Bye...'.
    EXIT.
  ENDIF.
  SORT lt_viora BY aufnr.

  SELECT * FROM JCDS
           INTO CORRESPONDING FIELDS OF TABLE lt_jcds
           FOR ALL ENTRIES IN lt_viora
           WHERE objnr = lt_viora-objnr
           AND   stat  = l_i0046.

  IF lt_jcds[] IS INITIAL.
    WRITE: / 'No entries found;....nothing to do',
           / 'Bye...'.
    EXIT.
  ENDIF.

  LOOP AT lt_viora INTO ls_viora.
       READ TABLE lt_jcds WITH KEY objnr = ls_viora-objnr.
       IF SY-subrc IS INITIAL.
          ls_aufk_upd-aufnr = ls_viora-aufnr.
          ls_aufk_upd-stat  = ls_viora-stat.
          ls_aufk_upd-phas3 = l_yx.
          ls_aufk_upd-idat3 = lt_jcds-udate.
          APPEND ls_aufk_upd TO lt_aufk_upd.
       ENDIF.
       DELETE lt_viora.
       DELETE lt_jcds WHERE objnr = ls_viora-objnr.
  ENDLOOP.

  SKIP TO LINE 6.
  FORMAT COLOR COL_KEY.
  WRITE: / 'AUFNR', AT 15 'STAT',
     AT 22 'PHAS3_old', AT 33 'PHAS3_new',
     AT 44 'IDAT3_old', AT 57 'IDAT3_new '.
  FORMAT COLOR COL_NORMAL.

  IF test IS INITIAL.
    LOOP AT lt_aufk_upd INTO ls_aufk_upd.
         UPDATE AUFK SET   phas3 = ls_aufk_upd-phas3
                           idat3 = ls_aufk_upd-idat3
                     WHERE aufnr = ls_aufk_upd-aufnr.
         IF SY-subrc IS INITIAL.
            WRITE: / ls_aufk_upd-aufnr, AT 15 ls_aufk_upd-stat,
            AT 33 ls_aufk_upd-phas3,
               AT 44 l_idat3, AT 57 ls_aufk_upd-idat3.
            ADD 1 to l_count.
         ELSE.
            WRITE: / ls_aufk_upd-aufnr, AT 15 ls_aufk_upd-stat,
               AT 52 'Error on update'.
            ADD 1 TO l_error.
         ENDIF.
    ENDLOOP.
    SKIP TO LINE 4.
    IF l_error IS INITIAL.
       WRITE: / 'Records successfully updated: ', l_count.
    ELSE.
       WRITE: / 'Records successfully updated: ', l_count,
         AT 44 'Update failed: ', l_error.
    ENDIF.
  ELSE.
    SKIP TO LINE 7.
    LOOP AT lt_aufk_upd INTO ls_aufk_upd.
         WRITE: / ls_aufk_upd-aufnr, AT 15 ls_aufk_upd-stat,
         AT 33 ls_aufk_upd-phas3,
            AT 44 l_idat3, AT 57 ls_aufk_upd-idat3.
         ADD 1 to l_count.
    ENDLOOP.
    SKIP TO LINE 4.
    WRITE: / 'Records to update: ', l_count.
  ENDIF.

*&---------------------------------------------------------------------*
* Events for moment AT SELECTION SCREEN OUTPUT
*&---------------------------------------------------------------------*
  AT SELECTION-SCREEN OUTPUT.
* SET Flag TEST when back on selection screen
* Set always 'X'
  TEST = 'X'.


* END OF REPORT Z_CORRECT_AUFK_PHAS3_IDAT3
*Selection text£º
*TEST:        TEST?
