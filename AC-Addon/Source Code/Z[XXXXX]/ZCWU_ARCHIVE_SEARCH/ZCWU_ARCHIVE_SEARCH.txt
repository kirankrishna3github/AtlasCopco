REPORT zcwu_archive_search MESSAGE-ID oa.
TYPE-POOLS: shlp.
TABLES: toav0, toadd, bsid.

TYPES: BEGIN OF ty_bkpf,
        belnr   TYPE bkpf-belnr,
        awkey   TYPE bkpf-awkey,
        gjahr   TYPE bkpf-gjahr,
        bukrs   TYPE bkpf-bukrs,
        budat   TYPE bkpf-budat,
        kunnr   TYPE bsid-kunnr,
       END   OF ty_bkpf.

TYPES: BEGIN OF ty_toa01,
        object_id   TYPE toa01-object_id,
        archiv_id   TYPE SAEARCHIVI,
        arc_doc_id  TYPE SAEARDOID,
        ar_object   TYPE SAEOBJART,
        sap_object  TYPE SAEANWDID,
        reserve     TYPE SAERESERVE,
        ar_date     TYPE SAEABADATE,
       END   OF ty_toa01.

DATA: objectid TYPE toav0-object_id,
      object   TYPE TABLE OF toav0-sap_object,
      pfstatus TYPE sy-pfkey VALUE 'ADMI',
      gs_toa01 TYPE ty_toa01,
      gt_toa01 TYPE TABLE OF ty_toa01,
      gv_object_id TYPE saeobjid,
      lv_kunnr  TYPE kunnr.

*selection-screen begin of block object with frame.
*select-options:
*  object   for  toav0-sap_object memory id oao,
*  objectid for  toav0-object_id lower case,
*  mandant  for  toav0-mandt default sy-mandt.
*selection-screen end of block object.

*selection-screen begin of block archive with frame.
*select-options:
*  archive  for toav0-archiv_id memory id oaa," Corr. bv 46a
*  arcdocid for toav0-arc_doc_id,
*  document for toav0-ar_object memory id dok,
*  docclass for toadd-doc_type.
*selection-screen end of block archive.

*selection-screen begin of block attr with frame.
*select-options:
*  ar_date  for toav0-ar_date,
*  del_date for toav0-del_date.
*selection-screen end of block attr.

*selection-screen begin of block cond with frame.
*parameters:
*  limit    like toacu-anzhitlist,
*  download type saehitdown.
*selection-screen end of block cond.

DATA: limit LIKE toacu-anzhitlist,
      download TYPE saehitdown,
      i_connections TYPE STANDARD TABLE OF yse_toa0v WITH HEADER LINE.

SELECTION-SCREEN BEGIN OF BLOCK archive WITH FRAME TITLE text-fr1.
SELECT-OPTIONS:
  s_belnr    FOR bsid-belnr,
  s_belnrf   FOR bsid-belnr,
  s_gjahr    FOR bsid-gjahr,
  s_bukrs    FOR bsid-bukrs,
  s_budat    FOR bsid-budat,
  s_kunnr    FOR bsid-kunnr.
SELECTION-SCREEN END OF BLOCK archive.


DATA:
  lv_object   TYPE toav0-sap_object,
  lv_object_2(4)   TYPE C,
  lv_object_3(4)   TYPE C,
  lv_objectid TYPE toav0-object_id,
  param     TYPE rsparams,
  selection TYPE STANDARD TABLE OF rsparams,
  gt_bkpf  TYPE TABLE OF ty_bkpf,
  gs_bkpf  TYPE ty_bkpf,
  gs_bkpf2 TYPE ty_bkpf.



DATA:
  l_toacu TYPE toacu,
  key LIKE ojint-key,
  objtyp LIKE ojint-name,
  count_lines TYPE i,
  return TYPE swotreturn,
  infotab TYPE STANDARD TABLE OF swotrk.

INITIALIZATION.
  PERFORM select_toacu IN PROGRAM oaall CHANGING l_toacu.
  limit = l_toacu-anzhitlist.

START-OF-SELECTION.



  IF objtyp NE space.

*   check existence of object
    CALL FUNCTION 'SWO_QUERY_KEYFIELDS'
      EXPORTING
        objtype = objtyp
      IMPORTING
        return  = return
      TABLES
        info    = infotab.

*   no object id given for object with not empty key
    IF objectid IS INITIAL AND NOT infotab[] IS INITIAL.
      CALL FUNCTION 'ARCHIV_POPUP_OBJECT_KEY'
           EXPORTING
*               DISPLAY         = ' '
                objtype         = objtyp
                title           = 'Schl¨¹sselfeldeingabe'(101)
                generic         = 'X'
           IMPORTING
                objkey          = key
           EXCEPTIONS
                error_parameter = 1
                user_cancel     = 2
                OTHERS          = 3.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE 'I'      NUMBER sy-msgno
        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
        EXIT.
      ENDIF.
      MOVE key TO lv_objectid.
      MOVE objtyp TO lv_object.
    ENDIF.
  ENDIF.

*object = 'IEQVBRK'.
*  lv_object = 'VBRK'.
*  lv_objectid = ' '.

  PERFORM select_data.

  CALL FUNCTION 'S_ARCHIV_DISPLAY_LIST_2'
    EXPORTING
      auth_flag     = 'X'
      pfstatus      = pfstatus
    TABLES
      archivtreffer = i_connections
    EXCEPTIONS
      OTHERS        = 1.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE 'S' NUMBER sy-msgno
      WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.


*  submit oafind with selection-table selection
*                with pfstatus = 'ADMI'
*                with download = download
*                with limit = limit
*                with object = lv_object
*                with objectid = lv_objectid
*                and return.


*at selection-screen on value-request for object-low.
*  perform select_object using object-low.

*at selection-screen on value-request for object-high.
*  perform select_object using object-low.


*at selection-screen on object.

  DESCRIBE TABLE object LINES count_lines.

*  check count_lines = 1 and object-option = 'EQ'.
*
*  objtyp = object-low.
*
*  call function 'SWO_QUERY_KEYFIELDS'
*    exporting
*      objtype = objtyp
*    importing
*      return  = return
*    tables
*      info    = infotab.
*
*  if return-message <> 0.
*    message id return-workarea type 'W'
*            number return-message
*            with return-variable1 return-variable2
*                 return-variable3 return-variable4.
*  endif.


FORM select_data.

  SELECT object_id archiv_id arc_doc_id ar_object sap_object reserve
         ar_date
    FROM toa01 INTO CORRESPONDING FIELDS
               OF TABLE gt_toa01.

  LOOP AT gt_toa01 INTO gs_toa01.
    lv_object = gs_toa01-object_id+0(10).
    lv_object_2 = gs_toa01-object_id+10(4).
    lv_object_3 = gs_toa01-object_id+15(4).


if lv_object_2 is not initial and lv_object_3 is not initial.
      SELECT SINGLE * FROM bkpf INTO CORRESPONDING FIELDS OF gs_bkpf
        WHERE awkey IN s_belnr AND
              belnr IN s_belnrf AND
              gjahr IN s_gjahr AND
              gjahr EQ lv_object_3 AND
              bukrs IN s_bukrs AND
              bukrs EQ lv_object_2 AND
              budat IN s_budat AND
              ( belnr = lv_object OR
                awkey = lv_object ) .
 else.
      SELECT SINGLE * FROM bkpf INTO CORRESPONDING FIELDS OF gs_bkpf
        WHERE awkey IN s_belnr AND
              belnr IN s_belnrf AND
              gjahr IN s_gjahr AND
              bukrs IN s_bukrs AND
              budat IN s_budat AND
              ( belnr = lv_object OR
                awkey = lv_object ) .
 endif.
      IF sy-subrc = 0.
        MOVE-CORRESPONDING gs_toa01 TO i_connections.
        MOVE-CORRESPONDING gs_bkpf TO i_connections.

         SELECT single kunnr FROM bsad into lv_kunnr
         WHERE belnr EQ gs_bkpf-belnr AND
               gjahr EQ gs_bkpf-gjahr AND
               bukrs EQ gs_bkpf-bukrs AND
               kunnr in s_kunnr.
        IF sy-subrc = 0.
              i_connections-kunnr = lv_kunnr.
        ELSE.
         SELECT single kunnr FROM bsid into lv_kunnr
         WHERE belnr EQ gs_bkpf-belnr AND
               gjahr EQ gs_bkpf-gjahr AND
               bukrs EQ gs_bkpf-bukrs AND
               kunnr in s_kunnr.
         IF sy-subrc = 0.
          i_connections-kunnr = lv_kunnr.
         ELSE.
           SELECT SINGLE KUNAG FROM vbrk into lv_kunnr
             WHERE vbeln = gs_bkpf-AWKEY.
           IF sy-subrc = 0.
              i_connections-kunnr = lv_kunnr.
           ELSE.
              CONTINUE.
           ENDIF.
         ENDIF.
        ENDIF.
        i_connections-mandt = sy-mandt.

        APPEND i_connections.
*      ELSE.
*        DELETE gt_toa01.
      ENDIF.
   ENDLOOP.



*  select * from bsad appending CORRESPONDING FIELDS OF TABLE gt_bsid
*    where belnr in s_belnrf and
*          kunnr in s_kunnr and
*          gjahr in s_gjahr and
*          bukrs in s_bukrs and
*          budat in s_budat.
*
*  select * from bsid appending CORRESPONDING FIELDS OF TABLE gt_bsid
*    where belnr in s_belnrf and
*          kunnr in s_kunnr and
*          gjahr in s_gjahr and
*          bukrs in s_bukrs and
*          budat in s_budat.


*  select single * from toa01 into gs_toa01
*    where object_id like s_belnr and ( object like s_belnr or
*                                     object like belnr_fi ).
*
*  LOOP at gt_toa01 into gs_toa01.
*  ENDLOOP.


ENDFORM.                    "select_data

*&--------------------------------------------------------------------*
*&      Form  select_object
*&--------------------------------------------------------------------*
*       text
*---------------------------------------------------------------------*
*      -->OBJECT     text
*---------------------------------------------------------------------*
FORM select_object USING object.
  DATA: BEGIN OF  dynpfield_tab OCCURS 1,
     object LIKE toav0-sap_object,
     objecttext LIKE tojtt-ntext,
    END OF dynpfield_tab.
  DATA dyname LIKE sy-repid.
  DATA dynumb LIKE sy-dynnr.

  dyname = sy-repid.
  dynumb = sy-dynnr.
* search for archivelink relevant object types
  DATA w_toaom LIKE toaom.
  DATA w_tojtt LIKE tojtt.
  REFRESH dynpfield_tab. CLEAR dynpfield_tab.
  SELECT * FROM toaom INTO w_toaom.
    dynpfield_tab-object = w_toaom-sap_object.
    CLEAR w_tojtt.
    SELECT SINGLE * FROM tojtt INTO w_tojtt WHERE name =
              w_toaom-sap_object AND language = sy-langu.
    dynpfield_tab-objecttext = w_tojtt-ntext.
    APPEND dynpfield_tab.
  ENDSELECT.
* delete duplicate entries
  DATA: old_object LIKE toaom-sap_object.
  LOOP AT dynpfield_tab.
    IF sy-tabix = 1.
      old_object = dynpfield_tab-object.
    ELSE.
      IF dynpfield_tab-object = old_object.
        DELETE dynpfield_tab.
      ELSE.
        old_object = dynpfield_tab-object.
      ENDIF.
    ENDIF.
  ENDLOOP.
* display the help dialogue
  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      retfield         = 'OBJECT'
      pvalkey          = 'OAFIND_21000'
      dynpprog         = dyname
      dynpnr           = dynumb
      dynprofield      = 'OBJECT'
      value_org        = 'S'
      callback_program = dyname
      callback_form    = 'CALLBACK1'
    TABLES
      value_tab        = dynpfield_tab
    EXCEPTIONS
      OTHERS           = 0.
ENDFORM.                    "select_object

*---------------------------------------------------------------------*
*       FORM CALLBACK1                                                *
*---------------------------------------------------------------------*
FORM callback1
     TABLES record_tab STRUCTURE seahlpres
     CHANGING shlp TYPE shlp_descr_t
     callcontrol LIKE ddshf4ctrl.                           "#EC *
  shlp-intdescr-selmexit = 'F4UT_OPTIMIZE_COLWIDTH'.
ENDFORM.                                                    "CALLBACK1

*Text symbol text£º
*101:Key field entry

*FR1:Selection
*Selection text£º
*S_BELNR:        Billing document
*S_BELNRF:        Fi-document number
*S_BUDAT:        Posting date
*S_BUKRS:        Company code
*S_GJAHR:        Fiscal year
*S_KUNNR:        Customer
