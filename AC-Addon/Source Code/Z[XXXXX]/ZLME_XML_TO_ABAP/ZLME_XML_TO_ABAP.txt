*&---------------------------------------------------------------------*
*& Report  ZLME_XML_TO_ABAP
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT  ZLME_XML_TO_ABAP.

TYPE-POOLS abap.

*CONSTANTS gs_file TYPE string VALUE 'C:\temp\customers.xml'.

PARAMETERS: p_infile     TYPE rlgrap-filename OBLIGATORY.

* This is the structure for the data from the XML file
TYPES: BEGIN OF ts_person,
           cust_id(4)    TYPE n,
           firstname(20) TYPE c,
           lastname(20)  TYPE c,
       END OF ts_person.

* Table for the XML content
DATA: gt_itab       TYPE STANDARD TABLE OF char2048.

* Table and work ares for the data from the XML file
DATA: gt_person     TYPE STANDARD TABLE OF ts_person,
      gs_person     TYPE ts_person.

* Result table that contains references
* of the internal tables to be filled
DATA: gt_result_xml TYPE abap_trans_resbind_tab,
      gs_result_xml TYPE abap_trans_resbind.

* For error handling
DATA: gs_rif_ex     TYPE REF TO cx_root,
      gs_var_text   TYPE string.

DATA: gs_file TYPE string.

*-------------------------------------------------------------------
AT SELECTION-SCREEN on value-request FOR p_infile.
  CALL FUNCTION 'WS_FILENAME_GET'
    EXPORTING
      def_path         = 'C:\'
      mask             = '*.xml'
    IMPORTING
      filename         = p_infile
    EXCEPTIONS
      inv_winsys       = 1
      no_batch         = 2
      selection_cancel = 3
      selection_error  = 4
      OTHERS           = 5.

*-------------------------------------------------------------------
START-OF-SELECTION.

  gs_file = p_infile.

* Get the XML file from your client
  CALL METHOD cl_gui_frontend_services=>gui_upload
    EXPORTING
      filename                = gs_file
    CHANGING
      data_tab                = gt_itab
    EXCEPTIONS
      file_open_error         = 1
      file_read_error         = 2
      no_batch                = 3
      gui_refuse_filetransfer = 4
      invalid_type            = 5
      no_authority            = 6
      unknown_error           = 7
      bad_data_format         = 8
      header_not_allowed      = 9
      separator_not_allowed   = 10
      header_too_long         = 11
      unknown_dp_error        = 12
      access_denied           = 13
      dp_out_of_memory        = 14
      disk_full               = 15
      dp_timeout              = 16
      not_supported_by_gui    = 17
      error_no_gui            = 18
      OTHERS                  = 19.

  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

* Fill the result table with a reference to the data table.
* Within the XSLT stylesheet, the data table can be accessed with
* "IPERSON".
  GET REFERENCE OF gt_person INTO gs_result_xml-value.
  gs_result_xml-name = 'IPERSON'.
  APPEND gs_result_xml TO gt_result_xml.

* Perform the XSLT stylesheet
  TRY.
      CALL TRANSFORMATION z_xml_to_abap
      SOURCE XML gt_itab
      RESULT (gt_result_xml).
    CATCH cx_root INTO gs_rif_ex.
      gs_var_text = gs_rif_ex->get_text( ).
      MESSAGE gs_var_text TYPE 'E'.
  ENDTRY.

*-------------------------------------------------------------------
END-OF-SELECTION.

* Now let's see what we got from the file
  LOOP AT gt_person INTO gs_person.
    WRITE: / 'Customer ID:', gs_person-cust_id.
    WRITE: / 'First name :', gs_person-firstname.
    WRITE: / 'Last name  :', gs_person-lastname.
    WRITE: /.
  ENDLOOP.
