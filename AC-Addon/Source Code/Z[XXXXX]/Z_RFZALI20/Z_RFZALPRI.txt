*----------------------------------------------------------------------*
*   INCLUDE RFZALPRI                                                   *
*----------------------------------------------------------------------*

FORM POPUP_PRI_PARAMS USING    P_TITLE   TYPE C
                               P_DATASET LIKE  PRI_PARAMS-PRDSN
                      CHANGING P_PARAMS  TYPE PRIARC_TYPE.

  DATA:  lx_valid  LIKE BOOLE-BOOLE,
         lx_rc     LIKE sy-subrc.

  PERFORM PRESET_PRI_PARAMS USING    P_TITLE
                                     P_DATASET
                            CHANGING P_PARAMS.

  PERFORM GET_AND_CHECK_PRI_PARAMS USING SPACE
                                CHANGING lx_rc
                                         lx_valid.

  PERFORM update_p_params USING lx_rc
                                lx_valid
                       CHANGING p_params.

ENDFORM.                    "POPUP_PRI_PARAMS

*---------------------------------------------------------------------*
*       FORM PRESET_PRI_PARAMS                                        *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  P_PARAMS                                                      *
*  -->  P_ARCPAR                                                      *
*  -->  P_TITLE                                                       *
*  -->  P_DATASET                                                     *
*  <--  PRI_PARAMS                                                    *
*  <--  ARC_PARAMS                                                    *
*---------------------------------------------------------------------*
FORM PRESET_PRI_PARAMS USING     P_TITLE      TYPE C
                                 P_DATASET    LIKE  PRI_PARAMS-PRDSN
                        CHANGING P_PARAMS     TYPE PRIARC_TYPE.

  field-symbols: <x_container_pri> type x,
                 <x_struc_pri> type x,
                 <x_container_arc> type x,
                 <x_struc_arc> type x.

* no parameters -> get user defaults and overwrite with useful values
  DATA:  lx_valid  LIKE BOOLE-BOOLE,
         lx_rc     LIKE sy-subrc.

  IF P_PARAMS IS INITIAL.
    CLEAR: PRI_PARAMS, ARC_PARAMS.

    PERFORM GET_AND_CHECK_PRI_PARAMS USING 'X'
                                  CHANGING lx_rc
                                           lx_valid.

    PRI_PARAMS-PLIST = SY-UNAME.
    PRI_PARAMS-PRTXT = P_TITLE.
    PRI_PARAMS-PRIMM = SPACE.
    PRI_PARAMS-PRREL = SPACE.
    PRI_PARAMS-PRNEW = 'X'.
    PRI_PARAMS-PEXPI = 9.
    PRI_PARAMS-PAART = 'X_65_132'.
    PRI_PARAMS-LINCT = 65.
    PRI_PARAMS-LINSZ = 132.
    PRI_PARAMS-PRDSN = P_DATASET.

  ELSE.
*   pri_params was not loaded via extended print parameters?
    IF p_parmky IS INITIAL.
      IF p_params-version NE g_version.
        PERFORM convert_pri_params CHANGING p_params.
      ELSE.
*       PRI_PARAMS = P_PARAMS-PRI_PAR.
        assign P_PARAMS-PRI_PAR to <x_container_pri> casting.
        assign PRI_PARAMS to <x_struc_pri> casting.
        <x_struc_pri> = <x_container_pri>.
      ENDIF.
    ENDIF.
    IF pri_params-armod = gc_ablage
    OR pri_params-armod = gc_druck_ablage.
*     ARC_PARAMS = P_PARAMS-ARC_PAR.
      assign P_PARAMS-ARC_PAR to <x_container_arc> casting.
      assign ARC_PARAMS to <x_struc_arc> casting.
      <x_struc_arc> = <x_container_arc>.
    ENDIF.
  ENDIF.

ENDFORM.                    "PRESET_PRI_PARAMS

*---------------------------------------------------------------------*
*       FORM GET_AND_CHECK_PRI_PARAMS                                 *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  P_NO_DIALOG                                                   *
*  -->  PRI_PARAMS                                                    *
*  -->  ARC_PARAMS                                                    *
*  <--  PRI_PARAMS                                                    *
*  <--  ARC_PARAMS                                                    *
*---------------------------------------------------------------------*
FORM GET_AND_CHECK_PRI_PARAMS USING P_NO_DIALOG LIKE BOOLE-BOOLE
                           CHANGING px_rc       LIKE sy-subrc
                                    px_valid    LIKE BOOLE-BOOLE.

  DATA:  px_spool   LIKE boole-boole,
         l_mess(1)  TYPE C.
  DATA:  l_repname  TYPE sy-repid.

* adjust INT4 fields if server has changed
  DATA:
    l_low  LIKE pri_params-linsz,
    l_high LIKE pri_params-linsz.
  l_low  = - 99999.
  l_high =   99999.
  IF NOT pri_params-linsz BETWEEN l_low AND l_high
  OR NOT pri_params-linct BETWEEN l_low AND l_high.
    PERFORM convert_int4 CHANGING:
      pri_params-linsz,
      pri_params-linct,
      pri_params-prchk,
      arc_params-acheck.
  ENDIF.

*---- Konvertierung P_PARAM okay? (LINSZ, LINCT) ---------- note 1026318
  IF pri_params-linsz > l_high                 "! SPACE(4) = 538.976.288
  OR pri_params-linsz < l_low.
    pri_params-linsz = 132.
    l_mess = 'X'.
  ENDIF.
  IF pri_params-linct > l_high                 "! SPACE(4) = 538.976.288
  OR pri_params-linct < l_low.
    pri_params-linct = 65.
    l_mess = 'X'.
  ENDIF.
  IF l_mess = 'X'.
    MESSAGE I848.
  ENDIF.
*--- Konvertierung okay? (ARMOD) -------------------------- note 1026318
  IF pri_params = SPACE OR pri_params IS INITIAL.         " note 1049493
  ELSE.
    IF NOT pri_params-armod CA '_123'.
      pri_params-armod = gc_unknown.
    ENDIF.
  ENDIF.
*--- Konvertierung okay? (MANDANT/CLIENT) ----------------- note 1026318
  IF pri_params-armod = gc_ablage
  OR pri_params-armod = gc_druck_ablage.
    IF arc_params-mandant NE sy-mandt.
      arc_params-mandant = sy-mandt.
    ENDIF.
  ENDIF.

* send popup to maintain print parameters or check print parameters
  l_repname = sy-repid.
  CALL FUNCTION 'GET_PRINT_PARAMETERS'
       EXPORTING
            REPORT                 = l_repname
            IN_ARCHIVE_PARAMETERS  = ARC_PARAMS
            IN_PARAMETERS          = PRI_PARAMS
            MODE                   = 'BATCH'
            NO_DIALOG              = P_NO_DIALOG
       IMPORTING
            OUT_ARCHIVE_PARAMETERS = ARC_PARAMS
            OUT_PARAMETERS         = PRI_PARAMS
            VALID                  = PX_VALID
            VALID_FOR_SPOOL_CREATION = px_spool        "<- note 900249
       EXCEPTIONS
*           invalid_print_params   = 2
*           invalid_archive_params = 2
            ARCHIVE_INFO_NOT_FOUND = 2
            OTHERS                 = 4.

  IF SY-SUBRC NE 0.                         " ==> parameters not valid

    CALL FUNCTION 'GET_PRINT_PARAMETERS'
      EXPORTING
        ARCHIVE_ID             = ARC_PARAMS-ARCHIV_ID
        ARCHIVE_INFO           = ARC_PARAMS-INFO
        ARCHIVE_TEXT           = ARC_PARAMS-ARCTEXT
        AR_OBJECT              = ARC_PARAMS-AR_OBJECT
        SAP_OBJECT             = ARC_PARAMS-SAP_OBJECT
        ARCHIVE_MODE           = PRI_PARAMS-ARMOD
        AUTHORITY              = PRI_PARAMS-PRBER
        COPIES                 = PRI_PARAMS-PRCOP
        COVER_PAGE             = PRI_PARAMS-PRBIG
        DATA_SET               = PRI_PARAMS-PRDSN
        DEPARTMENT             = PRI_PARAMS-PRABT
        DESTINATION            = PRI_PARAMS-PDEST
        EXPIRATION             = PRI_PARAMS-PEXPI
        IMMEDIATELY            = PRI_PARAMS-PRIMM
        LAYOUT                 = PRI_PARAMS-PAART
        LINE_COUNT             = PRI_PARAMS-LINCT
        LINE_SIZE              = PRI_PARAMS-LINSZ
        LIST_NAME              = PRI_PARAMS-PLIST
        LIST_TEXT              = PRI_PARAMS-PRTXT
        NEW_LIST_ID            = PRI_PARAMS-PRNEW
        RECEIVER               = PRI_PARAMS-PRREC
        RELEASE                = PRI_PARAMS-PRREL
        SAP_COVER_PAGE         = PRI_PARAMS-PRSAP
        TYPE                   = PRI_PARAMS-PTYPE
        MODE                   = 'BATCH'
        NO_DIALOG              = P_NO_DIALOG
      IMPORTING
        OUT_ARCHIVE_PARAMETERS = ARC_PARAMS
        OUT_PARAMETERS         = PRI_PARAMS
        VALID_FOR_SPOOL_CREATION = px_spool            "<- note 900249
        VALID                    = px_valid.

  ENDIF.

  px_valid = px_spool.                                 "<- note 900249
  px_rc    = sy-subrc.

ENDFORM.                    "GET_AND_CHECK_PRI_PARAMS

*---------------------------------------------------------------------*
*       FORM UPDATE_P_PARAMS                                          *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  PRI_PARAMS                                                    *
*  -->  ARC_PARAMS                                                    *
*  <--  P_PARAMS                                                      *
*---------------------------------------------------------------------*
FORM update_p_params USING px_rc     LIKE sy-subrc
                           px_valid  LIKE boole-boole
                  CHANGING p_params  TYPE PRIARC_TYPE.

  field-symbols: <x_container_pri> type x,
                 <x_struc_pri> type x,
                 <x_container_arc> type x,
                 <x_struc_arc> type x.

  assign P_PARAMS-PRI_PAR to <x_container_pri> casting.
  assign PRI_PARAMS to <x_struc_pri> casting.
  <x_container_pri> = <x_struc_pri>.

  assign P_PARAMS-ARC_PAR to <x_container_arc> casting.
  assign ARC_PARAMS to <x_struc_arc> casting.
  <x_container_arc> = <x_struc_arc>.

*  P_PARAMS-PRI_PAR = PRI_PARAMS.
*  P_PARAMS-ARC_PAR = ARC_PARAMS.

  IF  px_rc NE 0
  OR  px_valid IS INITIAL.
    MESSAGE S847.
    IF p_f110 EQ 'X'.
      " Report als Jobstep
      PERFORM print_pri_params USING 'PRI_PARAMS'.     "<+ note 900249
      PERFORM print_pri_params USING 'ARC_PARAMS'.     "<+ note 900249
    ENDIF.
  ENDIF.
  IF NOT px_valid IS INITIAL.                          "<- note 900249
      " Report als Jobstep
    CALL FUNCTION 'SET_PRINT_PARAMETERS'
      EXPORTING
        IN_ARCHIVE_PARAMETERS = ARC_PARAMS
        IN_PARAMETERS         = PRI_PARAMS.
    g_print_params = 'X'.                              "/ Note 1021039
  ENDIF.                                               "<- note 900249

  P_PARAMS-VERSION = G_VERSION.

ENDFORM.                    "UPDATE_P_PARAMS

*---------------------------------------------------------------------*
*       FORM CHECK_P_PARAMS                                           *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  P_PARAMS                                                      *
*  -->  P_TITLE                                                       *
*  -->  P_DATASET                                                     *
*  -->  PS_PRI_PARAMS                                                 *
*  -->  PS_ARC_PARAMS                                                 *
*---------------------------------------------------------------------*
FORM CHECK_P_PARAMS USING    P_TITLE   TYPE C
                             P_DATASET LIKE PRI_PARAMS-PRDSN
                    CHANGING P_PARAMS.

  DATA:  lx_valid   LIKE BOOLE-BOOLE,
         lx_rc      LIKE sy-subrc.

  CHECK NOT P_PARAMS IS INITIAL.
  PERFORM PRESET_PRI_PARAMS USING    P_TITLE
                                     P_DATASET
                            CHANGING P_PARAMS.

  PERFORM GET_AND_CHECK_PRI_PARAMS USING 'X'
                                CHANGING lx_rc
                                         lx_valid.

  PERFORM update_p_params USING lx_rc
                                lx_valid
                       CHANGING p_params.

ENDFORM.                    "CHECK_P_PARAMS

*---------------------------------------------------------------------*
*       FORM CONVERT_PRI_PARAMS                                       *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  P_PARAMS                                                      *
*  <--  PRI_PARAMS                                                    *
*  <--  ARC_PARAMS                                                    *
*---------------------------------------------------------------------*
FORM CONVERT_PRI_PARAMS CHANGING P_PARAMS TYPE PRIARC_TYPE.

  field-symbols: <x_container_pri> type x,
                 <x_struc_pri> type x,
                 <x_container_arc> type x,
                 <x_struc_arc> type x.

  assign P_PARAMS-PRI_PAR to <x_container_pri> casting.
  ASSIGN gs_pri_params TO <x_struc_pri> CASTING.
  <x_struc_pri> = <x_container_pri>.

  assign P_PARAMS-ARC_PAR to <x_container_arc> casting.
  ASSIGN gs_arc_params TO <x_struc_arc> CASTING.
  <x_struc_arc> = <x_container_arc>.

*  GS_PRI_PARAMS = P_PARAMS-PRI_PAR.
*  GS_ARC_PARAMS = P_PARAMS-ARC_PAR.
  MOVE-CORRESPONDING:
    GS_PRI_PARAMS TO PRI_PARAMS,
    GS_ARC_PARAMS TO ARC_PARAMS.

  P_PARAMS-VERSION = G_VERSION.

ENDFORM.                    "CONVERT_PRI_PARAMS

*---------------------------------------------------------------------*
*       FORM LOAD_STORE_EXTENDED_PRIPAR                               *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  P_C        Load/Store                                         *
*---------------------------------------------------------------------*
FORM LOAD_STORE_EXTENDED_PRIPAR USING p_c
                                CHANGING P_PARAMS TYPE PRIARC_TYPE.

  field-symbols: <x_container_pri> type x,
                 <x_struc_pri>     type x,
                 <x_container_arc> type x,
                 <x_struc_arc>     type x.

  DATA:     l_code        type c,
            l_repid       like sy-repid,
            l_user        like sy-uname.

  CASE p_c.

    WHEN 'L'.
* load extension parts of print parameters
      IF NOT p_parmky IS INITIAL.
        IF sy-slset <> old_variant.
          CALL FUNCTION 'LOAD_PRINT_PARAMETERS'
            EXPORTING
              key            = p_parmky
            IMPORTING
              out_parameters = pri_params
              key_found      = l_code
            EXCEPTIONS
              error_occured  = 1.
          IF l_code = 'X' AND sy-subrc = 0.
            old_variant = sy-slset.

            assign P_PARAMS-PRI_PAR to <x_container_pri> casting.
            assign PRI_PARAMS to <x_struc_pri> casting.
            <x_container_pri> = <x_struc_pri>.

          ENDIF.
        ENDIF.
      ENDIF.

    WHEN 'S'.
* save extension parts of print parameters into variant
      l_repid = sy-cprog.
      l_user  = sy-slset.
      IF pri_params-prkeyext <> SPACE.
        CALL FUNCTION 'STORE_PRINT_PARAMETERS'
          EXPORTING
            in_parameters = pri_params
            applikation   = 'F'
            priprog       = l_repid
            user          = l_user
          IMPORTING
            key           = p_parmky
          EXCEPTIONS
            error_occured = 1.
      ENDIF.

  ENDCASE.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM FILL_BUTTON                                              *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  P_PARAMS                                                      *
*  -->  P_BUTTON                                                      *
*---------------------------------------------------------------------*
FORM FILL_BUTTON USING P_PARAMS TYPE PRIARC_TYPE
                       P_BUTTON TYPE C.

  IF P_PARAMS IS INITIAL.
    P_BUTTON = GC_ICON_PRIN_NO.
  ELSE.
    P_BUTTON = GC_ICON_PRIN_OK.
  ENDIF.

ENDFORM.                    "FILL_BUTTON
*---------------------------------------------------------------------*
* Form CONVERT_INT4                                                   *
* Used by subroutine GET_AND_CHECK_PRI_PARAMS of this function group  *
* to convert integers stored on other application servers            *
*---------------------------------------------------------------------*
*  <->  P_INT       integer to be converted                           *
*---------------------------------------------------------------------*
FORM convert_int4 CHANGING p_int TYPE sylinsz.

  DATA: BEGIN OF l_hex,
          x(4) TYPE x,
        END OF l_hex.
  DATA: BEGIN OF l_hex1,
          x1(1) TYPE x,
          x2(1) TYPE x,
          x3(1) TYPE x,
          x4(1) TYPE x,
        END OF l_hex1.
  DATA: l_hex2 LIKE l_hex1.

  l_hex-x   = p_int.        "conversion integer -> hex
  l_hex1    = l_hex.        "move to hex1 via character structure
  l_hex2-x1 = l_hex1-x4.    "byte switch
  l_hex2-x2 = l_hex1-x3.
  l_hex2-x3 = l_hex1-x2.
  l_hex2-x4 = l_hex1-x1.
  l_hex     = l_hex2.       "move back to hex4
  p_int     = l_hex-x.      "conversion hex -> integer

ENDFORM.
*---------------------------------------------------------------------*
*       FORM PRINT_PRI_PARAMS                                         *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  P_PARAMS                                                      *
*---------------------------------------------------------------------*
FORM print_pri_params USING px_name.

  DATA:   BEGIN OF lt_dd03l OCCURS 25,
            fieldname  LIKE dd03l-fieldname,
            position   LIKE dd03l-position,
            inttype    LIKE dd03l-inttype,
          END OF   lt_dd03l.
  DATA:   c1(20)      TYPE C VALUE '%_print-',
          c2(21)      TYPE C VALUE 'pri_params-',
          c3(20)      TYPE C VALUE '%_archive-',
          c4(21)      TYPE C VALUE 'arc_params-'.
  DATA:   BEGIN OF lc_aber1,
            c1n(20)   TYPE C,
            c1e(2)    TYPE C VALUE '=',
            c1w(18)   TYPE C,
            c1b(2)    TYPE C VALUE '->',
          END OF lc_aber1.
  DATA:   BEGIN OF lc_aber2,
            c2n(21)   TYPE C,
            c2e(2)    TYPE C VALUE '=',
            c2w(18)   TYPE C,
            c2b(1)    TYPE C VALUE ' ',
          END OF lc_aber2.

  IF px_name EQ 'ARC_PARAMS'.
    CHECK NOT arc_params IS INITIAL.
  ENDIF.
  REFRESH lt_dd03l.
  SELECT * FROM dd03L WHERE TABNAME = px_name.
    MOVE-CORRESPONDING dd03l TO lt_dd03l.
    APPEND lt_dd03l.
  ENDSELECT.
  SORT lt_dd03l BY position.
  LOOP AT lt_dd03l.
    CASE px_name.
      WHEN 'PRI_PARAMS'.
        CONCATENATE c1 lt_dd03l-fieldname INTO lc_aber1-c1n.
        CONCATENATE c2 lt_dd03l-fieldname INTO lc_aber2-c2n.
      WHEN 'ARC_PARAMS'.
        CONCATENATE c3 lt_dd03l-fieldname INTO lc_aber1-c1n.
        CONCATENATE c4 lt_dd03l-fieldname INTO lc_aber2-c2n.
    ENDCASE.
    CASE lt_dd03l-inttype.
      WHEN 'X'.
        ASSIGN (lc_aber1-c1n) TO <bcfs>.
        WRITE <bcfs> TO lc_aber1-c1w.
        SHIFT lc_aber1-c1w LEFT DELETING LEADING SPACE.
        ASSIGN (lc_aber2-c2n) TO <bcfs>.
        WRITE <bcfs> TO lc_aber2-c2w.
        SHIFT lc_aber2-c2w LEFT DELETING LEADING SPACE.
     WHEN OTHERS.
        ASSIGN (lc_aber1-c1n) TO <bcfs>.
        lc_aber1-c1w = <bcfs>.
        ASSIGN (lc_aber2-c2n) TO <bcfs>.
        lc_aber2-c2w = <bcfs>.
    ENDCASE.
    MESSAGE S744(FZ) WITH lc_aber1 lc_aber2 SPACE.
  ENDLOOP.

ENDFORM.                    "print_pri_params
