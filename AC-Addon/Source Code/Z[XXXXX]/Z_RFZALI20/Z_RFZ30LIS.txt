*----------------------------------------------------------------------*
*   INCLUDE RFZ30LIS                                                   *
*----------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  INIT_LISTVIEWER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM init_listtool.
  g_repid                    = sy-repid.

  gs_print-no_print_selinfos  = 'X'.
  gs_print-no_coverpage       = 'X'.
  gs_print-no_print_listinfos = 'X'.

  PERFORM fieldcat_init_main TABLES gt_fieldcat_main.
  PERFORM fieldcat_init_sum  TABLES gt_fieldcat_area
                                    gt_fieldcat_area2
                                    gt_fieldcat_coun
                                    gt_fieldcat_coun2
                                    gt_fieldcat_curr
                                    gt_fieldcat_curr2
                                    gt_fieldcat_meth
                                    gt_fieldcat_meth2
                                    gt_fieldcat_bank
                                    gt_fieldcat_bank2.

  PERFORM keyinfo_init USING    'ZBUKR'
                                'LIFNR'
                                'KUNNR'
                                'EMPFG'
                                'VBLNR'
                        CHANGING gs_keyinfo_main.

  PERFORM layout_init_main   CHANGING gs_layout_main.
  PERFORM sort_init_main     TABLES   gt_sort_main.
  PERFORM sort_init_sum.

  PERFORM layout_init_append CHANGING gs_layout_append.

* Use the defaultvariants, if they exist, and write them in the
* right parameters field on the selection-screen
  PERFORM get_defaultvariant USING    g_save
                                      space
                             CHANGING g_variant_main
                                      p_vari.
  PERFORM get_defaultvariant USING    g_save
                                      'AREA'
                             CHANGING g_variant_area
                                      p_varar .
  PERFORM get_defaultvariant USING    g_save
                                      'COUN'
                             CHANGING g_variant_coun
                                      p_varco    .
  PERFORM get_defaultvariant USING    g_save
                                      'CURR'
                             CHANGING g_variant_curr
                                      p_varcu       .
  PERFORM get_defaultvariant USING    g_save
                                      'METH'
                             CHANGING g_variant_meth
                                      p_varme       .
  PERFORM get_defaultvariant USING    g_save
                                      'BANK'
                             CHANGING g_variant_bank
                                      p_varba       .

* company code independant variants
  PERFORM get_defaultvariant USING    g_save
                                      'ARE2'
                             CHANGING g_variant_area2
                                      p_varar2       .
  PERFORM get_defaultvariant USING    g_save
                                      'COUN'
                             CHANGING g_variant_coun2
                                      p_varco2     .
  PERFORM get_defaultvariant USING    g_save
                                      'CUR2'
                             CHANGING g_variant_curr2
                                      p_varcu2       .
  PERFORM get_defaultvariant USING    g_save
                                      'MET2'
                             CHANGING g_variant_meth2
                                      p_varme2       .
  PERFORM get_defaultvariant USING    g_save
                                      'BAN2'
                             CHANGING g_variant_bank2
                                      p_varba2       .

  PERFORM eventtab_init      TABLES gt_events.
  PERFORM eventtab_init_leg  TABLES gt_events_leg.
  PERFORM event_exit_init    TABLES gt_event_exit.

ENDFORM.                               " INIT_LISTVIEWER

*&---------------------------------------------------------------------*
*&      Form  FIELDCAT_INIT_MAIN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_FIELDCAT  text                                          *
*----------------------------------------------------------------------*
FORM fieldcat_init_main TABLES   pt_fieldcat TYPE slis_t_fieldcat_alv.

  RANGES: lr_header_tech      FOR dntab-fieldname,
          lr_header_first_out FOR dntab-fieldname,
          lr_item_tech        FOR dntab-fieldname,
          lr_item_first_out   FOR dntab-fieldname.

  ranges: lr_header_hwaer_ammount for dntab-fieldname,
          lr_item_hwaer_ammount   for dntab-fieldname.

  PERFORM append_to_range TABLES lr_header_tech
                          USING: 'LAUFD',
                                 'LAUFI',
                                 'XVORL',
                                 'ADRS_KEY',
                                 'HWAER',
                                 'EXPA'.


  PERFORM append_to_range TABLES lr_item_tech
                          USING : 'LAUFD',
                                  'LAUFI',
                                  'XVORL'.

  PERFORM append_to_range TABLES lr_header_first_out
                          USING : 'VBLNR',
                                  'HBKID',
                                  'HKTID',
                                  'RZAWE',
                                  'RZAWX',
                                  'KOINH',
                                  'RWBTR',
                                  'WAERS'.


  PERFORM append_to_range TABLES lr_item_first_out
                          USING:  'GSBER',
                                  'BUKRS',
                                  'BELNR',
                                  'BLART',
                                  'BLDAT',
                                  'ZFBDT',
                                  'ZTERM',
                                  'BSCHL',
                                  'WRBTR',
                                  'WABZG',
                                  'WNETT',
                                  'WAERS',
                                  'POKEN'.
  perform append_to_range tables lr_header_hwaer_ammount
                          using: 'RBETR',
                                 'RSKON',
                                 'SKVHW',
                                 'QSTEU',
                                 'ABZUG',
                                 'NETTO',
                                 'BRUTT'.

  perform append_to_range tables lr_item_hwaer_ammount
                         using: 'DMBTR',
                                'SKNTO',
                                'SKVHW',
                                'QSTEU',
                                'ABZUG',
                                'NETTO'.

*--------------------------- Header ---------------------------------
  CLEAR pt_fieldcat.
  pt_fieldcat-tabname = g_tabname_header.

  LOOP AT lr_header_first_out.
    pt_fieldcat-fieldname = lr_header_first_out-low.
    pt_fieldcat-col_pos = sy-tabix.
    APPEND pt_fieldcat.
  ENDLOOP.

  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
       EXPORTING
            i_program_name         = g_repid
            i_internal_tabname     = g_tabname_header
            i_structure_name       = 'REGUH_LST'
            i_inclname             = g_inclname
            i_client_never_display = 'X'
       CHANGING
            ct_fieldcat            = pt_fieldcat[].


  CLEAR pt_fieldcat.
  pt_fieldcat-tabname = g_tabname_header.
  pt_fieldcat-fieldname = 'EXPA'.
  pt_fieldcat-symbol = 'X'.
  APPEND pt_fieldcat.
  clear pt_fieldcat.
  pt_fieldcat-tabname   = g_tabname_header.
  pt_fieldcat-fieldname = 'HWAER'.
  pt_fieldcat-tech      = 'X'.
  APPEND pt_fieldcat.
  CLEAR pt_fieldcat.
  pt_fieldcat-tabname = g_tabname_header.
  pt_fieldcat-fieldname = 'ADRS_KEY'.
  APPEND pt_fieldcat.

  LOOP AT pt_fieldcat WHERE tabname EQ g_tabname_header.
    if pt_fieldcat-fieldname in lr_header_hwaer_ammount.
      pt_fieldcat-ctabname   = g_tabname_header.
      pt_fieldcat-cfieldname = 'HWAER'.
      modify pt_fieldcat.
    endif.

    IF pt_fieldcat-fieldname IN lr_header_tech.
      pt_fieldcat-tech = 'X'.
      MODIFY pt_fieldcat.
    ELSEIF pt_fieldcat-fieldname IN lr_header_first_out.
      IF pt_fieldcat-fieldname = 'KOINH'.
        pt_fieldcat-outputlen = 35.
        MODIFY pt_fieldcat.
      ENDIF.
    ELSE.
      pt_fieldcat-no_out = 'X'.
      MODIFY pt_fieldcat.
    ENDIF.

  ENDLOOP.

* ---------------- Item ---------------------------------------------
  CLEAR pt_fieldcat.
  pt_fieldcat-tabname = g_tabname_item.

  LOOP AT lr_item_first_out.
    pt_fieldcat-fieldname = lr_item_first_out-low.
    pt_fieldcat-col_pos = sy-tabix.
    APPEND pt_fieldcat.
  ENDLOOP.


  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
       EXPORTING
            i_program_name         = g_repid
            i_internal_tabname     = g_tabname_item
            i_structure_name       = 'REGUP_LST'
            i_inclname             = g_inclname
            i_client_never_display = 'X'
       CHANGING
            ct_fieldcat            = pt_fieldcat[].

  LOOP AT pt_fieldcat WHERE tabname EQ g_tabname_item.
    if pt_fieldcat-fieldname in lr_item_hwaer_ammount.
       pt_fieldcat-ctabname   = g_tabname_header.
       pt_fieldcat-cfieldname = 'HWAER'.
       modify pt_fieldcat.
    endif.

    IF pt_fieldcat-fieldname IN lr_item_tech.
      pt_fieldcat-tech = 'X'.
      MODIFY pt_fieldcat.
    ELSEIF pt_fieldcat-fieldname IN lr_item_first_out.
      IF pt_fieldcat-fieldname EQ 'WRBTR' OR
         pt_fieldcat-fieldname EQ 'WABZG' OR
         pt_fieldcat-fieldname EQ 'WNETT' OR
         pt_fieldcat-fieldname EQ 'SKVFW'.

        pt_fieldcat-cfieldname = 'WAERS'.
        pt_fieldcat-ctabname   =  g_tabname_item.
        pt_fieldcat-do_sum     = 'X'.
        MODIFY pt_fieldcat.
      ELSEIF pt_fieldcat-fieldname EQ 'GSBER'.
        pt_fieldcat-outputlen = 6.
        MODIFY pt_fieldcat.
      ELSEIF pt_fieldcat-fieldname EQ 'BLDAT'.
        pt_fieldcat-outputlen = 13.
        MODIFY pt_fieldcat.
      ENDIF.
    ELSE.
      IF pt_fieldcat-fieldname EQ 'ZBD1T'.
        pt_fieldcat-seltext_l = text-024.
        REPLACE '&' WITH '1' INTO pt_fieldcat-seltext_l.
      ELSEIF pt_fieldcat-fieldname EQ 'ZBD2T'.
        pt_fieldcat-seltext_l = text-024.
        REPLACE '&' WITH '2' INTO pt_fieldcat-seltext_l.
      ENDIF.
      pt_fieldcat-no_out = 'X'.
      MODIFY pt_fieldcat.
    ENDIF.
  ENDLOOP.

ENDFORM.                               " FIELDCAT_INIT_MAIN

*---------------------------------------------------------------------*
*       FORM FIELDCAT_INIT_SUM                                        *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM fieldcat_init_sum TABLES
                       pt_fieldcat_area  TYPE slis_t_fieldcat_alv
                       pt_fieldcat_area2 TYPE slis_t_fieldcat_alv
                       pt_fieldcat_coun  TYPE slis_t_fieldcat_alv
                       pt_fieldcat_coun2 TYPE slis_t_fieldcat_alv
                       pt_fieldcat_curr  TYPE slis_t_fieldcat_alv
                       pt_fieldcat_curr2 TYPE slis_t_fieldcat_alv
                       pt_fieldcat_meth  TYPE slis_t_fieldcat_alv
                       pt_fieldcat_meth2 TYPE slis_t_fieldcat_alv
                       pt_fieldcat_bank  TYPE slis_t_fieldcat_alv
                       pt_fieldcat_bank2 TYPE slis_t_fieldcat_alv.

  RANGES: lr_first_out_area2 FOR dntab-fieldname,
          lr_first_out_coun2 FOR dntab-fieldname,
          lr_first_out_curr2 FOR dntab-fieldname,
          lr_first_out_meth2 FOR dntab-fieldname,
          lr_first_out_bank2 FOR dntab-fieldname,
          lr_do_sum          FOR dntab-fieldname.


  PERFORM append_to_range TABLES lr_first_out_area2
                          USING: 'ZBUKR',
                                 'SRTGB',
                                 'RZAWE',
                                 'HWAER',
                                 'RBETR',
                                 'WAERS',
                                 'RWBTR',
                                 'WABZG'.

  PERFORM append_to_range TABLES lr_first_out_coun2
                          USING: 'HWAER',
                                 'ZLAND',
                                 'ZBUKR',
                                 'WAERS',
                                 'RZAWE',
                                 'RBETR',
                                 'RWBTR',
                                 'WABZG'.

  PERFORM append_to_range TABLES lr_first_out_curr2
                          USING: 'HWAER',
                                 'WAERS',
                                 'ZLAND',
                                 'ZBUKR',
                                 'RZAWE',
                                 'RBETR',
                                 'RWBTR',
                                 'WABZG'.

  PERFORM append_to_range TABLES lr_first_out_meth2
                          USING: 'RZAWE',
                                 'ANZHL',
                                 'HWAER',
                                 'ZBUKR',
                                 'WAERS',
                                 'RBETR',
                                 'RWBTR',
                                 'WABZG'.

  PERFORM append_to_range TABLES lr_first_out_bank2
                          USING: 'HWAER',
                                 'ZBUKR',
                                 'UBNKS',
                                 'UBNKY',
                                 'UBKNT',
                                 'UBKON',
                                 'ANZHL',
                                 'WAERS',
                                 'RZAWE',
                                 'RBETR',
                                 'RWBTR',
                                 'WABZG'.

  PERFORM append_to_range TABLES lr_do_sum
                          USING: 'RBETR',
                                 'RWBTR',
                                 'WABZG',
                                 'ANZHL'.

  PERFORM generate_fieldcat TABLES pt_fieldcat_area2
                                   lr_first_out_area2
                                   lr_do_sum
                            USING  'REGU1_LST'.
  PERFORM generate_fieldcat TABLES pt_fieldcat_coun2
                                   lr_first_out_coun2
                                   lr_do_sum
                            USING  'REGU2_LST'.
  PERFORM generate_fieldcat TABLES pt_fieldcat_curr2
                                   lr_first_out_curr2
                                   lr_do_sum
                            USING  'REGU3_LST'.

  PERFORM generate_fieldcat TABLES pt_fieldcat_bank2
                                   lr_first_out_bank2
                                   lr_do_sum
                            USING  'REGU5_LST'.
* payment method sum list:
* no sum for amount and skonto
  DELETE lr_do_sum WHERE low = 'RWBTR' OR low = 'WABZG'.

  PERFORM generate_fieldcat TABLES pt_fieldcat_meth2
                                   lr_first_out_meth2
                                   lr_do_sum
                            USING  'REGU4_LST'.

  PERFORM modify_fieldcat TABLES: pt_fieldcat_area2,
                                  pt_fieldcat_coun2,
                                  pt_fieldcat_curr2,
                                  pt_fieldcat_meth2.

  PERFORM modify_ddtext TABLES pt_fieldcat_area2
                        USING  'SRTGB' 'GTEXT'.

  PERFORM modify_ddtext TABLES pt_fieldcat_coun2
                        USING  'ZLAND' 'LANDX'.

  PERFORM modify_ddtext TABLES pt_fieldcat_meth2
                        USING  'RZAWE' 'TEXT1'.

  PERFORM modify_ddtext TABLES pt_fieldcat_bank2
                        USING space space.

  PERFORM modify_ddtext TABLES pt_fieldcat_curr2
                        USING space space.

  pt_fieldcat_area[] = pt_fieldcat_area2[].
  pt_fieldcat_coun[] = pt_fieldcat_coun2[].
  pt_fieldcat_curr[] = pt_fieldcat_curr2[].
  pt_fieldcat_meth[] = pt_fieldcat_meth2[].
  pt_fieldcat_bank[] = pt_fieldcat_bank2[].

* delete from the company code specific fieldcatalogs the field
* 'Paying Company'
  DELETE: pt_fieldcat_area WHERE fieldname EQ 'ZBUKR',
          pt_fieldcat_coun WHERE fieldname EQ 'ZBUKR',
          pt_fieldcat_curr WHERE fieldname EQ 'ZBUKR',
          pt_fieldcat_meth WHERE fieldname EQ 'ZBUKR',
          pt_fieldcat_bank WHERE fieldname EQ 'ZBUKR'.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM GENERATE_FIELDCAT                                        *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  PT_FIELDCAT                                                   *
*  -->  PR_FIRST_OUT                                                  *
*  -->  PC_STRUCNAME                                                  *
*---------------------------------------------------------------------*
FORM generate_fieldcat TABLES pt_fieldcat  TYPE slis_t_fieldcat_alv
                              pr_first_out STRUCTURE gr_fieldname
                              pr_sum_up    STRUCTURE gr_fieldname
                       USING  pc_strucname LIKE dd02l-tabname.

  DATA: lc_fieldcat     LIKE pt_fieldcat,
        lc_seltext_l1   LIKE pt_fieldcat-seltext_l,
        lc_seltext_l2   LIKE pt_fieldcat-seltext_l,
        lc_intlen       LIKE pt_fieldcat-intlen.

  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
       EXPORTING
            i_structure_name       = pc_strucname
            i_client_never_display = 'X'
       CHANGING
            ct_fieldcat            = pt_fieldcat[].

  TRANSLATE pc_strucname TO LOWER CASE.                  "#EC TRANSLANG
  CASE pc_strucname.
    WHEN 'regu5_lst'.
      READ TABLE gt_fieldcat_bank2 INTO lc_fieldcat
                                   WITH KEY fieldname = 'UBKNT'.
      lc_seltext_l1 = lc_fieldcat-seltext_l.
      READ TABLE gt_fieldcat_main  INTO lc_fieldcat
                                   WITH KEY fieldname = 'BKREF'.
      lc_seltext_l2 = lc_fieldcat-seltext_l.
      DESCRIBE FIELD t012k-refzl LENGTH lc_intlen IN CHARACTER MODE.
      CLEAR pt_fieldcat.
      pt_fieldcat-fieldname = 'UBKNT_LONG'.
      pt_fieldcat-seltext_l = lc_seltext_l1.
      pt_fieldcat-datatype  = 'CHAR'.
      pt_fieldcat-inttype   = 'C'.
      pt_fieldcat-intlen    = 40.
      APPEND pt_fieldcat.
      pt_fieldcat-fieldname = 'REZFL'.
      pt_fieldcat-seltext_l = lc_seltext_l2.
      pt_fieldcat-datatype  = 'CHAR'.
      pt_fieldcat-inttype   = 'C'.
      pt_fieldcat-intlen    = lc_intlen.
      pt_fieldcat-tech      = 'X'.
      APPEND pt_fieldcat.
      IF NOT fl_gs_bank_ubkrf IS INITIAL.
        APPEND pt_fieldcat.
        pt_fieldcat-fieldname = 'UBKRF'.
        pt_fieldcat-seltext_l = lc_seltext_l2.
        pt_fieldcat-datatype  = 'CHAR'.
        pt_fieldcat-inttype   = 'C'.
        pt_fieldcat-intlen    = lc_intlen.
        pt_fieldcat-no_out    = 'X'.
        APPEND pt_fieldcat.
      ENDIF.
    WHEN OTHERS.
      "...
  ENDCASE.

  LOOP AT pt_fieldcat.
    IF NOT pt_fieldcat-fieldname IN pr_first_out.
      pt_fieldcat-no_out = 'X'.
      MODIFY pt_fieldcat.
    ENDIF.
    IF pt_fieldcat-fieldname IN pr_sum_up.
      pt_fieldcat-do_sum = 'X'.
      MODIFY pt_fieldcat.
    ENDIF.
  ENDLOOP.

ENDFORM.



*&---------------------------------------------------------------------*
*&      Form  KEYINFO_INIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_KEYINFO  text
*----------------------------------------------------------------------*
FORM keyinfo_init USING    p_key1
                           p_key2
                           p_key3
                           p_key4
                           p_key5
                  CHANGING ps_keyinfo TYPE slis_keyinfo_alv.
  MOVE p_key1 TO: ps_keyinfo-header01,
                  ps_keyinfo-item01.
  MOVE p_key2 TO: ps_keyinfo-header02,
                  ps_keyinfo-item02.
  MOVE p_key3 TO: ps_keyinfo-header03,
                  ps_keyinfo-item03.
  MOVE p_key4 TO: ps_keyinfo-header04,
                  ps_keyinfo-item04.
  MOVE p_key5 TO: ps_keyinfo-header05,
                  ps_keyinfo-item05.
ENDFORM.                               " KEYINFO_init



*&---------------------------------------------------------------------*
*&      Form  GET_DEFAULTVARIANT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_G_SAVE  text                                               *
*      -->P_G_VARIANT  text                                            *
*----------------------------------------------------------------------*
FORM get_defaultvariant USING    p_save
                                 p_handle
                        CHANGING p_variant  LIKE disvariant
                                 l_vari     LIKE disvariant-variant.

  CLEAR p_variant.
  p_variant-report = g_repid.
  p_variant-handle = p_handle.

  CALL FUNCTION 'REUSE_ALV_VARIANT_DEFAULT_GET'
       EXPORTING
            i_save        = p_save
       CHANGING
            cs_variant    = p_variant
       EXCEPTIONS
            wrong_input   = 1
            not_found     = 2
            program_error = 3
            OTHERS        = 4.
  IF sy-subrc = 0.
    l_vari = p_variant-variant.
  ENDIF.

ENDFORM.                               " GET_DEFAULTVARIANT
*&---------------------------------------------------------------------*
*&      Form  LAYOUT_INIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GS_LAYOUT  text                                            *
*----------------------------------------------------------------------*
FORM layout_init_main CHANGING ps_layout TYPE slis_layout_alv.
  ps_layout-no_keyfix        = 'X'.
  ps_layout-zebra            = 'X'.
  ps_layout-no_totalline     = 'X'.
  ps_layout-expand_fieldname = 'EXPA'. "only in maintenance mode
  ps_layout-min_linesize     = 255.    "!!!
  ps_layout-list_append      = 'X'.
  ps_layout-GROUP_CHANGE_EDIT = 'X'.
ENDFORM.                               " LAYOUT_INIT

*---------------------------------------------------------------------*
*       FORM LAYOUT_INIT_append                                       *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  PS_LAYOUT                                                     *
*---------------------------------------------------------------------*
FORM layout_init_append CHANGING ps_layout TYPE slis_layout_alv.
* gs_layout_append-colwidth_optimize = 'X'.
  gs_layout_append-min_linesize      = 255.
* gs_layout_append-zebra             = 'X'.
  gs_layout_append-list_append       = 'X'.
ENDFORM.




*&---------------------------------------------------------------------*
*&      Form  SORT_INIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->PT_SORT  text                                              *
*----------------------------------------------------------------------*
FORM sort_init_main TABLES   pt_sort TYPE slis_t_sortinfo_alv.

  pt_sort-tabname = g_tabname_header.
  pt_sort-fieldname = 'ZBUKR'.
  pt_sort-up = 'X'.
  pt_sort-spos = 1.
  pt_sort-group = '*'.
* pt_sort-obligatory = 'X'.   " spaeter, wenn bug gefixt
  APPEND pt_sort.

  pt_sort-tabname = g_tabname_header.
  pt_sort-fieldname = 'BUSAB'.
  pt_sort-up = 'X'.
  pt_sort-spos = 2.
  pt_sort-group = '*'.
  pt_sort-obligatory = ''.
  APPEND pt_sort.

  pt_sort-tabname = g_tabname_header.
  pt_sort-fieldname = 'VBLNR'.
  pt_sort-subtot = 'X'.
  pt_sort-group = ' '.
  pt_sort-up = 'X'.
  pt_sort-spos = 3.
  APPEND pt_sort.

ENDFORM.                               " SORT_INIT

*---------------------------------------------------------------------*
*       FORM SORT_INIT_SUM                                            *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM sort_init_sum.

  PERFORM sort_sum_details TABLES gt_sort_area
                           USING  'SRTGB' 'GTEXT'
                                  'WAERS' 'RZAWE'.

  PERFORM sort_sum_details TABLES gt_sort_coun
                           USING  'ZLAND' 'LANDX'
                                  'WAERS' 'RZAWE'.


  PERFORM sort_sum_details TABLES gt_sort_meth
                           USING  'RZAWE' 'TEXT1'
                                  'WAERS' space.

  PERFORM sort_sum_curr_and_bank.

  PERFORM sort_init_sum2 .

ENDFORM.



*&---------------------------------------------------------------------*
*&      Form  EVENTTAB_INIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_EVENTS  text                                            *
*----------------------------------------------------------------------*
FORM eventtab_init TABLES   pt_events TYPE slis_t_event.

  DATA lt_events TYPE slis_t_event WITH HEADER LINE.

  REFRESH pt_events.

  CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
       EXPORTING
            i_list_type = 1
       IMPORTING
            et_events   = lt_events[].

  READ TABLE lt_events WITH KEY name = slis_ev_top_of_page.
  IF sy-subrc EQ 0.
    lt_events-form = 'TOP_OF_PAGE'.
    APPEND lt_events TO pt_events.
  ENDIF.

  READ TABLE lt_events WITH KEY name = slis_ev_top_of_list.
  IF sy-subrc EQ 0.
    lt_events-form = 'TOP_OF_LIST'.
    APPEND lt_events TO pt_events.
  ENDIF.

  READ TABLE lt_events WITH KEY name = slis_ev_before_line_output.
  IF sy-subrc EQ 0.
    lt_events-form = 'BEFORE_LINE_OUTPUT'.
    APPEND lt_events TO pt_events.
  ENDIF.

  READ TABLE lt_events WITH KEY name = slis_ev_after_line_output.
  IF sy-subrc EQ 0.
    lt_events-form = 'AFTER_LINE_OUTPUT'.
    APPEND lt_events TO pt_events.
  ENDIF.

  READ TABLE lt_events WITH KEY name = slis_ev_end_of_list.
  IF sy-subrc EQ 0.
    lt_events-form = 'END_OF_LIST'.
    APPEND lt_events TO pt_events.
  ENDIF.

ENDFORM.                               " EVENTTAB_INIT

*---------------------------------------------------------------------*
*       FORM EVENTTAB_INIT_LEG                                        *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  PT_EVENTS                                                     *
*---------------------------------------------------------------------*
FORM eventtab_init_leg TABLES   pt_events TYPE slis_t_event.

  CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
       EXPORTING
            i_list_type = 1
       IMPORTING
            et_events   = pt_events[].

  READ TABLE pt_events WITH KEY name = slis_ev_top_of_page.
  IF sy-subrc EQ 0.
    pt_events-form = 'TOP_OF_PAGE'.
    APPEND pt_events.
  ENDIF.

  READ TABLE pt_events WITH KEY name = slis_ev_before_line_output.
  IF sy-subrc EQ 0.
    pt_events-form = 'BEFORE_LINE_OUTPUT'.
    APPEND pt_events.
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  EVENT_EXIT_INIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GS_EVENT_EXIT  text                                        *
*----------------------------------------------------------------------*
FORM event_exit_init TABLES pt_event_exit TYPE slis_t_event_exit.
  CLEAR pt_event_exit.

  pt_event_exit-ucomm = '&SUM'.
  pt_event_exit-after = 'X'.
  APPEND pt_event_exit.

  pt_event_exit-ucomm = '&OUP'.
  pt_event_exit-after = 'X'.
  APPEND pt_event_exit.

  pt_event_exit-ucomm = '&ODN'.
  pt_event_exit-after = 'X'.
  APPEND pt_event_exit.

  pt_event_exit-ucomm = '&RNT'.
  pt_event_exit-after = 'X'.
  pt_event_exit-before = 'X'.
  APPEND pt_event_exit.

  CLEAR pt_event_exit.
  pt_event_exit-ucomm = '&LIS'.
  pt_event_exit-after = 'X'.
  APPEND pt_event_exit.

  CLEAR pt_event_exit.
  pt_event_exit-ucomm = '&OL0'.
  pt_event_exit-before = 'X'.
  APPEND pt_event_exit.

ENDFORM.                               " EVENT_EXIT_INIT

*&---------------------------------------------------------------------*
*&      Form  EXCLUDE_INIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GT_EXTAB  text
*----------------------------------------------------------------------*
FORM exclude_init  TABLES   p_extab STRUCTURE gt_extab USING fcode.

  p_extab-fcode = fcode.
  APPEND p_extab.

ENDFORM.                               " EXCLUDE_INIT
*&---------------------------------------------------------------------*
*&      Form  SORT_INIT_SUM2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_GT_SORT_AREA2  text
*----------------------------------------------------------------------*
FORM sort_init_sum2.

  LOOP AT gt_sort_area INTO gt_sort_area2.
    ADD 1 TO gt_sort_area2-spos.
    APPEND gt_sort_area2.
  ENDLOOP.
  gt_sort_area2-fieldname = 'ZBUKR'.
  gt_sort_area2-spos       = '1'.
  gt_sort_area2-subtot     = 'X'.
  APPEND gt_sort_area2.

  LOOP AT gt_sort_curr INTO gt_sort_curr2.
    ADD 1 TO gt_sort_curr2-spos.
    APPEND gt_sort_curr2.
  ENDLOOP.
  gt_sort_curr2-fieldname = 'ZBUKR'.
  gt_sort_curr2-spos       = '1'.
  gt_sort_curr2-subtot     = 'X'.
  APPEND gt_sort_curr2.

  LOOP AT gt_sort_coun INTO gt_sort_coun2.
    ADD 1 TO gt_sort_coun2-spos.
    APPEND gt_sort_coun2.
  ENDLOOP.
  gt_sort_coun2-fieldname = 'ZBUKR'.
  gt_sort_coun2-spos       = '1'.
  gt_sort_coun2-subtot     = 'X'.
  APPEND gt_sort_coun2.

  LOOP AT gt_sort_meth INTO gt_sort_meth2.
    ADD 1 TO gt_sort_meth2-spos.
    APPEND gt_sort_meth2.
  ENDLOOP.
  gt_sort_meth2-fieldname = 'ZBUKR'.
  gt_sort_meth2-spos       = '1'.
  gt_sort_meth2-subtot     = 'X'.
  APPEND gt_sort_meth2.

  LOOP AT gt_sort_bank INTO gt_sort_bank2.
    ADD 1 TO gt_sort_bank2-spos.
    APPEND gt_sort_bank2.
  ENDLOOP.
  gt_sort_bank2-fieldname = 'ZBUKR'.
  gt_sort_bank2-spos       = '1'.
  gt_sort_bank2-subtot     = 'X'.
  APPEND gt_sort_bank2.

ENDFORM.                               " SORT_INIT_SUM2
