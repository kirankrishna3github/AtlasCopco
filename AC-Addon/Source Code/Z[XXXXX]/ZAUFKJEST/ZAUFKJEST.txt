*&---------------------------------------------------------------------*
REPORT zaufkjest .                                          "v1.1
*&---------------------------------------------------------------------*
* This report uses table JEST as master.
* The fields PHAS0, PHAS1, PHAS2, PHAS3 and LOEKZ of
* table AUFK are set according to the status
* I0001, I0002, I0045, I0046, und I0076 of table JEST.
*&---------------------------------------------------------------------*
TABLES: aufk, jest.

DATA: counter_all   TYPE i,
      u_aufk_lines  TYPE i,
      u_jest_lines  TYPE i,
      chg_flg(1)    TYPE c.

DATA: BEGIN OF u_aufk OCCURS 0.
        INCLUDE STRUCTURE aufk.
DATA: END OF u_aufk.

DATA: BEGIN OF s_aufk_log,
        aufnr     LIKE aufk-aufnr,
        descr(10) TYPE c,
      END OF s_aufk_log.
DATA: t_aufk_log LIKE TABLE OF s_aufk_log.

DATA: BEGIN OF u_jest OCCURS 0.
        INCLUDE STRUCTURE jest.
DATA: END OF u_jest.

*---------------------------------------------------------------------*

SELECT-OPTIONS:  aufnr FOR aufk-aufnr.
PARAMETERS:      auart LIKE aufk-auart DEFAULT 'XXXX'.
SELECT-OPTIONS:  aedat FOR aufk-aedat.
PARAMETERS:      test_run DEFAULT 'X'.

*---------------------------------------------------------------------*

check not
    ( aufnr is initial and auart is initial and aedat is initial ).

* select orders
SELECT * FROM aufk WHERE aufnr IN aufnr
                     AND auart EQ auart
                     AND aedat IN aedat.
  u_aufk = aufk.
  ADD 1 TO counter_all.
  CLEAR chg_flg.
* I0001 from JEST into AUFK
  SELECT * FROM jest WHERE objnr = u_aufk-objnr
                     AND   stat  = 'I0001'               "EROF
                     AND   inact = space.
  ENDSELECT.
  IF sy-subrc = '0'.
    PERFORM match USING 'PHAS0' 'X' CHANGING chg_flg.
  ELSE.
    PERFORM match USING 'PHAS0' space CHANGING chg_flg.
  ENDIF.
* I0002 from JEST into AUFK
  SELECT * FROM jest WHERE objnr = u_aufk-objnr
                     AND stat = 'I0002'               "FREI
                     AND inact = space.
  ENDSELECT.
  IF sy-subrc = '0'.
    PERFORM match USING 'PHAS1' 'X' CHANGING chg_flg.
    IF NOT chg_flg IS INITIAL.
      PERFORM phasen-datum_setzen(saplkauf)  USING u_aufk-idat1 '1' '1'.
    ENDIF.
  ELSE.
    PERFORM match USING 'PHAS1' space  CHANGING chg_flg.
  ENDIF.
* I0045 from JEST into AUFK
  SELECT * FROM jest WHERE objnr = u_aufk-objnr
                     AND stat = 'I0045'               "TABG
                     AND inact = space.
  ENDSELECT.
  IF sy-subrc = '0'.
    PERFORM match USING 'PHAS2' 'X'  CHANGING chg_flg.
    IF NOT chg_flg IS INITIAL.
      PERFORM phasen-datum_setzen(saplkauf)  USING u_aufk-idat1 '2' '2'.
    ENDIF.
  ELSE.
    PERFORM match USING 'PHAS2' space  CHANGING chg_flg.
  ENDIF.
* I0046 from JEST into AUFK
  SELECT * FROM jest WHERE objnr = u_aufk-objnr
                     AND stat = 'I0046'              "ABGS
                     AND inact = space.
  ENDSELECT.
  IF sy-subrc = '0'.
    PERFORM match USING 'PHAS3' 'X'  CHANGING chg_flg.
    IF NOT chg_flg IS INITIAL.
      PERFORM phasen-datum_setzen(saplkauf) USING u_aufk-idat1 '3' '3'.
    ENDIF.
  ELSE.
    PERFORM match USING 'PHAS3' space  CHANGING chg_flg.
  ENDIF.
* I0076 from JEST into AUFK (I0076 = AUFK-LOEKZ !)
  SELECT * FROM jest WHERE objnr = u_aufk-objnr
                     AND stat = 'I0076'                "L#VM
                     AND inact = space.
  ENDSELECT.
  IF sy-subrc = '0'.
    PERFORM match USING 'LOEKZ' 'X'  CHANGING chg_flg.
  ELSE.
    PERFORM match USING 'LOEKZ' space  CHANGING chg_flg.
  ENDIF.

* I0013 from JEST into AUFK (requires AUFK-LOEKZ)
  SELECT * FROM jest WHERE objnr = u_aufk-objnr
                     AND stat = 'I0013'               "L#KZ
                     AND inact = space.
  ENDSELECT.
  IF sy-subrc = '0'.
    PERFORM match USING 'LOEKZ' 'X'  CHANGING chg_flg.
  ENDIF.

* build up table with modified data
  IF NOT chg_flg IS INITIAL.
    APPEND u_aufk.
  ENDIF.
ENDSELECT.

*---------------------------------------------------------------------*
* Update and Output
*---------------------------------------------------------------------*

DESCRIBE TABLE u_aufk LINES u_aufk_lines.
WRITE: / 'Number of selected orders:', counter_all.
WRITE: / 'Number of affected orders:', u_aufk_lines.
ULINE.

IF test_run EQ space AND u_aufk_lines > 0.
  WRITE: / 'U P D A T E   R U N'.
* UPDATE
  UPDATE aufk FROM TABLE u_aufk.
  IF sy-subrc <> 0.
    WRITE: / 'ERROR: Only', sy-dbcnt, 'out of',
             u_aufk_lines, 'orders changed.'.
  ELSE.
    WRITE: / 'All affected orders are changed'.
  ENDIF.
  COMMIT WORK.
ELSE.
  WRITE: / 'Test Run. No Update'.
ENDIF.
ULINE.

sort t_aufk_log.
LOOP AT t_aufk_log INTO s_aufk_log.
  WRITE AT: /10 s_aufk_log-aufnr, 40 s_aufk_log-descr.
  AT NEW aufnr.
    skip.
  ENDAT.
ENDLOOP.

ULINE.

*&--------------------------------------------------------------------*
*&      Form  match
*&--------------------------------------------------------------------*
*   test JEST vs AUFK-PHAS* and adapt the latter, if values differ
*---------------------------------------------------------------------*
*      -->  STATUS     field-label of status in AUFK
*      -->  VALUE      JEST value of status
*      <--  CHG_FLG    if values differ, adapt and set chg_flg = 'X'
*---------------------------------------------------------------------*
FORM match  USING        status  LIKE dfies-fieldname
                         value   LIKE aufk-phas0
            CHANGING     chg_flg.

  DATA: field LIKE dfies-fieldname.
  FIELD-SYMBOLS: <statval> TYPE ANY.

  CONCATENATE 'U_AUFK-' status INTO field.
  ASSIGN (field) TO <statval>.

  IF <statval> NE value.
    <statval> = value.
    s_aufk_log-aufnr = u_aufk-aufnr.
    s_aufk_log-descr = status.
    APPEND s_aufk_log TO t_aufk_log.
    chg_flg = 'X'.
  ENDIF.

ENDFORM.                    "match


*Selection text£º
*AEDAT:D       .
*AUART:D       .
*AUFNR:D       .
*TEST_RUN:        Test run?
