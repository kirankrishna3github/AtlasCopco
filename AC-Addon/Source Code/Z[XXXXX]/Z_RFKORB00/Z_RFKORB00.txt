*=======================================================================
*       Interne Belege
*=======================================================================


*=======================================================================
*       Das Programm includiert
*
*       RFKORI00 Datendeklaration
*       RFKORI90 Allgemeine Unterroutinen
*       RFKORI93 Allgemeine Unterroutinen f¨¹r Messages und Protokoll
*       RFKORIEX User-Exits Korrespondenz
*=======================================================================


*=======================================================================
*       Report-Header
*=======================================================================
REPORT RFKORB00 MESSAGE-ID FB
                NO STANDARD PAGE HEADING.

*-----------------------------------------------------------------------
*       Tables (RFKORI00)
*-----------------------------------------------------------------------
INCLUDE RFKORI00.
*include dla faktury wewn¨ºtrznej                          GSI
INCLUDE z_fi_internal_invoice.
DATA: invalid_doc.
*-----------------------------------------------------------------------
*       Datenfelder f¨¹r den Report RFKORD10
*
*       Teil 1 : Einzelfelder (RFKORI00)
*       Teil 2 : Strukturen (RFKORI00)
*       Teil 3 : Interne Tabellen (RFKORI00)
*       Teil 4 : Konstanten (RFKORI00)
*       Teil 5 : Field-Symbols
*       Teil 6 : Select-Options und Parameter
*       Teil 7 : Field-Groups
*-----------------------------------------------------------------------

*-----------------------------------------------------------------------
*       Teil 5 : Field-Symbols
*-----------------------------------------------------------------------

*-----------------------------------------------------------------------
*       Teil 6 : Select-Options und Parameter
*-----------------------------------------------------------------------
BEGIN_OF_BLOCK 0.
SELECT-OPTIONS: RBUKRS   FOR  BKORM-BUKRS,
                RKOART   FOR  BKORM-KOART NO-DISPLAY,
                RKONTO   FOR  BKORM-KONTO NO-DISPLAY,
                RBELNR   FOR  BKORM-BELNR,
                RGJAHR   FOR  BKORM-GJAHR.
SELECT-OPTIONS: RBLART   FOR  BKPF-BLART.
SELECT-OPTIONS: RXBLNR   FOR  BKPF-XBLNR.
SELECT-OPTIONS: RBVORG   FOR  BKPF-BVORG.
SELECT-OPTIONS: RBLDAT   FOR  BKPF-BLDAT.
SELECT-OPTIONS: RBUDAT   FOR  BKPF-BUDAT.
SELECT-OPTIONS: RCPUDT   FOR  BKPF-CPUDT.
SELECT-OPTIONS: RUNAME   FOR  BKPF-USNAM.
SELECT-OPTIONS: rmwskz   FOR  bseg-mwskz.
SELECT-OPTIONS: rbktxt   FOR  bkpf-bktxt.
END_OF_BLOCK 0.
BEGIN_OF_BLOCK 1.
PARAMETERS:     NORMBL   LIKE RFPDO1-KORBNBEL.
PARAMETERS:     STORBL   LIKE RFPDO1-KORBSBEL.
SELECT-OPTIONS: SBELNR   FOR  BKPF-STBLG.
PARAMETERS:     DAUBUBL  LIKE RFPDO1-KORBDBEL.
PARAMETERS:     DAUBOBL  LIKE RFPDO1-KORBEBEL.
SELECT-OPTIONS: DBELNR   FOR  BKPF-DBBLG.
PARAMETERS:     MUSTBL   LIKE RFPDO1-KORBMBEL.
PARAMETERS:     STATBL   LIKE RFPDO1-KORBMPOS.
PARAMETERS:     VOREBL   LIKE RFPDO2-SOPOVBEL.
END_OF_BLOCK 1.
BEGIN_OF_BLOCK 2.
PARAMETERS:     TITLE    LIKE RFPDO1-ALLGLINE.
PARAMETERS:     revent   LIKE bkorm-event DEFAULT 'PLFWE'.
PARAMETERS:     formname LIKE t001f-fornr DEFAULT 'Z_INT_INV'.
END_OF_BLOCK 2.
BEGIN_OF_BLOCK 5.
PARAMETERS:     RDELDAYS      LIKE RFPDO-F140DELD DEFAULT '08'.
END_OF_BLOCK 5.
BEGIN_OF_BLOCK 8.
PARAMETERS:     PRDEST   LIKE TSP01-RQDEST VISIBLE LENGTH 11.
END_OF_BLOCK 8.

*-----------------------------------------------------------------------
*       Teil 6 : Field-Groups
*-----------------------------------------------------------------------

*=======================================================================
*       Vor dem Selektionsbild
*=======================================================================

*-----------------------------------------------------------------------
*       Initialization
*-----------------------------------------------------------------------
INITIALIZATION.
  GET_FRAME_TITLE: 0, 1, 2, 5, 8.

*=======================================================================
*       Hauptablauf
*=======================================================================

*-----------------------------------------------------------------------
*       Eingabenkonvertierung und Eingabenpr¨¹fung
*-----------------------------------------------------------------------
AT SELECTION-SCREEN.
  IF SY-BATCH IS INITIAL.
    IF SSCRFIELDS-UCOMM = 'PRIN'.
      SSCRFIELDS-UCOMM = 'ONLI'.
*   IF SY-UCOMM = 'PRIN'.
*      SY-UCOMM = 'ONLI'.
        PRINT = 'X'.
        XONLI = 'X'.
    ENDIF.
  ELSE.
    PRINT = 'X'.
  ENDIF.

  IF    NOT SY-BATCH IS INITIAL
  OR  (     SY-BATCH IS INITIAL
* AND   (   SY-UCOMM = 'PRIN'
* OR        SY-UCOMM = 'ONLI' ) ).
  AND   (   SSCRFIELDS-UCOMM = 'PRIN'
  OR        SSCRFIELDS-UCOMM = 'ONLI' ) ).
    IF  NORMBL  IS INITIAL
    AND STORBL  IS INITIAL
    AND DAUBUBL IS INITIAL
    AND DAUBOBL IS INITIAL
    AND MUSTBL  IS INITIAL
    AND STATBL  IS INITIAL
    AND VOREBL  IS INITIAL.
      IF SY-BATCH IS INITIAL.
        SET CURSOR FIELD 'NORMBL'.
      ENDIF.
      MESSAGE E482.
    ENDIF.

    IF REVENT IS INITIAL.
      IF SY-BATCH IS INITIAL.
        SET CURSOR FIELD 'REVENT'.
      ENDIF.
      MESSAGE E450.
    ENDIF.

    IF NOT REVENT IS INITIAL.
      CLEAR T048.
      SELECT SINGLE * FROM T048
        WHERE EVENT = REVENT.

        IF SY-SUBRC =  0.
          CASE T048-ANZDT.
            WHEN '0'.
              IF NOT T048-XKONT IS INITIAL.
                IF SY-BATCH IS INITIAL.
                  SET CURSOR FIELD 'REVENT'.
                ENDIF.
                MESSAGE E463 WITH REVENT.
              ENDIF.
            WHEN OTHERS.
              IF SY-BATCH IS INITIAL.
                SET CURSOR FIELD 'REVENT'.
              ENDIF.
              MESSAGE E462 WITH REVENT.
          ENDCASE.

          IF NOT T048-XSPRA IS INITIAL.
            IF SY-BATCH IS INITIAL.
              SET CURSOR FIELD 'REVENT'.
            ENDIF.
            MESSAGE E501 WITH REVENT.
          ENDIF.

        ELSE.
          IF SY-BATCH IS INITIAL.
            SET CURSOR FIELD 'REVENT'.
          ENDIF.
          MESSAGE E460 WITH REVENT.
        ENDIF.
    ENDIF.
  ENDIF.

*-----------------------------------------------------------------------
*       Start-of-Selection
*-----------------------------------------------------------------------
START-OF-SELECTION.
*EKSPORT DO PAMI#CI                                     GSI
  DATA: id_mem(20).
  DATA: my_code LIKE sy-tcode.
  my_code = 'J1PF62'.
  CONCATENATE sy-uname 'J_1P_RFKORB00' INTO id_mem.
  EXPORT my_code formname rmwskz rbktxt TO MEMORY ID id_mem.

****
  IF NOT SY-BATCH IS INITIAL.
    IF NOT SY-PDEST IS INITIAL.
      SAVE_PDEST = SY-PDEST.
    ENDIF.
  ENDIF.
  SAVE_PRDEST = PRDEST.
  CLEAR PROT_AUSGABE.
  REFRESH PROT_AUSGABE.
  PERFORM PROT_EXPORT.
  PERFORM PRI_PARAM_GET.
  PERFORM PRI_PARAM_EXPORT.
  CLEAR HFIMSG.
  REFRESH HFIMSG.

*-----------------------------------------------------------------------
*       Datenselektion
*-----------------------------------------------------------------------
  CLEAR XSATZ.
  CLEAR XSEL.

  SAVE_DATUM = SYST-DATUM.
  SAVE_UZEIT = SYST-UZEIT.

  SELECT * FROM BKPF
    WHERE BUKRS IN RBUKRS
    AND   BELNR IN RBELNR
    AND   GJAHR IN RGJAHR
    AND   BLART IN RBLART
    AND   XBLNR IN RXBLNR
    AND   BVORG IN RBVORG
    AND   BLDAT IN RBLDAT
    AND   BUDAT IN RBUDAT
    AND   CPUDT IN RCPUDT
    AND   USNAM IN RUNAME.
* dodatkowa walidacja dla faktury wewnetrznej           GSI
    PERFORM validation TABLES rbktxt rmwskz
                       USING invalid_doc.
    IF invalid_doc = 'X'.
      CONTINUE.
    ENDIF.
***
    ON CHANGE OF BKPF-BUKRS.
      CLEAR XKAUT2.
      AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'
        ID 'ACTVT' FIELD '03'
        ID 'BUKRS' FIELD BKPF-BUKRS.
        IF SY-SUBRC NE 0.
          XKAUT2 = 'X'.
*         MESSAGE ID 'F5' TYPE 'I' NUMBER '471' WITH BKPF-BUKRS.
          CLEAR HFIMSG.
          HFIMSG-MSORT = '    '. FIMSG-MSGID = 'F5'.
          HFIMSG-MSGTY = 'I'.
          HFIMSG-MSGNO = '471'.
          HFIMSG-MSGV1 = BKPF-BUKRS.
          COLLECT HFIMSG.
        ENDIF.
    CLEAR SAVE_BBUKR.
    IF NOT T048-XBUKR IS INITIAL.
      SAVE_BBUKR = BKPF-BUKRS.
      CALL FUNCTION 'CORRESPONDENCE_GET_LEADING_CC'
           EXPORTING
                I_BUKRS = BKPF-BUKRS
           IMPORTING
                E_BUKRS = SAVE_BUKRS.
    ELSE.
      SAVE_BUKRS = BKPF-BUKRS.
    ENDIF.
    ENDON.
    ON CHANGE OF BKPF-BLART.
      CLEAR XKAUTH.
      SELECT SINGLE * FROM T003
        WHERE BLART = BKPF-BLART.
        IF T003-BRGRU NE SPACE.
          AUTHORITY-CHECK OBJECT 'F_BKPF_BLA'
            ID 'ACTVT' FIELD '03'
            ID 'BRGRU' FIELD T003-BRGRU.
            IF SY-SUBRC NE 0.
              XKAUTH = 'X'.
*             MESSAGE ID 'F5' TYPE 'I' NUMBER '683' WITH BKPF-BLART.
              CLEAR HFIMSG.
              HFIMSG-MSORT = '    '. FIMSG-MSGID = 'F5'.
              HFIMSG-MSGTY = 'I'.
              HFIMSG-MSGNO = '683'.
              HFIMSG-MSGV1 = BKPF-BLART.
              COLLECT HFIMSG.
            ENDIF.
        ENDIF.
    ENDON.
    IF  XKAUTH IS INITIAL
    AND XKAUT2 IS INITIAL.
      CASE BKPF-BSTAT.
        WHEN 'D'.
          IF NOT DAUBUBL IS INITIAL.
            PERFORM MERKEN_BKORM.
            XSEL = 'X'.
          ENDIF.
        WHEN 'M'.
          IF NOT MUSTBL  IS INITIAL.
            PERFORM MERKEN_BKORM.
            XSEL = 'X'.
          ENDIF.
        WHEN 'S'.
          IF NOT STATBL  IS INITIAL.
            PERFORM MERKEN_BKORM.
            XSEL = 'X'.
          ENDIF.
        WHEN 'V'.
*         Vorerfa#te Belege
          IF NOT VOREBL IS INITIAL.
            PERFORM MERKEN_BKORM.
            XSEL = 'X'.
          ENDIF.
        WHEN 'W'.
*         Vorerfa#te Belege
        WHEN 'Z'.
*         Vorerfa#te Belege
        WHEN OTHERS.
          IF BKPF-DBBLG IS INITIAL.
            IF BKPF-STBLG IS INITIAL.
              IF NOT NORMBL  IS INITIAL.
                PERFORM MERKEN_BKORM.
                XSEL = 'X'.
              ENDIF.
            ELSE.
              IF NOT STORBL  IS INITIAL.
                IF BKPF-STBLG IN SBELNR.
                  PERFORM MERKEN_BKORM.
                  XSEL = 'X'.
                ENDIF.
              ENDIF.
            ENDIF.
          ELSE.
            IF NOT DAUBOBL IS INITIAL.
              IF BKPF-DBBLG IN DBELNR.
                IF BKPF-STBLG IS INITIAL.
                    PERFORM MERKEN_BKORM.
                    XSEL = 'X'.
                ELSE.
                  IF NOT STORBL  IS INITIAL.
                    IF BKPF-STBLG IN SBELNR.
                      PERFORM MERKEN_BKORM.
                      XSEL = 'X'.
                    ENDIF.
                  ENDIF.
                ENDIF.
              ENDIF.
            ENDIF.
          ENDIF.
      ENDCASE.
    ENDIF.

  ENDSELECT.

*-----------------------------------------------------------------------
*       End-of-Selection
*-----------------------------------------------------------------------
END-OF-SELECTION.

*-----------------------------------------------------------------------
*       Ausgabe
*-----------------------------------------------------------------------
  IF NOT XSATZ IS INITIAL.
    DESCRIBE TABLE HBKORM LINES HBKLINES.
    IF HBKLINES = '1'.
      MESSAGE I486 WITH HBKLINES REVENT.
    ELSE.
      MESSAGE I483 WITH HBKLINES REVENT.
    ENDIF.                                         "I471
    LOOP AT HBKORM.
      PERFORM EINTRAG_BKORM.
    ENDLOOP.
    COMMIT WORK.

*-#bergreifende Vorg#nge------------------------------------------------
    IF NOT T048-XBUKR IS INITIAL.
      REFRESH XBUKRS.
*     SELECT * FROM T048A APPENDING TABLE XT048A.
      SELECT * FROM T001  APPENDING CORRESPONDING FIELDS OF TABLE XBUKRS
        WHERE BUKRS IN RBUKRS.
      LOOP AT XBUKRS.
        CALL FUNCTION 'CORRESPONDENCE_GET_LEADING_CC'
             EXPORTING
                  I_BUKRS = XBUKRS-BUKRS
             IMPORTING
                  E_BUKRS = SAVE_BUKRS.
        LBUKRS-LOW    = SAVE_BUKRS.
        LBUKRS-OPTION = 'EQ'.
        LBUKRS-SIGN   = 'I'.
        COLLECT LBUKRS.
      ENDLOOP.
      UBUKRS[] = RBUKRS[].
      REFRESH RBUKRS.
      RBUKRS[] = LBUKRS[].
    ENDIF.


*-#bergreifende Vorg#nge
    IF NOT T048-XBUKR IS INITIAL.
      REFRESH XBUKRS.
      SELECT * FROM T001  APPENDING CORRESPONDING FIELDS OF TABLE XBUKRS
        WHERE BUKRS IN RBUKRS.
      LOOP AT XBUKRS.
        CALL FUNCTION 'CORRESPONDENCE_GET_LEADING_CC'
             EXPORTING
                  I_BUKRS = XBUKRS-BUKRS
             IMPORTING
                  E_BUKRS = SAVE_BUKRS.
        LBUKRS-LOW    = SAVE_BUKRS.
        LBUKRS-OPTION = 'EQ'.
        LBUKRS-SIGN   = 'I'.
        COLLECT LBUKRS.
      ENDLOOP.
      UBUKRS[] = RBUKRS[].
      REFRESH RBUKRS.
      RBUKRS[] = LBUKRS[].
    ENDIF.

    SUBMIT SAPF140 AND RETURN
      WITH EVENT   =  REVENT
      WITH BUKRS   IN RBUKRS
      WITH BELNR   IN RBELNR
      WITH GJAHR   IN RGJAHR
      WITH USNAM   =  SY-UNAME
      WITH DATUM   =  SAVE_DATUM
      WITH UZEIT   =  SAVE_UZEIT
      WITH DELDAYS =  RDELDAYS
      WITH KAUTO   =  'X'
      WITH RPDEST  =  SAVE_PDEST
      WITH TITLE   =  TITLE.
  ENDIF.
  PERFORM PROT_IMPORT.
  DESCRIBE TABLE HFIMSG LINES CNTLINES.
  IF CNTLINES GT 0.
    SAVE_EVENT = REVENT.
    SAVE_REPID = 'RFKORB00'.
    PERFORM MESSAGE_INIT.
    PERFORM MESSAGE_SET.
    PERFORM MESSAGE_PRINT.
  ENDIF.
  DESCRIBE TABLE PROT_AUSGABE LINES CN2LINES.
  IF CN2LINES GT 0.
    SAVE_PROID = 'KORB'.
    PERFORM PROT_PRINT.
  ENDIF.
  IF XSEL IS INITIAL.
    MESSAGE S485.                                  "I465.
  ELSE.
    IF XSATZ IS INITIAL.
      MESSAGE S484.                                "I466.
    ENDIF.
  ENDIF.

*=======================================================================
*       TOP-OF-PAGE
*=======================================================================
TOP-OF-PAGE.

  PERFORM BATCH-HEADING(RSBTCHH0).
  ULINE.

*=======================================================================
*       Interne Perform-Routinen
*=======================================================================

*-----------------------------------------------------------------------
*       Allgemeine Unterroutinen
*-----------------------------------------------------------------------
INCLUDE RFKORI90.

*-----------------------------------------------------------------------
*       Allgemeine Unterroutinen f¨¹r Messages und Protokoll
*-----------------------------------------------------------------------
INCLUDE RFKORI93.

*-----------------------------------------------------------------------
*       User-Exits f¨¹r Korrespondenz
*-----------------------------------------------------------------------
*NCLUDE RFKORIEX.

*-----------------------------------------------------------------------
*       FORM EINTRAG_BKORM
*-----------------------------------------------------------------------
FORM EINTRAG_BKORM.
  CLEAR BKORM.
  MOVE HBKORM-EVENT TO BKORM-EVENT.
  MOVE HBKORM-BUKRS TO BKORM-BUKRS.
  MOVE HBKORM-BELNR TO BKORM-BELNR.
  MOVE HBKORM-GJAHR TO BKORM-GJAHR.
  MOVE HBKORM-BBUKR TO BKORM-BBUKR.
  MOVE SYST-UNAME   TO BKORM-USNAM.
  MOVE SAVE_DATUM   TO BKORM-DATUM.
  MOVE SAVE_UZEIT   TO BKORM-UZEIT.
  PERFORM FLAG_KAUTO.
  INSERT BKORM.
  IF SY-SUBRC NE 0.
    CLEAR HBKORMKEY.
    CLEAR HERDATA.
    HBKORMKEY-BUKRS = HBKORM-BUKRS.
    HBKORMKEY-BELNR = HBKORM-BELNR.
    HBKORMKEY-GJAHR = HBKORM-GJAHR.
    CONDENSE HBKORMKEY.
    HERDATA-USNAM = SYST-UNAME.
    HERDATA-DATUM = SAVE_DATUM.
    HERDATA-UZEIT = SAVE_UZEIT.
    MESSAGE E527 WITH 'BKORM' HBKORM-EVENT HBKORMKEY HERDATA.
  ELSE.
    COMMIT_C = COMMIT_C + 1.
    IF COMMIT_C GE COMMIT_M2.
      COMMIT WORK.
      CLEAR COMMIT_C.
    ENDIF.
  ENDIF.
ENDFORM.

*-----------------------------------------------------------------------
*       FORM MERKEN_BKORM
*-----------------------------------------------------------------------
FORM MERKEN_BKORM.
  CLEAR HBKORM.
  MOVE REVENT     TO HBKORM-EVENT.
  MOVE SAVE_BUKRS TO HBKORM-BUKRS.
  MOVE BKPF-BELNR TO HBKORM-BELNR.
  MOVE BKPF-GJAHR TO HBKORM-GJAHR.
  IF NOT T048-XBUKR IS INITIAL.
    HBKORM-BBUKR = SAVE_BBUKR.
  ELSE.
    HBKORM-BBUKR = '    '.
  ENDIF.
  APPEND HBKORM.
* IF SY-SUBRC = 0.
    XSATZ = 'X'.
* ENDIF.
ENDFORM.

*Text symbol text£º
*200:Log
*201:Overview of generated output requests
*202:CC Correspondence                             Spool No./Fax ID Title/Fax No.                       .. Output Pages..
*203:Name is Missing in Logon Language

*205:Error list
*Selection text£º
*DAUBOBL:        Actual documents
*DAUBUBL:        Recurring entry documents
*DBELNR:        Recurring entry document no.
*MUSTBL:        Sample documents
*NORMBL:        Standard documents
*PRDEST:        Log to printer
*RBELNR:        Document number
*RBLART:        Document type
*RBLDAT:        Document date
*RBUDAT:        Posting date
*RBUKRS:        Company code
*RBVORG:        Intercompany number
*RCPUDT:        CPU date
*RDELDAYS:        Delete if finished since
*REVENT:        Correspondence
*RGJAHR:        Fiscal year
*RUNAME:        Entered by
*RXBLNR:        Reference number
*SBELNR:        Reverse document number
*STATBL:        Noted items
*STORBL:        Reverse documents
*TITLE:        Additional header
*VOREBL:        Parked documents
