*&---------------------------------------------------------------------*
*& Report  Z_CSLA_CSLT_OVERLAP
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*& Report  Z_CSLA_CSLT_OVERLAP                                         *
*& correction report for overlapping activity type master records      *
*&---------------------------------------------------------------------*

REPORT  z_csla_cslt_overlap LINE-SIZE 250 NO STANDARD PAGE HEADING.

INCLUDE <icon>.
PARAMETERS: p_kokrs LIKE cskb-kokrs MEMORY ID cac,
            p_test LIKE kreo-testlauf DEFAULT 'X'.
DATA: gt_csla LIKE csla OCCURS 0 WITH HEADER LINE.
DATA: cursorfield(20),
      gd_mindate TYPE date VALUE '19000101'.
DATA: end_of_line LIKE sy-subrc.
TYPES: BEGIN OF tgs_bug.
        INCLUDE STRUCTURE csla.
TYPES:  flag TYPE flag.
TYPES: END OF tgs_bug.
TYPES: tgt_bug TYPE tgs_bug OCCURS 0.
DATA:  gt_bug TYPE tgt_bug,
       gt_del TYPE tgt_bug,
       gs_bug TYPE tgs_bug,
       gd_kst TYPE flag,
       gd_all TYPE sy-tabix,
       gd_del TYPE sy-tabix.

*********************TOP-OF-PAGE*******************
TOP-OF-PAGE.
  WRITE: / 'Run for: Test', p_test AS CHECKBOX INPUT OFF , ',' ,
           'inconsistencies for CO area:',
            p_kokrs COLOR COL_HEADING INTENSIFIED ON.

  ULINE AT /(68).
  WRITE: / '   |', 'ActType' COLOR COL_HEADING INTENSIFIED ON,
           '|', 'Valid-from' COLOR COL_HEADING INTENSIFIED ON, '-',
              'Valid to  ' COLOR COL_HEADING INTENSIFIED ON, '|',
              'Created on' COLOR COL_HEADING INTENSIFIED ON, '|',
              'Entered by  ' COLOR COL_HEADING INTENSIFIED ON, '|' .

*********************START-OF-SELECTION*******************
START-OF-SELECTION.
  PERFORM delete_space.
* find inconsistencies for each controlling area
  PERFORM find_overlaps USING gt_bug p_kokrs.

  IF NOT gt_bug[] IS INITIAL.
    PERFORM overlapping_show USING gt_bug.
  ELSE.
    NEW-PAGE NO-TOPOFPAGE.
    WRITE: / 'no inconsistencies for CO area:',
              p_kokrs COLOR COL_HEADING INTENSIFIED ON.
  ENDIF.

*&---------------------------------------------------------------------*
*&      Form  find_overlaps
*&---------------------------------------------------------------------*
FORM find_overlaps USING pt_bug TYPE tgt_bug
                         p_kokrs LIKE csla-kokrs.

  DATA: ls_bug  TYPE tgs_bug,
        lt_csla TYPE tgt_bug,
        ls_save TYPE tgs_bug,
        lt_bug  TYPE tgt_bug.

  SELECT * FROM csla INTO TABLE lt_csla WHERE kokrs = p_kokrs
                                ORDER BY PRIMARY KEY.
  CHECK sy-subrc = 0.

* find overlaps
  READ TABLE lt_csla INTO ls_save INDEX 1.
  IF ls_save-datab > ls_save-datbi OR         " datab > datbi
     ls_save-datab IS INITIAL      OR
     ls_save-datbi IS INITIAL      OR
     ls_save-datab < gd_mindate    OR
     ls_save-datbi < gd_mindate.
    APPEND ls_save TO lt_bug.
  ENDIF.
  LOOP AT lt_csla INTO ls_bug FROM 2.
    IF ls_save-lstar = ls_bug-lstar AND
      ls_save-datbi >= ls_bug-datab.
      APPEND ls_save TO lt_bug.
      APPEND ls_bug  TO lt_bug.
    ENDIF.
    IF ls_bug-datab > ls_bug-datbi   OR        " datab > datbi
       ls_bug-datab   IS INITIAL     OR
       ls_bug-datbi   IS INITIAL     OR
       ls_bug-datab  < gd_mindate    OR
       ls_bug-datbi  < gd_mindate.

        APPEND ls_bug  TO lt_bug.
    ENDIF.
    ls_save = ls_bug.
  ENDLOOP.

  SORT lt_bug.
  DELETE ADJACENT DUPLICATES FROM lt_bug.
  CHECK NOT lt_bug[] IS INITIAL.
  APPEND LINES OF lt_bug TO pt_bug.

ENDFORM.                    " find_overlaps
*&---------------------------------------------------------------------*
*&      Form  overlapping_show
*&---------------------------------------------------------------------*
FORM overlapping_show USING pt_bug TYPE tgt_bug.

  DATA: ls_bug TYPE tgs_bug,
        ls_hlp TYPE tgs_bug,
        ls_sve TYPE tgs_bug.

  LOOP AT pt_bug INTO ls_bug.
    ls_hlp = ls_bug.
    AT NEW lstar.
      ULINE AT /(68).
      CLEAR ls_sve-lstar.
    ENDAT.
    IF ls_hlp-lstar <> ls_sve-lstar.
      FORMAT HOTSPOT.
      WRITE AT /1 icon_okay AS ICON
                  QUICKINFO 'Select an interval that you want delete'.
      FORMAT HOTSPOT OFF.

      WRITE: '|',  ls_hlp-lstar COLOR COL_NORMAL INTENSIFIED OFF,
             ' |', ls_hlp-datab, '-', ls_hlp-datbi, '|',
             ls_hlp-ersda, '|', ls_hlp-usnam, '|'.
      ls_sve-lstar = ls_hlp-lstar.
      gs_bug = ls_hlp.
      HIDE: gs_bug-kokrs, gs_bug-lstar, gs_bug-datbi, gs_bug-flag.
      gd_kst = 'K'. HIDE gd_kst.
      CONTINUE.
    ENDIF.
    ls_sve-lstar = ls_hlp-lstar.
    FORMAT HOTSPOT.
    WRITE AT /1 icon_okay AS ICON
                QUICKINFO 'Select interval that you want delete'.
    FORMAT HOTSPOT OFF.
    WRITE: '|',  ls_hlp-lstar UNDER ls_hlp-lstar, ' |',
             ls_hlp-datab UNDER ls_hlp-datab, '-',
             ls_hlp-datbi UNDER ls_hlp-datbi, '|',
             ls_hlp-ersda, '|', ls_hlp-usnam, '|'.
    gs_bug = ls_hlp.
    HIDE: gs_bug-kokrs, gs_bug-lstar, gs_bug-datbi, gs_bug-flag.
    gd_kst = 'K'. HIDE gd_kst.
  ENDLOOP.
  ULINE AT /(68).
  CLEAR gs_bug.

ENDFORM.                    " overlapping_show

************************ user command *************************
AT USER-COMMAND.
  REFRESH gt_del.
  IF sy-ucomm = 'DELETE'.
    DO.
      CLEAR gd_kst.
      READ LINE sy-index.
      end_of_line = sy-subrc.
      IF gd_kst = 'K'.
        ADD 1 TO gd_all.
      ENDIF.
      IF sy-lisel(2) = '11'.
        ADD 1 TO gd_del.
        gs_bug-mandt = sy-mandt.
        APPEND gs_bug TO gt_del.
      ENDIF.
********************
      IF gd_all > 0 AND gd_kst IS INITIAL.
        IF gd_del = gd_all AND gd_del > 1 AND gd_all > 1 .
          DELETE gt_del WHERE kokrs = gs_bug-kokrs
                        AND   lstar = gs_bug-lstar.
       WRITE: / 'you cannot delete all records for one activity type :',
                   gs_bug-kokrs COLOR 1, '/', gs_bug-lstar COLOR 2.
          CLEAR: gd_del, gd_all.

        ELSEIF gd_del = gd_all AND gd_del = 1 AND gd_all = 1 .
          sy-lsind = 0.
          REFRESH gt_csla.
          SELECT * FROM csla INTO TABLE gt_csla
                             WHERE kokrs = p_kokrs AND
                                   lstar = gs_bug-lstar.
          DESCRIBE TABLE gt_csla LINES sy-tabix.
          IF sy-tabix = 1.                        "One entry in csla
            READ TABLE gt_csla INTO gs_bug INDEX 1.
            IF gs_bug-datab > gs_bug-datbi OR
               gs_bug-datab IS INITIAL      OR
               gs_bug-datbi IS INITIAL      OR
               gs_bug-datab < gd_mindate    OR
               gs_bug-datbi < gd_mindate.

              gs_bug-datab = '19000101'. gs_bug-datbi = '99991231'.
        WRITE: / 'you cannot delete all records for one activity type:',
            gs_bug-lstar COLOR 2, 'But because Valid-from > Valid to ,'.
              WRITE: / 'Valid-from will be updated with date = ',
                       gs_bug-datab COLOR 2,
                       'and Valid-to will be updated with date = ',
                       gs_bug-datbi COLOR 2.

              UPDATE csla SET   datab = '19000101'      " datab > datbi
                                datbi = '99991231'
                          WHERE kokrs = gs_bug-kokrs
                          AND   lstar = gs_bug-lstar.
              UPDATE cslt SET   datbi = '99991231'      " datab > datbi
                          WHERE kokrs = gs_bug-kokrs
                          AND   lstar = gs_bug-lstar.
              DELETE gt_del WHERE kokrs = gs_bug-kokrs
                            AND   lstar = gs_bug-lstar.
              CLEAR: gd_del, gd_all.
            ENDIF.
          ELSEIF sy-tabix > 1.
            CLEAR: gd_del, gd_all.
          ENDIF.
        ELSE.
          CLEAR: gd_del, gd_all.
        ENDIF.
      ENDIF.
      CHECK end_of_line <> 0.
      EXIT.
    ENDDO.
*  ELSEIF sy-ucomm = 'DELETE'.
    sy-lsind = 0.
    CHECK NOT gt_del[] IS INITIAL.
    DELETE csla FROM TABLE gt_del.
    SORT gt_del.
    WRITE: / sy-dbcnt COLOR COL_POSITIVE ,
            'inconsistent records deleted'.
    LOOP AT gt_del INTO gs_bug.
      DELETE FROM cslt WHERE kokrs = gs_bug-kokrs
                       AND   lstar = gs_bug-lstar
                       AND   datbi = gs_bug-datbi.
    ENDLOOP.
    COMMIT WORK.
  ENDIF.                                        .
*&---------------------------------------------------------------------*
*&      Form  delete_space
*&---------------------------------------------------------------------*
FORM delete_space .
  DELETE FROM csla WHERE lstar = space.
  DELETE FROM cslt WHERE lstar = space.
ENDFORM.                    " delete_space

****************************AT LINE-SELECTION******************
AT LINE-SELECTION.
  GET CURSOR FIELD cursorfield.
  IF sy-pfkey = 'INLI' AND  sy-ucomm = 'PICK'
                       AND cursorfield = 'ICON_OKAY'.
    sy-lsind = 1.

    IF sy-lisel(2) = '11' AND p_test IS INITIAL.
      sy-lisel(2) = '0V'.        " ICON_OKAY
    ELSEIF sy-lisel(2) = '0V' AND p_test IS INITIAL.
      sy-lisel(2) = '11'.        " ICON_DELETE
    ENDIF.

    MODIFY CURRENT LINE .

  ENDIF.

*Selection text£º
*P_KOKRS:D       .
*P_TEST:D       .
