*&---------------------------------------------------------------------*
*&  Include           ZERO2MASTER_ANDA_00A_FUNC
*&---------------------------------------------------------------------*
FORM f_00a.
  DATA: lv_dir    TYPE string.
  lv_dir = 00a_p1.
  PERFORM download_tables_00a USING  lv_dir 00a_s1[].

*  CALL METHOD ycl_cwu_utility=>download_tables_00a
*    EXPORTING
*      iv_directory = lv_dir
*      lt_tables    = 00a_s1[].
ENDFORM.                    "f_00a

*&---------------------------------------------------------------------*
*&      Form  download_tables_00a
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->PV_DIRECTORY  text
*      -->PT_TABLES     text
*----------------------------------------------------------------------*
FORM download_tables_00a
  USING pv_directory
        pt_tables TYPE ANY TABLE.

  DATA: lt_dd02l TYPE STANDARD TABLE OF dd02l,
        ls_dd02l TYPE dd02l,
        lt_dd03l  TYPE STANDARD TABLE OF dd03l,
        ls_dd03l  TYPE dd03l,
        lv_tabline  TYPE i,
        lt_table TYPE REF TO data,
        ls_line   TYPE string,
        ls_temp   TYPE string,
        lt_line   TYPE STANDARD TABLE OF string,
        lv_value  TYPE string,
        lv_codepage TYPE  abap_encod,
        lv_sep    TYPE char2,
        lv_fname  TYPE string.

  lv_codepage = c_codepage.
  lv_sep = cl_abap_char_utilities=>horizontal_tab.

  FIELD-SYMBOLS: <lfs_table> TYPE table,
                 <lfs_line>  TYPE ANY,
                 <lfs_field> TYPE ANY.

  SELECT *
    FROM dd02l
    INTO TABLE lt_dd02l
    WHERE tabname IN pt_tables
      AND ( tabclass = 'TRANSP' OR tabclass = 'VIEW' )
      AND as4local = 'A'
      AND ( viewclass = 'D' OR viewclass = ' ' ).

  DESCRIBE TABLE lt_dd02l LINES lv_tabline.

  IF lv_tabline > c_maxtab_00a.
    MESSAGE e001(00)
      WITH 'The max number you can download once is'(a01)
        lv_tabline.
  ENDIF.

  LOOP AT lt_dd02l INTO ls_dd02l.
    CLEAR: lv_tabline, lv_fname,lt_table.
    REFRESH:  lt_line,lt_dd03l.

    CREATE DATA lt_table TYPE TABLE OF (ls_dd02l-tabname).
    ASSIGN   lt_table->* TO <lfs_table>.
    SELECT *
      FROM (ls_dd02l-tabname)
      INTO TABLE <lfs_table>
      UP TO c_maxrec_00a ROWS.
    CLEAR: ls_line.
    SELECT SINGLE ddtext
      INTO ls_line
      FROM dd02t
      WHERE tabname = ls_dd02l-tabname.
    APPEND: ls_line TO lt_line.
    DO 2 TIMES.
      APPEND INITIAL LINE TO lt_line.
    ENDDO.
    SELECT *
      FROM dd03l
      INTO TABLE lt_dd03l
      WHERE tabname = ls_dd02l-tabname.
    DESCRIBE TABLE lt_dd03l LINES lv_tabline.
    SORT lt_dd03l BY position.
*   Generate the table field name
    CLEAR: ls_line, ls_temp.
    LOOP AT lt_dd03l INTO ls_dd03l.
      IF sy-tabix = 1.
        ls_line = ls_dd03l-fieldname.
        ls_temp = ls_dd03l-keyflag.
      ELSE.
        CONCATENATE ls_line ls_dd03l-fieldname INTO ls_line
          SEPARATED BY lv_sep.
        CONCATENATE ls_temp ls_dd03l-keyflag INTO ls_temp
          SEPARATED BY lv_sep.
      ENDIF.
    ENDLOOP.
    APPEND ls_line TO lt_line.
    APPEND ls_temp TO lt_line.
*   Generate the table field type
    CLEAR: ls_line,ls_temp.
    LOOP AT lt_dd03l INTO ls_dd03l.
      IF sy-tabix = 1.
        SHIFT ls_dd03l-leng LEFT DELETING LEADING '0'.
        IF ls_dd03l-domname IS INITIAL.
          CONCATENATE ls_dd03l-domname ls_dd03l-datatype
            '(' ls_dd03l-leng ')' INTO ls_line.
        ELSE.
          CONCATENATE ls_dd03l-domname '-' ls_dd03l-datatype
            '(' ls_dd03l-leng ')' INTO ls_line.
        ENDIF.
      ELSE.
        SHIFT ls_dd03l-leng LEFT DELETING LEADING '0'.
        CLEAR: ls_temp.
        IF ls_dd03l-domname IS INITIAL.
          CONCATENATE ls_dd03l-domname  ls_dd03l-datatype
            '(' ls_dd03l-leng ')' INTO ls_temp.
        ELSE.
          CONCATENATE ls_dd03l-domname '-' ls_dd03l-datatype
            '(' ls_dd03l-leng ')' INTO ls_temp.
        ENDIF.

        CONCATENATE ls_line ls_temp INTO ls_line
          SEPARATED BY lv_sep.
      ENDIF.
    ENDLOOP.
    APPEND ls_line TO lt_line.
*   Generate the table records
    LOOP AT <lfs_table> ASSIGNING <lfs_line>.
      CLEAR: ls_line.
      DO lv_tabline TIMES.
        ASSIGN COMPONENT sy-index OF STRUCTURE <lfs_line>
          TO <lfs_field>.
        IF sy-index = 1.
          ls_line = <lfs_field>.
        ELSE.
          CLEAR: lv_value.
          lv_value = <lfs_field>.
          CONCATENATE ls_line lv_value INTO ls_line
            SEPARATED BY lv_sep.
        ENDIF.
      ENDDO.
      APPEND ls_line TO lt_line.
    ENDLOOP.

    CONCATENATE: pv_directory '\' ls_dd02l-tabname '.txt'
      INTO lv_fname.

    CALL FUNCTION 'GUI_DOWNLOAD'
      EXPORTING
        filename                        = lv_fname
        filetype                        = 'ASC'
*        append                          = '
        write_field_separator           = 'X'
        trunc_trailing_blanks           = 'X'
        codepage                        = lv_codepage
      TABLES
        data_tab                        = lt_line
      EXCEPTIONS
        file_write_error                = 1
        no_batch                        = 2
        gui_refuse_filetransfer         = 3
        invalid_type                    = 4
        no_authority                    = 5
        unknown_error                   = 6
        header_not_allowed              = 7
        separator_not_allowed           = 8
        filesize_not_allowed            = 9
        header_too_long                 = 10
        dp_error_create                 = 11
        dp_error_send                   = 12
        dp_error_write                  = 13
        unknown_dp_error                = 14
        access_denied                   = 15
        dp_out_of_memory                = 16
        disk_full                       = 17
        dp_timeout                      = 18
        file_not_found                  = 19
        dataprovider_exception          = 20
        control_flush_error             = 21
        OTHERS                          = 22
        .

    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.

  ENDLOOP.

ENDFORM.                    "download_tables_00a
