*&---------------------------------------------------------------------*
*&  Include           ZERO2MASTER_ANDA_INIT_FUNC
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  F_INIT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f_init .
  DATA: lv_fname  TYPE char10.
  DATA: lt_tool_spec  TYPE STANDARD TABLE OF zcwu_tool_spec,
        ls_tool_spec  TYPE zcwu_tool_spec.

  FIELD-SYMBOLS: <ls_value> TYPE ANY.
  blk_09a   = 'Find Userexit'(901).
  t09a_p1   = 'Transaction Code'(902).
  t00a_p1   = 'Table Name'(002).
  cm_00a1   = 'Download Destination'(004).
  blk_00a   = 'Download table to local PC'(003).
  t02a_p1   = 'Check string'(201).
  t02b_p1   = 'Telephone Number'(203).
  02c_b1    = 'Goto Regex Toy'(210).
  t04a_p1   = 'Texts be shown'(401).
  t04b_p1   = 'Texts be shown'(401).
  t04a_p2   = 'Width of QR code'(404).
  t04a_p3   = 'Height of QR code'(405).
  t04b_p2   = 'Width of QR code'(404).
  t04b_p3   = 'Height of QR code'(405).
  t04c_p1   = 'HTTP websit'(416).
  blk_07Aa  = 'Simple Smartforms'(702).
  t07A_p1   = 'Smartform Name'(701).
  t07A_RB1  = 'Smartform Preview'(703).
  t07A_RB2  = 'PDF Preview'(704).
  t04b_p4   = 'Image name'(412).
  blk_02a   = 'Check nonlatin letter'(202).
  blk_02B   = '手机号所属查询'(205).
  blk_02c   = '正则表达式演示'(208).
  blk_04aa   = 'Text of QR code'(402).
  blk_04ab   = 'Specify the size'(403).
  blk_04ba   = 'Text of QR code'(402).
  blk_04bb   = 'Specify the size'(403).
  blk_04ca   = 'Access HTTP websit'(414).
  blk_04ac   = 'Output mode'(406).
  t04a_rb0  = 'PDF Preview'(411).
  t04a_rb1  = 'Screen'(407).
  t04a_rb2  = 'Smartform'(408).
  t04a_rb3  = 'PDF file'(409).
  blk_08ba  = 'Target Object'(801).
  blk_xxx   = 'Select the function'(xxx).
  blk_yyy   = 'Major Technical'(yyy).
  cm_yyy    = 'Major Function'(y01).
  blk_08b1  = 'Select Object'(802).
  cm_08b11  = 'Report program, Include program, Dynpro program'(803).
  cm_08b12  = 'Functin module'(804).
  cm_08b13  = 'Program ID'(805).
  cm_08b14  = 'Class'(828).
  cm_08b16  = 'User Name'(826).
  blk_08b2  = 'Process Option'(806).
  cm_08b21  = 'Not Count Blank line'(807).
  cm_08b22  = 'Not count the include which not used in main program'(808).
  cm_08b23  = 'Count the data declare part as comment'(809).
  cm_08b24  = 'Keyword search and list source program'(828).
  blk_08bb  = 'Output Separate'(810).
  blk_08b3  = 'Output option'(811).
  cm_08b31  = 'Screen Output(Object List)'(812).
  cm_08b32  = 'File Output'(813).
  cm_08b33  = 'Screen Output(Keyword occurs)'(829).
  blk_08b4  = 'File setting'(814).
  cm_08b41  = 'Download Destination'(815).
  cm_08b42  = 'File Output Option'(816).
  cm_08b43  = 'File Output Option'(817).
  cm_08b44  = 'Source Code Output(Full lines)'(818).
  cm_08b45  = 'Source Code Output(Comment lines)'(819).
  cm_08b46  = 'Source Code Output(Process lines)'(820).
  gv_defpath_08b = 'C:\Source Code\Step_count.csv'(821).
  CONCATENATE sy-uname sy-datum INTO gv_tdname_04b.
  blk_08bc  = 'Process Set'(822).
  cm_08b51  = 'Process Set'(823).
  cm_08b52  = 'Process Set'(823).
  cm_08b53  = 'Process count (1~999)※ < 100 recommend'(824).
  cm_08b54
    = 'File Output Method(Unicode Check Before version 46C)'(825).

  08b4_pb1  = '-'.
  08b4_pb2  = '+'.
  08b5_pb1  = '-'.
  08b5_pb2  = '+'.

  SELECT *
    FROM zcwu_tool_spec
    INTO TABLE lt_tool_spec
    WHERE major <> '  '
      AND minor <> ' '.

  LOOP AT lt_tool_spec INTO ls_tool_spec.
    CONCATENATE   'cm_'                  "means comments
                  ls_tool_spec-major
                  ls_tool_spec-minor
          INTO lv_fname.
    ASSIGN (lv_fname) TO <ls_value>.
    IF <ls_value> IS ASSIGNED.
      <ls_value> = ls_tool_spec-des.
    ENDIF.
    UNASSIGN <ls_value>.
  ENDLOOP.

ENDFORM.                    " F_INIT
*&---------------------------------------------------------------------*
*&      Form  DO_INITIALIZATION
*&---------------------------------------------------------------------*
*       Initial setup
*----------------------------------------------------------------------*
FORM DO_INITIALIZATION .

  DATA: ls_keyword TYPE ty_s_keyword.
  fill_keyword:
    'SELECT'        SPACE,
    'FROM'          space,
    'INNER'         space,
    'JOIN'          space,
    'ON'            space,
    'LEFT'          space,
    'OUTER'         space,
    'CLIENT'        space,
    'SPECIFIED'     space,
    'INTO'          space,
    'APPENDING'     space,
    'AND'           space,
    'OR'            space,
    'IN'            space,
    'BETWEEN'       space,
    'LIKE'          space,
    'WHERE'         space,
    'ORDER'         space,
    'BY'            space,
    'GROUP'         space,
    'HAVING'        space,
    'ASCENDING'     space,
    'DESCENDING'    space,
    'SORT'          space,
    'AS'            space,
    'SINGLE'        space,
    'DISTINCT'      space,
    'SUM'           space,
    'COUNT'         space,
    'MIN'           space,
    'MAX'           space,
    'AVG'           space.

  PERFORM app_log_initial.

  gv_maxline = 99999999.

ENDFORM.                    " DO_INITIALIZATION
*&---------------------------------------------------------------------*
*&      Form  APP_LOG_INITIAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM APP_LOG_INITIAL .
*.. Local variables
  DATA: ls_log    TYPE bal_s_log.

  ls_log-object = 'YAM_AUTO_INST_EQUI'.

*.. Create application log
  CALL FUNCTION 'BAL_LOG_CREATE'
    EXPORTING
      i_s_log                 = ls_log
    IMPORTING
      e_log_handle            = gv_handle
    EXCEPTIONS
      log_header_inconsistent = 1
      OTHERS                  = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.                    " APP_LOG_INITIAL
*&---------------------------------------------------------------------*
*&      Form  ADD_MESSAGE_TO_LOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM ADD_MESSAGE_TO_LOG .
*.. Local variables
  DATA: ls_msg TYPE bal_s_msg.

  MOVE-CORRESPONDING syst TO ls_msg.
  CALL FUNCTION 'BAL_LOG_MSG_ADD'
    EXPORTING
*     I_LOG_HANDLE              =
      i_s_msg                   = ls_msg
*   IMPORTING
*     E_S_MSG_HANDLE            =
*     E_MSG_WAS_LOGGED          =
*     E_MSG_WAS_DISPLAYED       =
    EXCEPTIONS
      log_not_found             = 1
      msg_inconsistent          = 2
      log_is_full               = 3
      OTHERS                    = 4
            .
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.                    " ADD_MESSAGE_TO_LOG
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_APP_LOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM DISPLAY_APP_LOG .
*.. Local variables
  DATA: ls_prof TYPE bal_s_prof.

*.. Reset log indicator once displayed
*  CLEAR gv_log.

*.. Get a prepared profile
  CALL FUNCTION 'BAL_DSP_PROFILE_POPUP_GET'
    IMPORTING
      e_s_display_profile = ls_prof
    EXCEPTIONS
      OTHERS              = 1.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
             WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

*.. Use grid for display if wanted
  ls_prof-use_grid = 'X'.
  ls_prof-start_row = 1.
  ls_prof-end_row = 25.
  CLEAR ls_prof-pop_adjst.

*.. When you use also other ALV lists in your report,
*.. please specify a handle to distinguish between the display
*.. variants of these different lists, e.g:
  ls_prof-disvariant-handle = 'LOG'.

*.. Call display function module
  CALL FUNCTION 'BAL_DSP_LOG_DISPLAY'
    EXPORTING
      i_s_display_profile = ls_prof
    EXCEPTIONS
      OTHERS              = 1.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
             WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.                    " DISPLAY_APP_LOG
*&---------------------------------------------------------------------*
*&      Form  SAVE_APPLICATION_LOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM SAVE_APPLICATION_LOG .
*.. Local variables
  DATA: lt_handle TYPE bal_t_logh.

  APPEND gv_handle TO lt_handle.

  CALL FUNCTION 'BAL_DB_SAVE'
    EXPORTING
*     I_CLIENT               = SY-MANDT
      i_in_update_task       = 'X'
      i_t_log_handle         = lt_handle
*   IMPORTING
*     E_NEW_LOGNUMBERS       =
    EXCEPTIONS
      log_not_found          = 1
      save_not_allowed       = 2
      numbering_error        = 3
      OTHERS                 = 4
            .
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  COMMIT WORK.
ENDFORM.                    " SAVE_APPLICATION_LOG
