*&---------------------------------------------------------------------*
*&  Include           ZERO2MASTER_ANDA_04A_FUNC
*&---------------------------------------------------------------------*
FORM f_04a.
  DATA: lv_fname TYPE rs38l_fnam,
        lv_mode  TYPE char1,
        lv_tdname TYPE tdobname.
  lv_tdname = 'zcwu_bd'.
  CASE gc_x.
    WHEN 04a_rb0.
      lv_mode = 'V'.    "PDF Preview
    WHEN 04a_rb1.
      lv_mode = 'D'.    "Dynpro display
    WHEN 04a_rb2.
      lv_mode = 'S'.    "Smartform display
    WHEN 04a_rb3.
      lv_mode = 'P'.    "Download PDF to local pc
    WHEN OTHERS.
  ENDCASE.

*  CALL METHOD ycl_cwu_utility=>show_qr_04a
*    EXPORTING
*      iv_formname = 'ZCWU_QRCODE'
*      iv_tdname   = lv_tdname
*      iv_qrtext   = 04a_p1
*      iv_mode     = lv_mode
*      iv_path     = 04a_p4
*      iv_width    = 04a_p2
*      iv_height   = 04a_p3
*    IMPORTING
*      ov_fname    = lv_fname.

  PERFORM show_qr_04a USING   'ZCWU_QRCODE'
                              lv_tdname
                              04a_p1
                              lv_mode
                              04a_p4
                              04a_p2
                              04a_p3
                       CHANGING lv_fname.
ENDFORM.                    "f_04a

*&---------------------------------------------------------------------*
*&      Form  SHOW_QR_04A
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->PV_FORMNAME  text
*      -->PV_TDNAME    text
*      -->PV_QRTEXT    text
*      -->PV_MODE      text
*      -->PV_PATH      text
*      -->PV_WIDTH     text
*      -->PV_HEIGHT    text
*      <--PV_FNAME     text
*----------------------------------------------------------------------*
FORM show_qr_04a USING pv_formname
                       pv_tdname
                       pv_qrtext
                       pv_mode
                       pv_path
                       pv_width
                       pv_height
                CHANGING pv_fname.

  DATA: ls_control TYPE ssfctrlop,
          lv_fname   TYPE rs38l_fnam,
          ls_output  TYPE ssfcrescl,
          lt_otfout  TYPE tsfotf,
          lv_filename TYPE string,
          lv_img_url  TYPE w3url,
          lt_docs  TYPE TABLE OF docs,
          lt_lines TYPE TABLE OF tline.


*  CALL METHOD ycl_cwu_utility=>generate_qrcode_04B
*    EXPORTING
*      iv_tdname = pv_tdname
*      iv_qrtext = pv_qrtext
*      iv_width  = pv_width
*      iv_height = pv_height
*    IMPORTING
*      ev_url    = lv_img_url.
  PERFORM generate_qrcode_04b USING   pv_tdname
                                      pv_qrtext
                                      pv_width
                                      pv_height
                            CHANGING  lv_img_url.
  IF pv_mode = 'D'. " Dynpro display
    CALL FUNCTION 'ZCWU_FUN_04A'
      EXPORTING
        iv_img_url = lv_img_url.
    PERFORM dypro_display_04a USING lv_img_url.
  ENDIF.

  CHECK pv_mode = 'P' OR pv_mode = 'S' OR pv_mode = 'V'.
  "gettingt the name FM of the smartform
  CALL FUNCTION 'SSF_FUNCTION_MODULE_NAME'
    EXPORTING
      formname           = pv_formname
    IMPORTING
      fm_name            = lv_fname
    EXCEPTIONS
      no_form            = 1
      no_function_module = 2
      OTHERS             = 3.
  IF sy-subrc = 0.
    pv_fname = lv_fname.
  ENDIF.
  IF pv_mode = 'P' OR pv_mode = 'V'.
    ls_control-getotf = 'X'.
    ls_control-no_dialog = 'X'.
  ELSEIF pv_mode = 'S'.
    ls_control-no_dialog = 'X'.
    ls_control-preview = 'X'.
  ENDIF.

  "Calling the FM of the smartform for display
  CALL FUNCTION lv_fname
    EXPORTING
*    ARCHIVE_INDEX              =
*    ARCHIVE_INDEX_TAB          =
*    ARCHIVE_PARAMETERS         =
    control_parameters         =  ls_control
*    MAIL_APPL_OBJ              =
*    MAIL_RECIPIENT             =
*    MAIL_SENDER                =
*    OUTPUT_OPTIONS             =
*    USER_SETTINGS              = 'X'
      w_qr_name                 = pv_tdname "'QRCODE10'
      w_qr_text                 = pv_qrtext
    IMPORTING
*    DOCUMENT_OUTPUT_INFO       =
    job_output_info            =  ls_output
*    JOB_OUTPUT_OPTIONS         =
  EXCEPTIONS
    formatting_error           = 1
    internal_error             = 2
    send_error                 = 3
    user_canceled              = 4
    OTHERS                     = 5            .

  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

  IF pv_mode = 'P' OR pv_mode = 'V'.
    lt_otfout[] = ls_output-otfdata[].
    CHECK lt_otfout[] IS NOT INITIAL.
    CALL FUNCTION 'CONVERT_OTF_2_PDF'
*     EXPORTING
*       USE_OTF_MC_CMD               = 'X'
*       ARCHIVE_INDEX                =
*     IMPORTING
*       BIN_FILESIZE                 =
      TABLES
        otf                          =  lt_otfout[]
        doctab_archive               =  lt_docs[]
        lines                        =  lt_lines[]
      EXCEPTIONS
        err_conv_not_possible        = 1
        err_otf_mc_noendmarker       = 2
        OTHERS                       = 3
              .
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.

    IF pv_mode = 'P'.
      CONCATENATE pv_path '\QR_Code_' sy-datum '.pdf'
        INTO lv_filename.

      CALL METHOD cl_gui_frontend_services=>gui_download
        EXPORTING
*          bin_filesize              =
          filename                  = lv_filename
          filetype                  = 'BIN'
        CHANGING
          data_tab                  = lt_lines[]
        EXCEPTIONS
          file_write_error          = 1
          no_batch                  = 2
          gui_refuse_filetransfer   = 3
          invalid_type              = 4
          no_authority              = 5
          unknown_error             = 6
          header_not_allowed        = 7
          separator_not_allowed     = 8
          filesize_not_allowed      = 9
          header_too_long           = 10
          dp_error_create           = 11
          dp_error_send             = 12
          dp_error_write            = 13
          unknown_dp_error          = 14
          access_denied             = 15
          dp_out_of_memory          = 16
          disk_full                 = 17
          dp_timeout                = 18
          file_not_found            = 19
          dataprovider_exception    = 20
          control_flush_error       = 21
          not_supported_by_gui      = 22
          error_no_gui              = 23
          OTHERS                    = 24
              .
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                   WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.
    ELSEIF pv_mode = 'V'.
      CALL FUNCTION 'SSFCOMP_PDF_PREVIEW'
        EXPORTING
          i_otf                    = ls_output-otfdata[]
        EXCEPTIONS
          convert_otf_to_pdf_error = 1
          cntl_error               = 2
          OTHERS                   = 3.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.
    ENDIF.

  ENDIF.
ENDFORM.                    "SHOW_QR_04A

*&---------------------------------------------------------------------*
*&      Form  DYPRO_DISPLAY_04A
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_PV_IMG_URL  text
*----------------------------------------------------------------------*
FORM dypro_display_04a  USING    iv_img_url TYPE  w3url.
  gv_img_url = iv_img_url.
  CALL SCREEN 9000.
ENDFORM.                    " DYPRO_DISPLAY_04A

*&---------------------------------------------------------------------*
*&      Module  STATUS_9000  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_9000 OUTPUT.
  SET PF-STATUS 'SLIN'.
  SET TITLEBAR 'TIT_9000'.
  "Creating the object for the container

  CREATE OBJECT picture_container
    EXPORTING
      container_name = 'PICTURECONTROL'.
  CREATE OBJECT picture_control
    EXPORTING
      parent = picture_container.

  IF sy-subrc IS INITIAL.
    CALL METHOD picture_control->load_picture_from_url
      EXPORTING
        url = gv_img_url.
  ENDIF.
ENDMODULE.                 " STATUS_9000  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_9000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_9000 INPUT.

  IF sy-ucomm IS NOT INITIAL.
    LEAVE TO SCREEN 0.
  ENDIF.

ENDMODULE.                 " USER_COMMAND_9000  INPUT
