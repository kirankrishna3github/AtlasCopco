*&---------------------------------------------------------------------*
*& Report  ZEX_16
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  zex_16.

*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&       Class LCL_VEHICLE
*&---------------------------------------------------------------------*
*        Definition of the class lcl_vehicle.
*----------------------------------------------------------------------*
CLASS lcl_vehicle DEFINITION ABSTRACT.

  PUBLIC SECTION.

    METHODS constructor IMPORTING im_maxspeed TYPE i
                                  im_currentspeed TYPE i.

    METHODS: getcurrentspeed EXPORTING ex_currentspeed TYPE i,
             getmaxspeed EXPORTING ex_maxspeed TYPE i,
             displayattributes,
             accelerate ABSTRACT.
    CLASS-METHODS displaynbofvehicles.

  PROTECTED SECTION.
    METHODS: setcurrentspeed IMPORTING im_currentspeed TYPE i,
             setmaxspeed IMPORTING im_maxspeed TYPE i.

  PRIVATE SECTION.
    DATA: maxspeed TYPE i,
          currentspeed TYPE i.
    CLASS-DATA: nbofvehicles TYPE i.


ENDCLASS.               "LCL_VEHICLE

*&---------------------------------------------------------------------*
*&       Class (Implementation)  lcl_vehicle
*&---------------------------------------------------------------------*
*        Implementation of the class lcl_vehicle.
*----------------------------------------------------------------------*
CLASS lcl_vehicle IMPLEMENTATION.

  METHOD constructor.
    setmaxspeed( im_maxspeed ).
    setcurrentspeed( im_currentspeed ).
    nbofvehicles = nbofvehicles + 1.
  ENDMETHOD.                    "constructor

  METHOD getmaxspeed.
    ex_maxspeed = maxspeed.
  ENDMETHOD.                    "getMaxSpeed

  METHOD setmaxspeed.
    maxspeed = im_maxspeed.
  ENDMETHOD.                    "setMaxSpeed

  METHOD getcurrentspeed.
    ex_currentspeed = currentspeed.
  ENDMETHOD.                    "getCurrentSpeed

  METHOD setcurrentspeed.
    currentspeed = im_currentspeed.
  ENDMETHOD.                    "setCurrentSpeed

  METHOD displayattributes.
    WRITE: / 'The maximum speed is ', 30 maxspeed,
           / 'The current speed is ', 30 currentspeed.
  ENDMETHOD.                    "displayAttributes

  METHOD displaynbofvehicles.
    WRITE: / 'The number of vehicles is ', 30 nbofvehicles.
  ENDMETHOD.                    "displayNbOfVehicles

ENDCLASS.               "lcl_vehicle

*----------------------------------------------------------------------*
*       CLASS lcl_car DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_car DEFINITION INHERITING FROM lcl_vehicle.

  PUBLIC SECTION.
    METHODS: constructor IMPORTING im_maxspeed TYPE i
                                   im_currentspeed TYPE i
                                   im_cartype TYPE c.
    METHODS: getcartype EXPORTING ex_cartype TYPE c,
             displayattributes REDEFINITION,
             accelerate REDEFINITION.

  PRIVATE SECTION.
    DATA: cartype(10) TYPE c.

    METHODS: setcartype IMPORTING im_cartype TYPE c.

ENDCLASS.                    "lcl_car DEFINITION


*----------------------------------------------------------------------*
*       CLASS lcl_car IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_car IMPLEMENTATION.

  METHOD constructor.
    super->constructor( im_maxspeed = im_maxspeed
                        im_currentspeed = im_currentspeed ).
    setcartype( im_cartype ).
  ENDMETHOD.                    "constructor

  METHOD getcartype.
    ex_cartype = cartype.
  ENDMETHOD.                    "getCarType

  METHOD setcartype.
    cartype = im_cartype.
  ENDMETHOD.                    "setCarType

  METHOD displayattributes.
    super->displayattributes( ).
    WRITE: / 'The type of the car is ', 30 cartype.
  ENDMETHOD.                    "displayAttributes

  METHOD accelerate.

    DATA: lv_currentspeed TYPE i,
          lv_maxspeed TYPE i.

    getcurrentspeed( IMPORTING ex_currentspeed = lv_currentspeed ).
    getmaxspeed( IMPORTING ex_maxspeed = lv_maxspeed ).
    IF lv_currentspeed > 0.
      lv_currentspeed = lv_currentspeed + 5.
    ELSE.
      lv_currentspeed = 1.
    ENDIF.

    IF lv_currentspeed > lv_maxspeed.
      "maximum speed is reached, do not increase speed anymore
    ELSE.
      setcurrentspeed( lv_currentspeed ).
    ENDIF.

  ENDMETHOD.                    "accelerate
ENDCLASS.                    "lcl_car IMPLEMENTATION

*&---------------------------------------------------------------------*
*&       Class LCL_TRUCK
*&---------------------------------------------------------------------*
*        Text
*----------------------------------------------------------------------*
CLASS lcl_truck DEFINITION INHERITING FROM lcl_vehicle.

  PUBLIC SECTION.
    METHODS constructor IMPORTING im_maxspeed TYPE i
                                  im_currentspeed TYPE i
                                  im_maxcargo TYPE i.

    METHODS: getmaxcargo EXPORTING ex_maxcargo TYPE i,
             displayattributes REDEFINITION,
             accelerate REDEFINITION.

  PRIVATE SECTION.
    DATA: maxcargo TYPE i.

    METHODS setmaxcargo IMPORTING im_maxcargo TYPE i.

ENDCLASS.               "LCL_TRUCK

*----------------------------------------------------------------------*
*       CLASS lcl_truck IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_truck IMPLEMENTATION.

  METHOD constructor.
    super->constructor( im_maxspeed = im_maxspeed
                        im_currentspeed = im_currentspeed ).
    maxcargo = im_maxcargo.
  ENDMETHOD.                    "constructor

  METHOD getmaxcargo.
    ex_maxcargo = maxcargo.
  ENDMETHOD.                    "getMaxCargo

  METHOD setmaxcargo.
    maxcargo = im_maxcargo.
  ENDMETHOD.                    "setMaxCargo

  METHOD displayattributes.
    super->displayattributes( ).
    WRITE: / 'The maximum cargo is ', 30 maxcargo.
  ENDMETHOD.                    "displayAttributes

  METHOD accelerate.
    DATA: lv_currentspeed TYPE i,
          lv_maxspeed TYPE i.

    getcurrentspeed( IMPORTING ex_currentspeed = lv_currentspeed ).
    getmaxspeed( IMPORTING ex_maxspeed = lv_maxspeed ).
    IF lv_currentspeed > 0.
      lv_currentspeed = lv_currentspeed + 2.
    ELSE.
      lv_currentspeed = 1.
    ENDIF.

    IF lv_currentspeed > lv_maxspeed.
      "maximum speed is reached, do not increase speed anymore
    ELSE.
      setcurrentspeed( lv_currentspeed ).
    ENDIF.
  ENDMETHOD.                    "accelerate


ENDCLASS.                    "lcl_truck IMPLEMENTATION



****************
* DECLARATIONS *
****************

DATA: lv_car_1 TYPE REF TO lcl_car.
DATA: lv_truck_1 TYPE REF TO lcl_truck.

**********************
* START-OF-SELECTION *
**********************
START-OF-SELECTION.

* car object instance
  CREATE OBJECT lv_car_1
    EXPORTING
      im_maxspeed     = 200
      im_currentspeed = 0
      im_cartype      = 'BMW1'.

  lv_car_1->accelerate( ).

  WRITE /.
  lv_car_1->displayattributes( ).

* truck object instance
  CREATE OBJECT lv_truck_1
    EXPORTING
      im_maxspeed     = 180
      im_currentspeed = 1
      im_maxcargo     = 1000.

  lv_truck_1->accelerate( ).

  WRITE /.
  lv_truck_1->displayattributes( ).
