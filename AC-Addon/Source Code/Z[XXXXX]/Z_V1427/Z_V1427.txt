*&---------------------------------------------------------------------*
*& Report  Z_V1427
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_V1427.
DATA: da_inconsistent,
      da_userexit,
      da_fixed,
      da_problem.

DATA: da_xvbap LIKE vbap OCCURS 0,
      da_xvbep LIKE vbepvb OCCURS 0,
      da_xvbup LIKE vbup.

FIELD-SYMBOLS: <fs_vbep> LIKE vbepvb.

SELECTION-SCREEN BEGIN OF BLOCK transactions WITH FRAME TITLE ztitel.
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (20) zdoc FOR FIELD vbeln.
PARAMETERS: vbeln LIKE vbak-vbeln OBLIGATORY.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (20) zrcase FOR FIELD repair.
PARAMETERS: repair AS CHECKBOX.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (10) zleer.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN PUSHBUTTON 1(60) zrepair USER-COMMAND rep.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK transactions.

INITIALIZATION.
  MOVE 'Repair V1 427'            TO ztitel.
  MOVE 'Repair inconsistency now' TO zrepair.
  MOVE 'Document number'          TO zdoc.
  MOVE ' '                        TO zleer.
  MOVE 'Repair in any case'       TO zrcase.

  IF sy-uname NE 'AIR14540'.
    message a001(00) with 'This is not the right user'.
  ENDIF.

  AUTHORITY-CHECK OBJECT 'S_ADMI_FCD'
                   ID 'S_ADMI_FCD' FIELD 'RSET'.
  IF sy-subrc NE 0.
    MESSAGE i001(00) WITH 'Administrator privileges missing'.
*    STOP.
  ENDIF.

AT SELECTION-SCREEN.
  CASE sy-ucomm.
    WHEN 'ONLI'.
      IF vbeln CO '012345678'.
        UNPACK vbeln TO vbeln.
      ENDIF.

      SELECT * INTO TABLE da_xvbap FROM vbap WHERE vbeln = vbeln.
      SELECT * INTO TABLE da_xvbep FROM vbep WHERE vbeln = vbeln.
      LOOP AT da_xvbep ASSIGNING <fs_vbep>.
      READ TABLE da_xvbap WITH KEY posnr = <fs_vbep>-posnr TRANSPORTING
                                                          NO FIELDS
                                                          BINARY SEARCH.
        IF sy-subrc NE 0.
          READ TABLE da_xvbap WITH KEY posnr = <fs_vbep>-posnr
                                                           TRANSPORTING
                                                            NO FIELDS.
          IF sy-subrc NE 0.
            da_inconsistent = 'X'.
            <fs_vbep>-updkz = 'D'.
          ENDIF.
        ENDIF.
      ENDLOOP.
      IF da_inconsistent = 'X'.
        MESSAGE i001(00) WITH 'Document is inconsistent (V1 427)'.
      ELSE.
        MESSAGE i001(00) WITH 'No inconsistency found'.
      ENDIF.
    WHEN 'REP'.
      IF vbeln CO '012345678'.
        UNPACK vbeln TO vbeln.
      ENDIF.
      CALL FUNCTION 'SD_SALES_DOCUMENT_ENQUEUE'
        EXPORTING
          vbeln          = vbeln
        EXCEPTIONS
          foreign_lock   = 1
          system_failure = 2
          no_change      = 3
          OTHERS         = 4.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.

      SELECT * INTO TABLE da_xvbap FROM vbap WHERE vbeln = vbeln.
      SELECT * INTO TABLE da_xvbep FROM vbep WHERE vbeln = vbeln.
      LOOP AT da_xvbep ASSIGNING <fs_vbep>.
      READ TABLE da_xvbap WITH KEY posnr = <fs_vbep>-posnr TRANSPORTING
                                                          NO FIELDS
                                                          BINARY SEARCH.
        IF sy-subrc NE 0.
          READ TABLE da_xvbap WITH KEY posnr = <fs_vbep>-posnr
                                                           TRANSPORTING
                                                            NO FIELDS.
          IF sy-subrc NE 0.
            da_inconsistent = 'X'.
            <fs_vbep>-updkz = 'D'.
          ENDIF.
        ENDIF.
      ENDLOOP.
      IF da_inconsistent = 'X'.
        PERFORM codescanner.
        PERFORM repair_vbep_vbap.
      ELSE.
        MESSAGE i001(00) WITH 'No inconsistency found'.
      ENDIF.
  ENDCASE.
*&---------------------------------------------------------------------*
*&      Form  CODESCANNER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM codescanner .
  DATA: pattern1(20) TYPE c.
  DATA: pattern2(20) TYPE c.
  DATA: pattern3(20) TYPE c.

  DATA: it_trdir LIKE trdir OCCURS 0 WITH HEADER LINE.
  DATA: repid TYPE syrepid.

  DATA: it_sourcecode TYPE text300 OCCURS 0 WITH HEADER LINE.
  DATA: it_ausgabe TYPE text300 OCCURS 0 WITH HEADER LINE.
  DATA: ls_ausgabe TYPE text300.
  DATA: it_result TYPE text300 OCCURS 0 WITH HEADER LINE.
  DATA: auswertung.
  FIELD-SYMBOLS: <fs_sourcecode> TYPE text300.
  FIELD-SYMBOLS: <fs_ausgabe> TYPE text300.

  pattern1 = '*UPDKZ*'.

  SELECT * INTO TABLE it_trdir FROM trdir WHERE name LIKE 'MV45AFZ%'.

  LOOP AT it_trdir.
    REFRESH it_sourcecode.
    REFRESH it_ausgabe.
    MOVE it_trdir-name TO repid.
    READ REPORT repid INTO it_sourcecode.
    IF sy-subrc = 0.
      LOOP AT it_sourcecode ASSIGNING <fs_sourcecode>.
        IF <FS_SOURCECODE>(1) = '*'.
          CONTINUE.
        ENDIF.
        IF <fs_sourcecode> CS pattern1 OR
           <fs_sourcecode> CP pattern1.
          APPEND <fs_sourcecode> TO it_ausgabe.
        ENDIF.
      ENDLOOP.
      IF NOT it_ausgabe[] IS INITIAL.
        CLEAR ls_ausgabe.
        MOVE repid TO ls_ausgabe.
        CONCATENATE 'REPORT:' ls_ausgabe INTO ls_ausgabe.
        APPEND ls_ausgabe TO it_result.
        APPEND LINES OF it_ausgabe TO it_result.
      ENDIF.
    ENDIF.
  ENDLOOP.
  LOOP AT it_result ASSIGNING <fs_ausgabe>.
    IF <fs_ausgabe> CS 'REPORT:'.
      FORMAT COLOR COL_HEADING ON.
      WRITE: / <fs_ausgabe> INTENSIFIED ON.
      FORMAT COLOR COL_HEADING OFF.
    ELSE.
      WRITE: / <fs_ausgabe>.
    ENDIF.
  ENDLOOP.
  IF NOT it_result[] IS INITIAL.
    da_userexit = 'X'.
    LEAVE TO LIST-PROCESSING.
  ENDIF.

ENDFORM.                    " CODESCANNER
*&---------------------------------------------------------------------*
*&      Form  REPAIR_VBEP_VBAP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM repair_vbep_vbap .

  CHECK da_userexit = space OR
        repair = 'X'.
  LOOP AT da_xvbep ASSIGNING <fs_vbep> WHERE updkz = 'D'.
* Do a double check again
    READ TABLE da_xvbap WITH KEY posnr = <fs_vbep>-posnr
                                                           TRANSPORTING
                                                            NO FIELDS.
    IF sy-subrc NE 0 and
       <fs_vbep>-banfn is initial and
       <fs_vbep>-bnfpo is initial and
       <fs_vbep>-aufnr is initial and
       <fs_vbep>-plnum is initial.
      DELETE vbep FROM <fs_vbep>.
      DELETE from vbup WHERE vbeln = <fs_vbep>-vbeln AND
                             posnr = <fs_vbep>-posnr.
    ELSE.
      da_problem = 'X'.
      EXIT.
    ENDIF.
  ENDLOOP.

  IF da_problem = 'X'.
    ROLLBACK WORK.
    MESSAGE i001(00) WITH 'Problems occured: Contact SAP'.
  ENDIF.
  COMMIT WORK.
  IF sy-subrc = 0 AND da_problem EQ space.
    WRITE: / 'Document repaired, following items must be reprocessed:'.
    LOOP AT da_xvbep ASSIGNING <fs_vbep> WHERE updkz = 'D'.
      AT NEW posnr.
        WRITE: / <fs_vbep>-posnr.
      ENDAT.
    ENDLOOP.
    LEAVE TO LIST-PROCESSING.
  ENDIF.

  CALL FUNCTION 'DEQUEUE_EVVBAKE'
    EXPORTING
      vbeln = vbeln.

ENDFORM.                    " REPAIR_VBEP_VBAP
