*&---------------------------------------------------------------------*
*& Report  Z_FIND_JOBS_WITH_EXTPROG
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_FIND_JOBS_WITH_EXTPROG.

tables: tbtco, tbtcp.

data: begin of jobinfo,
        jobname    like tbtco-jobname,
        jobcount   like tbtco-jobcount,
        sdluname   like tbtco-sdluname,
        status     like tbtco-status,
        authcknam  like tbtcp-authcknam,
        xpgprog    like tbtcp-xpgprog,
      end of jobinfo.

data: jobtab like jobinfo occurs 0 with header line.

data: nr type i.
data: status(12).

data: headline.

**************************************
DATA: AUTH_FIELD1 LIKE TOBJ-FIEL1,
        AUTH_FIELD2 LIKE TOBJ-FIEL1,
        AUTH_FIELD3 LIKE TOBJ-FIEL1,
        AUTH_VALUE1 LIKE XU180-VALUE,
        AUTH_VALUE2 LIKE XU180-VALUE,
        AUTH_VALUE3 LIKE XU180-VALUE,
        AUTH_USER   LIKE USR04-BNAME,
        AUTH_OBJECT LIKE USR12-OBJCT.
**************************************


select * from tbtcp.
    if ( tbtcp-xpgprog is initial or tbtcp-xpgprog co ' ' ).
       continue.
    endif.

    select single * from tbtco where jobname  = tbtcp-jobname
                                 and jobcount = tbtcp-jobcount.

    if sy-subrc ne 0.
       continue.
    endif.

    if tbtcp-authcknam ne tbtco-sdluname.
       move-corresponding tbtco to jobtab.
       jobtab-authcknam = tbtcp-authcknam.
       jobtab-xpgprog = tbtcp-xpgprog.

       append jobtab.
    endif.


endselect.

describe table jobtab lines nr.

if nr = 0.
   write: 'No jobs found according to selection.'.
   exit.
endif.


  AUTH_FIELD1 = 'ACTVT'.
  AUTH_VALUE1 = '01'.
  CLEAR AUTH_FIELD2.
  CLEAR AUTH_VALUE2.
  CLEAR AUTH_FIELD3.
  CLEAR AUTH_VALUE3.
  AUTH_OBJECT = 'S_RZL_ADM'.


* now check the authority of the step user
loop at jobtab.

*   AUTHORITY-CHECK OBJECT 'S_RZL_ADM'
*    FOR USER jobtab-authcknam
*      ID 'ACTVT' FIELD '01'.

   AUTH_USER   = jobtab-authcknam.

    CALL FUNCTION 'AUTHORITY_CHECK'
       EXPORTING FIELD1  = AUTH_FIELD1
                 FIELD2  = AUTH_FIELD2
                 FIELD3  = AUTH_FIELD3
                 OBJECT  = AUTH_OBJECT
                 USER    = AUTH_USER
                 VALUE1  = AUTH_VALUE1
                 VALUE2  = AUTH_VALUE2
                 VALUE3  = AUTH_VALUE3
       EXCEPTIONS USER_IS_AUTHORIZED  =  1
                  USER_NOT_AUTHORIZED =  2
                  USER_DONT_EXIST     =  3
                  OTHERS              = 99.

   if sy-subrc = 1.
      continue.
   endif.

   if headline is initial.
      write: / 'Please check step user of following jobs:'.
      skip.
      headline = 'X'.
   endif.

   clear status.
   case jobtab-status.
      when 'P'.
         status = 'scheduled'.

      when 'S'.
         status = 'released'.

      when 'Y'.
         status = 'ready'.

      when 'R'.
         status = 'running'.

      when 'F'.
         status = 'finished'.

      when 'A'.
          status = 'aborted'.

      when others.
          status = jobtab-status.
    endcase.

   write: / 'Jobname =', jobtab-jobname.
   write: / 'Jobcount =', jobtab-jobcount.
   write: / 'Status =', status.
   write: / 'Job creator =', jobtab-sdluname.
   write: / 'Step user =', jobtab-authcknam.
   write: / 'external program =', jobtab-xpgprog.

   skip.
endloop.

if headline is initial.
   write: / 'No critical jobs found.'.
endif.
