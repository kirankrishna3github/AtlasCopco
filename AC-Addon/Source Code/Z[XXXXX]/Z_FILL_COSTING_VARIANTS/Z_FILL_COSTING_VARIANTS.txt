*&---------------------------------------------------------------------*
*& Report  Z_FILL_COSTING_VARIANTS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_FILL_COSTING_VARIANTS.
* How to create the list's column-headers:
* ========================================
* Run the report in TEST mode; when the result-list is displayed, open
* menu 'System->List->List header' and define the column-headers as
* follows:
* pos...: 1    6    11     23 25            40 42            57 59
* line 1:                   | Before Correct.| After Correct. |
* line 2:      Ord.         |                |                |
* line 3: Plnt Type OrderNr.| Plan Actl Sheet| Plan Actl Sheet| Remarks

* How to use the report:
* ======================
*
* 1. Define selection conditions:
* ===============================
* In the selection screen enter an order type or a range of order types
* or instead of order types a range of order numbers.
*
* 2. Run the report in TEST mode:
* ===============================
* If orders exist without CostVarPlan or CostVarActual, a list will be
* displayed which shows in the 'Before Correct.' columns the orders
* actual values for planned/actual costing variants and for the costing
* sheet (surely most recordlines will not have any related values).
* In the 'After Correct.' columns the actual customizing settings for
* CostVarPlan/CostVarActl/CostingSheet are to be seen referring to the
* orders ordertype. The 'Remarks' column shows some infos to each
* recordline.
* If in point of fact some orders exist with a CostVarPlan or a
* CostVarActl and/or a CostingSheet assigned to and you do not want to
* replace this value(s) by the report, you can prevent the replacement
* by keeping the 'REPLACE'-flag blank on the report's selection screen.
* In this case, only the blank fields will be filled with the actual
* customizing settings.
* (If the order's CostingVariant or the CostingSheet was deleted in the
* meantime, the order will be updated with the actual IMG setttings).
*
* 3. Run the report in CORRECTION mode:
* =====================================
* When you run the report in 'Correction' mode (TEST flag is not set),
* all orders will be corrected as described before; that means, the
* orders fields CostVarPlan, CostVarActl and CostingSheet (if assigned)
* will be filled and the appropriated database tables will be updated.
*
* 4. Determine costs:
* ===================
* The report does not automatically determine the costs; this is to be
* done manually. To do so, please open the order, press the
* 'Determine Costs' button and save the order. If the order's status
* is TECO or CSLD, first set the order to status REL by cancelling
* the technical and/or business completion.
* ---------------------------------------------------------------------*
TABLES: CAUFV, AFKO, AUFK, T399X, TCK03, TCK05, T683.
DATA: I_CAUFV  LIKE STANDARD TABLE OF CAUFV,  "View auf Auftragsk#pfe
      WA_CAUFV LIKE CAUFV.
DATA: I_AFKO LIKE STANDARD TABLE OF AFKO,           "Auftragskopdaten
       WA_AFKO LIKE AFKO.
DATA: I_AUFK LIKE STANDARD TABLE OF AUFK,           "Auftragsstammdaten
       WA_AUFK LIKE AUFK.
DATA: I_T399X LIKE STANDARD TABLE OF T399X WITH HEADER LINE. "ParamAuft
DATA: I_TCK03 LIKE STANDARD TABLE OF TCK03 WITH HEADER LINE. "KalkulVar
DATA: I_TCK05 LIKE STANDARD TABLE OF TCK05 WITH HEADER LINE. "BewertVar
DATA: I_T683  LIKE STANDARD TABLE OF T683  WITH HEADER LINE. "KalkSchm
DATA: L_OLD_CAUFV_KLVARP LIKE WA_CAUFV-KLVARP,
      L_OLD_CAUFV_KLVARI LIKE WA_CAUFV-KLVARI,
      L_OLD_CAUFV_KALSM  LIKE WA_CAUFV-KALSM.
DATA: ZAEHLER TYPE I.
PARAMETERS: TEST    TYPE C DEFAULT 'X',
            REPLACE TYPE C DEFAULT 'X'.
SELECT-OPTIONS: AUART FOR CAUFV-AUART,
                AUFNR FOR CAUFV-AUFNR.

* z#hlen, wieviele Auftr#ge ohne Kalk.Variante existieren
  SELECT COUNT(*) INTO ZAEHLER FROM CAUFV WHERE AUART IN AUART
                                          AND   AUFNR IN AUFNR
                                          AND  ( KLVARP = SPACE
                                          OR    KLVARI = SPACE )
                                          AND   AUTYP = '30'.
* Korrektur-Report verlassen, wenn zaehler = 0
  IF ZAEHLER = 0.
     WRITE: / 'No records found.'.
     EXIT.
  ENDIF.

* aktuelle Kalkulationsvarianten (Plan/Ist) ermitteln
  SELECT * INTO TABLE I_T399X FROM T399X WHERE AUART IN AUART.

* KalkulationsVarianten und zugeordnete BewertungsVarianten ermitteln
  SELECT * INTO TABLE I_TCK03 FROM TCK03.

* lesen, welche KalkSchemata im Customizing definiert sind
  SELECT * INTO TABLE I_T683 FROM T683.

* lesen, welche KalkSchemata den BewertVarianten zugeordnet sind
  SELECT * INTO TABLE I_TCK05 FROM TCK05.

* interne Tabelle mit den betroffenen Auftr#gen f¨¹llen
  SELECT * INTO TABLE I_CAUFV FROM CAUFV WHERE AUART IN AUART
                                         AND   AUFNR IN AUFNR
                                         AND  ( KLVARP = SPACE
                                         OR    KLVARI = SPACE )
                                         AND   AUTYP = '30'.
* interne Tabelle aufsteigend sortieren
  SORT I_CAUFV ASCENDING.

* Anzahl der betroffenen Auftr#ge und Modus im Report ausgeben
  WRITE: / 'Records found:', ZAEHLER,
         /.
  IF TEST IS INITIAL.
     WRITE: / 'Correction-Run'.
     IF REPLACE IS INITIAL.
        WRITE: / 'Mode: Hold possibly existing ordervalues.'.
     ELSE.
        WRITE: / 'Mode: Replace possibly existing ordervalues.'.
     ENDIF.
  ELSE.
     WRITE: / 'Test-Run'.
     IF REPLACE IS INITIAL.
        WRITE: / 'Mode: Hold possibly existing ordervalues.'.
     ELSE.
        WRITE: / 'Mode: Replace possibly existing ordervalues.'.
     ENDIF.
  ENDIF.
  ULINE.

* die aktuellen Kalkulationsvarianten (Plan/Ist) und das aktuelle
* Kalkulationsschema (sofern zugeordnet) den Auftr#gen zuordnen
  LOOP AT I_CAUFV INTO WA_CAUFV.
*      aktuelle KalkVarPlan / KalkVarIst im IMG lesen
       READ TABLE I_T399X WITH KEY AUART = WA_CAUFV-AUART
                                   WERKS = WA_CAUFV-WERKS.
       IF SY-SUBRC IS INITIAL.
          CLEAR: L_OLD_CAUFV_KLVARP,
                 L_OLD_CAUFV_KLVARI,
                 L_OLD_CAUFV_KALSM.
*         evtl. im Auftrag vorhand. KalkVar und/oder KalkSchema merken
          L_OLD_CAUFV_KLVARP = WA_CAUFV-KLVARP.
          L_OLD_CAUFV_KLVARI = WA_CAUFV-KLVARI.
          L_OLD_CAUFV_KALSM = WA_CAUFV-KALSM.
          IF WA_CAUFV-KLVARP = SPACE.
*            aktuelle KalkVarPlan aus dem IMG ¨¹bergeben
             WA_CAUFV-KLVARP = I_T399X-KLVARP.
          ELSE.
             IF REPLACE = 'X'.
*               vorh. KalkVarPlan mit dem IMG-Wert ¨¹berschreiben
                WA_CAUFV-KLVARP = I_T399X-KLVARP.
             ELSE.
*               pr¨¹fen, ob die im Auftrag bereits vorh. KalkVarPlan
*               noch existiert (steht in der Tabelle TCK03)
                READ TABLE I_TCK03 WITH KEY KLVAR = WA_CAUFV-KLVARP
                                            TRANSPORTING NO FIELDS.
                IF SY-SUBRC IS INITIAL.
*                  die im Auftrag bereits vorhandene KalkVarPlan
*                  existiert noch, ....also weiter
                ELSE.
*                  die im Auftrag bereits vorhandene KalkVarPlan wurde
*                  zwischenzeitlich gel#scht; ....deshalb die aktuelle
*                  IMG-Einstellung ¨¹bernehmen
                   WA_CAUFV-KLVARP = I_T399X-KLVARP.
                ENDIF.
             ENDIF.
          ENDIF.
          IF WA_CAUFV-KLVARI = SPACE.
*            aktuelle KalkVarAktl aus dem IMG ¨¹bergeben
             WA_CAUFV-KLVARI = I_T399X-KLVARI.
          ELSE.
             IF REPLACE = 'X'.
*               vorh. KalkVarAktl mit dem IMG-Wert ¨¹berschreiben
                WA_CAUFV-KLVARI = I_T399X-KLVARI.
             ELSE.
*               pr¨¹fen, ob die im Auftrag bereits vorh. KalkVarAktl
*               noch existiert (steht in der Tabelle TCK03)
                READ TABLE I_TCK03 WITH KEY KLVAR = WA_CAUFV-KLVARI
                                            TRANSPORTING NO FIELDS.
                IF SY-SUBRC IS INITIAL.
*                  die im Auftrag bereits vorhandene KalkVarAktl
*                  existiert noch, ....also weiter
                ELSE.
*                  die im Auftrag bereits vorhandene KalkVarAktl wurde
*                  zwischenzeitlich gel#scht; ....deshalb die aktuelle
*                  IMG-Einstellung ¨¹bernehmen
                   WA_CAUFV-KLVARI = I_T399X-KLVARI.
                ENDIF.
             ENDIF.
          ENDIF.
          MODIFY I_CAUFV FROM WA_CAUFV.
          MOVE-CORRESPONDING WA_CAUFV TO WA_AFKO.
          APPEND WA_AFKO TO I_AFKO.
*         aktuelles KalkSchema im IMG lesen
          READ TABLE I_TCK03 WITH KEY KLVAR = I_T399X-KLVARP.
          IF SY-SUBRC IS INITIAL.
             READ TABLE I_TCK05 WITH KEY BWVAR = I_TCK03-BWVAR.
             IF SY-SUBRC IS INITIAL.
                IF WA_CAUFV-KALSM = SPACE.
*                  aktuelles KalkSchema aus dem IMG ¨¹bergeben
*                  (im Auftrag wird immer das KalkSchema vorgeschlagen,
*                  das der BewertVar der KalkVarPlan zugeordnet ist)
                   WA_CAUFV-KALSM = I_TCK05-KALSM.
                ELSE.
                   IF REPLACE = 'X'.
*                     vorh. KalkSchema mit dem IMG-Wert ¨¹berschreiben
                      WA_CAUFV-KALSM = I_TCK05-KALSM.
                   ELSE.
*                     pr¨¹fen, ob das im Auftrag bereits vorhandene
*                     KalkSchema noch existiert
                      READ TABLE I_T683 WITH KEY KVEWE = WA_CAUFV-KVEWE
                                                 KAPPL = WA_CAUFV-KAPPL
                                                 KALSM = WA_CAUFV-KALSM
                                                TRANSPORTING NO FIELDS.
                      IF SY-SUBRC IS INITIAL.
*                        das im Auftrag bereits vorhandene KalkSchema
*                        existiert noch, ....also weiter
                      ELSE.
*                        das im Auftrag bereits vorh. KalkSchema wurde
*                        zwischenzeitlich gel#scht; ....deshalb die
*                        aktuelle IMG-Einstellung ¨¹bernehmen
                         WA_CAUFV-KALSM = I_T683-KALSM.
                      ENDIF.
                   ENDIF.
                ENDIF.
                MODIFY I_CAUFV FROM WA_CAUFV.
                MOVE-CORRESPONDING WA_CAUFV TO WA_AUFK.
                APPEND WA_AUFK TO I_AUFK.
             ENDIF.
          ENDIF.
*         Ergebnis-Liste anzeigen
          WRITE: / WA_CAUFV-WERKS, WA_CAUFV-AUART, WA_CAUFV-AUFNR,
                AT 23 SY-VLINE, L_OLD_CAUFV_KLVARP, L_OLD_CAUFV_KLVARI,
                L_OLD_CAUFV_KALSM, AT 40 SY-VLINE,
                WA_CAUFV-KLVARP, WA_CAUFV-KLVARI, WA_CAUFV-KALSM,
                AT 57 SY-VLINE.
*         Liste nach dem Korrekturlauf (Echtlauf) anzeigen
          IF TEST IS INITIAL.
             IF I_T399X-KLVARP = SPACE AND I_T399X-KLVARI = SPACE.
                WRITE: 'Not corrected.->Please assign',
                       'CostingVariants to OrderType'.
             ELSEIF I_T399X-KLVARP = SPACE AND
                NOT I_T399X-KLVARI = SPACE.
                WRITE: 'Corrected: ActualCostVar.',
                       'PlannedCostVar. not assigned in IMG'.
             ELSEIF I_T399X-KLVARI = SPACE AND
                NOT I_T399X-KLVARP = SPACE.
                WRITE: 'Corrected: PlannedCostVar.',
                       'ActualCostVar. not assigned in IMG'.
             ELSE.
                WRITE: 'O.K. ->Order successfully corrected.'.
             ENDIF.
*         Liste nach dem Testlauf anzeigen
          ELSE.
             IF I_T399X-KLVARP = SPACE AND I_T399X-KLVARI = SPACE.
                WRITE: 'Correction not possible.->First assign',
                       'CostVariants to OrderType'.
             ELSEIF I_T399X-KLVARP = SPACE AND
                NOT I_T399X-KLVARI = SPACE.
                WRITE: 'Possible: ActualCostVar.',
                       '->PlannedCostVar. not assigned in IMG'.
             ELSEIF I_T399X-KLVARI = SPACE AND
                NOT I_T399X-KLVARP = SPACE.
                WRITE: 'Possible: PlannedCostVar.',
                       '->ActualCostVar. not assigned in IMG'.
             ELSE.
                WRITE: 'Correction possible.'.
             ENDIF.
          ENDIF.
       ELSE.
          WRITE: / WA_CAUFV-WERKS, WA_CAUFV-AUART, WA_CAUFV-AUFNR,
                AT 23 SY-VLINE, L_OLD_CAUFV_KLVARP, L_OLD_CAUFV_KLVARI,
                L_OLD_CAUFV_KALSM, AT 40 SY-VLINE,
                WA_CAUFV-KLVARP, WA_CAUFV-KLVARI, WA_CAUFV-KALSM,
                AT 57 SY-VLINE,
                'Correction not possible:->assign OrderType to plant',
                'using OIOF.'.
       ENDIF.
  ENDLOOP.

* wenn das Kennzeichen f¨¹r den Testlauf entfernt wurde,
* die Tabelle AFKO updaten
  IF TEST IS INITIAL.
      UPDATE AFKO FROM TABLE I_AFKO.
      UPDATE AUFK FROM TABLE I_AUFK.
  ENDIF.

* damit nicht aus Versehen ungewollt Auftr#ge korrigiert werden,
* das Flag TEST wieder auf 'X' setzen
  AT SELECTION-SCREEN OUTPUT.
  TEST = 'X'.
  REPLACE = 'X'.


* END REPORT Z_FILL_COSTING_VARIANTS
*Selection text£º
*AUART:D       .
*AUFNR:D       .
