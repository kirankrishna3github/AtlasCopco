REPORT  ZRESSEAR.

* report that checks for given order range if
* dump SEQ_NOT_FOUND or OPR_NOT_FOUND will be
* generated if order is entered

tables: caufv, resb, afvc, affl, caufvd.

data: begin of caufv_tab occurs 0,
    aufnr like caufvd-aufnr,
    rsnum like caufvd-rsnum,
    aufpl like caufvd-aufpl.
data: end of caufv_tab.
data: begin of resb_tab occurs 0.
  include structure resb.
data: end of resb_tab.
data: flg_error type c.
data: l_order like caufvd-aufnr.

select-options orders for caufvd-aufnr.

select aufnr rsnum aufpl from caufv
                into corresponding fields of table caufv_tab
                where aufnr in orders
                and autyp eq '10'.

loop at caufv_tab.
* read reservations
  select * from resb into table resb_tab
                      where rsnum eq caufv_tab-rsnum.
  check sy-subrc is initial.
  loop at resb_tab.
    if affl-plnfl ne resb_tab-plnfl or affl-aufpl ne resb_tab-aufpl.
*  read sequence for reservation
      select single * from affl
                        where plnfl = resb_tab-plnfl
                          and aufpl = resb_tab-aufpl.
      if not sy-subrc is initial and l_order ne caufv_tab-aufnr.
        write:/ 'order', caufv_tab-aufnr, ': SEQ_NOT_FOUND'.
*  -> any sequence at all?
        select single * from affl
                        where aufpl = caufv_tab-aufpl.
        if not sy-subrc is initial.
          write: 'order does not have any sequence'.
        endif.
*  -> reservation entry like in planned order?
        if resb_tab-bdart = 'SB'.
          write: 'RESB-BDART = SB'.
        endif.
        flg_error = 'X'.
        l_order = caufv_tab-aufnr.
        continue.
      elseif resb_tab-aufpl eq '0000000000'.
* -> sequence with aufpl = 0
        write:/ 'order', caufv_tab-aufnr, ': sequence with key 0!'.
        flg_error = 'X'.
        l_order = caufv_tab-aufnr.
        continue.
      endif.
    endif.
    if afvc-aplzl ne resb_tab-aplzl or afvc-aufpl ne resb_tab-aufpl.
*  read operation for reservation
      select single * from afvc
                        where aufpl = resb_tab-aufpl
                          and aplzl = resb_tab-aplzl.
      if not sy-subrc is initial and l_order ne caufv_tab-aufnr.
        write:/ 'order', caufv_tab-aufnr, ': OPR_NOT_FOUND'.
*  -> any operation at all?
        select single * from afvc
                        where aufpl = caufv_tab-aufpl.
        if not sy-subrc is initial.
          write: 'order does not have any operation'.
        endif.
        flg_error = 'X'.
        l_order = caufv_tab-aufnr.
        continue.
      endif.
    endif.
  endloop.
endloop.

if flg_error is initial.
  write:/ 'No orders that generate OPR_NOT_FOUND/SEQ_NOT_FOUND were'.
  write: 'found in the given range'.
endif.

*Selection text£º
*ORDERS:D       .
