REPORT  ZLME_CONV_ALTERNATE_UOM.

PARAMETERS:
  p_matnr   TYPE matnr,
  P_ALTUOM  TYPE meins,
  P_CURUOM  TYPE meins,
  p_curqty  TYPE p,
  p_altqty  TYPE p.

DATA :  WS_C_CF TYPE   P DECIMALS 5,
        WA_C_CF1 TYPE  MARM,
        WA_C_CF2 TYPE  MARM,
        WS_C_MEINS TYPE  MARA.

DATA :  WS_BASE_CF TYPE   P DECIMALS 5,
        WS_CUR_QTY TYPE   P DECIMALS 5,
        WA_BASE_CF1 TYPE  MARM,
        WA_CURR_CF2 TYPE  MARM,
        WS_ALT_CF3  TYPE  MARM,
        WS_BASE_MEINS TYPE MARA-MEINS,
        WS_ALT_UOM    TYPE MARA-MEINS,
        WS_CURR_UOM   TYPE MARA-MEINS,
        umrez       TYPE umrez,
        umren       TYPE umren.

*-----------------------------------------------------------------------
CLEAR: WS_CUR_QTY,
       WS_BASE_MEINS,
       WS_C_MEINS.

IF P_ALTUOM <> P_CURUOM.

  WS_CURR_UOM = P_CURUOM.
  WS_ALT_UOM  = P_ALTUOM.

    CALL FUNCTION 'CONVERSION_EXIT_CUNIT_INPUT'
      EXPORTING
        INPUT          = WS_ALT_UOM
      IMPORTING
        OUTPUT         = WS_ALT_UOM
      EXCEPTIONS
        UNIT_NOT_FOUND = 1
        OTHERS         = 2.
    IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    CALL FUNCTION 'CONVERSION_EXIT_CUNIT_INPUT'
      EXPORTING
        INPUT          = WS_CURR_UOM
      IMPORTING
        OUTPUT         = WS_CURR_UOM
      EXCEPTIONS
        UNIT_NOT_FOUND = 1
        OTHERS         = 2.

    IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

*---  1ST GET THE BASE UOM
    SELECT SINGLE MEINS
      FROM MARA
      INTO WS_BASE_MEINS
      WHERE MATNR = P_MATNR.

*--- Conversion Factor for Base UOM
    CLEAR : WA_BASE_CF1.       " Conversion Factor for Base unit measure
    SELECT SINGLE MATNR
                  MEINH
                  UMREZ     "Numerator for Conversion to Base UnitsMeasure
                  UMREN     "Denominator for conversion to base unitsmeasure
             FROM MARM
             INTO CORRESPONDING FIELDS OF WA_BASE_CF1
            WHERE MATNR = P_MATNR
              AND MEINH = WS_BASE_MEINS.

*--- conversion Factor for Curr UOM
    CLEAR : WA_CURR_CF2.       " Conversion Factor for Current unit measure
    SELECT SINGLE MATNR
                  MEINH
                  UMREZ     "Numerator for Conversion to Base UnitsMeasure
                  UMREN     "Denominator for conversion to base unitsmeasure
             FROM MARM
             INTO CORRESPONDING FIELDS OF WA_CURR_CF2
            WHERE MATNR = P_MATNR
              AND MEINH = WS_CURR_UOM.

*--- Conversion Factor for Alt UOM
    CLEAR : WS_ALT_CF3.  " Conversion Factor for Alternate unit measure
    SELECT SINGLE MATNR
                  MEINH
                  UMREZ
                  UMREN
             FROM MARM
             INTO CORRESPONDING FIELDS OF WS_ALT_CF3
            WHERE MATNR = P_MATNR
            AND   MEINH = WS_ALT_UOM.

*** What is the Base Qty, convert from Alternate to Base.
*** Calculate the conversion factor from Current UOM to the Base UOM
    WS_BASE_CF =   (  WA_CURR_CF2-UMREZ / WA_CURR_CF2-UMREN )
                 * (  WA_BASE_CF1-UMREZ / WA_BASE_CF1-UMREN ).
*--- Qty value form Current UOM to Base UOM
    WS_CUR_QTY = P_CURQTY * WS_BASE_CF.

*** What is the new UOM Qty, Convert from Base to new Alternate
*** Calculate the conversin factor from Base UOM to Alternate UOM.
    WS_C_CF =   ( WS_ALT_CF3-UMREN  / WS_ALT_CF3-UMREZ )
              * ( WA_BASE_CF1-UMREN / WA_BASE_CF1-UMREZ ).
*--- Qty value from Base UOM to Alt UOM
    WS_CUR_QTY = WS_CUR_QTY * WS_C_CF.

ELSE.
  WS_CUR_QTY = P_CURQTY.
ENDIF.

  P_ALTQTY  = WS_CUR_QTY.
  UMREZ     = WS_ALT_CF3-UMREZ.
  UMREN     = WS_ALT_CF3-UMREN.

WRITE: / 'alt uom :', p_altuom,
       / 'cur uom :', p_curuom,
       / 'cur qty :', p_curqty,
       / 'matnr   :', p_matnr.
SKIP.
WRITE: / 'alt qty :', p_altqty,
       / 'nominat.:', umren,
       / 'denomin.:', umrez.
