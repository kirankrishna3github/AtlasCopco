*&---------------------------------------------------------------------*
*& Report  ZZQMUR_REPAIR                                               *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  ZZQMUR_REPAIR                           .

TABLES QMUR.
DATA: COUNTER TYPE I,
      LINES   TYPE I,
      L_SUCCESS TYPE I,
      IT_QMUR LIKE TABLE OF QMUR WITH HEADER LINE,
      IT_QMUR02 TYPE TABLE OF QMUR,
      L_CURRENT_NOTIF TYPE QMEL-QMNUM,
      L_CURRENT_QMUR TYPE QMUR.
PARAMETERS: TEST AS CHECKBOX DEFAULT 'X'.

COUNTER = 0.
SELECT * FROM QMUR
         INTO TABLE IT_QMUR
         WHERE FENUM = '0000'.
DESCRIBE TABLE IT_QMUR LINES COUNTER.
IF COUNTER > 0.
  LOOP AT IT_QMUR.
    IF TEST IS INITIAL. " Update mode
      IF L_CURRENT_NOTIF NE IT_QMUR-QMNUM.
* Determine highest cause-number of current notification
        L_CURRENT_NOTIF = IT_QMUR-QMNUM.
        SELECT * FROM QMUR
                 INTO TABLE IT_QMUR02
                 WHERE QMNUM = IT_QMUR-QMNUM
                 AND   FENUM = '0001'
                 ORDER BY URNUM DESCENDING.
        READ TABLE IT_QMUR02 INTO L_CURRENT_QMUR INDEX 1.
        IF SY-SUBRC NE 0.
          WRITE: / 'Notification ',IT_QMUR-QMNUM,' contains ',
                      'no position with FENUM = 0001.'.
          WRITE: / 'Please create for this notifcation a position ',
                      'with FENUM = 0001.'.
          WRITE: / 'After then please start this report again.'.
          CLEAR L_CURRENT_NOTIF.
          CHECK NOT L_CURRENT_NOTIF IS INITIAL.
        ENDIF.
      ENDIF.
* Delete current key of cause in database
      DELETE FROM QMUR WHERE QMNUM = IT_QMUR-QMNUM
                         AND FENUM = IT_QMUR-FENUM
                         AND URNUM = IT_QMUR-URNUM.
      IF SY-SUBRC = 0.
* Determine new number for the cause
        IT_QMUR-FENUM = '0001'.
        IT_QMUR-URNUM = IT_QMUR-URNUM + L_CURRENT_QMUR-URNUM.
* Insert new key for cause in database
        INSERT INTO QMUR VALUES IT_QMUR.
        L_SUCCESS = 1.
        IF SY-SUBRC = 0.
          COMMIT WORK.
        ELSE.
          ROLLBACK WORK.
        ENDIF.
      ELSE.
        ROLLBACK WORK.
      ENDIF.
    ELSE.
      WRITE: / 'Would repair cause ', IT_QMUR-URNUM,
               'of notification ',IT_QMUR-QMNUM.
    ENDIF.
  ENDLOOP.
  IF TEST IS INITIAL AND L_SUCCESS = 1. " Update mode
* At least one notification has been repaired
    COMMIT WORK AND WAIT.
    WRITE: / COUNTER,' causes of notifications repaired.'.
    CLEAR L_CURRENT_NOTIF.
    LOOP AT IT_QMUR.
      IF L_CURRENT_NOTIF NE IT_QMUR-QMNUM.
        WRITE: / 'Notification: ', IT_QMUR-QMNUM.
        L_CURRENT_NOTIF = IT_QMUR-QMNUM.
      ENDIF.
    ENDLOOP.
  ELSE.
    WRITE: / 'Would repair',COUNTER,'causes of notifications.'.
  ENDIF.
ELSE.
  WRITE: / 'No inconsistend notifications found.'.
ENDIF.

*Selection text£º
*TEST:        TEST
