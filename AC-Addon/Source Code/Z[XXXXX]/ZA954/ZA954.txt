*&---------------------------------------------------------------------*
*& Report  ZA954
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  za954.

DATA: ACT_TABIX LIKE SY-TABIX,
      OCC_ERROR,
      ACT_KVEWE LIKE T681-KVEWE,
      RES_TABIX LIKE SY-TABIX,
      NUM_ERROR TYPE I.

DATA: BEGIN OF MSG_TEXT.
DATA:   TABTXT(8)  TYPE C,
        TABVEW(4)  TYPE C,
        TABNUM     LIKE T681-KOTABNR,
        TABSPC(3)  TYPE C VALUE '   ',
        PROCAC(30) TYPE C,
        PRCSPC(3)  TYPE C VALUE '   ',
        ERRTXT(7)  TYPE C,
        ERRCNT(10) TYPE C.
DATA: END OF MSG_TEXT.

DATA: BEGIN OF xvake OCCURS 100.
        INCLUDE STRUCTURE vake.
DATA: END OF xvake.
DATA: xxvake LIKE xvake.

DATA: BEGIN OF xresult OCCURS 20.
        INCLUDE STRUCTURE vake.
DATA:   nkonhx, nkonpx, nkonsx,
        hkschl LIKE konh-kschl,
        pkschl LIKE konp-kschl,
        hvakey LIKE konh-vakey,
        pkzbzg LIKE konp-kzbzg,
        kzbzga LIKE konp-kzbzg,
        dknuma LIKE konh-knuma_bo,
        iknumh LIKE konh-knumh,
        idatab LIKE konh-datab,
        idatbi LIKE konh-datbi,
        errtxt(68) TYPE c.
DATA: END OF xresult.

LOOP AT xvake.
  act_tabix = sy-tabix + 1.
  WHILE NOT ( xvake IS INITIAL ).
    occ_error = space.
    READ TABLE xvake INDEX act_tabix INTO xxvake.
    IF sy-subrc EQ 0.              " not at the end
      IF xvake-kvewe EQ xxvake-kvewe AND
         xvake-kotabnr EQ xxvake-kotabnr AND
         xvake-kappl EQ xxvake-kappl AND
         xvake-kschl EQ xxvake-kschl AND
         xvake-vakey EQ xxvake-vakey AND
       ( act_kvewe NE 'E' OR xvake-knuma EQ xxvake-knuma ).
        IF xvake-datbi GE xxvake-datab.
          PERFORM make_res_entry.
          xresult-iknumh = xxvake-knumh.
          xresult-idatab = xxvake-datab.
          xresult-idatbi = xxvake-datbi.
          MODIFY xresult INDEX res_tabix TRANSPORTING iknumh idatab
                                                      idatbi.
        ENDIF.
        ADD 1 TO act_tabix.
      ELSE.
        CLEAR xvake.
      ENDIF.
    ELSE.
      CLEAR xvake.
    ENDIF.
  ENDWHILE.
ENDLOOP.



*&---------------------------------------------------------------------*
*&      Form  MAKE_RES_ENTRY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM make_res_entry.
  CHECK occ_error EQ space.
  CLEAR xresult.
  MOVE-CORRESPONDING xvake TO xresult.
  APPEND xresult.
  res_tabix = sy-tabix.
  occ_error = 'X'.
  ADD 1 TO num_error.
  WRITE num_error TO msg_text-errcnt.
  PERFORM gui_message USING msg_text.
ENDFORM.                    "MAKE_RES_ENTRY

*&---------------------------------------------------------------------*
*&      Form  GUI_MESSAGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_MSG_TEXT text
*----------------------------------------------------------------------*
FORM gui_message USING    p_msg_text.
  CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
    EXPORTING
      percentage = 0
      text       = p_msg_text
    EXCEPTIONS
      OTHERS     = 1.
ENDFORM.                    " GUI_MESSAGE
