*BEGIN_METHOD CHANGESERVORDERAUTOMATICALLY CHANGING CONTAINER.
report zrim21.


data:  begin of gs_vbeln_qmnum,
         vbeln type KDAUF,
         qmnum type qmnum,
       end of gs_vbeln_qmnum.
DATA: LS_VIQMEL TYPE VIQMEL.
* Internal tables for the BAPI
DATA LT_METHODS      TYPE BAPI_ALM_ORDER_METHOD_T.
DATA LS_METHODS      TYPE BAPI_ALM_ORDER_METHOD.
DATA LT_HEADER              TYPE TABLE OF BAPI_ALM_ORDER_HEADERS_I.
DATA LS_HEADER              TYPE BAPI_ALM_ORDER_HEADERS_I.
DATA LT_HEADER_UP           TYPE TABLE OF BAPI_ALM_ORDER_HEADERS_UP.
DATA LS_HEADER_UP           TYPE BAPI_ALM_ORDER_HEADERS_UP.
* Return
DATA LT_RETURN TYPE STANDARD TABLE OF BAPIRET2.


DATA: NODATA_CHARACTER VALUE '/'.
DATA: BDC_OPTIONS TYPE CTU_PARAMS.
DATA: IT_MESStab TYPE TABLE OF BDCMSGCOLL.
DATA: BDCDATA LIKE BDCDATA OCCURS 0 WITH HEADER LINE.



parameter: p_aufnr type aufnr obligatory.
** - Get the newly created service order. => OBJECT-KEY-NUMBER (I hope)
*SELECT VBELN POSNR ETENR AUFNR INTO TABLE IT_VBEP
*                               FROM VBEP
*                                FOR ALL ENTRIES IN IT_VBAP
*                              WHERE VBELN = IT_VBAP-VBELN
*                                AND POSNR = IT_VBAP-POSNR.
** Normally only 1 entry should be in IT_VBEP.
*READ TABLE IT_VBEP INDEX 1.
*CHECK SY-SUBRC EQ 0 AND NOT ( IT_VBEP-AUFNR IS INITIAL ).
*
*SELECT SINGLE * INTO CORRESPONDING FIELDS OF CAUFVD
*                FROM CAUFV
*               WHERE AUFNR = IT_VBEP-AUFNR.
*IT_RIWOL-IHNUM = OBJECT-KEY-NUMBER.
*APPEND IT_RIWOL.
*
* Get the sales order linked with the service order. If no sales order
* found, this method should not be executed.
select single kdauf into gs_vbeln_qmnum-vbeln from caufv
                   where aufnr = P_aufnr.
check not gs_vbeln_qmnum-vbeln is initial.
* Get the originating notification. If not found, stop!
select single qmnum into gs_vbeln_qmnum-qmnum from vbak
                   where vbeln =  gs_vbeln_qmnum-vbeln.
check not gs_vbeln_qmnum-qmnum is initial.
* Read notification data.
CALL FUNCTION 'READ_NOTIFICATION'
  EXPORTING
*   FEKNZ                = 'X'
*   MAKNZ                = 'X'
*   MSGTY                = 'E'
    QMNUM                = gs_vbeln_qmnum-qmnum
  importing
    IVIQMEL              = LS_VIQMEL
* EXCEPTIONS
*   INVALID_NUMBER       = 1
*   OTHERS               = 2
          .
IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

* I. Change the service order: default values!
* 1. Fill in the Method.
* 1a. Header.
  LS_METHODS-REFNUMBER  = '1'.
  LS_METHODS-OBJECTTYPE = 'HEADER'.
  LS_METHODS-METHOD     = 'CHANGE'.
  LS_METHODS-OBJECTKEY  = P_aufnr.
  APPEND LS_METHODS TO LT_METHODS.
* 1e. Add SAVE-statement to the Methods.
  CLEAR LS_METHODS.
  LS_METHODS-METHOD     = 'SAVE'.
*   LS_METHODS-METHOD     = 'DIALOG'.
  APPEND LS_METHODS TO LT_METHODS.


* 2. Fill in the Header.
  LS_HEADER-ORDERID       = P_aufnr.
  LS_HEADER_UP-ORDERID    = P_aufnr.
  LS_HEADER-CALC_MOTIVE   = '1E'. "Moet nog bekeken worden!!!!!!!!!!!!!!
  LS_HEADER_UP-CALC_MOTIVE = 'X'.
* LS_HEADER-START_DATE    = LS_VIQMEL-strmn.
  LS_HEADER-START_DATE    = '20070201'.
  LS_HEADER_UP-START_DATE = 'X'.
* LS_HEADER-FINISH_DATE   = LS_VIQMEL-ltrmn.
  LS_HEADER-FINISH_DATE   = LS_VIQMEL-strmn.  "LTRMN is not always filled in. for testreasons, copy startdate into finish.
  LS_HEADER_UP-FINISH_DATE  = 'X'.
  ls_header-basic_fin     = '240000'.
  ls_header_up-basic_fin     = 'X'.
  LS_HEADER-PRIORITY      = LS_VIQMEL-PRIOK.
  LS_HEADER_UP-PRIORITY = 'X'.
  LS_HEADER-PLANGROUP     = LS_VIQMEL-INGRP.
  LS_HEADER_UP-PLANGROUP  = 'X'.
  APPEND LS_HEADER TO LT_HEADER.
  APPEND LS_HEADER_UP TO LT_HEADER_UP.
break air21775.
CALL FUNCTION 'BAPI_ALM_ORDER_MAINTAIN'
  TABLES
    IT_METHODS             = LT_METHODS
    IT_HEADER              = LT_HEADER
    IT_HEADER_UP           = LT_HEADER_UP
*   IT_HEADER_SRV          =
*   IT_HEADER_SRV_UP       =
*   IT_USERSTATUS          =
*   IT_PARTNER             =
*   IT_PARTNER_UP          =
*   IT_OPERATION           =
*   IT_OPERATION_UP        =
*   IT_RELATION            =
*   IT_RELATION_UP         =
*   IT_COMPONENT           =
*   IT_COMPONENT_UP        =
*   IT_TEXT                =
*   IT_TEXT_LINES          =
*   EXTENSION_IN           =
    RETURN                 = lt_return
*   ET_NUMBERS             =
          .
break air21775.


*CALL FUNCTION 'IWOL_ADD_NOTIF_TO_DDB_INT'
*  EXPORTING
*    I_CAUFVD                  = CAUFVD
*  TABLES
*    T_RIWOL                   = IT_RIWOL
** EXCEPTIONS
**   NOTIFICATION_EXISTS       = 1
**   OTHERS                    = 2
*          .
*IF SY-SUBRC <> 0.
** MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*ENDIF.
*
*
*CALL FUNCTION 'IWOL_ADD_OBJECTS_TO_DDB_EXT'
*  EXPORTING
*    I_CAUFVD            = CAUFVD
*  TABLES
*    T_RIWOL             = IT_RIWOL
** EXCEPTIONS
**   SHOW_MESSAGE        = 1
**   INVALID_ENTRY       = 2
**   OTHERS              = 3
*          .
*
CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
*   EXPORTING
*     WAIT          =
*   IMPORTING
*     RETURN        =
.

free bdcdata.

*----------------------------------------------
      PERFORM BDC_DYNPRO      USING 'SAPLCOIH'
                                    '0101'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE'
                                    '/00'.
      PERFORM BDC_FIELD       USING 'CAUFVD-AUFNR'
                                    p_aufnr.

*----------------------------------------------
      PERFORM BDC_DYNPRO      USING 'SAPLCOIH'
                                    '3000'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE'
                                    '=IOLU'.

*----------------------------------------------
      PERFORM BDC_DYNPRO      USING 'SAPLCOIH'
                                    '3000'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE'
                                    '=IHAD'.
      PERFORM BDC_FIELD       USING 'RIWOL0-SELEC(01)'
                                    'X'.
      PERFORM BDC_FIELD       USING 'RIWOL-IHNUM(01)'
                                    gs_vbeln_qmnum-qmnum.
*----------------------------------------------
      PERFORM BDC_DYNPRO      USING 'SAPLCOIH'
                                    '3000'.
      PERFORM BDC_FIELD       USING 'BDC_OKCODE'
                                    '=BU'.

BDC_OPTIONS-DISMODE = 'A'.
*Call change sales order transaction
    CALL TRANSACTION 'IW32' USING BDCDATA

                            OPTIONS FROM BDC_OPTIONS
                            MESSAGES INTO IT_MESStab.


if sy-subrc eq 0.

else.

endif.





*&---------------------------------------------------------------------*
*&      Form  BDC_DYNPRO
*&---------------------------------------------------------------------*
*       Start new screen
*----------------------------------------------------------------------*
FORM BDC_DYNPRO USING PROGRAM DYNPRO.
  CLEAR BDCDATA.
  BDCDATA-PROGRAM  = PROGRAM.
  BDCDATA-DYNPRO   = DYNPRO.
  BDCDATA-DYNBEGIN = 'X'.
  APPEND BDCDATA.
ENDFORM.                    "bdc_dynpro
*&---------------------------------------------------------------------*
*&      Form  BDC_FIELD
*&---------------------------------------------------------------------*
*       Insert field
*----------------------------------------------------------------------*
FORM BDC_FIELD USING FNAM FVAL.
  IF FVAL <> NODATA_CHARACTER.
    CLEAR BDCDATA.
    BDCDATA-FNAM = FNAM.
    BDCDATA-FVAL = FVAL.
    APPEND BDCDATA.
  ENDIF.
ENDFORM.                    "bdc_field







*END_METHOD.
