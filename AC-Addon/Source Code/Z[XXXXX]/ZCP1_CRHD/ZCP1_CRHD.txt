REPORT ZAL_ABAP message-id 26 line-size 255
no standard page heading.
* ZCP1_CRHD.
PARAMETER DOWNLOAD(1) DEFAULT 'S' lower case. "N-svr,Y-clnt
PARAMETER EXECMODE(1) DEFAULT 'B' lower case. "D-dlg,B-btch
PARAMETER OUT_DIR(48) DEFAULT "output file dir
'/var/load/CD1/UK/read' lower case.
PARAMETER IN_DIR(48) DEFAULT "input file dir
'/var/load/CD1/UK/read' lower case.
PARAMETER P_DEST TYPE RFCDES-RFCDEST DEFAULT
'NONE'.
PARAMETER P_PROGID TYPE RFCOPT-RFCEXEC DEFAULT
SPACE.
PARAMETER P_GWHOST TYPE RFCOPT-RFCGWHOST DEFAULT
SPACE.
PARAMETER P_GWSERV TYPE RFCOPT-RFCGWSERV DEFAULT
SPACE.
PARAMETER P_SRVFM(30) DEFAULT "Server Callback function
SPACE.
PARAMETER P_PKGSZ TYPE I DEFAULT "Stream package size
5000.
PARAMETER P_SNC_ON(1) DEFAULT "X-on SPACE-off
SPACE.

PARAMETER P_DF_VK(40) DEFAULT "ABAP data flow object key
'' lower case.
PARAMETER P_DI_GEN(40) DEFAULT "DI version that generated ABAP
'' lower case.

*** Machine generated ABAP. Do not modify.            ***
*** (C)Copyright Business Objects S.A.  All rights reserved. ***
*
* Date Time:
*    09/11/15 13:27:12
* SAP used for generated this ABAP:
*    Release: 701
*    Host   : 10.25.3.80
*
* ABAP Dataflow Name:
*    DF_R3_CTS_LZ_SAP_CP1_CRHD
* ABAP program name in SAP:
*  ZCP1_CRHD
* Generated ABAP file name:
*    //Airsbeap0512/d$/Data/SAPLogistics/VAL/ABAP/SEED_RFC/ZCP1_C
*RHD
TABLES CRHD.
TABLES CRTX.
TABLES T001W.
TABLES T001K.

DATA: begin of ITAB5 occurs 0,
MANDT(3) TYPE C,
OBJTY(2) TYPE C,
OBJID(8) TYPE N,
BEGDA TYPE D,
ENDDA TYPE D,
AEDAT_GRND TYPE D,
AENAM_GRND(12) TYPE C,
AEDAT_VORA TYPE D,
AENAM_VORA(12) TYPE C,
AEDAT_TERM TYPE D,
AENAM_TERM(12) TYPE C,
AEDAT_TECH TYPE D,
AENAM_TECH(12) TYPE C,
ARBPL(8) TYPE C,
WERKS(4) TYPE C,
VERWE(4) TYPE C,
LVORM(1) TYPE C,
PAR01(6) TYPE C,
PAR02(6) TYPE C,
PAR03(6) TYPE C,
PAR04(6) TYPE C,
PAR05(6) TYPE C,
PAR06(6) TYPE C,
PARU1(3) TYPE C,
PARU2(3) TYPE C,
PARU3(3) TYPE C,
PARU4(3) TYPE C,
PARU5(3) TYPE C,
PARU6(3) TYPE C,
PARV1(16) TYPE P DECIMALS 3,
PARV2(16) TYPE P DECIMALS 3,
PARV3(16) TYPE P DECIMALS 3,
PARV4(16) TYPE P DECIMALS 3,
PARV5(16) TYPE P DECIMALS 3,
PARV6(16) TYPE P DECIMALS 3,
PLANV(3) TYPE C,
STAND(10) TYPE C,
VERAN(3) TYPE C,
VGWTS(4) TYPE C,
VGM01(1) TYPE C,
VGM02(1) TYPE C,
VGM03(1) TYPE C,
VGM04(1) TYPE C,
VGM05(1) TYPE C,
VGM06(1) TYPE C,
XDEFA(1) TYPE C,
XKOST(1) TYPE C,
XSPRR(1) TYPE C,
XTERM(1) TYPE C,
ZGR01(3) TYPE C,
ZGR02(3) TYPE C,
ZGR03(3) TYPE C,
ZGR04(3) TYPE C,
ZGR05(3) TYPE C,
ZGR06(3) TYPE C,
KTSCH(7) TYPE C,
LOANZ(16) TYPE P DECIMALS 0,
LOART(4) TYPE C,
LOGRP(3) TYPE C,
QUALF(2) TYPE C,
RASCH(2) TYPE C,
STEUS(4) TYPE C,
VGE01(3) TYPE C,
VGE02(3) TYPE C,
VGE03(3) TYPE C,
VGE04(3) TYPE C,
VGE05(3) TYPE C,
VGE06(3) TYPE C,
KTSCH_REF(1) TYPE C,
LOART_REF(1) TYPE C,
LOANZ_REF(1) TYPE C,
LOGRP_REF(1) TYPE C,
QUALF_REF(1) TYPE C,
RASCH_REF(1) TYPE C,
STEUS_REF(1) TYPE C,
FORT1(6) TYPE C,
FORT2(6) TYPE C,
FORT3(6) TYPE C,
KAPID(8) TYPE N,
ORTGR(4) TYPE C,
ZEIWN(3) TYPE C,
ZWNOR(16) TYPE P DECIMALS 3,
ZEIWM(3) TYPE C,
ZWMIN(16) TYPE P DECIMALS 3,
FORMR(1) TYPE C,
MATYP(10) TYPE C,
CPLGR(3) TYPE C,
SORTB(9) TYPE C,
MTRVP(16) TYPE P DECIMALS 1,
MTMVP(16) TYPE P DECIMALS 1,
MTPVP(16) TYPE P DECIMALS 1,
RSANZ(3) TYPE N,
PDEST(4) TYPE C,
HROID(8) TYPE N,
FORTN(6) TYPE C,
ZGR01_REF(1) TYPE C,
ZGR02_REF(1) TYPE C,
ZGR03_REF(1) TYPE C,
ZGR04_REF(1) TYPE C,
ZGR05_REF(1) TYPE C,
ZGR06_REF(1) TYPE C,
STEUS_C(4) TYPE C,
STEUS_I(4) TYPE C,
STEUS_N(4) TYPE C,
STEUS_Q(4) TYPE C,
RUZUS(4) TYPE C,
RSANZ_REF(1) TYPE C,
HR(1) TYPE C,
PRVBE(10) TYPE C,
SUBSYS(6) TYPE C,
BDEGR(3) TYPE C,
RGEKZ(1) TYPE C,
HRTYP(2) TYPE C,
SLWID(7) TYPE C,
LIFNR(10) TYPE C,
SLWID_REF(1) TYPE C,
LIFNR_REF(1) TYPE C,
VGARB(3) TYPE C,
VGDIM(6) TYPE C,
HRPLVAR(2) TYPE C,
VGDAU(3) TYPE C,
STOBJ(22) TYPE C,
RESGR(8) TYPE C,
LGORT_RES(4) TYPE C,
MIXMAT(1) TYPE C,
ISTBED_KZ(1) TYPE C,
AEDAT_TEXT TYPE D,
AENAM_TEXT(12) TYPE C,
KTEXT(40) TYPE C,
KTEXT_UP(40) TYPE C,
BUKRS(4) TYPE C.
DATA: end of ITAB5.

data: append_flag(1) value ' ',
      cntbuf type i,
      delimleng type i,last_batch(1) value ' '.

CONSTANTS C_DF_VK(40) VALUE '809'.
CONSTANTS C_DI_GEN(40) VALUE '14.2.3.660'.
DATA WARN_MSG(50).


DATA: gv_directory     TYPE epsdirnam  VALUE '/var/load/xxx/UK/read/',
      gv_logsys        LIKE tbdlst-logsys.

start-of-selection.
* Logical system
  CALL FUNCTION 'OWN_LOGICAL_SYSTEM_GET'
    IMPORTING
      own_logical_system             = gv_logsys
    EXCEPTIONS
      own_logical_system_not_defined = 1
      OTHERS                         = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE 'E' NUMBER sy-msgno
         WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    STOP.
  ENDIF.
  REPLACE 'xxx' IN out_dir WITH gv_logsys(3).
  REPLACE 'xxx' IN in_dir WITH gv_logsys(3).


  IF DOWNLOAD = 'S' OR
     DOWNLOAD = 'N' OR
     DOWNLOAD = 'Y'.
      .
  ELSE.
     DATA: m_xfer_err_msg(700).
     CONCATENATE
'ABAP program does not recognize this new '
'data transfer method: ' DOWNLOAD
'. Regenerate the ABAP program and upload to this system.'
     INTO m_xfer_err_msg.
     MESSAGE  E240(S#) WITH m_xfer_err_msg.
  ENDIF.

  IF EXECMODE = 'B' OR
     EXECMODE = 'D'.
      .
  ELSE.
     DATA: m_exec_err_msg(700).
     CONCATENATE
'ABAP program does not recognize this new '
'execution option: ' EXECMODE
'. Regenerate the ABAP program and upload to this system.'
     INTO m_exec_err_msg.
     MESSAGE  E240(S#) WITH m_exec_err_msg.
  ENDIF.

  IF DOWNLOAD = 'S'.
     PERFORM CONNECT_RFCDEST_TO_PROGID.
  ENDIF.



PERFORM FORM5.
last_batch = 'X'.
PERFORM FORM6.
FREE ITAB5.
  IF DOWNLOAD = 'S'.
     PERFORM DISCONNECT_RFCDEST_FROM_PROGID.
  ENDIF.


end-of-selection.

CLEAR WARN_MSG.

IF NOT P_DF_VK IS INITIAL.
  IF P_DF_VK <> C_DF_VK.
     CONCATENATE '$$Warning$'
                 C_DF_VK
                 '$' INTO WARN_MSG.
  ENDIF.
ENDIF.
IF NOT P_DI_GEN IS INITIAL.
  IF P_DI_GEN <> C_DI_GEN.
     IF WARN_MSG IS INITIAL.
       CONCATENATE '$$Warning$$'
                   C_DI_GEN
                   INTO WARN_MSG.
     ELSE.
       CONCATENATE WARN_MSG
                   C_DI_GEN
                   INTO WARN_MSG.
     ENDIF.
  ENDIF.
ENDIF.

IF NOT WARN_MSG IS INITIAL.
  IF EXECMODE = 'D'.
    WRITE WARN_MSG.
    NEW-LINE.
  ELSE.
    MESSAGE S240(S#) with WARN_MSG.
  ENDIF.
ENDIF.


write  '* Program Complete *'.
write
 '(C)Copyright Business Objects S.A.  All rights reserved.'.

FORM FORM5.
DATA ALTMP1(3) TYPE C.
DATA ALTMP2(2) TYPE C.
DATA ALTMP3(8) TYPE N.
DATA ALTMP4 TYPE D.
DATA ALTMP5 TYPE D.
DATA ALTMP6 TYPE D.
DATA ALTMP7(12) TYPE C.
DATA ALTMP8 TYPE D.
DATA ALTMP9(12) TYPE C.
DATA ALTMP10 TYPE D.
DATA ALTMP11(12) TYPE C.
DATA ALTMP12 TYPE D.
DATA ALTMP13(12) TYPE C.
DATA ALTMP14(8) TYPE C.
DATA ALTMP15(4) TYPE C.
DATA ALTMP16(4) TYPE C.
DATA ALTMP17(1) TYPE C.
DATA ALTMP18(6) TYPE C.
DATA ALTMP19(6) TYPE C.
DATA ALTMP20(6) TYPE C.
DATA ALTMP21(6) TYPE C.
DATA ALTMP22(6) TYPE C.
DATA ALTMP23(6) TYPE C.
DATA ALTMP24(3) TYPE C.
DATA ALTMP25(3) TYPE C.
DATA ALTMP26(3) TYPE C.
DATA ALTMP27(3) TYPE C.
DATA ALTMP28(3) TYPE C.
DATA ALTMP29(3) TYPE C.
DATA ALTMP30(16) TYPE P DECIMALS 3.
DATA ALTMP31(16) TYPE P DECIMALS 3.
DATA ALTMP32(16) TYPE P DECIMALS 3.
DATA ALTMP33(16) TYPE P DECIMALS 3.
DATA ALTMP34(16) TYPE P DECIMALS 3.
DATA ALTMP35(16) TYPE P DECIMALS 3.
DATA ALTMP36(3) TYPE C.
DATA ALTMP37(10) TYPE C.
DATA ALTMP38(3) TYPE C.
DATA ALTMP39(4) TYPE C.
DATA ALTMP40(1) TYPE C.
DATA ALTMP41(1) TYPE C.
DATA ALTMP42(1) TYPE C.
DATA ALTMP43(1) TYPE C.
DATA ALTMP44(1) TYPE C.
DATA ALTMP45(1) TYPE C.
DATA ALTMP46(1) TYPE C.
DATA ALTMP47(1) TYPE C.
DATA ALTMP48(1) TYPE C.
DATA ALTMP49(1) TYPE C.
DATA ALTMP50(3) TYPE C.
DATA ALTMP51(3) TYPE C.
DATA ALTMP52(3) TYPE C.
DATA ALTMP53(3) TYPE C.
DATA ALTMP54(3) TYPE C.
DATA ALTMP55(3) TYPE C.
DATA ALTMP56(7) TYPE C.
DATA ALTMP57(16) TYPE P DECIMALS 0.
DATA ALTMP58(4) TYPE C.
DATA ALTMP59(3) TYPE C.
DATA ALTMP60(2) TYPE C.
DATA ALTMP61(2) TYPE C.
DATA ALTMP62(4) TYPE C.
DATA ALTMP63(3) TYPE C.
DATA ALTMP64(3) TYPE C.
DATA ALTMP65(3) TYPE C.
DATA ALTMP66(3) TYPE C.
DATA ALTMP67(3) TYPE C.
DATA ALTMP68(3) TYPE C.
DATA ALTMP69(1) TYPE C.
DATA ALTMP70(1) TYPE C.
DATA ALTMP71(1) TYPE C.
DATA ALTMP72(1) TYPE C.
DATA ALTMP73(1) TYPE C.
DATA ALTMP74(1) TYPE C.
DATA ALTMP75(1) TYPE C.
DATA ALTMP76(6) TYPE C.
DATA ALTMP77(6) TYPE C.
DATA ALTMP78(6) TYPE C.
DATA ALTMP79(8) TYPE N.
DATA ALTMP80(4) TYPE C.
DATA ALTMP81(3) TYPE C.
DATA ALTMP82(16) TYPE P DECIMALS 3.
DATA ALTMP83(3) TYPE C.
DATA ALTMP84(16) TYPE P DECIMALS 3.
DATA ALTMP85(1) TYPE C.
DATA ALTMP86(10) TYPE C.
DATA ALTMP87(3) TYPE C.
DATA ALTMP88(9) TYPE C.
DATA ALTMP89(16) TYPE P DECIMALS 1.
DATA ALTMP90(16) TYPE P DECIMALS 1.
DATA ALTMP91(16) TYPE P DECIMALS 1.
DATA ALTMP92(3) TYPE N.
DATA ALTMP93(4) TYPE C.
DATA ALTMP94(8) TYPE N.
DATA ALTMP95(6) TYPE C.
DATA ALTMP96(1) TYPE C.
DATA ALTMP97(1) TYPE C.
DATA ALTMP98(1) TYPE C.
DATA ALTMP99(1) TYPE C.
DATA ALTMP100(1) TYPE C.
DATA ALTMP101(1) TYPE C.
DATA ALTMP102(4) TYPE C.
DATA ALTMP103(4) TYPE C.
DATA ALTMP104(4) TYPE C.
DATA ALTMP105(4) TYPE C.
DATA ALTMP106(4) TYPE C.
DATA ALTMP107(1) TYPE C.
DATA ALTMP108(1) TYPE C.
DATA ALTMP109(10) TYPE C.
DATA ALTMP110(6) TYPE C.
DATA ALTMP111(3) TYPE C.
DATA ALTMP112(1) TYPE C.
DATA ALTMP113(2) TYPE C.
DATA ALTMP114(7) TYPE C.
DATA ALTMP115(10) TYPE C.
DATA ALTMP116(1) TYPE C.
DATA ALTMP117(1) TYPE C.
DATA ALTMP118(3) TYPE C.
DATA ALTMP119(6) TYPE C.
DATA ALTMP120(2) TYPE C.
DATA ALTMP121(3) TYPE C.
DATA ALTMP122(22) TYPE C.
DATA ALTMP123(8) TYPE C.
DATA ALTMP124(4) TYPE C.
DATA ALTMP125(1) TYPE C.
DATA ALTMP126(1) TYPE C.
DATA ALTMP127 TYPE D.
DATA ALTMP128(12) TYPE C.
DATA ALTMP129(40) TYPE C.
DATA ALTMP130(40) TYPE C.
DATA ALTMP131(4) TYPE C.

DATA CRHD9MANDT LIKE CRHD-MANDT.
DATA CRHD9OBJTY LIKE CRHD-OBJTY.
DATA CRHD9OBJID LIKE CRHD-OBJID.
DATA CRHD9BEGDA LIKE CRHD-BEGDA.
DATA CRHD9ENDDA LIKE CRHD-ENDDA.
DATA CRHD9AEDAT_GRND LIKE CRHD-AEDAT_GRND.
DATA CRHD9AENAM_GRND LIKE CRHD-AENAM_GRND.
DATA CRHD9AEDAT_VORA LIKE CRHD-AEDAT_VORA.
DATA CRHD9AENAM_VORA LIKE CRHD-AENAM_VORA.
DATA CRHD9AEDAT_TERM LIKE CRHD-AEDAT_TERM.
DATA CRHD9AENAM_TERM LIKE CRHD-AENAM_TERM.
DATA CRHD9AEDAT_TECH LIKE CRHD-AEDAT_TECH.
DATA CRHD9AENAM_TECH LIKE CRHD-AENAM_TECH.
DATA CRHD9ARBPL LIKE CRHD-ARBPL.
DATA CRHD9WERKS LIKE CRHD-WERKS.
DATA CRHD9VERWE LIKE CRHD-VERWE.
DATA CRHD9LVORM LIKE CRHD-LVORM.
DATA CRHD9PAR01 LIKE CRHD-PAR01.
DATA CRHD9PAR02 LIKE CRHD-PAR02.
DATA CRHD9PAR03 LIKE CRHD-PAR03.
DATA CRHD9PAR04 LIKE CRHD-PAR04.
DATA CRHD9PAR05 LIKE CRHD-PAR05.
DATA CRHD9PAR06 LIKE CRHD-PAR06.
DATA CRHD9PARU1 LIKE CRHD-PARU1.
DATA CRHD9PARU2 LIKE CRHD-PARU2.
DATA CRHD9PARU3 LIKE CRHD-PARU3.
DATA CRHD9PARU4 LIKE CRHD-PARU4.
DATA CRHD9PARU5 LIKE CRHD-PARU5.
DATA CRHD9PARU6 LIKE CRHD-PARU6.
DATA CRHD9PARV1 LIKE CRHD-PARV1.
DATA CRHD9PARV2 LIKE CRHD-PARV2.
DATA CRHD9PARV3 LIKE CRHD-PARV3.
DATA CRHD9PARV4 LIKE CRHD-PARV4.
DATA CRHD9PARV5 LIKE CRHD-PARV5.
DATA CRHD9PARV6 LIKE CRHD-PARV6.
DATA CRHD9PLANV LIKE CRHD-PLANV.
DATA CRHD9STAND LIKE CRHD-STAND.
DATA CRHD9VERAN LIKE CRHD-VERAN.
DATA CRHD9VGWTS LIKE CRHD-VGWTS.
DATA CRHD9VGM01 LIKE CRHD-VGM01.
DATA CRHD9VGM02 LIKE CRHD-VGM02.
DATA CRHD9VGM03 LIKE CRHD-VGM03.
DATA CRHD9VGM04 LIKE CRHD-VGM04.
DATA CRHD9VGM05 LIKE CRHD-VGM05.
DATA CRHD9VGM06 LIKE CRHD-VGM06.
DATA CRHD9XDEFA LIKE CRHD-XDEFA.
DATA CRHD9XKOST LIKE CRHD-XKOST.
DATA CRHD9XSPRR LIKE CRHD-XSPRR.
DATA CRHD9XTERM LIKE CRHD-XTERM.
DATA CRHD9ZGR01 LIKE CRHD-ZGR01.
DATA CRHD9ZGR02 LIKE CRHD-ZGR02.
DATA CRHD9ZGR03 LIKE CRHD-ZGR03.
DATA CRHD9ZGR04 LIKE CRHD-ZGR04.
DATA CRHD9ZGR05 LIKE CRHD-ZGR05.
DATA CRHD9ZGR06 LIKE CRHD-ZGR06.
DATA CRHD9KTSCH LIKE CRHD-KTSCH.
DATA CRHD9LOANZ LIKE CRHD-LOANZ.
DATA CRHD9LOART LIKE CRHD-LOART.
DATA CRHD9LOGRP LIKE CRHD-LOGRP.
DATA CRHD9QUALF LIKE CRHD-QUALF.
DATA CRHD9RASCH LIKE CRHD-RASCH.
DATA CRHD9STEUS LIKE CRHD-STEUS.
DATA CRHD9VGE01 LIKE CRHD-VGE01.
DATA CRHD9VGE02 LIKE CRHD-VGE02.
DATA CRHD9VGE03 LIKE CRHD-VGE03.
DATA CRHD9VGE04 LIKE CRHD-VGE04.
DATA CRHD9VGE05 LIKE CRHD-VGE05.
DATA CRHD9VGE06 LIKE CRHD-VGE06.
DATA CRHD9KTSCH_REF LIKE CRHD-KTSCH_REF.
DATA CRHD9LOART_REF LIKE CRHD-LOART_REF.
DATA CRHD9LOANZ_REF LIKE CRHD-LOANZ_REF.
DATA CRHD9LOGRP_REF LIKE CRHD-LOGRP_REF.
DATA CRHD9QUALF_REF LIKE CRHD-QUALF_REF.
DATA CRHD9RASCH_REF LIKE CRHD-RASCH_REF.
DATA CRHD9STEUS_REF LIKE CRHD-STEUS_REF.
DATA CRHD9FORT1 LIKE CRHD-FORT1.
DATA CRHD9FORT2 LIKE CRHD-FORT2.
DATA CRHD9FORT3 LIKE CRHD-FORT3.
DATA CRHD9KAPID LIKE CRHD-KAPID.
DATA CRHD9ORTGR LIKE CRHD-ORTGR.
DATA CRHD9ZEIWN LIKE CRHD-ZEIWN.
DATA CRHD9ZWNOR LIKE CRHD-ZWNOR.
DATA CRHD9ZEIWM LIKE CRHD-ZEIWM.
DATA CRHD9ZWMIN LIKE CRHD-ZWMIN.
DATA CRHD9FORMR LIKE CRHD-FORMR.
DATA CRHD9MATYP LIKE CRHD-MATYP.
DATA CRHD9CPLGR LIKE CRHD-CPLGR.
DATA CRHD9SORTB LIKE CRHD-SORTB.
DATA CRHD9MTRVP LIKE CRHD-MTRVP.
DATA CRHD9MTMVP LIKE CRHD-MTMVP.
DATA CRHD9MTPVP LIKE CRHD-MTPVP.
DATA CRHD9RSANZ LIKE CRHD-RSANZ.
DATA CRHD9PDEST LIKE CRHD-PDEST.
DATA CRHD9HROID LIKE CRHD-HROID.
DATA CRHD9FORTN LIKE CRHD-FORTN.
DATA CRHD9ZGR01_REF LIKE CRHD-ZGR01_REF.
DATA CRHD9ZGR02_REF LIKE CRHD-ZGR02_REF.
DATA CRHD9ZGR03_REF LIKE CRHD-ZGR03_REF.
DATA CRHD9ZGR04_REF LIKE CRHD-ZGR04_REF.
DATA CRHD9ZGR05_REF LIKE CRHD-ZGR05_REF.
DATA CRHD9ZGR06_REF LIKE CRHD-ZGR06_REF.
DATA CRHD9STEUS_C LIKE CRHD-STEUS_C.
DATA CRHD9STEUS_I LIKE CRHD-STEUS_I.
DATA CRHD9STEUS_N LIKE CRHD-STEUS_N.
DATA CRHD9STEUS_Q LIKE CRHD-STEUS_Q.
DATA CRHD9RUZUS LIKE CRHD-RUZUS.
DATA CRHD9RSANZ_REF LIKE CRHD-RSANZ_REF.
DATA CRHD9HR LIKE CRHD-HR.
DATA CRHD9PRVBE LIKE CRHD-PRVBE.
DATA CRHD9SUBSYS LIKE CRHD-SUBSYS.
DATA CRHD9BDEGR LIKE CRHD-BDEGR.
DATA CRHD9RGEKZ LIKE CRHD-RGEKZ.
DATA CRHD9HRTYP LIKE CRHD-HRTYP.
DATA CRHD9SLWID LIKE CRHD-SLWID.
DATA CRHD9LIFNR LIKE CRHD-LIFNR.
DATA CRHD9SLWID_REF LIKE CRHD-SLWID_REF.
DATA CRHD9LIFNR_REF LIKE CRHD-LIFNR_REF.
DATA CRHD9VGARB LIKE CRHD-VGARB.
DATA CRHD9VGDIM LIKE CRHD-VGDIM.
DATA CRHD9HRPLVAR LIKE CRHD-HRPLVAR.
DATA CRHD9VGDAU LIKE CRHD-VGDAU.
DATA CRHD9STOBJ LIKE CRHD-STOBJ.
DATA CRHD9RESGR LIKE CRHD-RESGR.
DATA CRHD9LGORT_RES LIKE CRHD-LGORT_RES.
DATA CRHD9MIXMAT LIKE CRHD-MIXMAT.
DATA CRHD9ISTBED_KZ LIKE CRHD-ISTBED_KZ.
DATA CRTX9AEDAT_TEXT LIKE CRTX-AEDAT_TEXT.
DATA CRTX9AENAM_TEXT LIKE CRTX-AENAM_TEXT.
DATA CRTX9KTEXT LIKE CRTX-KTEXT.
DATA CRTX9KTEXT_UP LIKE CRTX-KTEXT_UP.
DATA T001K9BUKRS LIKE T001K-BUKRS.
DATA CRTX9SPRAS LIKE CRTX-SPRAS.
DATA T001W9EKORG LIKE T001W-EKORG.
DATA T001W9BWKEY LIKE T001W-BWKEY.
DATA T001K9BWKEY LIKE T001K-BWKEY.
DATA T001W9WERKS LIKE T001W-WERKS.
DATA CRTX9OBJTY LIKE CRTX-OBJTY.
DATA CRTX9OBJID LIKE CRTX-OBJID.



SELECT
  CRHD9~MANDT
  CRHD9~OBJTY
  CRHD9~OBJID
  CRHD9~BEGDA
  CRHD9~ENDDA
  CRHD9~AEDAT_GRND
  CRHD9~AENAM_GRND
  CRHD9~AEDAT_VORA
  CRHD9~AENAM_VORA
  CRHD9~AEDAT_TERM
  CRHD9~AENAM_TERM
  CRHD9~AEDAT_TECH
  CRHD9~AENAM_TECH
  CRHD9~ARBPL
  CRHD9~WERKS
  CRHD9~VERWE
  CRHD9~LVORM
  CRHD9~PAR01
  CRHD9~PAR02
  CRHD9~PAR03
  CRHD9~PAR04
  CRHD9~PAR05
  CRHD9~PAR06
  CRHD9~PARU1
  CRHD9~PARU2
  CRHD9~PARU3
  CRHD9~PARU4
  CRHD9~PARU5
  CRHD9~PARU6
  CRHD9~PARV1
  CRHD9~PARV2
  CRHD9~PARV3
  CRHD9~PARV4
  CRHD9~PARV5
  CRHD9~PARV6
  CRHD9~PLANV
  CRHD9~STAND
  CRHD9~VERAN
  CRHD9~VGWTS
  CRHD9~VGM01
  CRHD9~VGM02
  CRHD9~VGM03
  CRHD9~VGM04
  CRHD9~VGM05
  CRHD9~VGM06
  CRHD9~XDEFA
  CRHD9~XKOST
  CRHD9~XSPRR
  CRHD9~XTERM
  CRHD9~ZGR01
  CRHD9~ZGR02
  CRHD9~ZGR03
  CRHD9~ZGR04
  CRHD9~ZGR05
  CRHD9~ZGR06
  CRHD9~KTSCH
  CRHD9~LOANZ
  CRHD9~LOART
  CRHD9~LOGRP
  CRHD9~QUALF
  CRHD9~RASCH
  CRHD9~STEUS
  CRHD9~VGE01
  CRHD9~VGE02
  CRHD9~VGE03
  CRHD9~VGE04
  CRHD9~VGE05
  CRHD9~VGE06
  CRHD9~KTSCH_REF
  CRHD9~LOART_REF
  CRHD9~LOANZ_REF
  CRHD9~LOGRP_REF
  CRHD9~QUALF_REF
  CRHD9~RASCH_REF
  CRHD9~STEUS_REF
  CRHD9~FORT1
  CRHD9~FORT2
  CRHD9~FORT3
  CRHD9~KAPID
  CRHD9~ORTGR
  CRHD9~ZEIWN
  CRHD9~ZWNOR
  CRHD9~ZEIWM
  CRHD9~ZWMIN
  CRHD9~FORMR
  CRHD9~MATYP
  CRHD9~CPLGR
  CRHD9~SORTB
  CRHD9~MTRVP
  CRHD9~MTMVP
  CRHD9~MTPVP
  CRHD9~RSANZ
  CRHD9~PDEST
  CRHD9~HROID
  CRHD9~FORTN
  CRHD9~ZGR01_REF
  CRHD9~ZGR02_REF
  CRHD9~ZGR03_REF
  CRHD9~ZGR04_REF
  CRHD9~ZGR05_REF
  CRHD9~ZGR06_REF
  CRHD9~STEUS_C
  CRHD9~STEUS_I
  CRHD9~STEUS_N
  CRHD9~STEUS_Q
  CRHD9~RUZUS
  CRHD9~RSANZ_REF
  CRHD9~HR
  CRHD9~PRVBE
  CRHD9~SUBSYS
  CRHD9~BDEGR
  CRHD9~RGEKZ
  CRHD9~HRTYP
  CRHD9~SLWID
  CRHD9~LIFNR
  CRHD9~SLWID_REF
  CRHD9~LIFNR_REF
  CRHD9~VGARB
  CRHD9~VGDIM
  CRHD9~HRPLVAR
  CRHD9~VGDAU
  CRHD9~STOBJ
  CRHD9~RESGR
  CRHD9~LGORT_RES
  CRHD9~MIXMAT
  CRHD9~ISTBED_KZ
  CRTX9~AEDAT_TEXT
  CRTX9~AENAM_TEXT
  CRTX9~KTEXT
  CRTX9~KTEXT_UP
  T001K9~BUKRS
  CRTX9~SPRAS
  T001W9~EKORG
  T001W9~BWKEY
  T001K9~BWKEY
  T001W9~WERKS
  CRTX9~OBJTY
  CRTX9~OBJID
into (CRHD9MANDT,
  CRHD9OBJTY,
  CRHD9OBJID,
  CRHD9BEGDA,
  CRHD9ENDDA,
  CRHD9AEDAT_GRND,
  CRHD9AENAM_GRND,
  CRHD9AEDAT_VORA,
  CRHD9AENAM_VORA,
  CRHD9AEDAT_TERM,
  CRHD9AENAM_TERM,
  CRHD9AEDAT_TECH,
  CRHD9AENAM_TECH,
  CRHD9ARBPL,
  CRHD9WERKS,
  CRHD9VERWE,
  CRHD9LVORM,
  CRHD9PAR01,
  CRHD9PAR02,
  CRHD9PAR03,
  CRHD9PAR04,
  CRHD9PAR05,
  CRHD9PAR06,
  CRHD9PARU1,
  CRHD9PARU2,
  CRHD9PARU3,
  CRHD9PARU4,
  CRHD9PARU5,
  CRHD9PARU6,
  CRHD9PARV1,
  CRHD9PARV2,
  CRHD9PARV3,
  CRHD9PARV4,
  CRHD9PARV5,
  CRHD9PARV6,
  CRHD9PLANV,
  CRHD9STAND,
  CRHD9VERAN,
  CRHD9VGWTS,
  CRHD9VGM01,
  CRHD9VGM02,
  CRHD9VGM03,
  CRHD9VGM04,
  CRHD9VGM05,
  CRHD9VGM06,
  CRHD9XDEFA,
  CRHD9XKOST,
  CRHD9XSPRR,
  CRHD9XTERM,
  CRHD9ZGR01,
  CRHD9ZGR02,
  CRHD9ZGR03,
  CRHD9ZGR04,
  CRHD9ZGR05,
  CRHD9ZGR06,
  CRHD9KTSCH,
  CRHD9LOANZ,
  CRHD9LOART,
  CRHD9LOGRP,
  CRHD9QUALF,
  CRHD9RASCH,
  CRHD9STEUS,
  CRHD9VGE01,
  CRHD9VGE02,
  CRHD9VGE03,
  CRHD9VGE04,
  CRHD9VGE05,
  CRHD9VGE06,
  CRHD9KTSCH_REF,
  CRHD9LOART_REF,
  CRHD9LOANZ_REF,
  CRHD9LOGRP_REF,
  CRHD9QUALF_REF,
  CRHD9RASCH_REF,
  CRHD9STEUS_REF,
  CRHD9FORT1,
  CRHD9FORT2,
  CRHD9FORT3,
  CRHD9KAPID,
  CRHD9ORTGR,
  CRHD9ZEIWN,
  CRHD9ZWNOR,
  CRHD9ZEIWM,
  CRHD9ZWMIN,
  CRHD9FORMR,
  CRHD9MATYP,
  CRHD9CPLGR,
  CRHD9SORTB,
  CRHD9MTRVP,
  CRHD9MTMVP,
  CRHD9MTPVP,
  CRHD9RSANZ,
  CRHD9PDEST,
  CRHD9HROID,
  CRHD9FORTN,
  CRHD9ZGR01_REF,
  CRHD9ZGR02_REF,
  CRHD9ZGR03_REF,
  CRHD9ZGR04_REF,
  CRHD9ZGR05_REF,
  CRHD9ZGR06_REF,
  CRHD9STEUS_C,
  CRHD9STEUS_I,
  CRHD9STEUS_N,
  CRHD9STEUS_Q,
  CRHD9RUZUS,
  CRHD9RSANZ_REF,
  CRHD9HR,
  CRHD9PRVBE,
  CRHD9SUBSYS,
  CRHD9BDEGR,
  CRHD9RGEKZ,
  CRHD9HRTYP,
  CRHD9SLWID,
  CRHD9LIFNR,
  CRHD9SLWID_REF,
  CRHD9LIFNR_REF,
  CRHD9VGARB,
  CRHD9VGDIM,
  CRHD9HRPLVAR,
  CRHD9VGDAU,
  CRHD9STOBJ,
  CRHD9RESGR,
  CRHD9LGORT_RES,
  CRHD9MIXMAT,
  CRHD9ISTBED_KZ,
  CRTX9AEDAT_TEXT,
  CRTX9AENAM_TEXT,
  CRTX9KTEXT,
  CRTX9KTEXT_UP,
  T001K9BUKRS,
  CRTX9SPRAS,
  T001W9EKORG,
  T001W9BWKEY,
  T001K9BWKEY,
  T001W9WERKS,
  CRTX9OBJTY,
  CRTX9OBJID)
FROM CRHD AS CRHD9
 INNER JOIN CRTX AS CRTX9
 ON ( ( CRHD9~OBJID = CRTX9~OBJID )
 AND ( CRHD9~OBJTY = CRTX9~OBJTY ) )
 INNER JOIN T001W AS T001W9
 ON ( CRHD9~WERKS = T001W9~WERKS )
 INNER JOIN T001K AS T001K9
 ON ( T001W9~BWKEY = T001K9~BWKEY )
WHERE ( ( ( ( T001W9~EKORG = '1000' )
 OR ( T001W9~EKORG = '' ) )
 OR ( T001W9~EKORG like '%01' ) )
 AND ( CRTX9~SPRAS = 'E' ) )
ORDER BY CRHD9~ARBPL
.
ALTMP1 = CRHD9MANDT.
ALTMP2 = CRHD9OBJTY.
ALTMP3 = CRHD9OBJID.
ALTMP4 = CRHD9BEGDA.
ALTMP5 = CRHD9ENDDA.
ALTMP6 = CRHD9AEDAT_GRND.
ALTMP7 = CRHD9AENAM_GRND.
ALTMP8 = CRHD9AEDAT_VORA.
ALTMP9 = CRHD9AENAM_VORA.
ALTMP10 = CRHD9AEDAT_TERM.
ALTMP11 = CRHD9AENAM_TERM.
ALTMP12 = CRHD9AEDAT_TECH.
ALTMP13 = CRHD9AENAM_TECH.
ALTMP14 = CRHD9ARBPL.
ALTMP15 = CRHD9WERKS.
ALTMP16 = CRHD9VERWE.
ALTMP17 = CRHD9LVORM.
ALTMP18 = CRHD9PAR01.
ALTMP19 = CRHD9PAR02.
ALTMP20 = CRHD9PAR03.
ALTMP21 = CRHD9PAR04.
ALTMP22 = CRHD9PAR05.
ALTMP23 = CRHD9PAR06.
ALTMP24 = CRHD9PARU1.
ALTMP25 = CRHD9PARU2.
ALTMP26 = CRHD9PARU3.
ALTMP27 = CRHD9PARU4.
ALTMP28 = CRHD9PARU5.
ALTMP29 = CRHD9PARU6.
ALTMP30 = CRHD9PARV1.
ALTMP31 = CRHD9PARV2.
ALTMP32 = CRHD9PARV3.
ALTMP33 = CRHD9PARV4.
ALTMP34 = CRHD9PARV5.
ALTMP35 = CRHD9PARV6.
ALTMP36 = CRHD9PLANV.
ALTMP37 = CRHD9STAND.
ALTMP38 = CRHD9VERAN.
ALTMP39 = CRHD9VGWTS.
ALTMP40 = CRHD9VGM01.
ALTMP41 = CRHD9VGM02.
ALTMP42 = CRHD9VGM03.
ALTMP43 = CRHD9VGM04.
ALTMP44 = CRHD9VGM05.
ALTMP45 = CRHD9VGM06.
ALTMP46 = CRHD9XDEFA.
ALTMP47 = CRHD9XKOST.
ALTMP48 = CRHD9XSPRR.
ALTMP49 = CRHD9XTERM.
ALTMP50 = CRHD9ZGR01.
ALTMP51 = CRHD9ZGR02.
ALTMP52 = CRHD9ZGR03.
ALTMP53 = CRHD9ZGR04.
ALTMP54 = CRHD9ZGR05.
ALTMP55 = CRHD9ZGR06.
ALTMP56 = CRHD9KTSCH.
ALTMP57 = CRHD9LOANZ.
ALTMP58 = CRHD9LOART.
ALTMP59 = CRHD9LOGRP.
ALTMP60 = CRHD9QUALF.
ALTMP61 = CRHD9RASCH.
ALTMP62 = CRHD9STEUS.
ALTMP63 = CRHD9VGE01.
ALTMP64 = CRHD9VGE02.
ALTMP65 = CRHD9VGE03.
ALTMP66 = CRHD9VGE04.
ALTMP67 = CRHD9VGE05.
ALTMP68 = CRHD9VGE06.
ALTMP69 = CRHD9KTSCH_REF.
ALTMP70 = CRHD9LOART_REF.
ALTMP71 = CRHD9LOANZ_REF.
ALTMP72 = CRHD9LOGRP_REF.
ALTMP73 = CRHD9QUALF_REF.
ALTMP74 = CRHD9RASCH_REF.
ALTMP75 = CRHD9STEUS_REF.
ALTMP76 = CRHD9FORT1.
ALTMP77 = CRHD9FORT2.
ALTMP78 = CRHD9FORT3.
ALTMP79 = CRHD9KAPID.
ALTMP80 = CRHD9ORTGR.
ALTMP81 = CRHD9ZEIWN.
ALTMP82 = CRHD9ZWNOR.
ALTMP83 = CRHD9ZEIWM.
ALTMP84 = CRHD9ZWMIN.
ALTMP85 = CRHD9FORMR.
ALTMP86 = CRHD9MATYP.
ALTMP87 = CRHD9CPLGR.
ALTMP88 = CRHD9SORTB.
ALTMP89 = CRHD9MTRVP.
ALTMP90 = CRHD9MTMVP.
ALTMP91 = CRHD9MTPVP.
ALTMP92 = CRHD9RSANZ.
ALTMP93 = CRHD9PDEST.
ALTMP94 = CRHD9HROID.
ALTMP95 = CRHD9FORTN.
ALTMP96 = CRHD9ZGR01_REF.
ALTMP97 = CRHD9ZGR02_REF.
ALTMP98 = CRHD9ZGR03_REF.
ALTMP99 = CRHD9ZGR04_REF.
ALTMP100 = CRHD9ZGR05_REF.
ALTMP101 = CRHD9ZGR06_REF.
ALTMP102 = CRHD9STEUS_C.
ALTMP103 = CRHD9STEUS_I.
ALTMP104 = CRHD9STEUS_N.
ALTMP105 = CRHD9STEUS_Q.
ALTMP106 = CRHD9RUZUS.
ALTMP107 = CRHD9RSANZ_REF.
ALTMP108 = CRHD9HR.
ALTMP109 = CRHD9PRVBE.
ALTMP110 = CRHD9SUBSYS.
ALTMP111 = CRHD9BDEGR.
ALTMP112 = CRHD9RGEKZ.
ALTMP113 = CRHD9HRTYP.
ALTMP114 = CRHD9SLWID.
ALTMP115 = CRHD9LIFNR.
ALTMP116 = CRHD9SLWID_REF.
ALTMP117 = CRHD9LIFNR_REF.
ALTMP118 = CRHD9VGARB.
ALTMP119 = CRHD9VGDIM.
ALTMP120 = CRHD9HRPLVAR.
ALTMP121 = CRHD9VGDAU.
ALTMP122 = CRHD9STOBJ.
ALTMP123 = CRHD9RESGR.
ALTMP124 = CRHD9LGORT_RES.
ALTMP125 = CRHD9MIXMAT.
ALTMP126 = CRHD9ISTBED_KZ.
ALTMP127 = CRTX9AEDAT_TEXT.
ALTMP128 = CRTX9AENAM_TEXT.
ALTMP129 = CRTX9KTEXT.
ALTMP130 = CRTX9KTEXT_UP.
ALTMP131 = T001K9BUKRS.
 move ALTMP1 to ITAB5-MANDT.
 move ALTMP2 to ITAB5-OBJTY.
 move ALTMP3 to ITAB5-OBJID.
 move ALTMP4 to ITAB5-BEGDA.
 move ALTMP5 to ITAB5-ENDDA.
 move ALTMP6 to ITAB5-AEDAT_GRND.
 move ALTMP7 to ITAB5-AENAM_GRND.
 move ALTMP8 to ITAB5-AEDAT_VORA.
 move ALTMP9 to ITAB5-AENAM_VORA.
 move ALTMP10 to ITAB5-AEDAT_TERM.
 move ALTMP11 to ITAB5-AENAM_TERM.
 move ALTMP12 to ITAB5-AEDAT_TECH.
 move ALTMP13 to ITAB5-AENAM_TECH.
 move ALTMP14 to ITAB5-ARBPL.
 move ALTMP15 to ITAB5-WERKS.
 move ALTMP16 to ITAB5-VERWE.
 move ALTMP17 to ITAB5-LVORM.
 move ALTMP18 to ITAB5-PAR01.
 move ALTMP19 to ITAB5-PAR02.
 move ALTMP20 to ITAB5-PAR03.
 move ALTMP21 to ITAB5-PAR04.
 move ALTMP22 to ITAB5-PAR05.
 move ALTMP23 to ITAB5-PAR06.
 move ALTMP24 to ITAB5-PARU1.
 move ALTMP25 to ITAB5-PARU2.
 move ALTMP26 to ITAB5-PARU3.
 move ALTMP27 to ITAB5-PARU4.
 move ALTMP28 to ITAB5-PARU5.
 move ALTMP29 to ITAB5-PARU6.
 move ALTMP30 to ITAB5-PARV1.
 move ALTMP31 to ITAB5-PARV2.
 move ALTMP32 to ITAB5-PARV3.
 move ALTMP33 to ITAB5-PARV4.
 move ALTMP34 to ITAB5-PARV5.
 move ALTMP35 to ITAB5-PARV6.
 move ALTMP36 to ITAB5-PLANV.
 move ALTMP37 to ITAB5-STAND.
 move ALTMP38 to ITAB5-VERAN.
 move ALTMP39 to ITAB5-VGWTS.
 move ALTMP40 to ITAB5-VGM01.
 move ALTMP41 to ITAB5-VGM02.
 move ALTMP42 to ITAB5-VGM03.
 move ALTMP43 to ITAB5-VGM04.
 move ALTMP44 to ITAB5-VGM05.
 move ALTMP45 to ITAB5-VGM06.
 move ALTMP46 to ITAB5-XDEFA.
 move ALTMP47 to ITAB5-XKOST.
 move ALTMP48 to ITAB5-XSPRR.
 move ALTMP49 to ITAB5-XTERM.
 move ALTMP50 to ITAB5-ZGR01.
 move ALTMP51 to ITAB5-ZGR02.
 move ALTMP52 to ITAB5-ZGR03.
 move ALTMP53 to ITAB5-ZGR04.
 move ALTMP54 to ITAB5-ZGR05.
 move ALTMP55 to ITAB5-ZGR06.
 move ALTMP56 to ITAB5-KTSCH.
 move ALTMP57 to ITAB5-LOANZ.
 move ALTMP58 to ITAB5-LOART.
 move ALTMP59 to ITAB5-LOGRP.
 move ALTMP60 to ITAB5-QUALF.
 move ALTMP61 to ITAB5-RASCH.
 move ALTMP62 to ITAB5-STEUS.
 move ALTMP63 to ITAB5-VGE01.
 move ALTMP64 to ITAB5-VGE02.
 move ALTMP65 to ITAB5-VGE03.
 move ALTMP66 to ITAB5-VGE04.
 move ALTMP67 to ITAB5-VGE05.
 move ALTMP68 to ITAB5-VGE06.
 move ALTMP69 to ITAB5-KTSCH_REF.
 move ALTMP70 to ITAB5-LOART_REF.
 move ALTMP71 to ITAB5-LOANZ_REF.
 move ALTMP72 to ITAB5-LOGRP_REF.
 move ALTMP73 to ITAB5-QUALF_REF.
 move ALTMP74 to ITAB5-RASCH_REF.
 move ALTMP75 to ITAB5-STEUS_REF.
 move ALTMP76 to ITAB5-FORT1.
 move ALTMP77 to ITAB5-FORT2.
 move ALTMP78 to ITAB5-FORT3.
 move ALTMP79 to ITAB5-KAPID.
 move ALTMP80 to ITAB5-ORTGR.
 move ALTMP81 to ITAB5-ZEIWN.
 move ALTMP82 to ITAB5-ZWNOR.
 move ALTMP83 to ITAB5-ZEIWM.
 move ALTMP84 to ITAB5-ZWMIN.
 move ALTMP85 to ITAB5-FORMR.
 move ALTMP86 to ITAB5-MATYP.
 move ALTMP87 to ITAB5-CPLGR.
 move ALTMP88 to ITAB5-SORTB.
 move ALTMP89 to ITAB5-MTRVP.
 move ALTMP90 to ITAB5-MTMVP.
 move ALTMP91 to ITAB5-MTPVP.
 move ALTMP92 to ITAB5-RSANZ.
 move ALTMP93 to ITAB5-PDEST.
 move ALTMP94 to ITAB5-HROID.
 move ALTMP95 to ITAB5-FORTN.
 move ALTMP96 to ITAB5-ZGR01_REF.
 move ALTMP97 to ITAB5-ZGR02_REF.
 move ALTMP98 to ITAB5-ZGR03_REF.
 move ALTMP99 to ITAB5-ZGR04_REF.
 move ALTMP100 to ITAB5-ZGR05_REF.
 move ALTMP101 to ITAB5-ZGR06_REF.
 move ALTMP102 to ITAB5-STEUS_C.
 move ALTMP103 to ITAB5-STEUS_I.
 move ALTMP104 to ITAB5-STEUS_N.
 move ALTMP105 to ITAB5-STEUS_Q.
 move ALTMP106 to ITAB5-RUZUS.
 move ALTMP107 to ITAB5-RSANZ_REF.
 move ALTMP108 to ITAB5-HR.
 move ALTMP109 to ITAB5-PRVBE.
 move ALTMP110 to ITAB5-SUBSYS.
 move ALTMP111 to ITAB5-BDEGR.
 move ALTMP112 to ITAB5-RGEKZ.
 move ALTMP113 to ITAB5-HRTYP.
 move ALTMP114 to ITAB5-SLWID.
 move ALTMP115 to ITAB5-LIFNR.
 move ALTMP116 to ITAB5-SLWID_REF.
 move ALTMP117 to ITAB5-LIFNR_REF.
 move ALTMP118 to ITAB5-VGARB.
 move ALTMP119 to ITAB5-VGDIM.
 move ALTMP120 to ITAB5-HRPLVAR.
 move ALTMP121 to ITAB5-VGDAU.
 move ALTMP122 to ITAB5-STOBJ.
 move ALTMP123 to ITAB5-RESGR.
 move ALTMP124 to ITAB5-LGORT_RES.
 move ALTMP125 to ITAB5-MIXMAT.
 move ALTMP126 to ITAB5-ISTBED_KZ.
 move ALTMP127 to ITAB5-AEDAT_TEXT.
 move ALTMP128 to ITAB5-AENAM_TEXT.
 move ALTMP129 to ITAB5-KTEXT.
 move ALTMP130 to ITAB5-KTEXT_UP.
 move ALTMP131 to ITAB5-BUKRS.
 append ITAB5.
 cntbuf = cntbuf + 1.
 if download = 'N'.
  if cntbuf > 5000.
    perform FORM6.
    clear cntbuf.
    refresh ITAB5.
    append_flag = 'A'.
  endif.
 endif.
 if download = 'S'.
  if cntbuf > P_PKGSZ.
    perform FORM6.
    clear cntbuf.
    refresh ITAB5.
  endif.
 endif.
ENDSELECT.
ENDFORM.

FORM FORM6.
data: outfile(512), ldfile(50).
ldfile = 'CTS_LZ_SAP_CP1_CRHD'.
concatenate out_dir ldfile into outfile
  separated by '/'.
  IF DOWNLOAD = 'S'.
     DATA: error_message(700),mtext(800),iEOP(1).
     CALL FUNCTION P_SRVFM
          DESTINATION P_DEST
          KEEPING LOGICAL UNIT OF WORK
          EXPORTING
            EOS = last_batch
          IMPORTING
            EOP = iEOP
          TABLES
            E_TABLE = ITAB5
          EXCEPTIONS
            READ_ERROR = 1
            SYSTEM_FAILURE = 2
            MESSAGE error_message
            COMMUNICATION_FAILURE = 3
            MESSAGE error_message
            OTHERS = 4.

     IF sy-subrc ne 0.
        Case sy-subrc.
        when 1.
        CONCATENATE
        'Data Services read error. '
        'Check Data Services error log.'
        INTO mtext.
        MESSAGE  E240(S#) WITH mtext.
        when 2.
        CONCATENATE
'SAP System Failure while calling DS remote function: '
      error_message INTO mtext.
        MESSAGE  E240(S#) WITH mtext.
        when 3.
        CONCATENATE
'SAP System Failure while calling DS remote function: '
      error_message INTO mtext.
        MESSAGE  E240(S#) WITH mtext.
        when 4.
        MESSAGE  E240(S#) WITH
'Other SAP System Failure while calling DS remote function.'.
        endcase.
      ENDIF.
      IF iEOP = 'X'.
         PERFORM DISCONNECT_RFCDEST_FROM_PROGID.
         LEAVE PROGRAM.
       ENDIF.
  ELSE.
data  dlmtlen type i value '1'.
data xdlmtlen type i value '1'.
data:
  ht(1) type c,
  xht(1) type x,
  conv type ref to cl_abap_conv_in_ce.
xht = '7F'.
conv = cl_abap_conv_in_ce=>create(
  encoding = '1100'
  input = xht
).
call method conv->read(
  exporting n    = xdlmtlen
  importing data = ht
            len = dlmtlen
).
data return_code type i.
 perform write_delimited_file
           tables   ITAB5
           using    outfile
                    append_flag
                    ht
                    dlmtlen
                    download
           changing return_code.

  case return_code.
    when 1.
      IF EXECMODE = 'D'.
        WRITE: /5 'No line selected'.
      ELSE.
        MESSAGE E047(S#).
      ENDIF.
    when 2.
      IF EXECMODE = 'D'.
        WRITE: /5 'Open File Error -- ', 25 OUTFILE.
      ELSE.
        MESSAGE  E084(E0) WITH OUTFILE.
      ENDIF.
    when 3.
      IF EXECMODE = 'D'.
        WRITE: /5 'Data exceed length limit (8192) '.
      ELSE.
        MESSAGE  E240(S#) WITH
             'Data exceed length limit (8192) '.
      ENDIF.
    when 4.
      IF EXECMODE = 'D'.
        WRITE: /5 'Call function WS_DOWNLOAD error'.
      ELSE.
        MESSAGE  E240(S#) WITH
             'Call function WS_DOWNLOAD error'.
      ENDIF.
  endcase.
 ENDIF.
ENDFORM.

FORM SUBSTRING USING SRC BEG LEN CHANGING RET.

DATA: VA1 TYPE I.
DATA: VA2 TYPE I.
DATA: VA3 TYPE I.

VA3 = STRLEN( SRC ).

IF  BEG = 0.   VA1 = 0.
ELSE.
  IF  BEG < 0.
    VA1 = VA3 + BEG.
    IF  VA1 < 0.   VA1 = 0.
    ENDIF.
  ELSE.          VA1 = BEG - 1.
  ENDIF.
ENDIF.

IF  LEN < 0.   VA2 = 0.
ELSE.          VA2 = VA3 - VA1.
ENDIF.

IF  VA2 > LEN. VA2 = LEN.
ENDIF.

IF  VA2 < 1.   MOVE ''           TO RET.
ELSE.          MOVE SRC+VA1(VA2) TO RET.
ENDIF.

ENDFORM.

form write_delimited_file
           tables   datatab
           using    file
                    append
                    delimit
                    dlength
                    dwnload
          changing rc.

  data: type1,
        appd(1),
        temp(32),
        time1(8),
        date1(10),
        output(8192),
        rcount type i,
        offset type i,
        tablen type i,
        maxlen type i value '8192'.

  data: begin of clientab occurs 0,
             output(8192),
          end of clientab.

  field-symbols: <f>.
  field-symbols <delim1>.
  data delim2(16).
  data l_filename type string.

  appd = append.
  if appd is not initial.
     appd = 'X'.
  endif.
  move file to l_filename.
  describe table datatab lines tablen.


  if dwnload = 'Y'.
     clear clientab. refresh clientab.
     rcount = 0.
  else.
     if appd = space.
   open dataset file for output in text mode ENCODING UTF-8.
     else.
    open dataset file for appending in text mode ENCODING UTF-8.

     endif.
     if sy-subrc <> 0.
         rc = 2. exit.
     endif.
  endif.

  loop at datatab.
    clear: tablen, offset, output.
    do.
      assign component sy-index of
         structure datatab to <f>.
      if sy-subrc <> 0. exit. endif.
      if sy-index > 1.
         assign delimit(dlength) TO <delim1> CASTING TYPE C.
         delim2 = <delim1>.
         write delim2(dlength) to output+offset(dlength).
         add dlength to offset.
      endif.

      describe field <f> type type1.

      if type1 = 'I' or type1 = 'N'.
          type1 = 'P'.
      endif.

      case type1.
        when 'D'.
          if <f> = '00000000'.
             <f> = ' '.
          else.
             move <f> to time1.
             assign time1 to <f>.
          endif.
        when 'F'.
          if <f> = '0.0'.
            temp = '0.0'.
          else.
             write <f> to temp exponent 0.
          endif.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
        when 'P'.
          if <f> < 0.
             write '-' to output+offset(1).
             add 1 to offset.
             <f> = <f> * ( -1 ).
          endif.
          move <f> to temp.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
      endcase.

      sy-fdpos = strlen( <f> ).

      tablen = offset + sy-fdpos.
      if tablen > maxlen.
         rc = 3. exit.
      endif.
      write <f> to output+offset(sy-fdpos).
      add sy-fdpos to offset.
    enddo.

    if dwnload = 'Y'.
       clientab-output = output.
       append clientab.
       rcount = rcount + 1.
       if rcount >= 50.
          SY-BATCH = SPACE.
          CALL FUNCTION 'GUI_DOWNLOAD'
            EXPORTING
              FILENAME = l_filename
              FILETYPE = 'ASC'
              CODEPAGE = '4110'
              APPEND   = appd
              WRITE_FIELD_SEPARATOR = 'X'
*            IMPORTING
*              FILELENGTH =
            TABLES
              DATA_TAB = clientab
            EXCEPTIONS
              OTHERS = 1.
          if sy-subrc <> 0.
             rc = 4.
          endif.
          clear clientab. refresh clientab.
          rcount = 0. appd = 'A'.
       endif.
    else.
       transfer output to file.
    endif.
  endloop.

  if dwnload = 'Y'.
       SY-BATCH = SPACE.
       CALL FUNCTION 'GUI_DOWNLOAD'
         EXPORTING
           FILENAME = l_filename
           FILETYPE = 'ASC'
              CODEPAGE = '4110'
           APPEND   = appd
           WRITE_FIELD_SEPARATOR = 'X'
*         IMPORTING
*           FILELENGTH =
         TABLES
           DATA_TAB = clientab
         EXCEPTIONS
           OTHERS = 1.
          if sy-subrc <> 0.
             rc = 4.
          endif.
  else.
       close dataset file.
  endif.
endform.

FORM CONNECT_RFCDEST_TO_PROGID.
 INCLUDE rfctypes.

 DATA: len     type i,
       R3NAME(4),
       SYSTNR(2),
       uid     LIKE SYS_UID,
       options LIKE RFCOPT,
       isunicode  TYPE n.

 DATA: NTOTAL     LIKE GWY_STRUCT-NOREG,
       GWY_GWHOST LIKE GWY_STRUCT-GWHOST,
       GWY_GWSERV LIKE GWY_STRUCT-GWSERV,
       GWY_TPNAME LIKE GWY_SYSTEM-TPNAME.

 TABLES: RFCSI.

* Check program ID
 IF P_PROGID = SPACE.							
    RAISE INVALID_PROGRAM_ID.
 ENDIF.

* determine if the RFC destination authority
  CALL FUNCTION 'RFC_READ_TCPIP_DESTINATION'
       EXPORTING destination = P_DEST
                 authority_check = 'X'
  IMPORTING rfcunicode = isunicode.

* Use current gateway if no info exits
 IF P_GWHOST = SPACE OR P_GWSERV = SPACE.
  CALL FUNCTION 'RFC_SYSTEM_INFO'
      IMPORTING
          RFCSI_EXPORT = RFCSI.

  len = strlen( rfcsi-rfcdest ) - 2.
  systnr = rfcsi-rfcdest+len.
  len = len - 1 - 3.
  r3name = rfcsi-rfcdest+len(3).
  len = len - 1.
  options-rfcgwhost = rfcsi-rfcdest(len).
  CONCATENATE 'sapgw' SYSTNR INTO options-rfcgwserv.
 ELSE.
   options-rfcgwhost = P_GWHOST.
   options-rfcgwserv = P_GWSERV.
 ENDIF.

* Parameters for GWY function call
  GWY_GWHOST = OPTIONS-RFCGWHOST.
  GWY_GWSERV = OPTIONS-RFCGWSERV.
  GWY_TPNAME = P_PROGID.

* Check gateway and server program registered
  CALL FUNCTION 'GWY_GET_NO_REG_PROGRAMS'
     EXPORTING
        GWHOST      = GWY_GWHOST
        GWSERV      = GWY_GWSERV
        TPNAME      = GWY_TPNAME
     IMPORTING
        NOREG_TOTAL = NTOTAL
     EXCEPTIONS
        OTHERS      = 1.

  IF sy-subrc NE 0.
     raise CONNECT_TO_GATEWAY_FAILED.
  ENDIF.

  IF NTOTAL = 0.
     raise SERVER_NOT_REGISTERED.
  ENDIF.

  IF NTOTAL GT 1.
     raise DUPLICATE_REG_PROGRAMS.
  ENDIF.

* build new connection to a registered server
  options-rfcexec   = gwy_tpname.
  options-rfcgwhost = gwy_gwhost.
  options-rfcgwserv = gwy_gwserv.
  options-rfchost   = '%%RFCSERVER%%'.
  IF P_SNC_ON = 'X'.
    options-rfcsnc  = 'X'.
  ENDIF.

  CALL 'RFCControl' ID 'CODE' FIELD 'O'
                    ID 'DESTINATION' FIELD P_DEST
                    ID 'TYPE' FIELD rfctype_external_tcp
                    ID 'OPTIONS' FIELD options.

  IF sy-subrc NE 0.
     RAISE CONNECT_TO_REG_SERVER_FAILED.
   ENDIF.

* and set exclusive mode to keep server owned
  CALL FUNCTION 'SYSTEM_SET_REG_SERVER_PROPERTY'
      EXPORTING  destination = P_DEST
                 exclusiv    = 'Y'
      EXCEPTIONS connect_to_reg_server_failed = 1
                 exclusiv_not_supported       = 2.

  IF SY-SUBRC NE 0.
     CASE SY-SUBRC.
          WHEN 1.
              RAISE CONNECT_TO_REG_SERVER_FAILED.
          WHEN 2.
              RAISE EXCLUSIV_NOT_SUPPORTED.
     ENDCASE.
  ENDIF.

ENDFORM.

FORM DISCONNECT_RFCDEST_FROM_PROGID.
* set exclusive mode to E to end the session
  CALL FUNCTION 'SYSTEM_SET_REG_SERVER_PROPERTY'
     EXPORTING
         destination = P_DEST
         exclusiv    = 'E'
     EXCEPTIONS
         connect_to_reg_server_failed = 1				
         exclusiv_not_supported       = 2.
ENDFORM.
