*&---------------------------------------------------------------------*
*& Report  ZCVM_TEST_SCHEDULE_LINE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  zcvm_test_schedule_line.



DATA: lv_date LIKE sy-datum.
DATA: lv_subrc LIKE sy-subrc.
DATA: lv_ekpo LIKE ekpo.

DATA: lv_resb     LIKE resb,
      lv_rsdbs    LIKE rsdbs,
      lv_edp13    LIKE edp13,
      lv_sortf    LIKE resb-sortf.

DATA: ls_vbeln TYPE vbeln_va,
      ls_posnr TYPE posnr_va,
      ls_etenr TYPE etenr,
      ls_vbep  TYPE vbep.

DATA: it_vbap   TYPE vbap     OCCURS 0 WITH HEADER LINE,
      ls_headerx TYPE bapisdh1x,
      lt_item_in TYPE STANDARD TABLE OF bapisditm,
      ls_item_in TYPE bapisditm,
      lt_item_inx TYPE STANDARD TABLE OF bapisditmx,
      ls_item_inx TYPE bapisditmx,
      lt_sched_in TYPE STANDARD TABLE OF bapischdl,
      ls_sched_in TYPE bapischdl,
      lt_sched_inx TYPE STANDARD TABLE OF bapischdlx,
      ls_sched_inx TYPE bapischdlx,
      lt_return TYPE STANDARD TABLE OF bapiret2  .

DATA: lv_req_date TYPE datum,
      lv_dur      TYPE traztd,
      lv_dur_days TYPE traztd,
      lv_webaz    TYPE webaz,
      ls_vbap     TYPE vbap.

DATA: date_nok     TYPE boolean,
      lv_type      TYPE c,
      lv_t001w     LIKE t001w,
      it_dates     TYPE TABLE OF rke_dat WITH HEADER LINE,
      lv_work_days LIKE  komp-anz_tage,
      lv_tot_days TYPE traztd,
      lv_aufk   TYPE aufk,
      lv_objkey TYPE swo_typeid,
      lt_vbeln  TYPE vbeln_va OCCURS 0 WITH HEADER LINE.
*      it_vbap   TYPE vbap     OCCURS 0 WITH HEADER LINE,
.


DATA: lt_vbepek TYPE vbepek   OCCURS 0 WITH HEADER LINE,
      lv_plifz  TYPE plifz,
      lv_yse_em_plant TYPE yse_em_plant,
      lv_vstel  TYPE vstel.
DATA: first_delete TYPE c.

MOVE  '0000003956' TO ls_vbeln.

ls_headerx-updateflag = 'U'.

lv_date = '20080101'.

SELECT SINGLE *
INTO ls_vbep
FROM vbep
WHERE vbeln EQ ls_vbeln
AND posnr EQ 10 .

IF 1 EQ 2.
  SELECT *
  INTO ls_vbep
  FROM vbep
  WHERE vbeln EQ ls_vbeln
  AND   posnr EQ 10
  AND   bmeng NE 0
  AND   wmeng NE 0.
    IF sy-subrc EQ 0.
      ls_sched_in-itm_number  = ls_vbep-posnr.
      ls_sched_inx-itm_number = ls_vbep-posnr.
      ls_sched_inx-updateflag = 'D'.
      ls_sched_in-sched_line  = ls_vbep-etenr.
*    ls_sched_in-req_qty  = 0.
*    ls_sched_inx-req_qty = 'X'.
      APPEND ls_sched_in TO lt_sched_in.
      APPEND ls_sched_inx TO lt_sched_inx.
      MOVE 'X' TO first_delete.
    ENDIF.
  ENDSELECT.
  IF first_delete EQ 'X'.
*          CALL FUNCTION 'BAPI_SALESORDER_CHANGE' IN BACKGROUND TASK
    CALL FUNCTION 'BAPI_SALESORDER_CHANGE'
      EXPORTING
        salesdocument    = ls_vbeln
        order_header_inx = ls_headerx
      TABLES
        return           = lt_return
        schedule_lines   = lt_sched_in
        schedule_linesx  = lt_sched_inx.

    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'.
  ENDIF.
ENDIF.
*adjust quantity


ls_headerx-updateflag = 'U'.
CLEAR ls_etenr.
SELECT MIN( etenr )
INTO ls_etenr
FROM vbep
WHERE vbeln EQ ls_vbeln
AND   posnr EQ 10
AND   bmeng EQ 0.
ls_sched_in-itm_number = ls_vbep-posnr.
ls_sched_inx-itm_number = ls_vbep-posnr..
ls_sched_inx-updateflag = 'U'.
ls_sched_in-sched_line = ls_etenr.
ls_sched_inx-sched_line = ls_etenr.
ls_sched_in-req_qty = 10 - 7 - 2.
ls_sched_inx-req_qty = 'X'.
APPEND ls_sched_in TO lt_sched_in.
APPEND ls_sched_inx TO lt_sched_inx.

*confirmed quantity
CLEAR ls_etenr.
SELECT MAX( etenr )
INTO ls_etenr
FROM vbep
WHERE vbeln EQ ls_vbeln
AND   posnr EQ 10.
*and   bmeng eq 0.
IF sy-subrc EQ 0.
  ls_etenr = ls_etenr + 1.
ENDIF.
ls_sched_in-itm_number = ls_vbep-posnr.
ls_sched_inx-itm_number = ls_vbep-posnr.
ls_sched_inx-updateflag = 'I'.
ls_sched_in-req_date = lv_date.
ls_sched_inx-req_date = 'X'.
ls_sched_in-req_qty = 2.
ls_sched_inx-req_qty = 'X'.
ls_sched_in-sched_line = ls_etenr.
ls_sched_inx-sched_line = ls_etenr.
APPEND ls_sched_in TO lt_sched_in.
APPEND ls_sched_inx TO lt_sched_inx.


*  CALL FUNCTION 'BAPI_SALESORDER_CHANGE' IN BACKGROUND TASK
CALL FUNCTION 'BAPI_SALESORDER_CHANGE'
  EXPORTING
    salesdocument    = ls_vbeln
    order_header_inx = ls_headerx
  TABLES
    return           = lt_return
    schedule_lines   = lt_sched_in
    schedule_linesx  = lt_sched_inx.

CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'.
