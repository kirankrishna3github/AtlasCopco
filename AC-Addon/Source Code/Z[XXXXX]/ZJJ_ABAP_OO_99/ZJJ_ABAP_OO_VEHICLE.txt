*&       Class LCL_VEHICLE
*&---------------------------------------------------------------------*
*&       Interface LINTF_VEHICLE
*&---------------------------------------------------------------------*
*        Text
*----------------------------------------------------------------------*
INTERFACE LINTF_VEHICLE.
  METHODS:
    m_getMaxSpeed EXPORTING op_maxSpeed TYPE i,
    m_getCurrentSpeed EXPORTING op_currentSpeed TYPE i.
ENDINTERFACE.       "LINTF_VEHICLE
*&---------------------------------------------------------------------*
*        Text
*----------------------------------------------------------------------*
CLASS lcl_vehicle DEFINITION ABSTRACT.

  PUBLIC SECTION.
    INTERFACES: lintf_vehicle.

    METHODS:
          "m_getMaxSpeed EXPORTING op_maxSpeed TYPE i,
          m_setMaxSpeed IMPORTING ip_maxSpeed TYPE i,
          "m_getCurrentSpeed EXPORTING op_currentSpeed TYPE i,
          m_setCurrentSpeed IMPORTING ip_currentSpeed TYPE i,
          m_displayAttributes,
          m_accelerate ABSTRACT RAISING zcx_jj_ex1,
          constructor IMPORTING ip_maxSpeed TYPE i
                                ip_currentSpeed TYPE i.
    CLASS-METHODS:
          c_getNoOfVehicles EXPORTING op_noOfVehicles type i,
          c_setNoOfVehicles IMPORTING ip_noOfVehicles TYPE i.

  PRIVATE SECTION.
    CLASS-DATA:
          c_noOfVehicles TYPE i.
     DATA:
          m_maxSpeed TYPE i,
          m_currentSpeed TYPE i.


ENDCLASS.               "LCL_VEHICLE


*&---------------------------------------------------------------------*
*&       Class (Implementation)  lcl_vehicle
*&---------------------------------------------------------------------*
*        Text
*----------------------------------------------------------------------*
CLASS lcl_vehicle IMPLEMENTATION.

  METHOD lintf_vehicle~m_getMaxSpeed.
    op_maxSpeed = me->m_maxSpeed.
  ENDMETHOD.                    "m_getMaxSpeed

  METHOD m_setMaxSpeed.
    me->m_maxSpeed = ip_maxSpeed.
  ENDMETHOD.                    "m_setMaxSpeed

  METHOD lintf_vehicle~m_getCurrentSpeed.
    op_currentSpeed = me->m_currentSpeed.
  ENDMETHOD.                    "m_getCurrentSpeed

  METHOD m_setCurrentSpeed.
    me->m_currentSpeed = ip_currentSpeed.
  ENDMETHOD.                    "m_setCurrentSpeed

  METHOD m_displayAttributes.
    write: / 'Max speed: ' , me->m_maxSpeed.
    write: / 'Current speed: ' , me->m_currentSpeed.
  ENDMETHOD.                    "m_displayAttributes

  METHOD c_getNoOfVehicles.
    op_noOfVehicles = LCL_VEHICLE=>c_noOfVehicles.
  ENDMETHOD.                    "c_getNoOfVehicles

  METHOD c_setNoOfVehicles.
    lcl_vehicle=>c_noOfVehicles = ip_noOfVehicles.
  ENDMETHOD.                    "c_setNoOfVehicles

  "METHOD m_accelerate.
  "    IF me->m_currentSpeed <= 0.
  "      me->m_currentSpeed = 1.
  "    ELSE.
  "      me->m_currentSpeed = me->m_currentSpeed + 5.
  "    ENDIF.
  "  ENDMETHOD.                    "m_accelerate

  METHOD constructor.
    me->m_maxSpeed = ip_maxSpeed.
    me->m_currentSpeed = ip_currentSpeed.
    LCL_VEHICLE=>c_noOfVehicles = LCL_VEHICLE=>c_noOfVehicles + 1.
  ENDMETHOD.                    "constructor

ENDCLASS.               "lcl_vehicle

*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&       Class LCL_CAR
*&---------------------------------------------------------------------*
*        Text
*----------------------------------------------------------------------*
CLASS LCL_CAR DEFINITION INHERITING FROM lcl_vehicle.
  PUBLIC SECTION.

    METHODS:
      m_getCarType EXPORTING op_carType TYPE c,
      m_setCarType IMPORTING ip_carType TYPE c,
      constructor IMPORTING ip_maxSpeed TYPE i
                            ip_currentSpeed TYPE i
                            ip_carType TYPE c,
      m_displayAttributes REDEFINITION,
      m_accelerate REDEFINITION.

  PRIVATE SECTION.
    DATA: m_carType TYPE c LENGTH 10.

ENDCLASS.               "LCL_CAR

*----------------------------------------------------------------------*
*       CLASS LCL_CAR IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS LCL_CAR IMPLEMENTATION.
  METHOD m_getCarType.
    op_carType = me->m_carType.
  ENDMETHOD.                    "m_getCarType

  METHOD m_setCarType.
    me->m_carType = ip_carType.
  ENDMETHOD.                    "m_setCarType

  METHOD m_displayAttributes.
    super->m_displayAttributes( ).
    write: / 'Car type: ' , me->m_carType.
  ENDMETHOD.                    "m_displayAttributes

  METHOD constructor.
    super->constructor( ip_maxSpeed = ip_maxSpeed ip_currentSpeed = ip_currentSpeed ).
    me->m_carType = ip_carType.
  ENDMETHOD.                    "constructor

  METHOD m_accelerate.
    DATA: lv_currentSpeed TYPE i,
          lv_maxSpeed TYPE i.
    lintf_vehicle~m_getCurrentSpeed( IMPORTING op_currentSpeed = lv_currentSpeed ).
    IF lv_currentSpeed <= 0.
      me->m_setCurrentSpeed( EXPORTING ip_currentSpeed = 1 ).
    ELSE.
      lv_currentSpeed = lv_currentSpeed + 5.

      lintf_vehicle~m_getMaxSpeed( IMPORTING op_maxSpeed = lv_maxSpeed ).

      IF lv_currentSpeed > lv_maxSpeed.
        RAISE EXCEPTION TYPE ZCX_JJ_EX1 EXPORTING textid = ZCX_JJ_EX1=>TOO_FAST.
      ENDIF.

      me->m_setCurrentSpeed( EXPORTING ip_currentSpeed = lv_currentSpeed ).
    ENDIF.
  ENDMETHOD.

ENDCLASS.                    "LCL_CAR IMPLEMENTATION

*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&       Class LCL_TRUCK
*&---------------------------------------------------------------------*
*        Text
*----------------------------------------------------------------------*
CLASS LCL_TRUCK DEFINITION INHERITING FROM lcl_vehicle.

  PUBLIC SECTION.
    METHODS:
      m_getMaxCargo EXPORTING op_maxCargo TYPE i,
      m_setMaxCargo IMPORTING ip_maxCargo type i,
      m_displayAttributes REDEFINITION,
      constructor IMPORTING ip_maxSpeed TYPE i ip_currentSpeed TYPE i ip_maxCargo TYPE i,
      m_accelerate REDEFINITION.

  PRIVATE SECTION.
    DATA: m_maxCargo TYPE i.
ENDCLASS.               "LCL_TRUCK

*----------------------------------------------------------------------*
*       CLASS LCL_TRUCK IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS LCL_TRUCK IMPLEMENTATION.
  METHOD m_getMaxCargo.
    op_maxCargo = me->m_maxCargo.
  ENDMETHOD.                    "m_getMaxCargo

  METHOD m_setMaxCargo.
    me->m_maxCargo = ip_maxCargo.
  ENDMETHOD.                    "m_setMaxCargo

  METHOD m_displayAttributes.
    super->m_displayAttributes( ).
    write: / 'Max Cargo: ' , me->m_maxCargo.
  ENDMETHOD.                    "m_displayAttributes

  METHOD constructor.
    super->constructor( ip_maxSpeed = ip_maxSpeed ip_currentSpeed = ip_currentSpeed ).
    me->m_maxCargo = ip_maxCargo.
  ENDMETHOD.                    "constructor

  METHOD m_accelerate.
    DATA: lv_currentSpeed TYPE i.
    lintf_vehicle~m_getCurrentSpeed( IMPORTING op_currentSpeed = lv_currentSpeed ).
    IF lv_currentSpeed <= 0.
      me->m_setCurrentSpeed( EXPORTING ip_currentSpeed = 1 ).
    ELSE.
      lv_currentSpeed = lv_currentSpeed + 2.
      me->m_setCurrentSpeed( EXPORTING ip_currentSpeed = lv_currentSpeed ).
    ENDIF.
  ENDMETHOD.                    "m_accelerate

ENDCLASS.                    "LCL_TRUCK IMPLEMENTATION
