REPORT  ZM07CHDX_TEXT.

TABLES: mcha,
        stxh,
        stxl.

DATA: BEGIN OF istxh OCCURS 0.
        INCLUDE STRUCTURE stxh.
DATA: END OF istxh.

DATA: BEGIN OF istxl OCCURS 0.
        INCLUDE STRUCTURE stxl.
DATA: END OF istxl.

DATA: BEGIN OF dstxh OCCURS 0.
        INCLUDE STRUCTURE stxh.
DATA: END OF dstxh.

DATA: BEGIN OF dstxl OCCURS 0.
        INCLUDE STRUCTURE stxl.
DATA: END OF dstxl.

DATA: gt_mcha LIKE TABLE OF mcha WITH HEADER LINE.

DATA: gv_kzdch LIKE tcuch-kzdch,
      gv_matnr LIKE mcha-matnr,
      gv_werks LIKE mcha-werks,
      gv_charg LIKE mcha-charg,
      gv_texts LIKE sy-dbcnt.

PARAMETERS: testmode TYPE xfeld DEFAULT 'X'.

START-OF-SELECTION.

  CALL FUNCTION 'VB_BATCH_DEFINITION'
       IMPORTING
            kzdch = gv_kzdch.


  IF gv_kzdch EQ '0'.

    SELECT * FROM stxh WHERE tdobject = 'CHARGE'.
      gv_matnr = stxh-tdname(18).
      gv_werks = stxh-tdname+18(4).
      gv_charg = stxh-tdname+22(10).
      CHECK gv_werks EQ space.
      APPEND stxh TO dstxh.
      SELECT * FROM mcha WHERE matnr EQ gv_matnr
                           AND charg EQ gv_charg.
        istxh = stxh.
        istxh-tdname+18(4) = mcha-werks.
        APPEND istxh.
        APPEND mcha TO gt_mcha.
      ENDSELECT.
    ENDSELECT.

    SELECT * FROM stxl WHERE relid    = 'TX'
                         AND tdobject = 'CHARGE'.
      gv_matnr = stxl-tdname(18).
      gv_werks = stxl-tdname+18(4).
      gv_charg = stxl-tdname+22(10).
      CHECK gv_werks EQ space.
      APPEND stxl TO dstxl.
      SELECT * FROM mcha WHERE matnr EQ gv_matnr
                           AND charg EQ gv_charg.
        istxl = stxl.
        istxl-tdname+18(4) = mcha-werks.
        APPEND istxl.
      ENDSELECT.
    ENDSELECT.

    IF istxh[] IS INITIAL AND istxl[] IS INITIAL.
      WRITE:/ 'nothing to do...'.
    ELSE.
      DESCRIBE TABLE gt_mcha LINES gv_texts.
      WRITE:/ 'Batches without text-link'.
      SKIP.
      LOOP AT gt_mcha.
        WRITE:/ gt_mcha-matnr, gt_mcha-werks, gt_mcha-charg.
      ENDLOOP.
      SKIP.
      IF testmode IS INITIAL.
        INSERT stxh FROM TABLE istxh ACCEPTING DUPLICATE KEYS.
        DELETE stxh FROM TABLE dstxh.
        INSERT stxl FROM TABLE istxl ACCEPTING DUPLICATE KEYS.
        DELETE stxl FROM TABLE dstxl.
        WRITE:/ gv_texts, 'Records corrected...'.
      ELSE.
        WRITE:/ gv_texts, 'Records found in testmode'.
      ENDIF.
    ENDIF.

  ELSE.
    WRITE:/ 'Batch not on plant level => nothing to do...'.
  ENDIF.

*Selection text£º
*TESTMODE:        TESTMODE
