REPORT ZAL_ABAP message-id 26 line-size 255
no standard page heading.
* ZCP1_PLECSTDETD.
PARAMETER DOWNLOAD(1) DEFAULT 'S' lower case. "N-svr,Y-clnt
PARAMETER EXECMODE(1) DEFAULT 'B' lower case. "D-dlg,B-btch
PARAMETER OUT_DIR(48) DEFAULT "output file dir
'/var/load/CD1/UK/read' lower case.
PARAMETER IN_DIR(48) DEFAULT "input file dir
'/var/load/CD1/UK/read' lower case.
PARAMETER P_DEST TYPE RFCDES-RFCDEST DEFAULT
'NONE'.
PARAMETER P_PROGID TYPE RFCOPT-RFCEXEC DEFAULT
SPACE.
PARAMETER P_GWHOST TYPE RFCOPT-RFCGWHOST DEFAULT
SPACE.
PARAMETER P_GWSERV TYPE RFCOPT-RFCGWSERV DEFAULT
SPACE.
PARAMETER P_SRVFM(30) DEFAULT "Server Callback function
SPACE.
PARAMETER P_PKGSZ TYPE I DEFAULT "Stream package size
5000.
PARAMETER P_SNC_ON(1) DEFAULT "X-on SPACE-off
SPACE.

PARAMETER $PARAM1 TYPE D.

PARAMETER $PARAM2 TYPE D.

PARAMETER P_DF_VK(40) DEFAULT "ABAP data flow object key
'' lower case.
PARAMETER P_DI_GEN(40) DEFAULT "DI version that generated ABAP
'' lower case.

*** Machine generated ABAP. Do not modify.            ***
*** (C)Copyright Business Objects S.A.  All rights reserved. ***
*
* Date Time:
*    12/24/15 07:25:53
* SAP used for generated this ABAP:
*    Release: 701
*    Host   : 10.25.3.82
*
* ABAP Dataflow Name:
*    DF_R3_CTS_LZ_SAP_CP1_PLECSTDET_D
* ABAP Dataflow comments:
*  SAP Source : COSP / AUFK / PMSDO
* ABAP program name in SAP:
*  ZCP1_PLECSTDETD
* Generated ABAP file name:
*    //AIRSBEAP0512/D$/Data/SAPLogistics/VAL/ABAP/ZCP1_PLECSTDETD
TABLES COSP.
TABLES PMSDO.
TABLES AUFK.
TABLES COKEY.
TABLES ZSTC_SALES_COMP.

DATA: begin of ITAB6 occurs 0,
MANDT(3) TYPE C,
LEDNR(2) TYPE C,
OBJNR(22) TYPE C,
GJAHR(4) TYPE N,
WRTTP(2) TYPE C,
VERSN(3) TYPE C,
KSTAR(10) TYPE C,
HRKFT(14) TYPE C,
VRGNG(4) TYPE C,
VBUND(6) TYPE C,
PARGB(4) TYPE C,
BEKNZ(1) TYPE C,
TWAER(5) TYPE C,
PERBL(3) TYPE N,
WERKS(4) TYPE C,
MATNR(18) TYPE C,
MEINH(3) TYPE C,
WTG001(16) TYPE P DECIMALS 2,
WTG002(16) TYPE P DECIMALS 2,
WTG003(16) TYPE P DECIMALS 2,
WTG004(16) TYPE P DECIMALS 2,
WTG005(16) TYPE P DECIMALS 2,
WTG006(16) TYPE P DECIMALS 2,
WTG007(16) TYPE P DECIMALS 2,
WTG008(16) TYPE P DECIMALS 2,
WTG009(16) TYPE P DECIMALS 2,
WTG010(16) TYPE P DECIMALS 2,
WTG011(16) TYPE P DECIMALS 2,
WTG012(16) TYPE P DECIMALS 2,
WTG013(16) TYPE P DECIMALS 2,
WTG014(16) TYPE P DECIMALS 2,
WTG015(16) TYPE P DECIMALS 2,
WTG016(16) TYPE P DECIMALS 2,
WOG001(16) TYPE P DECIMALS 2,
WOG002(16) TYPE P DECIMALS 2,
WOG003(16) TYPE P DECIMALS 2,
WOG004(16) TYPE P DECIMALS 2,
WOG005(16) TYPE P DECIMALS 2,
WOG006(16) TYPE P DECIMALS 2,
WOG007(16) TYPE P DECIMALS 2,
WOG008(16) TYPE P DECIMALS 2,
WOG009(16) TYPE P DECIMALS 2,
WOG010(16) TYPE P DECIMALS 2,
WOG011(16) TYPE P DECIMALS 2,
WOG012(16) TYPE P DECIMALS 2,
WOG013(16) TYPE P DECIMALS 2,
WOG014(16) TYPE P DECIMALS 2,
WOG015(16) TYPE P DECIMALS 2,
WOG016(16) TYPE P DECIMALS 2,
WKG001(16) TYPE P DECIMALS 2,
WKG002(16) TYPE P DECIMALS 2,
WKG003(16) TYPE P DECIMALS 2,
WKG004(16) TYPE P DECIMALS 2,
WKG005(16) TYPE P DECIMALS 2,
WKG006(16) TYPE P DECIMALS 2,
WKG007(16) TYPE P DECIMALS 2,
WKG008(16) TYPE P DECIMALS 2,
WKG009(16) TYPE P DECIMALS 2,
WKG010(16) TYPE P DECIMALS 2,
WKG011(16) TYPE P DECIMALS 2,
WKG012(16) TYPE P DECIMALS 2,
WKG013(16) TYPE P DECIMALS 2,
WKG014(16) TYPE P DECIMALS 2,
WKG015(16) TYPE P DECIMALS 2,
WKG016(16) TYPE P DECIMALS 2,
WKF001(16) TYPE P DECIMALS 2,
WKF002(16) TYPE P DECIMALS 2,
WKF003(16) TYPE P DECIMALS 2,
WKF004(16) TYPE P DECIMALS 2,
WKF005(16) TYPE P DECIMALS 2,
WKF006(16) TYPE P DECIMALS 2,
WKF007(16) TYPE P DECIMALS 2,
WKF008(16) TYPE P DECIMALS 2,
WKF009(16) TYPE P DECIMALS 2,
WKF010(16) TYPE P DECIMALS 2,
WKF011(16) TYPE P DECIMALS 2,
WKF012(16) TYPE P DECIMALS 2,
WKF013(16) TYPE P DECIMALS 2,
WKF014(16) TYPE P DECIMALS 2,
WKF015(16) TYPE P DECIMALS 2,
WKF016(16) TYPE P DECIMALS 2,
PAG001(16) TYPE P DECIMALS 2,
PAG002(16) TYPE P DECIMALS 2,
PAG003(16) TYPE P DECIMALS 2,
PAG004(16) TYPE P DECIMALS 2,
PAG005(16) TYPE P DECIMALS 2,
PAG006(16) TYPE P DECIMALS 2,
PAG007(16) TYPE P DECIMALS 2,
PAG008(16) TYPE P DECIMALS 2,
PAG009(16) TYPE P DECIMALS 2,
PAG010(16) TYPE P DECIMALS 2,
PAG011(16) TYPE P DECIMALS 2,
PAG012(16) TYPE P DECIMALS 2,
PAG013(16) TYPE P DECIMALS 2,
PAG014(16) TYPE P DECIMALS 2,
PAG015(16) TYPE P DECIMALS 2,
PAG016(16) TYPE P DECIMALS 2,
MEG001(16) TYPE P DECIMALS 3,
MEG002(16) TYPE P DECIMALS 3,
MEG003(16) TYPE P DECIMALS 3,
MEG004(16) TYPE P DECIMALS 3,
MEG005(16) TYPE P DECIMALS 3,
MEG006(16) TYPE P DECIMALS 3,
MEG007(16) TYPE P DECIMALS 3,
MEG008(16) TYPE P DECIMALS 3,
MEG009(16) TYPE P DECIMALS 3,
MEG010(16) TYPE P DECIMALS 3,
MEG011(16) TYPE P DECIMALS 3,
MEG012(16) TYPE P DECIMALS 3,
MEG013(16) TYPE P DECIMALS 3,
MEG014(16) TYPE P DECIMALS 3,
MEG015(16) TYPE P DECIMALS 3,
MEG016(16) TYPE P DECIMALS 3,
MEF001(16) TYPE P DECIMALS 3,
MEF002(16) TYPE P DECIMALS 3,
MEF003(16) TYPE P DECIMALS 3,
MEF004(16) TYPE P DECIMALS 3,
MEF005(16) TYPE P DECIMALS 3,
MEF006(16) TYPE P DECIMALS 3,
MEF007(16) TYPE P DECIMALS 3,
MEF008(16) TYPE P DECIMALS 3,
MEF009(16) TYPE P DECIMALS 3,
MEF010(16) TYPE P DECIMALS 3,
MEF011(16) TYPE P DECIMALS 3,
MEF012(16) TYPE P DECIMALS 3,
MEF013(16) TYPE P DECIMALS 3,
MEF014(16) TYPE P DECIMALS 3,
MEF015(16) TYPE P DECIMALS 3,
MEF016(16) TYPE P DECIMALS 3,
MUV001(1) TYPE C,
MUV002(1) TYPE C,
MUV003(1) TYPE C,
MUV004(1) TYPE C,
MUV005(1) TYPE C,
MUV006(1) TYPE C,
MUV007(1) TYPE C,
MUV008(1) TYPE C,
MUV009(1) TYPE C,
MUV010(1) TYPE C,
MUV011(1) TYPE C,
MUV012(1) TYPE C,
MUV013(1) TYPE C,
MUV014(1) TYPE C,
MUV015(1) TYPE C,
MUV016(1) TYPE C,
BELTP(1) TYPE N,
TIMESTMP(16) TYPE P DECIMALS 0,
BUKRS(4) TYPE C,
FKBER(16) TYPE C,
SEGMENT(10) TYPE C,
GEBER(10) TYPE C,
GRANT_NBR(20) TYPE C,
BUDGET_PD(10) TYPE C,
VKORG(4) TYPE C,
AUFNR(12) TYPE C,
BEMOT(2) TYPE C,
WAERS(5) TYPE C,
Z_BUKRS(4) TYPE C,
Z_VKORG(4) TYPE C,
Z_WERKS(4) TYPE C,
Z_EKORG(4) TYPE C,
Z_MAMUSERCMPY(4) TYPE C,
Z_REGION(40) TYPE C,
Z_COUNTRY(40) TYPE C,
Z_COUNTRYDSCR(255) TYPE C,
Z_SALESCOMPANY(40) TYPE C,
Z_SALESCMPDSCR(255) TYPE C.
DATA: end of ITAB6.

data: append_flag(1) value ' ',
      cntbuf type i,
      delimleng type i,last_batch(1) value ' '.

CONSTANTS C_DF_VK(40) VALUE '1665'.
CONSTANTS C_DI_GEN(40) VALUE '14.2.3.660'.
DATA WARN_MSG(50).


DATA: gv_directory     TYPE epsdirnam  VALUE '/var/load/xxx/UK/read/',
      gv_logsys        LIKE tbdlst-logsys.

start-of-selection.
* Logical system
  CALL FUNCTION 'OWN_LOGICAL_SYSTEM_GET'
    IMPORTING
      own_logical_system             = gv_logsys
    EXCEPTIONS
      own_logical_system_not_defined = 1
      OTHERS                         = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE 'E' NUMBER sy-msgno
         WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    STOP.
  ENDIF.
  REPLACE 'xxx' IN out_dir WITH gv_logsys(3).
  REPLACE 'xxx' IN in_dir WITH gv_logsys(3).


  IF DOWNLOAD = 'S' OR
     DOWNLOAD = 'N' OR
     DOWNLOAD = 'Y'.
      .
  ELSE.
     DATA: m_xfer_err_msg(700).
     CONCATENATE
'ABAP program does not recognize this new '
'data transfer method: ' DOWNLOAD
'. Regenerate the ABAP program and upload to this system.'
     INTO m_xfer_err_msg.
     MESSAGE  E240(S#) WITH m_xfer_err_msg.
  ENDIF.

  IF EXECMODE = 'B' OR
     EXECMODE = 'D'.
      .
  ELSE.
     DATA: m_exec_err_msg(700).
     CONCATENATE
'ABAP program does not recognize this new '
'execution option: ' EXECMODE
'. Regenerate the ABAP program and upload to this system.'
     INTO m_exec_err_msg.
     MESSAGE  E240(S#) WITH m_exec_err_msg.
  ENDIF.

  IF DOWNLOAD = 'S'.
     PERFORM CONNECT_RFCDEST_TO_PROGID.
  ENDIF.



PERFORM FORM6.
last_batch = 'X'.
PERFORM FORM7.
FREE ITAB6.
  IF DOWNLOAD = 'S'.
     PERFORM DISCONNECT_RFCDEST_FROM_PROGID.
  ENDIF.


end-of-selection.

CLEAR WARN_MSG.

IF NOT P_DF_VK IS INITIAL.
  IF P_DF_VK <> C_DF_VK.
     CONCATENATE '$$Warning$'
                 C_DF_VK
                 '$' INTO WARN_MSG.
  ENDIF.
ENDIF.
IF NOT P_DI_GEN IS INITIAL.
  IF P_DI_GEN <> C_DI_GEN.
     IF WARN_MSG IS INITIAL.
       CONCATENATE '$$Warning$$'
                   C_DI_GEN
                   INTO WARN_MSG.
     ELSE.
       CONCATENATE WARN_MSG
                   C_DI_GEN
                   INTO WARN_MSG.
     ENDIF.
  ENDIF.
ENDIF.

IF NOT WARN_MSG IS INITIAL.
  IF EXECMODE = 'D'.
    WRITE WARN_MSG.
    NEW-LINE.
  ELSE.
    MESSAGE S240(S#) with WARN_MSG.
  ENDIF.
ENDIF.


write  '* Program Complete *'.
write  '(C)Copyright Business Objects S.A.  All rights reserved.'.

FORM FORM6.
DATA ALTMP436(3) TYPE C.
DATA ALTMP437(2) TYPE C.
DATA ALTMP438(22) TYPE C.
DATA ALTMP439(4) TYPE N.
DATA ALTMP440(2) TYPE C.
DATA ALTMP441(3) TYPE C.
DATA ALTMP442(10) TYPE C.
DATA ALTMP443(14) TYPE C.
DATA ALTMP444(4) TYPE C.
DATA ALTMP445(6) TYPE C.
DATA ALTMP446(4) TYPE C.
DATA ALTMP447(1) TYPE C.
DATA ALTMP448(5) TYPE C.
DATA ALTMP449(3) TYPE N.
DATA ALTMP450(4) TYPE C.
DATA ALTMP451(18) TYPE C.
DATA ALTMP452(3) TYPE C.
DATA ALTMP453(16) TYPE P DECIMALS 2.
DATA ALTMP454(16) TYPE P DECIMALS 2.
DATA ALTMP455(16) TYPE P DECIMALS 2.
DATA ALTMP456(16) TYPE P DECIMALS 2.
DATA ALTMP457(16) TYPE P DECIMALS 2.
DATA ALTMP458(16) TYPE P DECIMALS 2.
DATA ALTMP459(16) TYPE P DECIMALS 2.
DATA ALTMP460(16) TYPE P DECIMALS 2.
DATA ALTMP461(16) TYPE P DECIMALS 2.
DATA ALTMP462(16) TYPE P DECIMALS 2.
DATA ALTMP463(16) TYPE P DECIMALS 2.
DATA ALTMP464(16) TYPE P DECIMALS 2.
DATA ALTMP465(16) TYPE P DECIMALS 2.
DATA ALTMP466(16) TYPE P DECIMALS 2.
DATA ALTMP467(16) TYPE P DECIMALS 2.
DATA ALTMP468(16) TYPE P DECIMALS 2.
DATA ALTMP469(16) TYPE P DECIMALS 2.
DATA ALTMP470(16) TYPE P DECIMALS 2.
DATA ALTMP471(16) TYPE P DECIMALS 2.
DATA ALTMP472(16) TYPE P DECIMALS 2.
DATA ALTMP473(16) TYPE P DECIMALS 2.
DATA ALTMP474(16) TYPE P DECIMALS 2.
DATA ALTMP475(16) TYPE P DECIMALS 2.
DATA ALTMP476(16) TYPE P DECIMALS 2.
DATA ALTMP477(16) TYPE P DECIMALS 2.
DATA ALTMP478(16) TYPE P DECIMALS 2.
DATA ALTMP479(16) TYPE P DECIMALS 2.
DATA ALTMP480(16) TYPE P DECIMALS 2.
DATA ALTMP481(16) TYPE P DECIMALS 2.
DATA ALTMP482(16) TYPE P DECIMALS 2.
DATA ALTMP483(16) TYPE P DECIMALS 2.
DATA ALTMP484(16) TYPE P DECIMALS 2.
DATA ALTMP485(16) TYPE P DECIMALS 2.
DATA ALTMP486(16) TYPE P DECIMALS 2.
DATA ALTMP487(16) TYPE P DECIMALS 2.
DATA ALTMP488(16) TYPE P DECIMALS 2.
DATA ALTMP489(16) TYPE P DECIMALS 2.
DATA ALTMP490(16) TYPE P DECIMALS 2.
DATA ALTMP491(16) TYPE P DECIMALS 2.
DATA ALTMP492(16) TYPE P DECIMALS 2.
DATA ALTMP493(16) TYPE P DECIMALS 2.
DATA ALTMP494(16) TYPE P DECIMALS 2.
DATA ALTMP495(16) TYPE P DECIMALS 2.
DATA ALTMP496(16) TYPE P DECIMALS 2.
DATA ALTMP497(16) TYPE P DECIMALS 2.
DATA ALTMP498(16) TYPE P DECIMALS 2.
DATA ALTMP499(16) TYPE P DECIMALS 2.
DATA ALTMP500(16) TYPE P DECIMALS 2.
DATA ALTMP501(16) TYPE P DECIMALS 2.
DATA ALTMP502(16) TYPE P DECIMALS 2.
DATA ALTMP503(16) TYPE P DECIMALS 2.
DATA ALTMP504(16) TYPE P DECIMALS 2.
DATA ALTMP505(16) TYPE P DECIMALS 2.
DATA ALTMP506(16) TYPE P DECIMALS 2.
DATA ALTMP507(16) TYPE P DECIMALS 2.
DATA ALTMP508(16) TYPE P DECIMALS 2.
DATA ALTMP509(16) TYPE P DECIMALS 2.
DATA ALTMP510(16) TYPE P DECIMALS 2.
DATA ALTMP511(16) TYPE P DECIMALS 2.
DATA ALTMP512(16) TYPE P DECIMALS 2.
DATA ALTMP513(16) TYPE P DECIMALS 2.
DATA ALTMP514(16) TYPE P DECIMALS 2.
DATA ALTMP515(16) TYPE P DECIMALS 2.
DATA ALTMP516(16) TYPE P DECIMALS 2.
DATA ALTMP517(16) TYPE P DECIMALS 2.
DATA ALTMP518(16) TYPE P DECIMALS 2.
DATA ALTMP519(16) TYPE P DECIMALS 2.
DATA ALTMP520(16) TYPE P DECIMALS 2.
DATA ALTMP521(16) TYPE P DECIMALS 2.
DATA ALTMP522(16) TYPE P DECIMALS 2.
DATA ALTMP523(16) TYPE P DECIMALS 2.
DATA ALTMP524(16) TYPE P DECIMALS 2.
DATA ALTMP525(16) TYPE P DECIMALS 2.
DATA ALTMP526(16) TYPE P DECIMALS 2.
DATA ALTMP527(16) TYPE P DECIMALS 2.
DATA ALTMP528(16) TYPE P DECIMALS 2.
DATA ALTMP529(16) TYPE P DECIMALS 2.
DATA ALTMP530(16) TYPE P DECIMALS 2.
DATA ALTMP531(16) TYPE P DECIMALS 2.
DATA ALTMP532(16) TYPE P DECIMALS 2.
DATA ALTMP533(16) TYPE P DECIMALS 3.
DATA ALTMP534(16) TYPE P DECIMALS 3.
DATA ALTMP535(16) TYPE P DECIMALS 3.
DATA ALTMP536(16) TYPE P DECIMALS 3.
DATA ALTMP537(16) TYPE P DECIMALS 3.
DATA ALTMP538(16) TYPE P DECIMALS 3.
DATA ALTMP539(16) TYPE P DECIMALS 3.
DATA ALTMP540(16) TYPE P DECIMALS 3.
DATA ALTMP541(16) TYPE P DECIMALS 3.
DATA ALTMP542(16) TYPE P DECIMALS 3.
DATA ALTMP543(16) TYPE P DECIMALS 3.
DATA ALTMP544(16) TYPE P DECIMALS 3.
DATA ALTMP545(16) TYPE P DECIMALS 3.
DATA ALTMP546(16) TYPE P DECIMALS 3.
DATA ALTMP547(16) TYPE P DECIMALS 3.
DATA ALTMP548(16) TYPE P DECIMALS 3.
DATA ALTMP549(16) TYPE P DECIMALS 3.
DATA ALTMP550(16) TYPE P DECIMALS 3.
DATA ALTMP551(16) TYPE P DECIMALS 3.
DATA ALTMP552(16) TYPE P DECIMALS 3.
DATA ALTMP553(16) TYPE P DECIMALS 3.
DATA ALTMP554(16) TYPE P DECIMALS 3.
DATA ALTMP555(16) TYPE P DECIMALS 3.
DATA ALTMP556(16) TYPE P DECIMALS 3.
DATA ALTMP557(16) TYPE P DECIMALS 3.
DATA ALTMP558(16) TYPE P DECIMALS 3.
DATA ALTMP559(16) TYPE P DECIMALS 3.
DATA ALTMP560(16) TYPE P DECIMALS 3.
DATA ALTMP561(16) TYPE P DECIMALS 3.
DATA ALTMP562(16) TYPE P DECIMALS 3.
DATA ALTMP563(16) TYPE P DECIMALS 3.
DATA ALTMP564(16) TYPE P DECIMALS 3.
DATA ALTMP565(1) TYPE C.
DATA ALTMP566(1) TYPE C.
DATA ALTMP567(1) TYPE C.
DATA ALTMP568(1) TYPE C.
DATA ALTMP569(1) TYPE C.
DATA ALTMP570(1) TYPE C.
DATA ALTMP571(1) TYPE C.
DATA ALTMP572(1) TYPE C.
DATA ALTMP573(1) TYPE C.
DATA ALTMP574(1) TYPE C.
DATA ALTMP575(1) TYPE C.
DATA ALTMP576(1) TYPE C.
DATA ALTMP577(1) TYPE C.
DATA ALTMP578(1) TYPE C.
DATA ALTMP579(1) TYPE C.
DATA ALTMP580(1) TYPE C.
DATA ALTMP581(1) TYPE N.
DATA ALTMP582(16) TYPE P DECIMALS 0.
DATA ALTMP583(4) TYPE C.
DATA ALTMP584(16) TYPE C.
DATA ALTMP585(10) TYPE C.
DATA ALTMP586(10) TYPE C.
DATA ALTMP587(20) TYPE C.
DATA ALTMP588(10) TYPE C.
DATA ALTMP589(4) TYPE C.
DATA ALTMP590(12) TYPE C.
DATA ALTMP591(2) TYPE C.
DATA ALTMP592(5) TYPE C.
DATA ALTMP593(4) TYPE C.
DATA ALTMP594(4) TYPE C.
DATA ALTMP595(4) TYPE C.
DATA ALTMP596(4) TYPE C.
DATA ALTMP597(4) TYPE C.
DATA ALTMP598(40) TYPE C.
DATA ALTMP599(40) TYPE C.
DATA ALTMP600(255) TYPE C.
DATA ALTMP601(40) TYPE C.
DATA ALTMP602(255) TYPE C.

DATA COSP9MANDT LIKE COSP-MANDT.
DATA COSP9LEDNR LIKE COSP-LEDNR.
DATA COSP9OBJNR LIKE COSP-OBJNR.
DATA COSP9GJAHR LIKE COSP-GJAHR.
DATA COSP9WRTTP LIKE COSP-WRTTP.
DATA COSP9VERSN LIKE COSP-VERSN.
DATA COSP9KSTAR LIKE COSP-KSTAR.
DATA COSP9HRKFT LIKE COSP-HRKFT.
DATA COSP9VRGNG LIKE COSP-VRGNG.
DATA COSP9VBUND LIKE COSP-VBUND.
DATA COSP9PARGB LIKE COSP-PARGB.
DATA COSP9BEKNZ LIKE COSP-BEKNZ.
DATA COSP9TWAER LIKE COSP-TWAER.
DATA COSP9PERBL LIKE COSP-PERBL.
DATA COKEY9WERKS LIKE COKEY-WERKS.
DATA COKEY9MATNR LIKE COKEY-MATNR.
DATA COSP9MEINH LIKE COSP-MEINH.
DATA COSP9WTG001 LIKE COSP-WTG001.
DATA COSP9WTG002 LIKE COSP-WTG002.
DATA COSP9WTG003 LIKE COSP-WTG003.
DATA COSP9WTG004 LIKE COSP-WTG004.
DATA COSP9WTG005 LIKE COSP-WTG005.
DATA COSP9WTG006 LIKE COSP-WTG006.
DATA COSP9WTG007 LIKE COSP-WTG007.
DATA COSP9WTG008 LIKE COSP-WTG008.
DATA COSP9WTG009 LIKE COSP-WTG009.
DATA COSP9WTG010 LIKE COSP-WTG010.
DATA COSP9WTG011 LIKE COSP-WTG011.
DATA COSP9WTG012 LIKE COSP-WTG012.
DATA COSP9WTG013 LIKE COSP-WTG013.
DATA COSP9WTG014 LIKE COSP-WTG014.
DATA COSP9WTG015 LIKE COSP-WTG015.
DATA COSP9WTG016 LIKE COSP-WTG016.
DATA COSP9WOG001 LIKE COSP-WOG001.
DATA COSP9WOG002 LIKE COSP-WOG002.
DATA COSP9WOG003 LIKE COSP-WOG003.
DATA COSP9WOG004 LIKE COSP-WOG004.
DATA COSP9WOG005 LIKE COSP-WOG005.
DATA COSP9WOG006 LIKE COSP-WOG006.
DATA COSP9WOG007 LIKE COSP-WOG007.
DATA COSP9WOG008 LIKE COSP-WOG008.
DATA COSP9WOG009 LIKE COSP-WOG009.
DATA COSP9WOG010 LIKE COSP-WOG010.
DATA COSP9WOG011 LIKE COSP-WOG011.
DATA COSP9WOG012 LIKE COSP-WOG012.
DATA COSP9WOG013 LIKE COSP-WOG013.
DATA COSP9WOG014 LIKE COSP-WOG014.
DATA COSP9WOG015 LIKE COSP-WOG015.
DATA COSP9WOG016 LIKE COSP-WOG016.
DATA COSP9WKG001 LIKE COSP-WKG001.
DATA COSP9WKG002 LIKE COSP-WKG002.
DATA COSP9WKG003 LIKE COSP-WKG003.
DATA COSP9WKG004 LIKE COSP-WKG004.
DATA COSP9WKG005 LIKE COSP-WKG005.
DATA COSP9WKG006 LIKE COSP-WKG006.
DATA COSP9WKG007 LIKE COSP-WKG007.
DATA COSP9WKG008 LIKE COSP-WKG008.
DATA COSP9WKG009 LIKE COSP-WKG009.
DATA COSP9WKG010 LIKE COSP-WKG010.
DATA COSP9WKG011 LIKE COSP-WKG011.
DATA COSP9WKG012 LIKE COSP-WKG012.
DATA COSP9WKG013 LIKE COSP-WKG013.
DATA COSP9WKG014 LIKE COSP-WKG014.
DATA COSP9WKG015 LIKE COSP-WKG015.
DATA COSP9WKG016 LIKE COSP-WKG016.
DATA COSP9WKF001 LIKE COSP-WKF001.
DATA COSP9WKF002 LIKE COSP-WKF002.
DATA COSP9WKF003 LIKE COSP-WKF003.
DATA COSP9WKF004 LIKE COSP-WKF004.
DATA COSP9WKF005 LIKE COSP-WKF005.
DATA COSP9WKF006 LIKE COSP-WKF006.
DATA COSP9WKF007 LIKE COSP-WKF007.
DATA COSP9WKF008 LIKE COSP-WKF008.
DATA COSP9WKF009 LIKE COSP-WKF009.
DATA COSP9WKF010 LIKE COSP-WKF010.
DATA COSP9WKF011 LIKE COSP-WKF011.
DATA COSP9WKF012 LIKE COSP-WKF012.
DATA COSP9WKF013 LIKE COSP-WKF013.
DATA COSP9WKF014 LIKE COSP-WKF014.
DATA COSP9WKF015 LIKE COSP-WKF015.
DATA COSP9WKF016 LIKE COSP-WKF016.
DATA COSP9PAG001 LIKE COSP-PAG001.
DATA COSP9PAG002 LIKE COSP-PAG002.
DATA COSP9PAG003 LIKE COSP-PAG003.
DATA COSP9PAG004 LIKE COSP-PAG004.
DATA COSP9PAG005 LIKE COSP-PAG005.
DATA COSP9PAG006 LIKE COSP-PAG006.
DATA COSP9PAG007 LIKE COSP-PAG007.
DATA COSP9PAG008 LIKE COSP-PAG008.
DATA COSP9PAG009 LIKE COSP-PAG009.
DATA COSP9PAG010 LIKE COSP-PAG010.
DATA COSP9PAG011 LIKE COSP-PAG011.
DATA COSP9PAG012 LIKE COSP-PAG012.
DATA COSP9PAG013 LIKE COSP-PAG013.
DATA COSP9PAG014 LIKE COSP-PAG014.
DATA COSP9PAG015 LIKE COSP-PAG015.
DATA COSP9PAG016 LIKE COSP-PAG016.
DATA COSP9MEG001 LIKE COSP-MEG001.
DATA COSP9MEG002 LIKE COSP-MEG002.
DATA COSP9MEG003 LIKE COSP-MEG003.
DATA COSP9MEG004 LIKE COSP-MEG004.
DATA COSP9MEG005 LIKE COSP-MEG005.
DATA COSP9MEG006 LIKE COSP-MEG006.
DATA COSP9MEG007 LIKE COSP-MEG007.
DATA COSP9MEG008 LIKE COSP-MEG008.
DATA COSP9MEG009 LIKE COSP-MEG009.
DATA COSP9MEG010 LIKE COSP-MEG010.
DATA COSP9MEG011 LIKE COSP-MEG011.
DATA COSP9MEG012 LIKE COSP-MEG012.
DATA COSP9MEG013 LIKE COSP-MEG013.
DATA COSP9MEG014 LIKE COSP-MEG014.
DATA COSP9MEG015 LIKE COSP-MEG015.
DATA COSP9MEG016 LIKE COSP-MEG016.
DATA COSP9MEF001 LIKE COSP-MEF001.
DATA COSP9MEF002 LIKE COSP-MEF002.
DATA COSP9MEF003 LIKE COSP-MEF003.
DATA COSP9MEF004 LIKE COSP-MEF004.
DATA COSP9MEF005 LIKE COSP-MEF005.
DATA COSP9MEF006 LIKE COSP-MEF006.
DATA COSP9MEF007 LIKE COSP-MEF007.
DATA COSP9MEF008 LIKE COSP-MEF008.
DATA COSP9MEF009 LIKE COSP-MEF009.
DATA COSP9MEF010 LIKE COSP-MEF010.
DATA COSP9MEF011 LIKE COSP-MEF011.
DATA COSP9MEF012 LIKE COSP-MEF012.
DATA COSP9MEF013 LIKE COSP-MEF013.
DATA COSP9MEF014 LIKE COSP-MEF014.
DATA COSP9MEF015 LIKE COSP-MEF015.
DATA COSP9MEF016 LIKE COSP-MEF016.
DATA COSP9MUV001 LIKE COSP-MUV001.
DATA COSP9MUV002 LIKE COSP-MUV002.
DATA COSP9MUV003 LIKE COSP-MUV003.
DATA COSP9MUV004 LIKE COSP-MUV004.
DATA COSP9MUV005 LIKE COSP-MUV005.
DATA COSP9MUV006 LIKE COSP-MUV006.
DATA COSP9MUV007 LIKE COSP-MUV007.
DATA COSP9MUV008 LIKE COSP-MUV008.
DATA COSP9MUV009 LIKE COSP-MUV009.
DATA COSP9MUV010 LIKE COSP-MUV010.
DATA COSP9MUV011 LIKE COSP-MUV011.
DATA COSP9MUV012 LIKE COSP-MUV012.
DATA COSP9MUV013 LIKE COSP-MUV013.
DATA COSP9MUV014 LIKE COSP-MUV014.
DATA COSP9MUV015 LIKE COSP-MUV015.
DATA COSP9MUV016 LIKE COSP-MUV016.
DATA COSP9BELTP LIKE COSP-BELTP.
DATA COSP9TIMESTMP LIKE COSP-TIMESTMP.
DATA COSP9BUKRS LIKE COSP-BUKRS.
DATA COSP9FKBER LIKE COSP-FKBER.
DATA COSP9SEGMENT LIKE COSP-SEGMENT.
DATA COSP9GEBER LIKE COSP-GEBER.
DATA COSP9GRANT_NBR LIKE COSP-GRANT_NBR.
DATA COSP9BUDGET_PD LIKE COSP-BUDGET_PD.
DATA PMSDO9VKORG LIKE PMSDO-VKORG.
DATA AUFK9AUFNR LIKE AUFK-AUFNR.
DATA AUFK9BEMOT LIKE AUFK-BEMOT.
DATA AUFK9WAERS LIKE AUFK-WAERS.
DATA ZSTC_SALE_019BUKRS LIKE ZSTC_SALES_COMP-BUKRS.
DATA ZSTC_SALE_019VKORG LIKE ZSTC_SALES_COMP-VKORG.
DATA ZSTC_SALE_019WERKS LIKE ZSTC_SALES_COMP-WERKS.
DATA ZSTC_SALE_019EKORG LIKE ZSTC_SALES_COMP-EKORG.
DATA ZSTC_SALE_019MAMUSERCMPY LIKE ZSTC_SALES_COMP-MAMUSERCMPY.
DATA ZSTC_SALE_019REGION LIKE ZSTC_SALES_COMP-REGION.
DATA ZSTC_SALE_019COUNTRY LIKE ZSTC_SALES_COMP-COUNTRY.
DATA ZSTC_SALE_019COUNTRYDSCR LIKE ZSTC_SALES_COMP-COUNTRYDSCR.
DATA ZSTC_SALE_019SALESCOMPANY LIKE ZSTC_SALES_COMP-SALESCOMPANY.
DATA ZSTC_SALE_019SALESCMPDSCR LIKE ZSTC_SALES_COMP-SALESCMPDSCR.
DATA AUFK9IDAT3 LIKE AUFK-IDAT3.
DATA COKEY9HRKFT LIKE COKEY-HRKFT.
DATA AUFK9OBJNR LIKE AUFK-OBJNR.
DATA PMSDO9OBJNR LIKE PMSDO-OBJNR.



SELECT
  COSP9~MANDT
  COSP9~LEDNR
  COSP9~OBJNR
  COSP9~GJAHR
  COSP9~WRTTP
  COSP9~VERSN
  COSP9~KSTAR
  COSP9~HRKFT
  COSP9~VRGNG
  COSP9~VBUND
  COSP9~PARGB
  COSP9~BEKNZ
  COSP9~TWAER
  COSP9~PERBL
  COKEY9~WERKS
  COKEY9~MATNR
  COSP9~MEINH
  COSP9~WTG001
  COSP9~WTG002
  COSP9~WTG003
  COSP9~WTG004
  COSP9~WTG005
  COSP9~WTG006
  COSP9~WTG007
  COSP9~WTG008
  COSP9~WTG009
  COSP9~WTG010
  COSP9~WTG011
  COSP9~WTG012
  COSP9~WTG013
  COSP9~WTG014
  COSP9~WTG015
  COSP9~WTG016
  COSP9~WOG001
  COSP9~WOG002
  COSP9~WOG003
  COSP9~WOG004
  COSP9~WOG005
  COSP9~WOG006
  COSP9~WOG007
  COSP9~WOG008
  COSP9~WOG009
  COSP9~WOG010
  COSP9~WOG011
  COSP9~WOG012
  COSP9~WOG013
  COSP9~WOG014
  COSP9~WOG015
  COSP9~WOG016
  COSP9~WKG001
  COSP9~WKG002
  COSP9~WKG003
  COSP9~WKG004
  COSP9~WKG005
  COSP9~WKG006
  COSP9~WKG007
  COSP9~WKG008
  COSP9~WKG009
  COSP9~WKG010
  COSP9~WKG011
  COSP9~WKG012
  COSP9~WKG013
  COSP9~WKG014
  COSP9~WKG015
  COSP9~WKG016
  COSP9~WKF001
  COSP9~WKF002
  COSP9~WKF003
  COSP9~WKF004
  COSP9~WKF005
  COSP9~WKF006
  COSP9~WKF007
  COSP9~WKF008
  COSP9~WKF009
  COSP9~WKF010
  COSP9~WKF011
  COSP9~WKF012
  COSP9~WKF013
  COSP9~WKF014
  COSP9~WKF015
  COSP9~WKF016
  COSP9~PAG001
  COSP9~PAG002
  COSP9~PAG003
  COSP9~PAG004
  COSP9~PAG005
  COSP9~PAG006
  COSP9~PAG007
  COSP9~PAG008
  COSP9~PAG009
  COSP9~PAG010
  COSP9~PAG011
  COSP9~PAG012
  COSP9~PAG013
  COSP9~PAG014
  COSP9~PAG015
  COSP9~PAG016
  COSP9~MEG001
  COSP9~MEG002
  COSP9~MEG003
  COSP9~MEG004
  COSP9~MEG005
  COSP9~MEG006
  COSP9~MEG007
  COSP9~MEG008
  COSP9~MEG009
  COSP9~MEG010
  COSP9~MEG011
  COSP9~MEG012
  COSP9~MEG013
  COSP9~MEG014
  COSP9~MEG015
  COSP9~MEG016
  COSP9~MEF001
  COSP9~MEF002
  COSP9~MEF003
  COSP9~MEF004
  COSP9~MEF005
  COSP9~MEF006
  COSP9~MEF007
  COSP9~MEF008
  COSP9~MEF009
  COSP9~MEF010
  COSP9~MEF011
  COSP9~MEF012
  COSP9~MEF013
  COSP9~MEF014
  COSP9~MEF015
  COSP9~MEF016
  COSP9~MUV001
  COSP9~MUV002
  COSP9~MUV003
  COSP9~MUV004
  COSP9~MUV005
  COSP9~MUV006
  COSP9~MUV007
  COSP9~MUV008
  COSP9~MUV009
  COSP9~MUV010
  COSP9~MUV011
  COSP9~MUV012
  COSP9~MUV013
  COSP9~MUV014
  COSP9~MUV015
  COSP9~MUV016
  COSP9~BELTP
  COSP9~TIMESTMP
  COSP9~BUKRS
  COSP9~FKBER
  COSP9~SEGMENT
  COSP9~GEBER
  COSP9~GRANT_NBR
  COSP9~BUDGET_PD
  PMSDO9~VKORG
  AUFK9~AUFNR
  AUFK9~BEMOT
  AUFK9~WAERS
  ZSTC_SALE_019~BUKRS
  ZSTC_SALE_019~VKORG
  ZSTC_SALE_019~WERKS
  ZSTC_SALE_019~EKORG
  ZSTC_SALE_019~MAMUSERCMPY
  ZSTC_SALE_019~REGION
  ZSTC_SALE_019~COUNTRY
  ZSTC_SALE_019~COUNTRYDSCR
  ZSTC_SALE_019~SALESCOMPANY
  ZSTC_SALE_019~SALESCMPDSCR
  AUFK9~IDAT3
  COKEY9~HRKFT
  AUFK9~OBJNR
  PMSDO9~OBJNR
into (COSP9MANDT,
  COSP9LEDNR,
  COSP9OBJNR,
  COSP9GJAHR,
  COSP9WRTTP,
  COSP9VERSN,
  COSP9KSTAR,
  COSP9HRKFT,
  COSP9VRGNG,
  COSP9VBUND,
  COSP9PARGB,
  COSP9BEKNZ,
  COSP9TWAER,
  COSP9PERBL,
  COKEY9WERKS,
  COKEY9MATNR,
  COSP9MEINH,
  COSP9WTG001,
  COSP9WTG002,
  COSP9WTG003,
  COSP9WTG004,
  COSP9WTG005,
  COSP9WTG006,
  COSP9WTG007,
  COSP9WTG008,
  COSP9WTG009,
  COSP9WTG010,
  COSP9WTG011,
  COSP9WTG012,
  COSP9WTG013,
  COSP9WTG014,
  COSP9WTG015,
  COSP9WTG016,
  COSP9WOG001,
  COSP9WOG002,
  COSP9WOG003,
  COSP9WOG004,
  COSP9WOG005,
  COSP9WOG006,
  COSP9WOG007,
  COSP9WOG008,
  COSP9WOG009,
  COSP9WOG010,
  COSP9WOG011,
  COSP9WOG012,
  COSP9WOG013,
  COSP9WOG014,
  COSP9WOG015,
  COSP9WOG016,
  COSP9WKG001,
  COSP9WKG002,
  COSP9WKG003,
  COSP9WKG004,
  COSP9WKG005,
  COSP9WKG006,
  COSP9WKG007,
  COSP9WKG008,
  COSP9WKG009,
  COSP9WKG010,
  COSP9WKG011,
  COSP9WKG012,
  COSP9WKG013,
  COSP9WKG014,
  COSP9WKG015,
  COSP9WKG016,
  COSP9WKF001,
  COSP9WKF002,
  COSP9WKF003,
  COSP9WKF004,
  COSP9WKF005,
  COSP9WKF006,
  COSP9WKF007,
  COSP9WKF008,
  COSP9WKF009,
  COSP9WKF010,
  COSP9WKF011,
  COSP9WKF012,
  COSP9WKF013,
  COSP9WKF014,
  COSP9WKF015,
  COSP9WKF016,
  COSP9PAG001,
  COSP9PAG002,
  COSP9PAG003,
  COSP9PAG004,
  COSP9PAG005,
  COSP9PAG006,
  COSP9PAG007,
  COSP9PAG008,
  COSP9PAG009,
  COSP9PAG010,
  COSP9PAG011,
  COSP9PAG012,
  COSP9PAG013,
  COSP9PAG014,
  COSP9PAG015,
  COSP9PAG016,
  COSP9MEG001,
  COSP9MEG002,
  COSP9MEG003,
  COSP9MEG004,
  COSP9MEG005,
  COSP9MEG006,
  COSP9MEG007,
  COSP9MEG008,
  COSP9MEG009,
  COSP9MEG010,
  COSP9MEG011,
  COSP9MEG012,
  COSP9MEG013,
  COSP9MEG014,
  COSP9MEG015,
  COSP9MEG016,
  COSP9MEF001,
  COSP9MEF002,
  COSP9MEF003,
  COSP9MEF004,
  COSP9MEF005,
  COSP9MEF006,
  COSP9MEF007,
  COSP9MEF008,
  COSP9MEF009,
  COSP9MEF010,
  COSP9MEF011,
  COSP9MEF012,
  COSP9MEF013,
  COSP9MEF014,
  COSP9MEF015,
  COSP9MEF016,
  COSP9MUV001,
  COSP9MUV002,
  COSP9MUV003,
  COSP9MUV004,
  COSP9MUV005,
  COSP9MUV006,
  COSP9MUV007,
  COSP9MUV008,
  COSP9MUV009,
  COSP9MUV010,
  COSP9MUV011,
  COSP9MUV012,
  COSP9MUV013,
  COSP9MUV014,
  COSP9MUV015,
  COSP9MUV016,
  COSP9BELTP,
  COSP9TIMESTMP,
  COSP9BUKRS,
  COSP9FKBER,
  COSP9SEGMENT,
  COSP9GEBER,
  COSP9GRANT_NBR,
  COSP9BUDGET_PD,
  PMSDO9VKORG,
  AUFK9AUFNR,
  AUFK9BEMOT,
  AUFK9WAERS,
  ZSTC_SALE_019BUKRS,
  ZSTC_SALE_019VKORG,
  ZSTC_SALE_019WERKS,
  ZSTC_SALE_019EKORG,
  ZSTC_SALE_019MAMUSERCMPY,
  ZSTC_SALE_019REGION,
  ZSTC_SALE_019COUNTRY,
  ZSTC_SALE_019COUNTRYDSCR,
  ZSTC_SALE_019SALESCOMPANY,
  ZSTC_SALE_019SALESCMPDSCR,
  AUFK9IDAT3,
  COKEY9HRKFT,
  AUFK9OBJNR,
  PMSDO9OBJNR)
FROM PMSDO AS PMSDO9
 INNER JOIN COSP AS COSP9
 ON ( PMSDO9~OBJNR = COSP9~OBJNR )
 INNER JOIN ZSTC_SALES_COMP AS ZSTC_SALE_019
 ON ( PMSDO9~VKORG = ZSTC_SALE_019~VKORG )
 INNER JOIN AUFK AS AUFK9
 ON ( AUFK9~OBJNR = COSP9~OBJNR )
 INNER JOIN COKEY AS COKEY9
 ON ( COKEY9~HRKFT = COSP9~HRKFT )
WHERE ( NOT ( ( PMSDO9~VKORG like '%04' ) )
 AND ( NOT ( ( PMSDO9~VKORG like '%03' ) )
 AND ( NOT ( ( PMSDO9~VKORG like '%02' ) )
 AND ( ( ( AUFK9~IDAT3 <= $PARAM1 )
 OR ( AUFK9~IDAT3 >= $PARAM2 ) )
 AND ( ( COSP9~GJAHR > 2001 )
 AND ( ( COSP9~BELTP = 1 )
 AND ( COSP9~WRTTP = '01' ) ) ) ) ) ) ).
ALTMP436 = COSP9MANDT.
ALTMP437 = COSP9LEDNR.
ALTMP438 = COSP9OBJNR.
ALTMP439 = COSP9GJAHR.
ALTMP440 = COSP9WRTTP.
ALTMP441 = COSP9VERSN.
ALTMP442 = COSP9KSTAR.
ALTMP443 = COSP9HRKFT.
ALTMP444 = COSP9VRGNG.
ALTMP445 = COSP9VBUND.
ALTMP446 = COSP9PARGB.
ALTMP447 = COSP9BEKNZ.
ALTMP448 = COSP9TWAER.
ALTMP449 = COSP9PERBL.
ALTMP450 = COKEY9WERKS.
ALTMP451 = COKEY9MATNR.
ALTMP452 = COSP9MEINH.
ALTMP453 = COSP9WTG001.
ALTMP454 = COSP9WTG002.
ALTMP455 = COSP9WTG003.
ALTMP456 = COSP9WTG004.
ALTMP457 = COSP9WTG005.
ALTMP458 = COSP9WTG006.
ALTMP459 = COSP9WTG007.
ALTMP460 = COSP9WTG008.
ALTMP461 = COSP9WTG009.
ALTMP462 = COSP9WTG010.
ALTMP463 = COSP9WTG011.
ALTMP464 = COSP9WTG012.
ALTMP465 = COSP9WTG013.
ALTMP466 = COSP9WTG014.
ALTMP467 = COSP9WTG015.
ALTMP468 = COSP9WTG016.
ALTMP469 = COSP9WOG001.
ALTMP470 = COSP9WOG002.
ALTMP471 = COSP9WOG003.
ALTMP472 = COSP9WOG004.
ALTMP473 = COSP9WOG005.
ALTMP474 = COSP9WOG006.
ALTMP475 = COSP9WOG007.
ALTMP476 = COSP9WOG008.
ALTMP477 = COSP9WOG009.
ALTMP478 = COSP9WOG010.
ALTMP479 = COSP9WOG011.
ALTMP480 = COSP9WOG012.
ALTMP481 = COSP9WOG013.
ALTMP482 = COSP9WOG014.
ALTMP483 = COSP9WOG015.
ALTMP484 = COSP9WOG016.
ALTMP485 = COSP9WKG001.
ALTMP486 = COSP9WKG002.
ALTMP487 = COSP9WKG003.
ALTMP488 = COSP9WKG004.
ALTMP489 = COSP9WKG005.
ALTMP490 = COSP9WKG006.
ALTMP491 = COSP9WKG007.
ALTMP492 = COSP9WKG008.
ALTMP493 = COSP9WKG009.
ALTMP494 = COSP9WKG010.
ALTMP495 = COSP9WKG011.
ALTMP496 = COSP9WKG012.
ALTMP497 = COSP9WKG013.
ALTMP498 = COSP9WKG014.
ALTMP499 = COSP9WKG015.
ALTMP500 = COSP9WKG016.
ALTMP501 = COSP9WKF001.
ALTMP502 = COSP9WKF002.
ALTMP503 = COSP9WKF003.
ALTMP504 = COSP9WKF004.
ALTMP505 = COSP9WKF005.
ALTMP506 = COSP9WKF006.
ALTMP507 = COSP9WKF007.
ALTMP508 = COSP9WKF008.
ALTMP509 = COSP9WKF009.
ALTMP510 = COSP9WKF010.
ALTMP511 = COSP9WKF011.
ALTMP512 = COSP9WKF012.
ALTMP513 = COSP9WKF013.
ALTMP514 = COSP9WKF014.
ALTMP515 = COSP9WKF015.
ALTMP516 = COSP9WKF016.
ALTMP517 = COSP9PAG001.
ALTMP518 = COSP9PAG002.
ALTMP519 = COSP9PAG003.
ALTMP520 = COSP9PAG004.
ALTMP521 = COSP9PAG005.
ALTMP522 = COSP9PAG006.
ALTMP523 = COSP9PAG007.
ALTMP524 = COSP9PAG008.
ALTMP525 = COSP9PAG009.
ALTMP526 = COSP9PAG010.
ALTMP527 = COSP9PAG011.
ALTMP528 = COSP9PAG012.
ALTMP529 = COSP9PAG013.
ALTMP530 = COSP9PAG014.
ALTMP531 = COSP9PAG015.
ALTMP532 = COSP9PAG016.
ALTMP533 = COSP9MEG001.
ALTMP534 = COSP9MEG002.
ALTMP535 = COSP9MEG003.
ALTMP536 = COSP9MEG004.
ALTMP537 = COSP9MEG005.
ALTMP538 = COSP9MEG006.
ALTMP539 = COSP9MEG007.
ALTMP540 = COSP9MEG008.
ALTMP541 = COSP9MEG009.
ALTMP542 = COSP9MEG010.
ALTMP543 = COSP9MEG011.
ALTMP544 = COSP9MEG012.
ALTMP545 = COSP9MEG013.
ALTMP546 = COSP9MEG014.
ALTMP547 = COSP9MEG015.
ALTMP548 = COSP9MEG016.
ALTMP549 = COSP9MEF001.
ALTMP550 = COSP9MEF002.
ALTMP551 = COSP9MEF003.
ALTMP552 = COSP9MEF004.
ALTMP553 = COSP9MEF005.
ALTMP554 = COSP9MEF006.
ALTMP555 = COSP9MEF007.
ALTMP556 = COSP9MEF008.
ALTMP557 = COSP9MEF009.
ALTMP558 = COSP9MEF010.
ALTMP559 = COSP9MEF011.
ALTMP560 = COSP9MEF012.
ALTMP561 = COSP9MEF013.
ALTMP562 = COSP9MEF014.
ALTMP563 = COSP9MEF015.
ALTMP564 = COSP9MEF016.
ALTMP565 = COSP9MUV001.
ALTMP566 = COSP9MUV002.
ALTMP567 = COSP9MUV003.
ALTMP568 = COSP9MUV004.
ALTMP569 = COSP9MUV005.
ALTMP570 = COSP9MUV006.
ALTMP571 = COSP9MUV007.
ALTMP572 = COSP9MUV008.
ALTMP573 = COSP9MUV009.
ALTMP574 = COSP9MUV010.
ALTMP575 = COSP9MUV011.
ALTMP576 = COSP9MUV012.
ALTMP577 = COSP9MUV013.
ALTMP578 = COSP9MUV014.
ALTMP579 = COSP9MUV015.
ALTMP580 = COSP9MUV016.
ALTMP581 = COSP9BELTP.
ALTMP582 = COSP9TIMESTMP.
ALTMP583 = COSP9BUKRS.
ALTMP584 = COSP9FKBER.
ALTMP585 = COSP9SEGMENT.
ALTMP586 = COSP9GEBER.
ALTMP587 = COSP9GRANT_NBR.
ALTMP588 = COSP9BUDGET_PD.
ALTMP589 = PMSDO9VKORG.
ALTMP590 = AUFK9AUFNR.
ALTMP591 = AUFK9BEMOT.
ALTMP592 = AUFK9WAERS.
ALTMP593 = ZSTC_SALE_019BUKRS.
ALTMP594 = ZSTC_SALE_019VKORG.
ALTMP595 = ZSTC_SALE_019WERKS.
ALTMP596 = ZSTC_SALE_019EKORG.
ALTMP597 = ZSTC_SALE_019MAMUSERCMPY.
ALTMP598 = ZSTC_SALE_019REGION.
ALTMP599 = ZSTC_SALE_019COUNTRY.
ALTMP600 = ZSTC_SALE_019COUNTRYDSCR.
ALTMP601 = ZSTC_SALE_019SALESCOMPANY.
ALTMP602 = ZSTC_SALE_019SALESCMPDSCR.
 move ALTMP436 to ITAB6-MANDT.
 move ALTMP437 to ITAB6-LEDNR.
 move ALTMP438 to ITAB6-OBJNR.
 move ALTMP439 to ITAB6-GJAHR.
 move ALTMP440 to ITAB6-WRTTP.
 move ALTMP441 to ITAB6-VERSN.
 move ALTMP442 to ITAB6-KSTAR.
 move ALTMP443 to ITAB6-HRKFT.
 move ALTMP444 to ITAB6-VRGNG.
 move ALTMP445 to ITAB6-VBUND.
 move ALTMP446 to ITAB6-PARGB.
 move ALTMP447 to ITAB6-BEKNZ.
 move ALTMP448 to ITAB6-TWAER.
 move ALTMP449 to ITAB6-PERBL.
 move ALTMP450 to ITAB6-WERKS.
 move ALTMP451 to ITAB6-MATNR.
 move ALTMP452 to ITAB6-MEINH.
 move ALTMP453 to ITAB6-WTG001.
 move ALTMP454 to ITAB6-WTG002.
 move ALTMP455 to ITAB6-WTG003.
 move ALTMP456 to ITAB6-WTG004.
 move ALTMP457 to ITAB6-WTG005.
 move ALTMP458 to ITAB6-WTG006.
 move ALTMP459 to ITAB6-WTG007.
 move ALTMP460 to ITAB6-WTG008.
 move ALTMP461 to ITAB6-WTG009.
 move ALTMP462 to ITAB6-WTG010.
 move ALTMP463 to ITAB6-WTG011.
 move ALTMP464 to ITAB6-WTG012.
 move ALTMP465 to ITAB6-WTG013.
 move ALTMP466 to ITAB6-WTG014.
 move ALTMP467 to ITAB6-WTG015.
 move ALTMP468 to ITAB6-WTG016.
 move ALTMP469 to ITAB6-WOG001.
 move ALTMP470 to ITAB6-WOG002.
 move ALTMP471 to ITAB6-WOG003.
 move ALTMP472 to ITAB6-WOG004.
 move ALTMP473 to ITAB6-WOG005.
 move ALTMP474 to ITAB6-WOG006.
 move ALTMP475 to ITAB6-WOG007.
 move ALTMP476 to ITAB6-WOG008.
 move ALTMP477 to ITAB6-WOG009.
 move ALTMP478 to ITAB6-WOG010.
 move ALTMP479 to ITAB6-WOG011.
 move ALTMP480 to ITAB6-WOG012.
 move ALTMP481 to ITAB6-WOG013.
 move ALTMP482 to ITAB6-WOG014.
 move ALTMP483 to ITAB6-WOG015.
 move ALTMP484 to ITAB6-WOG016.
 move ALTMP485 to ITAB6-WKG001.
 move ALTMP486 to ITAB6-WKG002.
 move ALTMP487 to ITAB6-WKG003.
 move ALTMP488 to ITAB6-WKG004.
 move ALTMP489 to ITAB6-WKG005.
 move ALTMP490 to ITAB6-WKG006.
 move ALTMP491 to ITAB6-WKG007.
 move ALTMP492 to ITAB6-WKG008.
 move ALTMP493 to ITAB6-WKG009.
 move ALTMP494 to ITAB6-WKG010.
 move ALTMP495 to ITAB6-WKG011.
 move ALTMP496 to ITAB6-WKG012.
 move ALTMP497 to ITAB6-WKG013.
 move ALTMP498 to ITAB6-WKG014.
 move ALTMP499 to ITAB6-WKG015.
 move ALTMP500 to ITAB6-WKG016.
 move ALTMP501 to ITAB6-WKF001.
 move ALTMP502 to ITAB6-WKF002.
 move ALTMP503 to ITAB6-WKF003.
 move ALTMP504 to ITAB6-WKF004.
 move ALTMP505 to ITAB6-WKF005.
 move ALTMP506 to ITAB6-WKF006.
 move ALTMP507 to ITAB6-WKF007.
 move ALTMP508 to ITAB6-WKF008.
 move ALTMP509 to ITAB6-WKF009.
 move ALTMP510 to ITAB6-WKF010.
 move ALTMP511 to ITAB6-WKF011.
 move ALTMP512 to ITAB6-WKF012.
 move ALTMP513 to ITAB6-WKF013.
 move ALTMP514 to ITAB6-WKF014.
 move ALTMP515 to ITAB6-WKF015.
 move ALTMP516 to ITAB6-WKF016.
 move ALTMP517 to ITAB6-PAG001.
 move ALTMP518 to ITAB6-PAG002.
 move ALTMP519 to ITAB6-PAG003.
 move ALTMP520 to ITAB6-PAG004.
 move ALTMP521 to ITAB6-PAG005.
 move ALTMP522 to ITAB6-PAG006.
 move ALTMP523 to ITAB6-PAG007.
 move ALTMP524 to ITAB6-PAG008.
 move ALTMP525 to ITAB6-PAG009.
 move ALTMP526 to ITAB6-PAG010.
 move ALTMP527 to ITAB6-PAG011.
 move ALTMP528 to ITAB6-PAG012.
 move ALTMP529 to ITAB6-PAG013.
 move ALTMP530 to ITAB6-PAG014.
 move ALTMP531 to ITAB6-PAG015.
 move ALTMP532 to ITAB6-PAG016.
 move ALTMP533 to ITAB6-MEG001.
 move ALTMP534 to ITAB6-MEG002.
 move ALTMP535 to ITAB6-MEG003.
 move ALTMP536 to ITAB6-MEG004.
 move ALTMP537 to ITAB6-MEG005.
 move ALTMP538 to ITAB6-MEG006.
 move ALTMP539 to ITAB6-MEG007.
 move ALTMP540 to ITAB6-MEG008.
 move ALTMP541 to ITAB6-MEG009.
 move ALTMP542 to ITAB6-MEG010.
 move ALTMP543 to ITAB6-MEG011.
 move ALTMP544 to ITAB6-MEG012.
 move ALTMP545 to ITAB6-MEG013.
 move ALTMP546 to ITAB6-MEG014.
 move ALTMP547 to ITAB6-MEG015.
 move ALTMP548 to ITAB6-MEG016.
 move ALTMP549 to ITAB6-MEF001.
 move ALTMP550 to ITAB6-MEF002.
 move ALTMP551 to ITAB6-MEF003.
 move ALTMP552 to ITAB6-MEF004.
 move ALTMP553 to ITAB6-MEF005.
 move ALTMP554 to ITAB6-MEF006.
 move ALTMP555 to ITAB6-MEF007.
 move ALTMP556 to ITAB6-MEF008.
 move ALTMP557 to ITAB6-MEF009.
 move ALTMP558 to ITAB6-MEF010.
 move ALTMP559 to ITAB6-MEF011.
 move ALTMP560 to ITAB6-MEF012.
 move ALTMP561 to ITAB6-MEF013.
 move ALTMP562 to ITAB6-MEF014.
 move ALTMP563 to ITAB6-MEF015.
 move ALTMP564 to ITAB6-MEF016.
 move ALTMP565 to ITAB6-MUV001.
 move ALTMP566 to ITAB6-MUV002.
 move ALTMP567 to ITAB6-MUV003.
 move ALTMP568 to ITAB6-MUV004.
 move ALTMP569 to ITAB6-MUV005.
 move ALTMP570 to ITAB6-MUV006.
 move ALTMP571 to ITAB6-MUV007.
 move ALTMP572 to ITAB6-MUV008.
 move ALTMP573 to ITAB6-MUV009.
 move ALTMP574 to ITAB6-MUV010.
 move ALTMP575 to ITAB6-MUV011.
 move ALTMP576 to ITAB6-MUV012.
 move ALTMP577 to ITAB6-MUV013.
 move ALTMP578 to ITAB6-MUV014.
 move ALTMP579 to ITAB6-MUV015.
 move ALTMP580 to ITAB6-MUV016.
 move ALTMP581 to ITAB6-BELTP.
 move ALTMP582 to ITAB6-TIMESTMP.
 move ALTMP583 to ITAB6-BUKRS.
 move ALTMP584 to ITAB6-FKBER.
 move ALTMP585 to ITAB6-SEGMENT.
 move ALTMP586 to ITAB6-GEBER.
 move ALTMP587 to ITAB6-GRANT_NBR.
 move ALTMP588 to ITAB6-BUDGET_PD.
 move ALTMP589 to ITAB6-VKORG.
 move ALTMP590 to ITAB6-AUFNR.
 move ALTMP591 to ITAB6-BEMOT.
 move ALTMP592 to ITAB6-WAERS.
 move ALTMP593 to ITAB6-Z_BUKRS.
 move ALTMP594 to ITAB6-Z_VKORG.
 move ALTMP595 to ITAB6-Z_WERKS.
 move ALTMP596 to ITAB6-Z_EKORG.
 move ALTMP597 to ITAB6-Z_MAMUSERCMPY.
 move ALTMP598 to ITAB6-Z_REGION.
 move ALTMP599 to ITAB6-Z_COUNTRY.
 move ALTMP600 to ITAB6-Z_COUNTRYDSCR.
 move ALTMP601 to ITAB6-Z_SALESCOMPANY.
 move ALTMP602 to ITAB6-Z_SALESCMPDSCR.
 append ITAB6.
 cntbuf = cntbuf + 1.
 if download = 'N'.
  if cntbuf > 5000.
    perform FORM7.
    clear cntbuf.
    refresh ITAB6.
    append_flag = 'A'.
  endif.
 endif.
 if download = 'S'.
  if cntbuf > P_PKGSZ.
    perform FORM7.
    clear cntbuf.
    refresh ITAB6.
  endif.
 endif.
ENDSELECT.
ENDFORM.

FORM FORM7.
data: outfile(512), ldfile(50).
ldfile = 'CTS_LZ_SAP_CP1_PLECSTDET_D'.
concatenate out_dir ldfile into outfile
  separated by '/'.
  IF DOWNLOAD = 'S'.
     DATA: error_message(700),mtext(800),iEOP(1).
     CALL FUNCTION P_SRVFM
          DESTINATION P_DEST
          KEEPING LOGICAL UNIT OF WORK
          EXPORTING
            EOS = last_batch
          IMPORTING
            EOP = iEOP
          TABLES
            E_TABLE = ITAB6
          EXCEPTIONS
            READ_ERROR = 1
            SYSTEM_FAILURE = 2
            MESSAGE error_message
            COMMUNICATION_FAILURE = 3
            MESSAGE error_message
            OTHERS = 4.

     IF sy-subrc ne 0.
        Case sy-subrc.
        when 1.
        CONCATENATE
        'Data Services read error. '
        'Check Data Services error log.'
        INTO mtext.
        MESSAGE  E240(S#) WITH mtext.
        when 2.
        CONCATENATE
'SAP System Failure while calling DS remote function: '
      error_message INTO mtext.
        MESSAGE  E240(S#) WITH mtext.
        when 3.
        CONCATENATE
'SAP System Failure while calling DS remote function: '
      error_message INTO mtext.
        MESSAGE  E240(S#) WITH mtext.
        when 4.
        MESSAGE  E240(S#) WITH
'Other SAP System Failure while calling DS remote function.'.
        endcase.
      ENDIF.
      IF iEOP = 'X'.
         PERFORM DISCONNECT_RFCDEST_FROM_PROGID.
         LEAVE PROGRAM.
       ENDIF.
  ELSE.
data  dlmtlen type i value '1'.
data xdlmtlen type i value '1'.
data:
  ht(1) type c,
  xht(1) type x,
  conv type ref to cl_abap_conv_in_ce.
xht = '7F'.
conv = cl_abap_conv_in_ce=>create(
  encoding = '1100'
  input = xht
).
call method conv->read(
  exporting n    = xdlmtlen
  importing data = ht
            len = dlmtlen
).
data return_code type i.
 perform write_delimited_file
           tables   ITAB6
           using    outfile
                    append_flag
                    ht
                    dlmtlen
                    download
           changing return_code.

  case return_code.
    when 1.
      IF EXECMODE = 'D'.
        WRITE: /5 'No line selected'.
      ELSE.
        MESSAGE E047(S#).
      ENDIF.
    when 2.
      IF EXECMODE = 'D'.
        WRITE: /5 'Open File Error -- ', 25 OUTFILE.
      ELSE.
        MESSAGE  E084(E0) WITH OUTFILE.
      ENDIF.
    when 3.
      IF EXECMODE = 'D'.
        WRITE: /5 'Data exceed length limit (8192) '.
      ELSE.
        MESSAGE  E240(S#) WITH
             'Data exceed length limit (8192) '.
      ENDIF.
    when 4.
      IF EXECMODE = 'D'.
        WRITE: /5 'Call function WS_DOWNLOAD error'.
      ELSE.
        MESSAGE  E240(S#) WITH
             'Call function WS_DOWNLOAD error'.
      ENDIF.
  endcase.
 ENDIF.
ENDFORM.

FORM SUBSTRING USING SRC BEG LEN CHANGING RET.

DATA: VA1 TYPE I.
DATA: VA2 TYPE I.
DATA: VA3 TYPE I.

VA3 = STRLEN( SRC ).

IF  BEG = 0.   VA1 = 0.
ELSE.
  IF  BEG < 0.
    VA1 = VA3 + BEG.
    IF  VA1 < 0.   VA1 = 0.
    ENDIF.
  ELSE.          VA1 = BEG - 1.
  ENDIF.
ENDIF.

IF  LEN < 0.   VA2 = 0.
ELSE.          VA2 = VA3 - VA1.
ENDIF.

IF  VA2 > LEN. VA2 = LEN.
ENDIF.

IF  VA2 < 1.   MOVE ''           TO RET.
ELSE.          MOVE SRC+VA1(VA2) TO RET.
ENDIF.

ENDFORM.

form write_delimited_file
           tables   datatab
           using    file
                    append
                    delimit
                    dlength
                    dwnload
          changing rc.

  data: type1,
        appd(1),
        temp(32),
        time1(8),
        date1(10),
        output(8192),
        rcount type i,
        offset type i,
        tablen type i,
        maxlen type i value '8192'.

  data: begin of clientab occurs 0,
             output(8192),
          end of clientab.

  field-symbols: <f>.
  field-symbols <delim1>.
  data delim2(16).
  data l_filename type string.

  appd = append.
  if appd is not initial.
     appd = 'X'.
  endif.
  move file to l_filename.
  describe table datatab lines tablen.


  if dwnload = 'Y'.
     clear clientab. refresh clientab.
     rcount = 0.
  else.
     if appd = space.
   open dataset file for output in text mode ENCODING UTF-8.
     else.
    open dataset file for appending in text mode ENCODING UTF-8.
     endif.
     if sy-subrc <> 0.
         rc = 2. exit.
     endif.
  endif.

  loop at datatab.
    clear: tablen, offset, output.
    do.
      assign component sy-index of
         structure datatab to <f>.
      if sy-subrc <> 0. exit. endif.
      if sy-index > 1.
         assign delimit(dlength) TO <delim1> CASTING TYPE C.
         delim2 = <delim1>.
         write delim2(dlength) to output+offset(dlength).
         add dlength to offset.
      endif.

      describe field <f> type type1.

      if type1 = 'I' or type1 = 'N'.
          type1 = 'P'.
      endif.

      case type1.
        when 'D'.
          if <f> = '00000000'.
             <f> = ' '.
          else.
             move <f> to time1.
             assign time1 to <f>.
          endif.
        when 'F'.
          if <f> = '0.0'.
            temp = '0.0'.
          else.
             write <f> to temp exponent 0.
          endif.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
        when 'P'.
          if <f> < 0.
             write '-' to output+offset(1).
             add 1 to offset.
             <f> = <f> * ( -1 ).
          endif.
          move <f> to temp.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
      endcase.

      sy-fdpos = strlen( <f> ).

      tablen = offset + sy-fdpos.
      if tablen > maxlen.
         rc = 3. exit.
      endif.
      write <f> to output+offset(sy-fdpos).
      add sy-fdpos to offset.
    enddo.

    if dwnload = 'Y'.
       clientab-output = output.
       append clientab.
       rcount = rcount + 1.
       if rcount >= 50.
          SY-BATCH = SPACE.
          CALL FUNCTION 'GUI_DOWNLOAD'
            EXPORTING
              FILENAME = l_filename
              FILETYPE = 'ASC'
              CODEPAGE = '4110'
              APPEND   = appd
              WRITE_FIELD_SEPARATOR = 'X'
*            IMPORTING
*              FILELENGTH =
            TABLES
              DATA_TAB = clientab
            EXCEPTIONS
              OTHERS = 1.
          if sy-subrc <> 0.
             rc = 4.
          endif.
          clear clientab. refresh clientab.
          rcount = 0. appd = 'A'.
       endif.
    else.
       transfer output to file.
    endif.
  endloop.

  if dwnload = 'Y'.
       SY-BATCH = SPACE.
       CALL FUNCTION 'GUI_DOWNLOAD'
         EXPORTING
           FILENAME = l_filename
           FILETYPE = 'ASC'
              CODEPAGE = '4110'
           APPEND   = appd
           WRITE_FIELD_SEPARATOR = 'X'
*         IMPORTING
*           FILELENGTH =
         TABLES
           DATA_TAB = clientab
         EXCEPTIONS
           OTHERS = 1.
          if sy-subrc <> 0.
             rc = 4.
          endif.
  else.
       close dataset file.
  endif.
endform.

FORM CONNECT_RFCDEST_TO_PROGID.
 INCLUDE rfctypes.

 DATA: len     type i,
       R3NAME(4),
       SYSTNR(2),
       uid     LIKE SYS_UID,
       options LIKE RFCOPT,
       isunicode  TYPE n.

 DATA: NTOTAL     LIKE GWY_STRUCT-NOREG,
       GWY_GWHOST LIKE GWY_STRUCT-GWHOST,
       GWY_GWSERV LIKE GWY_STRUCT-GWSERV,
       GWY_TPNAME LIKE GWY_SYSTEM-TPNAME.

 TABLES: RFCSI.

* Check program ID
 IF P_PROGID = SPACE.							
    RAISE INVALID_PROGRAM_ID.
 ENDIF.

* determine if the RFC destination authority
  CALL FUNCTION 'RFC_READ_TCPIP_DESTINATION'
       EXPORTING destination = P_DEST
                 authority_check = 'X'
  IMPORTING rfcunicode = isunicode.

* Use current gateway if no info exits
 IF P_GWHOST = SPACE OR P_GWSERV = SPACE.
  CALL FUNCTION 'RFC_SYSTEM_INFO'
      IMPORTING
          RFCSI_EXPORT = RFCSI.

  len = strlen( rfcsi-rfcdest ) - 2.
  systnr = rfcsi-rfcdest+len.
  len = len - 1 - 3.
  r3name = rfcsi-rfcdest+len(3).
  len = len - 1.
  options-rfcgwhost = rfcsi-rfcdest(len).
  CONCATENATE 'sapgw' SYSTNR INTO options-rfcgwserv.
 ELSE.
   options-rfcgwhost = P_GWHOST.
   options-rfcgwserv = P_GWSERV.
 ENDIF.

* Parameters for GWY function call
  GWY_GWHOST = OPTIONS-RFCGWHOST.
  GWY_GWSERV = OPTIONS-RFCGWSERV.
  GWY_TPNAME = P_PROGID.

* Check gateway and server program registered
  CALL FUNCTION 'GWY_GET_NO_REG_PROGRAMS'
     EXPORTING
        GWHOST      = GWY_GWHOST
        GWSERV      = GWY_GWSERV
        TPNAME      = GWY_TPNAME
     IMPORTING
        NOREG_TOTAL = NTOTAL
     EXCEPTIONS
        OTHERS      = 1.

  IF sy-subrc NE 0.
     raise CONNECT_TO_GATEWAY_FAILED.
  ENDIF.

  IF NTOTAL = 0.
     raise SERVER_NOT_REGISTERED.
  ENDIF.

  IF NTOTAL GT 1.
     raise DUPLICATE_REG_PROGRAMS.
  ENDIF.

* build new connection to a registered server
  options-rfcexec   = gwy_tpname.
  options-rfcgwhost = gwy_gwhost.
  options-rfcgwserv = gwy_gwserv.
  options-rfchost   = '%%RFCSERVER%%'.
  IF P_SNC_ON = 'X'.
    options-rfcsnc  = 'X'.
  ENDIF.

  CALL 'RFCControl' ID 'CODE' FIELD 'O'
                    ID 'DESTINATION' FIELD P_DEST
                    ID 'TYPE' FIELD rfctype_external_tcp
                    ID 'OPTIONS' FIELD options.

  IF sy-subrc NE 0.
     RAISE CONNECT_TO_REG_SERVER_FAILED.
   ENDIF.

* and set exclusive mode to keep server owned
  CALL FUNCTION 'SYSTEM_SET_REG_SERVER_PROPERTY'
      EXPORTING  destination = P_DEST
                 exclusiv    = 'Y'
      EXCEPTIONS connect_to_reg_server_failed = 1
                 exclusiv_not_supported       = 2.

  IF SY-SUBRC NE 0.
     CASE SY-SUBRC.
          WHEN 1.
              RAISE CONNECT_TO_REG_SERVER_FAILED.
          WHEN 2.
              RAISE EXCLUSIV_NOT_SUPPORTED.
     ENDCASE.
  ENDIF.

ENDFORM.

FORM DISCONNECT_RFCDEST_FROM_PROGID.
* set exclusive mode to E to end the session
  CALL FUNCTION 'SYSTEM_SET_REG_SERVER_PROPERTY'
     EXPORTING
         destination = P_DEST
         exclusiv    = 'E'
     EXCEPTIONS
         connect_to_reg_server_failed = 1				
         exclusiv_not_supported       = 2.
ENDFORM.
