*&---------------------------------------------------------------------*
*& Report  ZDGOUSR                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*
*& This program is a copy of the function Z_DBCP_READ_USR              *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  ZSLAUSR                                 .
Tables: usr02,usr06.

DATA: zwtab1 LIKE usr02 OCCURS 0 WITH HEADER LINE,
      zwtab2 LIKE usr02 OCCURS 0 WITH HEADER LINE,
      zwtaby LIKE usr02 OCCURS 0 WITH HEADER LINE,
      xlist like usr06-EASLPFL,
      testfile(80),
      prodfile(80).

* Open files
perform open_files.

* Test Users
xlist = 'T'.
perform select_users.
perform prepare_list.
perform write_to_file.

* Refresh internals tables.
clear zwtab2. Refresh zwtab2.
clear zwtaby. Refresh zwtaby.

* Production Users
xlist = 'P'.

perform select_users.
perform prepare_list.
perform write_to_file.


************************************************************************
** OPEN_FILES
************************************************************************
** Open 2 files (Prod users and Test users)
************************************************************************
form open_files.
DATA w_month(2).

*  Select previous month
  w_month = sy-datum+4(2) - 1.

  concatenate '/var/SCC/global/zsla/sapusrtest.' sy-sysid '.' sy-host
    '.' sy-datum(4) '.' w_month '.txt' into testfile.
  concatenate '/var/SCC/global/zsla/sapusrprod.' sy-sysid '.' sy-host
    '.' sy-datum(4) '.' w_month '.txt' into prodfile.

  open dataset testfile for output in text mode encoding default.
  if sy-subrc ne 0.
     write: 'Open file failed: ',testfile.
     exit.
  endif.

  open dataset prodfile for output in text mode encoding default.
  if sy-subrc ne 0.
     write: 'Open file failed: ',prodfile.
     exit.
  endif.
endform.


************************************************************************
** SELECT_USERS
************************************************************************
form select_users.
* Select user
select * from usr02 client specified.
  move-corresponding usr02 to zwtab1.
  If zwtab1-mandt ne '000'
  and zwtab1-mandt ne '001'
  and zwtab1-mandt ne '066'.
    append zwtab1.
  else.
    if xlist = 'T'.
      append zwtab1.
      if   zwtab1-bname ne 'DDIC'
      and zwtab1-bname ne 'SAP*'
      and zwtab1-bname ne 'SAPOSS'
         and zwtab1-bname ne 'SAPCPIC'
           and zwtab1-bname ne 'SUPPORT'
         and zwtab1-bname(3) ne  'IBM'
     and zwtab1-bname ne 'BEIBMSE'.
        move zwtab1 to zwtab2.
        append zwtab2.
        endif.
      endif.
    endif.
  endselect.
  loop at zwtab1.
    if xlist = 'T'.
      select single * from usr06 client specified
      where mandt = zwtab1-mandt
      and bname = zwtab1-bname.
      if sy-subrc ne 0.
      else.
        if usr06-lic_type = '91'
        or usr06-lic_type = '54'
        or usr06-lic_type = '72'.
          move zwtab1 to zwtab2.
          append zwtab2.
        endif.
      endif.
    endif.
      if zwtab1-bname = 'DDIC'
          or zwtab1-bname = 'SAP*'
          or zwtab1-bname = 'SAPOSS'
          or zwtab1-bname = 'SAPCPIC'
          or zwtab1-bname = 'SUPPORT'
          or zwtab1-bname(3) =  'IBM'
      or zwtab1-bname = 'BEIBMSE'.
        If xlist = 'T'.
        move zwtab1 to zwtab2.
        append zwtab2.
      endif.
    else.
    endif.
    if xlist = 'P'
      and    zwtab1-bname ne 'DDIC'
      and zwtab1-bname ne 'SAP*'
      and zwtab1-bname ne 'SAPOSS'
      and zwtab1-bname ne 'SAPCPIC'
      and zwtab1-bname ne 'SUPPORT'
      and zwtab1-bname(3) ne  'IBM'
      and zwtab1-bname ne 'BEIBMSE'.
      select single * from usr06 client specified
      where mandt = zwtab1-mandt
      and bname = zwtab1-bname.
      if sy-subrc ne 0.
        move zwtab1 to zwtab2.
        append zwtab2.
      else.
        if usr06-lic_type = '91'
        or usr06-lic_type = '54'
        or usr06-lic_type = '72'.
        else.
          move zwtab1 to zwtab2.
          append zwtab2.
        endif.
      endif.
    endif.
  endloop.
endform.


****************************************************************
**  PREPARE_LIST
****************************************************************
** Check if the user is dialog mode + validity
** if it is ok => copy the user into the internal table ZWTABY
****************************************************************
form prepare_list.
  sort zwtab2 by bname mandt.

  loop at zwtab2.
    if zwtab2-uflag eq ' '.
       if zwtab2-ustyp eq 'A'.  "Select Dialog users
*              check user's validity
          if zwtab2-GLTGV = '00000000' and zwtab2-gltgb = '00000000'.
             move zwtab2 to zwtaby.
             append zwtaby.
          else.
            if zwtab2-gltgv <= sy-datum and zwtab2-gltgb >= sy-datum.
             move zwtab2 to zwtaby.
             append zwtaby.
            endif. "gltv <=
          endif. "gltv
       endif. "ustyp
    endif. "uflag
  endloop.
endform.


****************************************************************
**  WRITE_TO_FILE
****************************************************************
** Write users on the corresponding file only once
** => no copy the duplicate lines (same user and client).
****************************************************************
form write_to_file.
  data w_text(50).
  data f_new(1).

  f_new = ' '.
  sort zwtaby by bname mandt.

  new-page.
  if xlist = 'T'.
     write: / 'Test Users'.
  else.
     write: / 'Production Users'.
  endif.
  uline.

*  No write into the file the duplicate lines.
  loop at zwtaby.
    at new bname.
      f_new = 'X'.
    endat.

    at new mandt.
      f_new = 'X'.
    endat.

    if f_new = 'X'.
      write: / zwtaby-bname, sy-sysid, zwtaby-mandt.
      concatenate zwtaby-bname sy-sysid zwtaby-mandt into w_text
        separated by ' '.
      if xlist = 'T'.
         transfer w_text to testfile.
      else.
         transfer w_text to prodfile.
      endif.
    endif.
    f_new = ' '.
  endloop.
endform.
