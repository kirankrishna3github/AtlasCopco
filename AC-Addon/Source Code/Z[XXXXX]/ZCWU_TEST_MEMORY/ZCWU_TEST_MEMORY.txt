*&---------------------------------------------------------------------*
*& Report  ZCWU_TEST_MEMORY
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  ZCWU_TEST_MEMORY.

*****************MEMORY ID：将变量存储到ABAP Memory内存中**************
*    MEMORY ID id
TYPES:BEGIN OF tab_type,
    para TYPE string,"列的名称任意，类型为字符型
    dobj TYPE string,
  END OF tab_type.
DATA:text1 TYPE string VALUE `TXT1`,
  text2 TYPE string VALUE `TXT2`,
  line  TYPE tab_type,
  itab  TYPE STANDARD TABLE OF tab_type.
line-para = 'P1'."值都需要大写
line-dobj = 'TEXT1'."值都需要大写
APPEND line TO itab.
line-para = 'P2'.
line-dobj = 'TEXT2'.
APPEND line TO itab.
EXPORT (itab) TO MEMORY ID 'TEXTS'.
IMPORT p1 = text2 p2 = text1 FROM MEMORY ID 'TEXTS'.
WRITE: / text1,text2."TXT2 TXT1

CLEAR: text1,text2.
IMPORT (itab) FROM MEMORY ID 'TEXTS'.
WRITE: / text1,text2."TXT1 TXT2

* DATABASE：将变量存储到数据库中；
*dbtab为簇数据库表的名称（如系统提供的标准表INDX）；
*ar的值为区域ID，它将数据库表的行分成若干区域，它必须被直接指定，且值是两位字符
*      ，被存储到簇数据库表中的RELID字段中；
*id 的值会存储到簇数据表中的RELID字段的下一用户自定义字段中：
*DATABASE      dbtab(ar) [FROM wa] [CLIENT cl] ID id
TYPES:BEGIN OF tab_type_2,
    col1 TYPE i,
    col2 TYPE i,
  END OF tab_type_2.
DATA: data_3 TYPE STANDARD TABLE OF tab_type_2.
DATA:wa_indx TYPE INDX,
  wa_itab TYPE tab_type_2,
  itab_2  TYPE STANDARD TABLE OF tab_type_2.
WHILE sy-index < 100.
  wa_itab-col1 = sy-index.
  wa_itab-col2 = sy-index ** 2.
  APPEND wa_itab TO itab_2.
ENDWHILE.
wa_indx-AEDAT = sy-datum.
wa_indx-USERA = sy-uname.
BREAK-POINT.
EXPORT tab = itab_2 TO DATABASE indx(sq) FROM wa_indx ID sy-uzeit.

BREAK-POINT.
IMPORT tab = data_3 from DATABASE indx(sq) TO wa_indx id 'TABLE'.

BREAK-POINT.

*SHARED MEMORY/SHARED BUFFER（不同Client、Job）
DATA matnr TYPE matnr.
IMPORT matnr FROM SHARED MEMORY indx(aa) ID 'YTEST_MATNR '.
WRITE matnr.
