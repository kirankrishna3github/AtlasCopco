*----------------------------------------------------------------------*
* Author  : Anda Wu                                                    *
* Created : 12.11.2014                                                 *
* Dev.nbr: CR3329-CS/SDMM-OOH Reporting per Sales Order                *
*----------------------------------------------------------------------*
* This report  is CS/SDMM-OOH Reporting per Sales Order                *
* of China MR CC Project                                               *
************************************************************************
* Mod-xxx | xxxx.xx.xx | xxxx xxxx     | CD1Kxxxxxxxxxx  |   CRXXXX    *
************************************************************************
REPORT zcwu_alv_template NO STANDARD PAGE HEADING LINE-SIZE 255
        LINE-COUNT 20.

************************************************************************
* TYPE SPOOLS                                                          *
************************************************************************
TYPE-POOLS slis.

************************************************************************
* TABLES                                                               *
************************************************************************
TABLES:
  vbap,
  vbak,
  t2504,
  ekpo,
  vbfa.

************************************************************************
* TYPES                                                                *
************************************************************************
TYPES:

BEGIN OF ty_alv_output,
    vbeln    TYPE char10,       "Sales Document
    posnr    TYPE vbap-posnr,   "Sales Document Item
    auart    TYPE vbak-auart,   "Sales Document Type
    erdat    TYPE vbak-erdat,   "Date on Which Record Was Created(H)
    ernam    TYPE vbak-ernam,   "Name of Person who Created(H)
    erdat_sl TYPE vbap-erdat,   "Date on Which Record Was Created(I)
    ernam_sl TYPE vbap-ernam,   "Name of Person who Created(I)
    vkorg    TYPE vbak-vkorg,   "Sales Organization
    vtweg    TYPE vbak-vtweg,   "Distribution Channel
    matnr    TYPE char18,       "Material Number
    maktx    TYPE makt-maktx,   "Material Description
    stprs    TYPE mbew-stprs,   "Standard price
    netwr    TYPE vbap-netwr,   "Net value of the order item
    werks    TYPE vbap-werks,   "Plant
    lgort    TYPE lgort_d,      "Storage Location
    labst    TYPE labst,        "Valuated Unrestricted-Use Stock
    vkbur    TYPE vkbur,        "Sales Office
    vkgrp    TYPE vkgrp,        "Sales Group
    bezei    TYPE bezei20,      "Description
    edatu    TYPE edatu,        "Schedule line date
    wadat    TYPE wadat,        "Planned GI date
    cmgst    TYPE status_bez,   "Credit block status
    lifsk    TYPE lifsk,        "Delivery block
    vsbed    TYPE vsbed,        "Shipping Conditions
    autlf    TYPE autlf,        "Complete delivery status
    kvgr4    TYPE kvgr4,        "Customer group 4
    zterm    TYPE dzterm,       "Terms of Payment Key
    vtext    TYPE dzterm_bez,   "Description of terms of payment
    alava    TYPE zall_avail,   "ALL Available
    avail    TYPE yavail,       "Available
    pstyv    TYPE pstyv,        "Sales document item category
    dtc_sfs  TYPE yse_dtc_sfs,  "DTC/SFS
    pgc      TYPE z_pgc,        "Product Group Code
    target1  TYPE rkeg_ww002,   "PLC
    bstkd    TYPE bstkd,        "Customer purchase order number
    vbeln_po TYPE vbeln_nach,   "Subsequent PO number
    posnn_po TYPE posnr_nach,   "PO line number
    xblnr    TYPE xblnr_long,   "Status in PO line description
    bmeng    TYPE bmeng,        "Confirmed quantity
    kwmeng   TYPE kwmeng,       "Ordered quantity
    kwmeng_open TYPE vbap-kwmeng, "Open quantity
    vrkme    TYPE vrkme,        "Sales unit
    niqty    TYPE yse_niqty,    "Delivered QTY(Not Issued)
    isqty    TYPE yse_isqty,    "Delivered QTY(Issued)
    ivqty    TYPE yse_ivqty,    "Invoiced QTY
    ihrez    TYPE ihrez,        "Service Order
    quotation TYPE yse_quotation,"Quotation number
    grdate   TYPE zgrdate,      "DTC last GR Date
    kunnr    TYPE kunag,        "Sold-to party
    name1    TYPE name1_gp,     "Sold-to name
  END OF ty_alv_output.

************************************************************************
* INTERNAL TABLES                                                      *
************************************************************************
DATA:
  gt_alvdata  TYPE STANDARD TABLE OF ty_alv_output,
  gt_fieldcat TYPE slis_t_fieldcat_alv.

************************************************************************
* WORKAREAS                                                            *
************************************************************************
DATA:
  gs_alvdata  TYPE ty_alv_output,
  gs_disvar   TYPE disvariant,
  gs_layout   TYPE slis_layout_alv.

************************************************************************
* VARIABLES                                                            *
************************************************************************
DATA:
  gv_col(10)  TYPE n,
  gv_text     TYPE string,
  gv_save     TYPE c,
  gv_callback TYPE slis_formname.

************************************************************************
* CONSTANTS                                                            *
************************************************************************
CONSTANTS:
  gc_x                TYPE c VALUE 'X',
  gc_type_e           TYPE c VALUE 'E',
  gc_callback_routine TYPE slis_formname VALUE 'USER_COMMAND'.

************************************************************************
* SELECTION-SCREEN                                                     *
************************************************************************
* Alv variants
SELECTION-SCREEN BEGIN OF BLOCK b3 WITH FRAME TITLE text-t03.

PARAMETERS: p_vari TYPE disvariant-variant.       "Dispaly Variant

SELECTION-SCREEN END OF BLOCK b3.

SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE text-t02 .
SELECT-OPTIONS:
  s_vbeln      FOR vbak-vbeln,            "Sales order number
  s_auart      FOR vbak-auart OBLIGATORY, "Sales order type
  s_vkorg      FOR vbak-vkorg OBLIGATORY, "Sales Organisation
  s_vtweg      FOR vbak-vtweg,            "Distribution Channel
  s_vkbur      FOR vbak-vkbur,            "Sales Office
  s_vkgrp      FOR vbak-vkgrp,            "Sales Group
  s_kunnr      FOR vbak-kunnr,            "Sold-to party
  s_pgc        FOR t2504-ww007,           " PGC
  s_matnr      FOR vbap-matnr,            "Material ID
  s_erdat      FOR vbak-erdat OBLIGATORY. "SO creation date
SELECTION-SCREEN END OF BLOCK b2.

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-t01.

PARAMETERS: rb1 RADIOBUTTON GROUP g1 DEFAULT 'X',
            rb2 RADIOBUTTON GROUP g1.

SELECTION-SCREEN END OF BLOCK b1.

*&---------------------------------------------------------------------*
*& INITIALIZATION                                                      *
*&---------------------------------------------------------------------*
INITIALIZATION.
* Do initilization
  PERFORM frm_init.

*&---------------------------------------------------------------------*
*& AT SELECTION-SCREEN                                                 *
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN.
* selection screen check
  PERFORM check_parameter.

*&---------------------------------------------------------------------*
*& AT SELECTION-SCREEN ON VALUE-REQUEST                                *
*&---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_vari.
  PERFORM f4_for_variant.

top-OF-PAGE.
  WRITE: 30 sy-pagno, '/', '6'.
  ULINE.

*&---------------------------------------------------------------------*
*& START-OF-SELECTION                                                  *
*&---------------------------------------------------------------------*
START-OF-SELECTION.

DATA: lv_int TYPE i.
TRY.
  lv_int = 5 / 0.
CATCH CX_SY_ZERODIVIDE.

    WRITE: '²»ÄÜ³ý0,Çë¼ì²é'.
ENDTRY.
* progress indicator
*  PERFORM process_info.
* get data
*  PERFORM get_alv_data.
* alv property set
*  PERFORM alv_prop_set.

*&---------------------------------------------------------------------*
*& END-OF-SELECTION                                                    *
*&---------------------------------------------------------------------*
END-OF-SELECTION.
* ALV display
*  PERFORM alv_display.

*&---------------------------------------------------------------------*
*&      Form  FRM_INIT
*&---------------------------------------------------------------------*
*       Do initilization
*----------------------------------------------------------------------*
FORM frm_init .

* initialize the internal table,workareas and variables
  REFRESH:
    gt_alvdata,
    gt_fieldcat.

  gv_save = 'A'.
* Set default alv layout
  gs_disvar-report = sy-repid.
  CALL FUNCTION 'REUSE_ALV_VARIANT_DEFAULT_GET'
    EXPORTING
      i_save        = gv_save
    CHANGING
      cs_variant    = gs_disvar
    EXCEPTIONS
      wrong_input   = 1
      not_found     = 2
      program_error = 3
      OTHERS        = 4.
  IF sy-subrc = 0.
    p_vari = gs_disvar-variant.
  ENDIF.

ENDFORM.                    " FRM_INIT

*&---------------------------------------------------------------------*
*&      Form  CHECK_PARAMETER
*&---------------------------------------------------------------------*
*       selection screen check
*----------------------------------------------------------------------*
FORM check_parameter .

  DATA: ls_disvar TYPE disvariant.

  IF p_vari IS NOT INITIAL.
    ls_disvar = gs_disvar.
    ls_disvar-variant = p_vari.
    CALL FUNCTION 'REUSE_ALV_VARIANT_EXISTENCE'
      EXPORTING
        i_save        = gv_save
      CHANGING
        cs_variant    = ls_disvar
      EXCEPTIONS
        wrong_input   = 1
        not_found     = 2
        program_error = 3
        OTHERS        = 4.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ELSE.
      gs_disvar = ls_disvar.
    ENDIF.
  ENDIF.

ENDFORM.                    " CHECK_PARAMETER
*&---------------------------------------------------------------------*
*&      Form  PROCESS_INFO
*&---------------------------------------------------------------------*
*       progress indicator
*----------------------------------------------------------------------*
FORM process_info .

  IF sy-batch IS NOT INITIAL.
    CLEAR: gv_text.
    CONCATENATE 'Start report:'(t52) sy-repid
                  INTO gv_text SEPARATED BY space.
    MESSAGE i000(yse_sales_log) WITH gv_text.
  ELSE.
    CLEAR: gv_text.
    gv_text = text-t53.
    CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
      EXPORTING
        percentage = 1
        text       = gv_text.
  ENDIF.

ENDFORM.                    " PROCESS_INFO
*&---------------------------------------------------------------------*
*&      Form  GET_ALV_DATA
*&---------------------------------------------------------------------*
*       get data
*----------------------------------------------------------------------*
FORM get_alv_data .

* Gain data from table VBAK - Sales Document: Header Data
  PERFORM get_data_vbak.
* Gain data from table MAKT - Material Descriptions
  PERFORM get_data_makt.
* Gain data from table TVGRT - Sales Group Name
  PERFORM get_data_tvgrt.
* Gain data from table VBFA  - Sales Document Flow
  PERFORM get_data_vbfa.
* Gain data from table VBUP  - Header Status
  PERFORM get_data_vbuk.
* Gain data PO data
  PERFORM get_data_vbeln.
* Sort data
  PERFORM get_data_sort.
* Generate ALV data for output
  PERFORM generate_alv_data.
* Edit available
  PERFORM edit_available_data.
* Edit all available
  PERFORM edit_alv_data.
ENDFORM.                    " GET_ALV_DATA
*&---------------------------------------------------------------------*
*&      Form  ALV_PROP_SET
*&---------------------------------------------------------------------*
*       alv property set
*----------------------------------------------------------------------*
FORM alv_prop_set .

* Display ALV process indicator
  PERFORM alv_progress_indicator.

* FIELDCAT set
  PERFORM alv_fieldcat_set.

* LAYOUT set
  PERFORM alv_layout_set.

* Set Others
  PERFORM alv_others_set.

ENDFORM.                    " ALV_PROP_SET
*&---------------------------------------------------------------------*
*&      Form  ALV_DISPLAY
*&---------------------------------------------------------------------*
*       ALV display
*----------------------------------------------------------------------*
FORM alv_display .

  DATA: lv_lines(10)  TYPE c.

  IF gt_alvdata IS INITIAL.
    CLEAR: gv_text.
    gv_text = text-t61.
    MESSAGE s000(yse_sales_log) WITH gv_text
      DISPLAY LIKE gc_type_e.
    LEAVE LIST-PROCESSING.
  ENDIF.

  IF sy-batch IS INITIAL.
    CLEAR: gv_text.
    gv_text = text-t63.
    CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
      EXPORTING
        percentage = 80
        text       = gv_text.
  ELSE.
    CLEAR: gv_text.
    DESCRIBE TABLE gt_alvdata LINES lv_lines.
    CONCATENATE 'Totally'(t62) lv_lines 'entries are generated'(t63)
                  INTO gv_text SEPARATED BY space.
    MESSAGE i000(yse_sales_log) WITH gv_text.
  ENDIF.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program       = sy-repid
      i_callback_pf_status_set = 'FRM_MY_STATUS'
      i_callback_user_command  = gv_callback
      is_layout                = gs_layout
      it_fieldcat              = gt_fieldcat
      i_save                   = gv_save
      is_variant               = gs_disvar
    TABLES
      t_outtab                 = gt_alvdata
    EXCEPTIONS
      program_error            = 1
      OTHERS                   = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

ENDFORM.                    " ALV_DISPLAY

*&---------------------------------------------------------------------*
*&      Form  FRM_MY_STATUS
*&---------------------------------------------------------------------*
*       Status Set
*----------------------------------------------------------------------*
*  --> I_EXTAB    STATUS
*----------------------------------------------------------------------*
FORM frm_my_status USING i_extab TYPE slis_t_extab.

  SET PF-STATUS '9100'.

ENDFORM.        "FRM_MY_STATUS

*&---------------------------------------------------------------------*
*&      Form  ALV_FIELDCAT_SET
*&---------------------------------------------------------------------*
*       FIELDCAT set
*----------------------------------------------------------------------*
FORM alv_fieldcat_set .

** Create Fieldcatalogue from internal table

  CLEAR gv_col.

* Field definitions
  PERFORM add_field USING 'NAME1'     12 'Sold-to name'(t47)   ' '.

ENDFORM.                    " ALV_FIELDCAT_SET

*&---------------------------------------------------------------------*
*&      Form  ADD_FIELD
*&---------------------------------------------------------------------*
*       Add field to field catalog
*----------------------------------------------------------------------*
FORM add_field  USING    p_field
                         p_len
                         p_descr
                         p_hotsp.
  DATA:
     ls_fieldcat TYPE slis_fieldcat_alv.

  gv_col = gv_col + 1.

  CLEAR ls_fieldcat.
  ls_fieldcat-col_pos    = gv_col.
  ls_fieldcat-fieldname  = p_field.
  ls_fieldcat-outputlen  = p_len.
  ls_fieldcat-seltext_l  = p_descr.
  ls_fieldcat-seltext_m  = p_descr.
  ls_fieldcat-seltext_s  = p_descr.
  ls_fieldcat-fix_column = 'X'.
  ls_fieldcat-emphasize  = 'X'.
  ls_fieldcat-hotspot    = p_hotsp.

* Suppress leading zeros for the material number
  IF p_field = 'MATNR'.
    ls_fieldcat-edit_mask = '==MATN1'.
  ENDIF.

  APPEND ls_fieldcat TO gt_fieldcat.

ENDFORM.                    " ADD_FIELD

*&---------------------------------------------------------------------*
*&      Form  ALV_LAYOUT_SET
*&---------------------------------------------------------------------*
*       LAYOUT set
*----------------------------------------------------------------------*
FORM alv_layout_set .

  CLEAR: gs_layout.
  gs_layout-zebra = gc_x.               "ALV lines cross-color display
  gs_layout-colwidth_optimize = gc_x.   "Auto optimize column width
  gs_layout-detail_popup = gc_x.        "Show detail screen

ENDFORM.                    " ALV_LAYOUT_SET
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_VBAK
*&---------------------------------------------------------------------*
*       Gain data from table VBAK - Sales Document: Header Data
*       Gain data from table VBAP - Sales Document: Item Data
*----------------------------------------------------------------------*
FORM get_data_vbak .

* Progress indicator/ Log info generate
  IF sy-batch IS NOT INITIAL.
    CLEAR: gv_text.
    gv_text ='Begin to retrieve table VBAK'(t54).
    MESSAGE i000(yse_sales_log) WITH gv_text.
  ELSE.
    CLEAR: gv_text.
    gv_text = text-t54.
    CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
      EXPORTING
        percentage = 10
        text       = gv_text.
  ENDIF.
ENDFORM.                    " GET_DATA_VBAK

*&---------------------------------------------------------------------*
*&      Form  GET_DATA_MAKT
*&---------------------------------------------------------------------*
* Gain data from table MAKT - Material Descriptions
* Gain data from table MBEW - Material Valuation
* Gain data from table MARD - Storage Location Data for Material
*----------------------------------------------------------------------*
FORM get_data_makt .

ENDFORM.                    " GET_DATA_MAKT

*&---------------------------------------------------------------------*
*&      Form  GET_DATA_TVGRT
*&---------------------------------------------------------------------*
*       Gain data from table TVGRT - Sales Group Name
*       Gain data from table TVGRT - Schedule Line Data
*       Gain data from table VBKD  - Business Data
*----------------------------------------------------------------------*
FORM get_data_tvgrt .

ENDFORM.                    " GET_DATA_TVGRT

*&---------------------------------------------------------------------*
*&      Form  GET_DATA_VBFA
*&---------------------------------------------------------------------*
*       Gain data from table VBFA - Sales Document Flow
*       Gain data from table VBUP  - Item Status
*----------------------------------------------------------------------*
FORM get_data_vbfa .

ENDFORM.                    " GET_DATA_VBFA

*&---------------------------------------------------------------------*
*&      Form  GET_DATA_VBUK
*&---------------------------------------------------------------------*
*        Gain data from table VBUP  - Header Status
*        Gain data from table TVBST - Processing Status
*----------------------------------------------------------------------*
FORM get_data_vbuk .

ENDFORM.                    " GET_DATA_VBUK

*&---------------------------------------------------------------------*
*&      Form  GET_DATA_VBELN
*&---------------------------------------------------------------------*
*       Gain data PO data
*----------------------------------------------------------------------*
FORM get_data_vbeln .


ENDFORM.                    " GET_DATA_VBELN

*&---------------------------------------------------------------------*
*&      Form  GET_DATA_SORT
*&---------------------------------------------------------------------*
*       Sort Data
*----------------------------------------------------------------------*
FORM get_data_sort .

ENDFORM.                    " GET_DATA_SORT

*&---------------------------------------------------------------------*
*&      Form  GENERATE_ALV_DATA
*&---------------------------------------------------------------------*
*       Generate ALV data for output
*----------------------------------------------------------------------*
FORM generate_alv_data .


ENDFORM.                    " GENERATE_ALV_DATA

*&---------------------------------------------------------------------*
*&      Form  ALV_PROGRESS_INDICATOR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM alv_progress_indicator .

* Progress indicator/ Log info generate
  IF sy-batch IS NOT INITIAL.
    CLEAR: gv_text.
    gv_text ='Begin to set ALV property'(t60).
    MESSAGE i000(yse_sales_log) WITH gv_text.
  ELSE.
    CLEAR: gv_text.
    gv_text = text-t60.
    CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
      EXPORTING
        percentage = 75
        text       = gv_text.
  ENDIF.

ENDFORM.                    " ALV_PROGRESS_INDICATOR

*&---------------------------------------------------------------------*
*&      Form  ALV_OTHERS_SET
*&---------------------------------------------------------------------*
*       Set Others
*----------------------------------------------------------------------*
FORM alv_others_set .

  gv_callback = gc_callback_routine.

ENDFORM.                    " ALV_OTHERS_SET
*&---------------------------------------------------------------------*
*&      Form  F4_FOR_VARIANT
*&---------------------------------------------------------------------*
*       F4 help for display variant
*----------------------------------------------------------------------*
FORM f4_for_variant .

  DATA: ls_disvar TYPE disvariant,
        lv_exit   TYPE c.

  ls_disvar-report = sy-repid.

  CALL FUNCTION 'REUSE_ALV_VARIANT_F4'
    EXPORTING
      is_variant    = ls_disvar
      i_save        = gv_save
    IMPORTING
      e_exit        = lv_exit
      es_variant    = gs_disvar
    EXCEPTIONS
      not_found     = 1
      program_error = 2
      OTHERS        = 3.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ELSE.
    IF lv_exit = space.
      p_vari = gs_disvar-variant.
    ENDIF.
  ENDIF.

ENDFORM.                    " F4_FOR_VARIANT

*&---------------------------------------------------------------------*
*&      Form  ALV_OTHERS_SET
*&---------------------------------------------------------------------*
*       USER_COMMAND
*----------------------------------------------------------------------*
FORM user_command USING u_ucomm     LIKE sy-ucomm           "#EC CALLED
                        p_selfield  TYPE slis_selfield.

  CASE u_ucomm.
    WHEN '&IC1'.        " SAP standard code for double-clicking
      IF p_selfield-fieldname = 'VBELN'.
        IF p_selfield-value IS NOT INITIAL.
          SET PARAMETER ID 'AUN' FIELD p_selfield-value.
          CALL TRANSACTION 'VA03'.
        ENDIF.
      ENDIF.
    WHEN OTHERS.
  ENDCASE.

ENDFORM.                    " USER_COMMAND
*&---------------------------------------------------------------------*
*&      Form  EDIT_ALV_DATA
*&---------------------------------------------------------------------*
*       Edit all available
*----------------------------------------------------------------------*
FORM edit_alv_data .

ENDFORM.                    " EDIT_ALV_DATA
*&---------------------------------------------------------------------*
*&      Form  EDIT_AVAILABLE_DATA
*&---------------------------------------------------------------------*
*       Edit available
*----------------------------------------------------------------------*
FORM edit_available_data .

ENDFORM.                    " EDIT_AVAILABLE_DATA

*Text symbol text£º
*T01:Selection Criteria
*T02:Selection Input
*T03:ALV Layout
*T04:Created(H) on
*T05:Created(H) by
*T06:Created(I) by
*T07:Sales Org.
*T08:Distr. Channel
*T09:Material
*T10:Description
*T11:Standard price
*T12:Net Value
*T13:Plant
*T14:Stor. Loc.
*T15:Unrestricted
*T16:Sales Office
*T17:Sales Grp
*T18:Descript.
*T19:Dlv.Date
*T20:GI Date
*T21:Credit block
*T22:Delivery block
*T23:Shipping Cond.
*T24:Complete dlv.
*T25:Cust.grp.4
*T26:Payt Terms
*T27:All.Ava
*T28:Available
*T29:Item cat.
*T30:DTC/SFS
*T31:PGC
*T32:PLC
*T33:Pur. order
*T35:Sub.PO number
*T36:Sub.Item
*T37:Status in PO line
*T38:ConfirmQty
*T39:Order qty
*T40:NI. Quan
*T41:IS. Quan
*T42:Invoiced QTY
*T43:Service Order
*T44:Quo.No.
*T45:Latest GR Date
*T46:Sold-to pt
*T47:Sold-to name
*T48:SD Doc.
*T49:Item
*T50:SalesDocTy
*T51:Created(I) on
*T52:Start report:
*T53:Start report: YSE_SD_OOH
*T54:Begin to retrieve table VBAK
*T55:No data exist in table
*T56:Payt Descript.
*T57:Sales unit
*T58:Begin to retrieve table VBFA
*T59:No data exist in table VBFA
*T60:Begin to set ALV property
*T61:No data exist
*T62:Totally
*T63:entries are generated

*T64:Begin to generate ALV data
*Selection text£º
*P_VARI:D       .
*RB1:        Open Sales orders
*RB2:        All orders
*S_AUART:D       .
*S_ERDAT:D       .
*S_KUNNR:D       .
*S_MATNR:D       .
*S_PGC:D       .
*S_VBELN:D       .
*S_VKBUR:D       .
*S_VKGRP:D       .
*S_VKORG:D       .
*S_VTWEG:D       .
