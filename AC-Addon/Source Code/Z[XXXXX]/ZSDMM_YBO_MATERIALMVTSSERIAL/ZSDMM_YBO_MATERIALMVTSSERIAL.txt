REPORT ZAL_ABAP message-id 26 line-size 255
no standard page heading.
* YBO_MaterialMvtsSerial.
PARAMETER DOWNLOAD(1) DEFAULT 'N' lower case. "N-svr,Y-clnt
PARAMETER EXECMODE(1) DEFAULT 'B' lower case. "D-dlg,B-btch
PARAMETER OUT_DIR(48) DEFAULT "output file dir
*'/var/load/CP1/UK/read' LOWER CASE.
'/var/load/xxx/UK/read' LOWER CASE.
PARAMETER IN_DIR(48) DEFAULT "input file dir
*'/var/load/CP1/UK/read' LOWER CASE.
'/var/load/xxx/UK/read' LOWER CASE.

PARAMETER $PARAM1(8) TYPE C.

PARAMETER $PARAM2(8) TYPE C.

PARAMETER P_DF_VK(40) DEFAULT "ABAP data flow object key
'' lower case.
PARAMETER P_DI_GEN(40) DEFAULT "DI version that generated ABAP
'' lower case.

*** Machine generated ABAP. Do not modify.            ***
*** # Copyright Business Objects S.A.  All rights reserved. ***
*
* Date Time:
*    06/09/15 03:23:55
* SAP used for generated this ABAP:
*    Release: 701
*    Host   : 10.25.3.26
*
* ABAP Dataflow Name:
*    DF_SDMM_R3_MaterialMvtsSerial
* ABAP Dataflow comments:
*    SAP source: SER03, OBJK, T001W
* ABAP program name in SAP:
*    YBO_MATERIALMVTSSERIAL
* Generated ABAP file name:
*    D:/Data/SAPLogistics/PRD/ABAP/YBO_MaterialMvtsSerial
TABLES SER03.
TABLES OBJK.
TABLES T001W.

DATA: begin of ITAB3 occurs 0,
MBLNR(10) TYPE C,
MJAHR(4) TYPE N,
EQUNR(18) TYPE C,
SERNR(18) TYPE C,
ZEILE(4) TYPE N,
WERK(4) TYPE C.
DATA: end of ITAB3.

DATA: begin of ITAB5 occurs 0,
MBLNR(10) TYPE C,
MJAHR(4) TYPE N,
EQUNR(18) TYPE C,
SERNR(18) TYPE C,
ZEILE(4) TYPE N.
DATA: end of ITAB5.

data: append_flag(1) value ' ',
      cntbuf type i,
      delimleng type i.

CONSTANTS C_DF_VK(40) VALUE '7981'.
CONSTANTS C_DI_GEN(40) VALUE '12.2.2.3'.
DATA WARN_MSG(50).
DATA: gv_directory     TYPE epsdirnam  VALUE '/var/load/xxx/UK/read/',
      gv_logsys        like tbdlst-logsys.

start-of-selection.
* Logical system
  CALL FUNCTION 'OWN_LOGICAL_SYSTEM_GET'
    IMPORTING
      own_logical_system             = gv_logsys
    EXCEPTIONS
      own_logical_system_not_defined = 1
      OTHERS                         = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE 'E' NUMBER sy-msgno
         WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    STOP.
  ENDIF.
  REPLACE 'xxx' IN out_dir WITH gv_logsys(3).
  REPLACE 'xxx' IN in_dir WITH gv_logsys(3).



PERFORM FORM3.
PERFORM FORM5.
FREE ITAB3.
PERFORM FORM6.
FREE ITAB5.

end-of-selection.

CLEAR WARN_MSG.

IF NOT P_DF_VK IS INITIAL.
  IF P_DF_VK <> C_DF_VK.
     CONCATENATE '$$Warning$'
                 C_DF_VK
                 '$' INTO WARN_MSG.
  ENDIF.
ENDIF.
IF NOT P_DI_GEN IS INITIAL.
  IF P_DI_GEN <> C_DI_GEN.
     IF WARN_MSG IS INITIAL.
       CONCATENATE '$$Warning$$'
                   C_DI_GEN
                   INTO WARN_MSG.
     ELSE.
       CONCATENATE WARN_MSG
                   C_DI_GEN
                   INTO WARN_MSG.
     ENDIF.
  ENDIF.
ENDIF.

IF NOT WARN_MSG IS INITIAL.
  IF EXECMODE = 'D'.
    WRITE WARN_MSG.
    NEW-LINE.
  ELSE.
    MESSAGE S000 with WARN_MSG.
  ENDIF.
ENDIF.


write  '* Program Complete *'.
write  '# Copyright Business Objects S.A.  All rights reserved.'
.

FORM FORM3.
DATA ALTMP33(10) TYPE C.
DATA ALTMP34(4) TYPE N.
DATA ALTMP35(18) TYPE C.
DATA ALTMP36(18) TYPE C.
DATA ALTMP37(4) TYPE N.
DATA ALTMP38(4) TYPE C.

DATA SER039MBLNR LIKE SER03-MBLNR.
DATA SER039MJAHR LIKE SER03-MJAHR.
DATA OBJK9EQUNR LIKE OBJK-EQUNR.
DATA OBJK9SERNR LIKE OBJK-SERNR.
DATA SER039ZEILE LIKE SER03-ZEILE.
DATA SER039WERK LIKE SER03-WERK.
DATA SER039DATUM LIKE SER03-DATUM.
DATA SER039OBKNR LIKE SER03-OBKNR.
DATA OBJK9OBKNR LIKE OBJK-OBKNR.



SELECT
  SER039~MBLNR
  SER039~MJAHR
  OBJK9~EQUNR
  OBJK9~SERNR
  SER039~ZEILE
  SER039~WERK
  SER039~DATUM
  SER039~OBKNR
  OBJK9~OBKNR
into (SER039MBLNR,
  SER039MJAHR,
  OBJK9EQUNR,
  OBJK9SERNR,
  SER039ZEILE,
  SER039WERK,
  SER039DATUM,
  SER039OBKNR,
  OBJK9OBKNR)
FROM OBJK AS OBJK9
 INNER JOIN SER03 AS SER039
 ON ( SER039~OBKNR = OBJK9~OBKNR )
WHERE ( ( SER039~DATUM <= $PARAM2 )
 AND ( SER039~DATUM >= $PARAM1 ) ).
ALTMP33 = SER039MBLNR.
ALTMP34 = SER039MJAHR.
ALTMP35 = OBJK9EQUNR.
ALTMP36 = OBJK9SERNR.
ALTMP37 = SER039ZEILE.
ALTMP38 = SER039WERK.
 move ALTMP33 to ITAB3-MBLNR.
 move ALTMP34 to ITAB3-MJAHR.
 move ALTMP35 to ITAB3-EQUNR.
 move ALTMP36 to ITAB3-SERNR.
 move ALTMP37 to ITAB3-ZEILE.
 move ALTMP38 to ITAB3-WERK.
 append ITAB3.
ENDSELECT.
ENDFORM.

FORM FORM5.
DATA ALTMP39(10) TYPE C.
DATA ALTMP40(4) TYPE N.
DATA ALTMP41(18) TYPE C.
DATA ALTMP42(18) TYPE C.
DATA ALTMP43(4) TYPE N.



SORT ITAB3 BY WERK .

SELECT
  WERKS
  EKORG
INTO CORRESPONDING FIELDS OF T001W
FROM T001W
WHERE EKORG IN ('CN01',
'CN04',
'HK01',
'RU01').
READ TABLE ITAB3
WITH KEY WERK = T001W-WERKS
 BINARY SEARCH.
IF sy-subrc = 0.
LOOP AT ITAB3 FROM sy-tabix.
IF ITAB3-WERK = T001W-WERKS.
ALTMP39 = ITAB3-MBLNR.
ALTMP40 = ITAB3-MJAHR.
ALTMP41 = ITAB3-EQUNR.
ALTMP42 = ITAB3-SERNR.
ALTMP43 = ITAB3-ZEILE.
 move ALTMP39 to ITAB5-MBLNR.
 move ALTMP40 to ITAB5-MJAHR.
 move ALTMP41 to ITAB5-EQUNR.
 move ALTMP42 to ITAB5-SERNR.
 move ALTMP43 to ITAB5-ZEILE.
 append ITAB5.
 cntbuf = cntbuf + 1.
 if download = 'N'.
  if cntbuf > 5000.
    perform FORM6.
    clear cntbuf.
    refresh ITAB5.
    append_flag = 'A'.
  endif.
 endif.
ELSE.
EXIT.
ENDIF.
ENDLOOP.
ENDIF.
ENDSELECT.
ENDFORM.

FORM FORM6.
data: outfile(128), ldfile(50).
ldfile = 'SER03_OBJK_MATERIALMVTSERIAL'.
concatenate out_dir ldfile into outfile
  separated by '/'.
data  dlmtlen type i value '1'.
data xdlmtlen type i value '1'.
data:
  ht(1) type c,
  xht(1) type x,
  conv type ref to cl_abap_conv_in_ce.
xht = '7F'.
conv = cl_abap_conv_in_ce=>create(
  encoding = '4110'
  input = xht
).
call method conv->read(
  exporting n    = xdlmtlen
  importing data = ht
            len = dlmtlen
).
data return_code type i.
 perform write_delimited_file
           tables   ITAB5
           using    outfile
                    append_flag
                    ht
                    dlmtlen
                    download
           changing return_code.

  case return_code.
    when 1.
      IF EXECMODE = 'D'.
        WRITE: /5 'No line selected'.
      ELSE.
        MESSAGE E098.
      ENDIF.
    when 2.
      IF EXECMODE = 'D'.
        WRITE: /5 'Open File Error -- ', 25 OUTFILE.
      ELSE.
        MESSAGE  E107 WITH OUTFILE.
      ENDIF.
    when 3.
      IF EXECMODE = 'D'.
        WRITE: /5 'Data exceed length limit (8192) '.
      ELSE.
        MESSAGE  E000 WITH
             'Data exceed length limit (8192) '.
      ENDIF.
    when 4.
      IF EXECMODE = 'D'.
        WRITE: /5 'Call function WS_DOWNLOAD error'.
      ELSE.
        MESSAGE  E000 WITH
             'Call function WS_DOWNLOAD error'.
      ENDIF.
  endcase.
ENDFORM.

FORM SUBSTRING USING SRC BEG LEN CHANGING RET.

DATA: VA1 TYPE I.
DATA: VA2 TYPE I.
DATA: VA3 TYPE I.

VA3 = STRLEN( SRC ).

IF  BEG = 0.   VA1 = 0.
ELSE.
  IF  BEG < 0.
    VA1 = VA3 + BEG.
    IF  VA1 < 0.   VA1 = 0.
    ENDIF.
  ELSE.          VA1 = BEG - 1.
  ENDIF.
ENDIF.

IF  LEN < 0.   VA2 = 0.
ELSE.          VA2 = VA3 - VA1.
ENDIF.

IF  VA2 > LEN. VA2 = LEN.
ENDIF.

IF  VA2 < 1.   MOVE ''           TO RET.
ELSE.          MOVE SRC+VA1(VA2) TO RET.
ENDIF.

ENDFORM.

form write_delimited_file
           tables   datatab
           using    file
                    append
                    delimit
                    dlength
                    dwnload
          changing rc.

  data: type1,
        appd(1),
        temp(32),
        time1(8),
        date1(10),
        output(8192),
        rcount type i,
        offset type i,
        tablen type i,
        maxlen type i value '8192'.

  data: begin of clientab occurs 0,
             output(8192),
          end of clientab.

  field-symbols: <f>.
  field-symbols <delim1>.
  data delim2(16).
  data l_filename type string.

  appd = append.
  if appd is not initial.
     appd = 'X'.
  endif.
  move file to l_filename.
  describe table datatab lines tablen.


  if dwnload = 'Y'.
     clear clientab. refresh clientab.
     rcount = 0.
  else.
     if appd = space.
         open dataset file for output in text mode ENCODING
UTF-8.
     else.
         open dataset file for appending in text mode ENCODING
UTF-8.
     endif.
     if sy-subrc <> 0.
         rc = 2. exit.
     endif.
  endif.

  loop at datatab.
    clear: tablen, offset, output.
    do.
      assign component sy-index of
         structure datatab to <f>.
      if sy-subrc <> 0. exit. endif.
      if sy-index > 1.
         assign delimit(dlength) TO <delim1> CASTING TYPE C.
         delim2 = <delim1>.
         write delim2(dlength) to output+offset(dlength).
         add dlength to offset.
      endif.

      describe field <f> type type1.

      if type1 = 'I' or type1 = 'N'.
          type1 = 'P'.
      endif.

      case type1.
        when 'D'.
          if <f> = '00000000'.
             <f> = ' '.
          else.
             move <f> to time1.
             assign time1 to <f>.
          endif.
        when 'F'.
          if <f> = '0.0'.
            temp = '0.0'.
          else.
             write <f> to temp exponent 0.
          endif.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
        when 'P'.
          if <f> < 0.
             write '-' to output+offset(1).
             add 1 to offset.
             <f> = <f> * ( -1 ).
          endif.
          move <f> to temp.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
      endcase.

      sy-fdpos = strlen( <f> ).

      tablen = offset + sy-fdpos.
      if tablen > maxlen.
         rc = 3. exit.
      endif.
      write <f> to output+offset(sy-fdpos).
      add sy-fdpos to offset.
    enddo.

    if dwnload = 'Y'.
       clientab-output = output.
       append clientab.
       rcount = rcount + 1.
       if rcount >= 50.
          SY-BATCH = SPACE.
          CALL FUNCTION 'GUI_DOWNLOAD'
            EXPORTING
              FILENAME = l_filename
              FILETYPE = 'ASC'
              CODEPAGE = '4110'
              APPEND   = appd
              WRITE_FIELD_SEPARATOR = 'X'
*            IMPORTING
*              FILELENGTH =
            TABLES
              DATA_TAB = clientab
            EXCEPTIONS
              OTHERS = 1.
          if sy-subrc <> 0.
             rc = 4.
          endif.
          clear clientab. refresh clientab.
          rcount = 0. appd = 'A'.
       endif.
    else.
       transfer output to file.
    endif.
  endloop.

  if dwnload = 'Y'.
       SY-BATCH = SPACE.
       CALL FUNCTION 'GUI_DOWNLOAD'
         EXPORTING
           FILENAME = l_filename
           FILETYPE = 'ASC'
              CODEPAGE = '4110'
           APPEND   = appd
           WRITE_FIELD_SEPARATOR = 'X'
*         IMPORTING
*           FILELENGTH =
         TABLES
           DATA_TAB = clientab
         EXCEPTIONS
           OTHERS = 1.
          if sy-subrc <> 0.
             rc = 4.
          endif.
  else.
       close dataset file.
  endif.
endform.
