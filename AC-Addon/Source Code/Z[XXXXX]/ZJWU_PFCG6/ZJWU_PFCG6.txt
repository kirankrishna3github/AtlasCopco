report zjwu_pfcg
       no standard page heading line-size 255.

tables: agr_define.

*include bdcrecx1.
load-of-program.
  include yse_bdcrecx1.
*----------------------------------------------------------------------*
*                          SELECTION SCREEN VARIABLES                  *
*----------------------------------------------------------------------*
  selection-screen begin of block bk1 with frame title text-bk1.
  parameters: p_sess radiobutton group gp1.
*  SELECTION-SCREEN COMMENT 3(20) TEXT-S01 FOR FIELD p_GROUP.

  parameters p_group(12).                      "group name of session
  parameters: p_ctu radiobutton group gp1 default 'X'.
  selection-screen end of block bk1.

*parameters: dataset(132) lower case.
  parameters: p_trkorr like ko008-trkorr.
  select-options: s_role for agr_define-agr_name no intervals.
***    DO NOT CHANGE - the generated data section - DO NOT CHANGE    ***
*
*   If it is nessesary to change the data section use the rules:
*   1.) Each definition of a field exists of two lines
*   2.) The first line shows exactly the comment
*       '* data element: ' followed with the data element
*       which describes the field.
*       If you don't have a data element use the
*       comment without a data element name
*   3.) The second line shows the fieldname of the
*       structure, the fieldname must consist of
*       a fieldname and optional the character '_' and
*       three numbers and the field length in brackets
*   4.) Each field must be type C.
*
*** Generated data section with specific formatting - DO NOT CHANGE  ***
  data: begin of record,
* data element:
          agr_name_neu_001(030),
* data element:
          text_002(080),
* data element:
          text_003(080),
        end of record.

  data: l_mstring(480).
  data: l_subrc like sy-subrc.

*** End generated data section ***

start-of-selection.

  perform set_bdc_para.
*  perform open_dataset using dataset.
  perform open_group.


  loop at s_role.
    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0121'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'AGR_NAME_NEU'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=AEND'.
    perform bdc_field       using 'AGR_NAME_NEU'
                                  s_role-low.
    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0300'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'S_AGR_TEXTS-TEXT'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=TAB5'.
*perform bdc_field       using 'S_AGR_TEXTS-TEXT'
*                              record-TEXT_002.
    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0300'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'S_AGR_TEXTS-TEXT'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=GEN1'.
*perform bdc_field       using 'S_AGR_TEXTS-TEXT'
*                              record-TEXT_003.
    perform bdc_dynpro      using 'SAPMSSY0' '0120'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=GEN1'.
    perform bdc_dynpro      using 'SAPMSSY0' '0120'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=ABBR'.
    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0300'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'S_AGR_TEXTS-TEXT'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=SAVE'.
*perform bdc_field       using 'S_AGR_TEXTS-TEXT'
*                              record-TEXT_004.
    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0300'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'S_AGR_TEXTS-TEXT'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=BACK'.
*perform bdc_field       using 'S_AGR_TEXTS-TEXT'
*                              record-TEXT_005.
    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0121'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'AGR_NAME_NEU'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=BACK'.
    perform bdc_field       using 'AGR_NAME_NEU'
                                  s_role-low.
    "perform bdc_transaction using 'PFCG'.
    data: wa_ctuparams type ctu_params.

    wa_ctuparams-racommit = 'X'.
    wa_ctuparams-dismode = 'N'.
    wa_ctuparams-updmode = 'L'.

    refresh messtab.
    call transaction 'PFCG' using bdcdata
                   "  mode   ctumode
                   "  update cupdate
                     options from wa_ctuparams
                     messages into messtab.
    l_subrc = sy-subrc.
    if smalllog <> 'X'.
      write: / 'CALL_TRANSACTION',
               'PFCG',
               'returncode:'(i05),
               l_subrc,
               'RECORD:',
               sy-index.
      loop at messtab.
        select single * from t100 where sprsl = messtab-msgspra
                                  and   arbgb = messtab-msgid
                                  and   msgnr = messtab-msgnr.
        if sy-subrc = 0.
          l_mstring = t100-text.
          if l_mstring cs '&1'.
            replace '&1' with messtab-msgv1 into l_mstring.
            replace '&2' with messtab-msgv2 into l_mstring.
            replace '&3' with messtab-msgv3 into l_mstring.
            replace '&4' with messtab-msgv4 into l_mstring.
          else.
            replace '&' with messtab-msgv1 into l_mstring.
            replace '&' with messtab-msgv2 into l_mstring.
            replace '&' with messtab-msgv3 into l_mstring.
            replace '&' with messtab-msgv4 into l_mstring.
          endif.
          condense l_mstring.
          write: / messtab-msgtyp, l_mstring(250).
        else.
          write: / messtab.
        endif.
      endloop.
      skip.
    endif.
  endloop.


  loop at s_role.
    clear: bdcdata[].

    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0121'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'AGR_NAME_NEU'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=TRAN'.
    perform bdc_field       using 'AGR_NAME_NEU'
                                  s_role-low.
    perform bdc_dynpro      using 'PFCG_MASS_TRANSPORT' '1000'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'AGR_NAME-LOW'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=ONLI'.
    perform bdc_field       using 'PROFILES'
                                  'X'.
    perform bdc_field       using 'PERSON'
                                  'X'.
    perform bdc_dynpro      using 'SAPLSTRD' '0300'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'KO008-TRKORR'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=LOCK'.
    perform bdc_field       using 'KO008-TRKORR'
                                  p_trkorr.
    perform bdc_dynpro      using 'SAPMSSY0' '0120'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=&F03'.
    perform bdc_dynpro      using 'PFCG_MASS_TRANSPORT' '1000'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '/EE'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'AGR_NAME-LOW'.
    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0121'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'AGR_NAME_NEU'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=BACK'.
    perform bdc_field       using 'AGR_NAME_NEU'
                                  s_role-low.
    perform bdc_transaction using 'PFCG'.
  endloop.
  perform close_group.
*  perform close_dataset using dataset.

form set_bdc_para .
*   Set default call transaction settings
  user = sy-uname.

  if p_sess = 'X'.
    session = p_sess.
    group = p_group.
    keep = ''.
  endif.

  if p_ctu = 'X'.
    ctu = 'X'.
    ctumode = 'N'.
    cupdate = 'L'.
  endif.

  smalllog = ''.
  nodata = '/'.
endform.                    " SET_BDC_PARA

*Text symbol text£º
*BK1:BDC Parameters
*E00:Error opening dataset, return code:
*I01:Session name
*I02:Open session
*I03:Insert transaction
*I04:Close Session
*I05:Return code =
*I06:Error session created
*S01:Session name
*S02:User
*S03:Keep session
*S04:Lock date
*S05:Processing Mode
*S06:Update Mode
*S07:Generate session
*S08:Call transaction
*S09:Error sessn
*S10:Nodata indicator

*S11:Short log
*Selection text£º
*P_CTU:        Call transaction
*P_GROUP:        Session Name
*P_SESS:        Generate Session
*P_TRKORR:        Request
*S_ROLE:        Role
