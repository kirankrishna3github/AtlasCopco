*&---------------------------------------------------------------------*
*& Report  ZCWU_TEST3
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  zcwu_test3.

*DATA: it_t133a TYPE STANDARD TABLE OF t133a,
*      ls_t133a TYPE t133a,
*      ls_t133a2 TYPE t133a,
*      it_t133b TYPE STANDARD TABLE OF t133b,
*      ls_t133b TYPE t133b.
**DATA ls_t133a2 TYPE REF TO data.
**CREATE DATA ls_t133a2  TYPE ('t133a').
*DATA: lv_string TYPE string.
*FIELD-SYMBOLS: <fs_str> TYPE ANY,
*               <fs_str2> TYPE ANY,
*               <wa> TYPE ANY.
*ASSIGN ls_t133a2 TO <wa>.
*
*DATA: ls_mara TYPE mara.
*DATA: lv_matnr TYPE MATNR.
*lv_matnr = '1620991234'.
*
*CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
*  EXPORTING
*    input              = lv_matnr
*  IMPORTING
*    OUTPUT             = lv_matnr
*  EXCEPTIONS
*    LENGTH_ERROR       = 1
*    OTHERS             = 2
*          .
*IF sy-subrc <> 0.
** MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*ENDIF.
*
*
*SELECT SINGLE *
*  FROM mara
*  INTO ls_mara
*  WHERE matnr = lv_matnr.
*
*CHECK sy-subrc = 0.
*
*SELECT *
*  FROM t133a
*  INTO ls_t133a
*  WHERE bilds = '21'
*    AND bildt = '1'.
*  DO 10 TIMES.
*    ASSIGN COMPONENT sy-index OF STRUCTURE ls_t133a TO <fs_str>.
*    ASSIGN COMPONENT sy-index OF STRUCTURE <wa> TO <fs_str2>.
*    <fs_str2> = <fs_str>.
*  ENDDO.
*  APPEND <wa> TO it_t133a.
*ENDSELECT.
*
*CLEAR ls_t133a.
*LOOP AT it_t133a INTO ls_t133a.
*  IF NOT ls_mara-vpsta CS ls_t133a-pstat. "-PSTAT.
*    DELETE TABLE it_t133a FROM ls_t133a.
*  ENDIF.
*ENDLOOP.
*
*SORT it_t133a BY bilds guifu.
*DATA: lo_wa TYPE REF TO data,
*      lo_itab TYPE REF TO data.
*
*CREATE DATA lo_wa TYPE t133b.
*CREATE DATA lo_itab TYPE TABLE OF t133b INITIAL SIZE 1.
*
*FIELD-SYMBOLS: <fs_tab> TYPE STANDARD  TABLE.
*ASSIGN lo_wa->* TO <wa>.
*ASSIGN lo_itab->* TO <fs_tab>.
*ASSIGN ('IT_T133B') TO <fs_tab>.
*
*SELECT *
*  FROM t133b
*  INTO ls_t133b
*  FOR ALL ENTRIES IN it_t133a
*  WHERE spras = sy-langu
*    AND bilds = it_t133a-bilds
*    AND auswg = it_t133a-auswg.
*  DO 5 TIMES.
*    ASSIGN COMPONENT sy-index OF STRUCTURE ls_t133b TO <fs_str>.
*    ASSIGN COMPONENT sy-index OF STRUCTURE <wa> TO <fs_str2>.
*    <fs_str2> = <fs_str>.
*  ENDDO.
*  WRITE: / <wa>.
*  APPEND <wa> TO <fs_tab>.
*ENDSELECT.

DATA: matnr TYPE string.
DATA: lv_index TYPE i,
      lv_viewname TYPE string VALUE 'MRP 2'.
TRANSLATE matnr TO UPPER CASE.

PARAMETERS: p_matnr TYPE mara-MATNR.

START-OF-SELECTION.
PERFORM get_index USING p_matnr
                        lv_viewname
                  CHANGING lv_index.
WRITE: lv_index.
*&---------------------------------------------------------------------*
*&      Form  GET_INDEX
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IV_MATNR  text
*      <--P_LV_INDEX  text
*----------------------------------------------------------------------*
form GET_INDEX  using    iv_matnr
                         iv_viewname
                changing iv_index.
  DATA: it_t133a TYPE STANDARD TABLE OF t133a,
        ls_t133a TYPE t133a,
        it_t133b TYPE STANDARD TABLE OF t133b,
        ls_t133b TYPE t133b,
        ls_mara  TYPE mara.
  iv_index = 0.
  SELECT SINGLE *
    FROM mara
    INTO ls_mara
    WHERE matnr = iv_matnr.
  CHECK sy-subrc = 0.

  SELECT *
  FROM t133a
  INTO TABLE it_t133a
  WHERE bilds = '21'
    AND bildt = '1'.
  SORT it_t133a BY bilds guifu.

  CLEAR ls_t133a.
  LOOP AT it_t133a INTO ls_t133a.
    IF NOT ls_mara-vpsta CS ls_t133a-pstat. "-PSTAT.
      DELETE TABLE it_t133a FROM ls_t133a.
    ENDIF.
  ENDLOOP.

  SELECT *
  FROM t133b
  INTO TABLE it_t133b
  FOR ALL ENTRIES IN it_t133a
  WHERE spras = sy-langu
    AND bilds = it_t133a-bilds
    AND auswg = it_t133a-auswg.

  LOOP AT it_t133b INTO ls_t133b.
    IF ls_t133b-DYTXT cs iv_viewname.
      iv_index = sy-tabix.
    ENDIF.
  ENDLOOP.

endform.                    " GET_INDEX
