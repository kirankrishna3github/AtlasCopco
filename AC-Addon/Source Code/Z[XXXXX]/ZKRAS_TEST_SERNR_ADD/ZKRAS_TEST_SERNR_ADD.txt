*&---------------------------------------------------------------------*
*& Report  ZKRAS_TEST_SERNR_ADD                                        *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  ZKRAS_TEST_SERNR_ADD                    .



Tables: VBAP,
SER00,
SER02,
EQUI,
OBJK.

Data: x_tabix like sy-tabix,
X_ANZSN like VBAP-ANZSN,
X_OBKNR like OBJK-OBKNR,
X_AUART like VBAK-AUART,
X_PSTYV like VBAP-PSTYV,
X_VBELN like VBAP-VBELN,
X_POSNR like VBAP-POSNR,
X_MATNR like MARA-MATNR,
X_SERNP like MARC-SERNP,
X_KUNNR like KNA1-KUNNR,
X_VBTYP like VBAK-VBTYP,
X_QUANT like RISA0-ANZAHL,
X_SERNR like V46R_SERIKOM-SERNR.
*
data: da_RIWOL1 like RIWOL1 occurs 1 with header line,
DA_RSERXX like RSERXX occurs 1 with header line.
*
* Test Case Data : To be removed later on.
X_SERNR = 'KLO1000001MB'.
X_SERNP = '0001'.
X_MATNR = '1'.
X_QUANT = 1.
X_VBELN = '0040000504'.
X_POSNR = '00010'.
X_KUNNR = '101200019'.
X_VBTYP = 'G'.
X_AUART = 'ZC01'.
X_PSTYV = 'ZSC1'.


* Standard function used by SAP in order to check Serial Number Profile
* and check if there are assigned profiles in the Sales Order ...
CALL FUNCTION 'SERNR_ADD_TO_AU'
EXPORTING
SERNR = X_SERNR
PROFILE = X_SERNP
MATERIAL = X_MATNR
QUANTITY = X_QUANT
* CUOBJ = VBAP-CUOBJ
DOCUMENT = X_VBELN
ITEM = X_POSNR
DEBITOR = X_KUNNR
VBTYP = X_VBTYP
SD_AUART = X_AUART
SD_POSTYP = X_PSTYV
IMPORTING
ANZSN = X_ANZSN
EXCEPTIONS
KONFIGURATIONS_ERROR = 1
SERIALNUMBER_ERRORS = 2
SERIALNUMBER_WARNINGS = 3
OTHERS = 4.


* If the Serial Number may be used then proceed in Database Update
IF SY-SUBRC EQ 0.
refresh DA_RIWOL1.
MOVE x_SERNR TO DA_RIWOL1-SERNR.
MOVE x_MATNR TO DA_RIWOL1-MATNR.
APPEND DA_RIWOL1.
*
CALL FUNCTION 'IWOL_WV_ADD_OBJECTS'
EXPORTING
I_SDAUFNR = x_VBELN
I_SDPOSNR = x_POSNR
TO_TYPE = 'SD'
I_KUNDE = x_KUNNR
I_VBTYP = x_VBTYP
I_SD_AUART = x_AUART
I_POSTYP = x_PSTYV
TABLES
T_RIWOL1 = da_RIWOL1
T_SER02 = DA_RSERXX
EXCEPTIONS
NO_OBJECT_LIST = 1
ENTRY_EXISTS = 2
INVALID_MATERIAL = 3
INVALID_SERIALNR = 4
INVALID_EQUIPMENT = 5
INVALID_LOCATION = 6
INVALID_ASSEMBLY = 7
STATUS_NOT_ALLOWED = 8
EQUI_FOREIGN_KEY = 9
EQUI_SYSTEM_FAILURE = 10
CUSTOMER_EXIT_ERROR = 11
OTHERS = 12.

LOOP AT DA_rSERXX where posnr = x_posnr.
x_tabix = sy-tabix.
SELECT obknr into DA_rSERXX-obknr
FROM OBJK CLIENT SPECIFIED
WHERE MANDT = SY-MANDT
AND SERNR = x_SERNR
AND MATNR = x_matnr.
ENDSELECT.
if sy-subrc = 0.
da_rserxx-ANZSN = X_ANZSN.
DA_rSERXX-VORGANG = 'SDAU'.
modify DA_rSERXX index x_tabix.
CALL FUNCTION 'SERIAL_POST_UPDATE_AU'
TABLES
XSER02 = DA_RSERXX.
exit.
endif.
ENDLOOP.
*
ENDIF.
