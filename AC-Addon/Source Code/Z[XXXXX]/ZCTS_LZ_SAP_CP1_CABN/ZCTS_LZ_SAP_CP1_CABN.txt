REPORT zal_abap MESSAGE-ID 26 LINE-SIZE 255
NO STANDARD PAGE HEADING.
* zACT_LZ_SAP_CABN.
PARAMETER download(1) DEFAULT 'N' LOWER CASE. "N-svr,Y-clnt
PARAMETER execmode(1) DEFAULT 'B' LOWER CASE. "D-dlg,B-btch
PARAMETER out_dir(48) DEFAULT "output file dir
'/var/extract/CQ1/BODS' LOWER CASE.
PARAMETER in_dir(48) DEFAULT "input file dir
'/var/extract/CQ1/BODS' LOWER CASE.

PARAMETER p_df_vk(40) DEFAULT "ABAP data flow object key
'' LOWER CASE.
PARAMETER p_di_gen(40) DEFAULT "DI version that generated ABAP
'' LOWER CASE.

*** Machine generated ABAP. Do not modify.            ***
*** # Copyright Business Objects S.A.  All rights reserved. ***
*
* Date Time:
*    10/24/14 01:20:03
* SAP used for generated this ABAP:
*    Release: 702
*    Host   : 10.26.48.49
*
* ABAP Dataflow Name:
*    DF_R3_ACT_LZ_SAP_CABN_Characteristic
* ABAP Dataflow comments:
*    SAP Source : AFRU / AUFK / PMSDO
* ABAP program name in SAP:
*    ZACT_LZ_SAP_CABN
* Generated ABAP file name:
*    D:/Data/ACTETL/PRD/ABAP/ACT_LZ_SAP_CABN
TABLES cabn.
TABLES cabnt.
TABLES tcmgt.

DATA: BEGIN OF itab4 OCCURS 0,
atnam(30) TYPE c,
atkla(10) TYPE c,
atfor(4) TYPE c,
atbez(30) TYPE c,
atinn(10) TYPE n.
DATA: END OF itab4.

DATA: append_flag(1) VALUE ' ',
      cntbuf TYPE i,
      delimleng TYPE i.

CONSTANTS c_df_vk(40) VALUE '13172'.
CONSTANTS c_di_gen(40) VALUE '12.2.2.3'.
DATA warn_msg(50).


START-OF-SELECTION.




  PERFORM form4.
  PERFORM form5.
  FREE itab4.

END-OF-SELECTION.

  CLEAR warn_msg.

  IF NOT p_df_vk IS INITIAL.
    IF p_df_vk <> c_df_vk.
      CONCATENATE '$$Warning$'
                  c_df_vk
                  '$' INTO warn_msg.
    ENDIF.
  ENDIF.
  IF NOT p_di_gen IS INITIAL.
    IF p_di_gen <> c_di_gen.
      IF warn_msg IS INITIAL.
        CONCATENATE '$$Warning$$'
                    c_di_gen
                    INTO warn_msg.
      ELSE.
        CONCATENATE warn_msg
                    c_di_gen
                    INTO warn_msg.
      ENDIF.
    ENDIF.
  ENDIF.

  IF NOT warn_msg IS INITIAL.
    IF execmode = 'D'.
      WRITE warn_msg.
      NEW-LINE.
    ELSE.
      MESSAGE s000 WITH warn_msg.
    ENDIF.
  ENDIF.


  WRITE  '* Program Complete *'.
  WRITE  '# Copyright Business Objects S.A.  All rights reserved.'
  .

*&---------------------------------------------------------------------*
*&      Form  FORM4
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM form4.
  DATA altmp1(30) TYPE c.
  DATA altmp2(10) TYPE c.
  DATA altmp3(4) TYPE c.
  DATA altmp4(30) TYPE c.
  DATA altmp5(10) TYPE n.

  DATA cabn9atnam LIKE cabn-atnam.
  DATA cabn9atkla LIKE cabn-atkla.
  DATA cabn9atfor LIKE cabn-atfor.
  DATA cabnt9atbez LIKE cabnt-atbez.
  DATA cabn9atinn LIKE cabn-atinn.
  DATA cabnt9atinn LIKE cabnt-atinn.
  DATA cabn9adzhl LIKE cabn-adzhl.
  DATA cabnt9adzhl LIKE cabnt-adzhl.
  DATA tcmgt9atkla LIKE tcmgt-atkla.
  DATA cabnt9spras LIKE cabnt-spras.
  DATA tcmgt9spras LIKE tcmgt-spras.



  SELECT
    cabn9~atnam
    cabn9~atkla
    cabn9~atfor
    cabnt9~atbez
    cabn9~atinn
    cabnt9~atinn
    cabn9~adzhl
    cabnt9~adzhl
    tcmgt9~atkla
    cabnt9~spras
    tcmgt9~spras
  INTO (cabn9atnam,
    cabn9atkla,
    cabn9atfor,
    cabnt9atbez,
    cabn9atinn,
    cabnt9atinn,
    cabn9adzhl,
    cabnt9adzhl,
    tcmgt9atkla,
    cabnt9spras,
    tcmgt9spras)
  FROM cabn AS cabn9
   INNER JOIN cabnt AS cabnt9
   ON ( ( cabn9~adzhl = cabnt9~adzhl )
   AND ( cabn9~atinn = cabnt9~atinn ) )
   INNER JOIN tcmgt AS tcmgt9
   ON ( cabn9~atkla = tcmgt9~atkla )
  WHERE ( ( tcmgt9~spras = 'E' )
   AND ( ( cabnt9~spras = 'E' )
   AND cabn9~atkla IN ('ZAM_000001',
  'ZAM_000003') ) ).
    altmp1 = cabn9atnam.
    altmp2 = cabn9atkla.
    altmp3 = cabn9atfor.
    altmp4 = cabnt9atbez.
    altmp5 = cabn9atinn.
    MOVE altmp1 TO itab4-atnam.
    MOVE altmp2 TO itab4-atkla.
    MOVE altmp3 TO itab4-atfor.
    MOVE altmp4 TO itab4-atbez.
    MOVE altmp5 TO itab4-atinn.
    APPEND itab4.
    cntbuf = cntbuf + 1.
    IF download = 'N'.
      IF cntbuf > 5000.
        PERFORM form5.
        CLEAR cntbuf.
        REFRESH itab4.
        append_flag = 'A'.
      ENDIF.
    ENDIF.
  ENDSELECT.
ENDFORM.                    "FORM4

*&---------------------------------------------------------------------*
*&      Form  FORM5
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM form5.
  DATA: outfile(128), ldfile(50).
  ldfile = 'ACT_LZ_SAP_CABN'.
  CONCATENATE out_dir ldfile INTO outfile
    SEPARATED BY '/'.
  DATA  dlmtlen TYPE i VALUE '1'.
  DATA xdlmtlen TYPE i VALUE '1'.
  DATA:
    ht(1) TYPE c,
    xht(1) TYPE x,
    conv TYPE REF TO cl_abap_conv_in_ce.
  xht = '7F'.
  conv = cl_abap_conv_in_ce=>create(
    encoding = '4110'
    input = xht
  ).
  CALL METHOD conv->read(
    EXPORTING n    = xdlmtlen
    IMPORTING data = ht
              len = dlmtlen
  ).
  DATA return_code TYPE i.
  PERFORM write_delimited_file
            TABLES   itab4
            USING    outfile
                     append_flag
                     ht
                     dlmtlen
                     download
            CHANGING return_code.

  CASE return_code.
    WHEN 1.
      IF execmode = 'D'.
        WRITE: /5 'No line selected'.
      ELSE.
        MESSAGE e098.
      ENDIF.
    WHEN 2.
      IF execmode = 'D'.
        WRITE: /5 'Open File Error -- ', 25 outfile.
      ELSE.
        MESSAGE  e107 WITH outfile.
      ENDIF.
    WHEN 3.
      IF execmode = 'D'.
        WRITE: /5 'Data exceed length limit (8192) '.
      ELSE.
        MESSAGE  e000 WITH
             'Data exceed length limit (8192) '.
      ENDIF.
    WHEN 4.
      IF execmode = 'D'.
        WRITE: /5 'Call function WS_DOWNLOAD error'.
      ELSE.
        MESSAGE  e000 WITH
             'Call function WS_DOWNLOAD error'.
      ENDIF.
  ENDCASE.
ENDFORM.                    "FORM5

*&---------------------------------------------------------------------*
*&      Form  SUBSTRING
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->SRC        text
*      -->BEG        text
*      -->LEN        text
*      <--RET        text
*----------------------------------------------------------------------*
FORM substring USING src beg len CHANGING ret.

  DATA: va1 TYPE i.
  DATA: va2 TYPE i.
  DATA: va3 TYPE i.

  va3 = STRLEN( src ).

  IF  beg = 0.
    va1 = 0.
  ELSE.
    IF  beg < 0.
      va1 = va3 + beg.
      IF  va1 < 0.
        va1 = 0.
      ENDIF.
    ELSE.
      va1 = beg - 1.
    ENDIF.
  ENDIF.

  IF  len < 0.
    va2 = 0.
  ELSE.
    va2 = va3 - va1.
  ENDIF.

  IF  va2 > len.
    va2 = len.
  ENDIF.

  IF  va2 < 1.
    MOVE ''           TO ret.
  ELSE.
    MOVE src+va1(va2) TO ret.
  ENDIF.

ENDFORM.                    "SUBSTRING

*&---------------------------------------------------------------------*
*&      Form  write_delimited_file
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->DATATAB    text
*      -->FILE       text
*      -->APPEND     text
*      -->DELIMIT    text
*      -->DLENGTH    text
*      -->DWNLOAD    text
*      <--RC         text
*----------------------------------------------------------------------*
FORM write_delimited_file
           TABLES   datatab
           USING    file
                    append
                    delimit
                    dlength
                    dwnload
          CHANGING rc.

  DATA: type1,
        appd(1),
        temp(32),
        time1(8),
        date1(10),
        output(8192),
        rcount TYPE i,
        offset TYPE i,
        tablen TYPE i,
        maxlen TYPE i VALUE '8192'.

  DATA: BEGIN OF clientab OCCURS 0,
             output(8192),
          END OF clientab.

  FIELD-SYMBOLS: <f>.
  FIELD-SYMBOLS <delim1>.
  DATA delim2(16).
  DATA l_filename TYPE string.

  appd = append.
  IF appd IS NOT INITIAL.
    appd = 'X'.
  ENDIF.
  MOVE file TO l_filename.
  DESCRIBE TABLE datatab LINES tablen.


  IF dwnload = 'Y'.
    CLEAR clientab. REFRESH clientab.
    rcount = 0.
  ELSE.
    IF appd = space.
      OPEN DATASET file FOR OUTPUT IN TEXT MODE ENCODING
UTF-8.
    ELSE.
      OPEN DATASET file FOR APPENDING IN TEXT MODE ENCODING
UTF-8.
    ENDIF.
    IF sy-subrc <> 0.
      rc = 2. EXIT.
    ENDIF.
  ENDIF.

  LOOP AT datatab.
    CLEAR: tablen, offset, output.
    DO.
      ASSIGN COMPONENT sy-index OF
         STRUCTURE datatab TO <f>.
      IF sy-subrc <> 0. EXIT. ENDIF.
      IF sy-index > 1.
        ASSIGN delimit(dlength) TO <delim1> CASTING TYPE c.
        delim2 = <delim1>.
        WRITE delim2(dlength) TO output+offset(dlength).
        ADD dlength TO offset.
      ENDIF.

      DESCRIBE FIELD <f> TYPE type1.

      IF type1 = 'I' OR type1 = 'N'.
        type1 = 'P'.
      ENDIF.

      CASE type1.
        WHEN 'D'.
          IF <f> = '00000000'.
            <f> = ' '.
          ELSE.
            MOVE <f> TO time1.
            ASSIGN time1 TO <f>.
          ENDIF.
        WHEN 'F'.
          IF <f> = '0.0'.
            temp = '0.0'.
          ELSE.
            WRITE <f> TO temp EXPONENT 0.
          ENDIF.
          CONDENSE temp NO-GAPS.
          TRANSLATE temp USING ',.'.
          ASSIGN temp TO <f>.
        WHEN 'P'.
          IF <f> < 0.
            WRITE '-' TO output+offset(1).
            ADD 1 TO offset.
            <f> = <f> * ( -1 ).
          ENDIF.
          MOVE <f> TO temp.
          CONDENSE temp NO-GAPS.
          TRANSLATE temp USING ',.'.
          ASSIGN temp TO <f>.
      ENDCASE.

      sy-fdpos = STRLEN( <f> ).

      tablen = offset + sy-fdpos.
      IF tablen > maxlen.
        rc = 3. EXIT.
      ENDIF.
      WRITE <f> TO output+offset(sy-fdpos).
      ADD sy-fdpos TO offset.
    ENDDO.

    IF dwnload = 'Y'.
      clientab-output = output.
      APPEND clientab.
      rcount = rcount + 1.
      IF rcount >= 50.
        sy-batch = space.
        CALL FUNCTION 'GUI_DOWNLOAD'
          EXPORTING
            filename = l_filename
            filetype = 'ASC'
            codepage = '4110'
            append   = appd
            write_field_separator = 'X'
*            IMPORTING
*              FILELENGTH =
          TABLES
            data_tab = clientab
          EXCEPTIONS
            OTHERS = 1.
        IF sy-subrc <> 0.
          rc = 4.
        ENDIF.
        CLEAR clientab. REFRESH clientab.
        rcount = 0. appd = 'A'.
      ENDIF.
    ELSE.
      TRANSFER output TO file.
    ENDIF.
  ENDLOOP.

  IF dwnload = 'Y'.
    sy-batch = space.
    CALL FUNCTION 'GUI_DOWNLOAD'
      EXPORTING
        filename = l_filename
        filetype = 'ASC'
           codepage = '4110'
        append   = appd
        write_field_separator = 'X'
*         IMPORTING
*           FILELENGTH =
      TABLES
        data_tab = clientab
      EXCEPTIONS
        OTHERS = 1.
    IF sy-subrc <> 0.
      rc = 4.
    ENDIF.
  ELSE.
    CLOSE DATASET file.
  ENDIF.
ENDFORM.                    "write_delimited_file
