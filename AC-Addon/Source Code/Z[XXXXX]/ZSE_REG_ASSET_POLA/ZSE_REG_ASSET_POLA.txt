*&---------------------------------------------------------------------*
*& Report  ZSE_REG_ASSET_POLA                                          *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  ZSE_REG_ASSET_POLA.

NODES: ANLA0, ANLB, ANLCV, ANEPV, ANLAV, ANLZ, ANLP, ANEK.


TYPE-POOLS : SLIS.

TYPES:   BEGIN OF IT_DATA,
                ANLN1         TYPE ANLN1,            " Asset Number
                ANLN2         TYPE ANLN2,            " Sub Asset
                BUKRS         TYPE BUKRS,            " Company Code
                VMGLI         TYPE VMGLI,            " Classification Key
                TXT50         TYPE TXA50_ANLT,       " Description
                AFABE         TYPE ANLB-AFABE,
                ANLHTXT       TYPE ANLHTXT,          " Extra Description
                NAPRZ         TYPE NAPRZ,            " Ordinary depreciation percentage rate
                NDJAR         TYPE NDJAR,            "
                GJA_KANSW     TYPE GJA_KANSW,        " Asset acquisition value at fiscal year start
                ANSWL         TYPE ANSWL,            " Transactions for the year affecting asset values
                ABGAN         TYPE ABGAN,            " Total retirements and retiring transfers
                LFD_KANSW     TYPE LFD_KANSW,        " Current asset acquisition value
                NAFA_GJA      TYPE NAFA_GJA,         " Accumulated ordinary depreciation at fiscal year start
                NAFA_LFDG     TYPE NAFA_LFDG,        " Ordinary depreciation for current year (with posted values)
                NAFAV         TYPE NAFAV,            " Proportional accumulated ordinary depreciation
                NAFA_GJE      TYPE NAFA_GJE,         " Ordinary depreciation at fiscal year end
                LFD_BCHWRT    TYPE LFD_BCHWRT,       " Current asset net book value
                01_ANLP_PERAF TYPE NAFAZ,            " Ordinary depreciation to be posted January
                02_ANLP_PERAF TYPE NAFAZ,            " Ordinary depreciation to be posted February
                03_ANLP_PERAF TYPE NAFAZ,            " Ordinary depreciation to be posted March
                04_ANLP_PERAF TYPE NAFAZ,            " Ordinary depreciation to be posted April
                05_ANLP_PERAF TYPE NAFAZ,            " Ordinary depreciation to be posted May
                06_ANLP_PERAF TYPE NAFAZ,            " Ordinary depreciation to be posted June
                07_ANLP_PERAF TYPE NAFAZ,            " Ordinary depreciation to be posted July
                08_ANLP_PERAF TYPE NAFAZ,            " Ordinary depreciation to be posted August
                09_ANLP_PERAF TYPE NAFAZ,            " Ordinary depreciation to be posted September
                10_ANLP_PERAF TYPE NAFAZ,            " Ordinary depreciation to be posted October
                11_ANLP_PERAF TYPE NAFAZ,            " Ordinary depreciation to be posted November
                12_ANLP_PERAF TYPE NAFAZ,            " Ordinary depreciation to be posted December
                AKTIV         TYPE AKTIVD,           " Asset capitalization date
                KOSTL         TYPE KOSTL,            " Cost Center
          END OF IT_DATA.

TYPES: BEGIN OF ANLH_ITAB,
       ANLN1 LIKE ANLH-ANLN1,
       ANLHTXT LIKE ANLH-ANLHTXT,
END OF ANLH_ITAB.

TYPES: BEGIN OF ANLP_ITAB,
       ANLN1 LIKE ANLP-ANLN1,
       PERAF LIKE ANLP-PERAF,
       NAFAZ LIKE ANLP-NAFAZ,
END OF ANLP_ITAB.


DATA: gt_main type standard table of it_data,
      gw_main type it_data,
      gt_anlp type STANDARD TABLE OF anlp_itab,
      gw_anlp type anlp_itab.

DATA:     IT_ANLH               TYPE STANDARD TABLE OF ANLH_ITAB,
          GW_ANLH               TYPE ANLH_ITAB.

DATA:     FIAA_REPORTING_DATE   TYPE DATE.


*variable for Report ID
DATA: V_REPID LIKE SY-REPID .

*declaration for fieldcatalog
DATA: I_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV,
     WA_FIELDCAT TYPE SLIS_FIELDCAT_ALV.
"work area i.e. header and table defined seperately
*declartion for layout
DATA: ALV_LAYOUT TYPE SLIS_LAYOUT_ALV,
     c_x TYPE CHAR1 VALUE 'X'.

*Declatation for sortcat
DATA: GS_SORT TYPE SLIS_SORTINFO_ALV,
     GT_SORT TYPE SLIS_T_SORTINFO_ALV.

DATA: IT_LISTHEADER TYPE SLIS_T_LISTHEADER,
     WA_LISTHEADER TYPE SLIS_LISTHEADER.
"work area i.e. header and table defined seperately
* declaration for events table where user comand or set PF status will
*be defined
DATA: V_EVENTS TYPE SLIS_T_EVENT,
     WA_EVENT TYPE SLIS_ALV_EVENT.
"work area i.e. header and table defined seperately
* declaration for variant(type of display we want)
DATA: I_VARIANT TYPE DISVARIANT,
     I_VARIANT1 TYPE DISVARIANT,
     I_SAVE(1) TYPE C.

*Title displayed when the alv list is displayed
DATA:  I_TITLE_1 TYPE LVC_TITLE VALUE 'Asset Register Report - Poland'.
DATA : DATE TYPE DATUM.
*Initialization
INITIALIZATION.
  PERFORM CLEAR_IT_GW.
  V_REPID = SY-REPID.
  DATE = SY-DATUM.
  PERFORM EVENT_CALL.
  PERFORM POPULATE_EVENT.


START-OF-SELECTION.
*here all the GET statements must be put in for the tables
*i want to get the relevant information from.

GET ANLAV.
  CHECK SELECT-OPTIONS.

  gw_main-ANLN1 = ANLAV-ANLN1.
  gw_main-ANLN2 = ANLAV-ANLN2.
  gw_main-VMGLI = ANLAV-VMGLI.
  gw_main-TXT50 = ANLAV-TXT50.
  gw_main-AKTIV = ANLAV-AKTIV.
  gw_main-KOSTL = ANLAV-KOSTL.
  gw_main-BUKRS = ANLAV-BUKRS.
  gw_main-ANLHTXT = ANLAV-ANLHTXT.


GET ANLB.
  CHECK SELECT-OPTIONS.

*TABLE ANLB
  gw_main-AFABE = anlb-afabe.
  IF anlb-naprz ne '0'.
    gw_main-NAPRZ = ANLB-NAPRZ.
  ELSEIF anlb-ndjar ne '0'.
    gw_main-naprz = 100 / ( anlb-ndjar ).
  ELSE.
    gw_main-naprz = '0'.
*  gw_main-NDJAR = ANLB-NDJAR.
  ENDIF.

*  TABLE ANLCV

GET ANLCV.
  CHECK SELECT-OPTIONS.
*    TABLE ANEPV
  gw_main-NAFAV = anlcv-NAFAV.
  gw_main-GJA_KANSW = ANLCV-GJA_KANSW.
  gw_main-ANSWL = ANLCV-ANSWL.
  gw_main-ABGAN = ANLCV-ABGAN .
  gw_main-LFD_KANSW = ANLCV-LFD_KANSW .
  gw_main-NAFA_GJA = ANLCV-NAFA_GJA .
  gw_main-NAFA_LFDG = ANLCV-NAFA_LFDG .
  gw_main-NAFA_GJE = ANLCV-NAFA_GJE .
  gw_main-LFD_BCHWRT = ANLCV-LFD_BCHWRT.


GET ANEPV.
  CHECK SELECT-OPTIONS.
*  APPEND GW_ANEPV TO IT_ANEPV.
  gw_main-nafav = anepv-nafav.

GET ANLP.
  CHECK SELECT-OPTIONS.

  APPEND gw_main TO gt_main.


Clear: anlav, anlb, anlcv, anepv, anlp, gw_main.
END-OF-SELECTION.

  PERFORM F_BUILD_LAYOUT.
  PERFORM BUILD_FIELDCATLOG.
  PERFORM CALCULATE_DATA.
  PERFORM SORT_DATA.
  PERFORM FILL_DATA_2.
  PERFORM SORT_CAT.
  PERFORM DISPLAY_ALV_REPORT.



*&---------------------------------------------------------------------*
*&      Form  CALCULATE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM CALCULATE_DATA.

IF GT_MAIN IS NOT INITIAL.
  LOOP AT gt_main INTO gw_main.
    SELECT ANLN1 PERAF NAFAZ FROM ANLP INTO GW_ANLP
                             FOR ALL ENTRIES IN GT_MAIN
                             WHERE ANLN1 = GT_MAIN-ANLN1
                             AND AFABER = GT_MAIN-AFABE.

    APPEND GW_ANLP TO GT_ANLP.
    ENDSELECT.
  ENDLOOP.
  BREAK AIR22958.
ENDIF.

*we will be calculating data here if need be!
ENDFORM.                    "CALCULATE_DATA

*&---------------------------------------------------------------------*
*&      Form  SORT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM SORT_DATA.

*First sort the data to improve performance.
IF GT_MAIN IS NOT INITIAL.
  SORT GT_MAIN BY ANLN1 ASCENDING.
  SORT GT_ANLP BY ANLN1 ASCENDING.
ENDIF.

ENDFORM.                    "SORT_DATA



*&---------------------------------------------------------------------*
*&      Form  FILL_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM FILL_DATA.

DATA: lv_index TYPE sy-tabix.

LOOP AT GT_MAIN INTO gw_main.
  lv_index = sy-tabix.

  READ TABLE GT_ANLP INTO GW_ANLP
  WITH KEY ANLN1 = GW_MAIN-ANLN1
  BINARY SEARCH.

    CASE GW_ANLP-PERAF.
    WHEN '1'.
      GW_MAIN-01_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '2'.
      GW_MAIN-02_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '3'.
      GW_MAIN-03_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '4'.
      GW_MAIN-04_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '5'.
      GW_MAIN-05_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '6'.
      GW_MAIN-06_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '7'.
      GW_MAIN-07_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '8'.
      GW_MAIN-08_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '9'.
      GW_MAIN-09_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '10'.
      GW_MAIN-10_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '11'.
      GW_MAIN-11_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '12'.
      GW_MAIN-12_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN OTHERS.
    ENDCASE.

    MODIFY GT_MAIN FROM gw_main INDEX lv_index.
    CLEAR: gw_main, gw_anlp.


  ENDLOOP.


ENDFORM.

FORM FILL_DATA_2.

DATA: lv_index TYPE sy-tabix.

LOOP AT GT_MAIN INTO gw_main.
  lv_index = sy-tabix.
  LOOP AT gt_anlp INTO gw_anlp WHERE anln1 EQ gw_main-anln1.


    CASE GW_ANLP-PERAF.
    WHEN '1'.
      GW_MAIN-01_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '2'.
      GW_MAIN-02_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '3'.
      GW_MAIN-03_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '4'.
      GW_MAIN-04_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '5'.
      GW_MAIN-05_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '6'.
      GW_MAIN-06_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '7'.
      GW_MAIN-07_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '8'.
      GW_MAIN-08_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '9'.
      GW_MAIN-09_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '10'.
      GW_MAIN-10_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '11'.
      GW_MAIN-11_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN '12'.
      GW_MAIN-12_ANLP_PERAF = gw_anlp-NAFAZ.
    WHEN OTHERS.
    ENDCASE.

    MODIFY GT_MAIN FROM gw_main INDEX lv_index.
    CLEAR: GW_ANLP.
    ENDLOOP.
    CLEAR: gw_main, gw_anlp.


  ENDLOOP.


ENDFORM.

FORM CLEAR_IT_GW.

  CLEAR: GT_MAIN, GW_MAIN, IT_ANLH, GW_ANLH.

  ENDFORM.
*&--------------------------------------------------------------------*
*&      Form  EVENT_CALL
*&--------------------------------------------------------------------*
*   get all events - TOP OF PAGE or USER COMMAND in table v_events
*---------------------------------------------------------------------*
FORM EVENT_CALL.
  CALL FUNCTION 'REUSE_ALV_EVENTS_GET'
   EXPORTING
     I_LIST_TYPE           = 0
   IMPORTING
     ET_EVENTS             = V_EVENTS
*  EXCEPTIONS
*    LIST_TYPE_WRONG       = 1
*    OTHERS                = 2
            .
  IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
  READ TABLE v_events WITH KEY name = slis_ev_top_of_page INTO wa_event.

  IF sy-subrc = 0.
    wa_event-form = 'HEADING'.
    MODIFY V_eventS FROM wa_event INDEX sy-tabix.
  ENDIF.

ENDFORM.                    "EVENT_CALL

*&--------------------------------------------------------------------*
*&      Form  POPULATE_EVENT
*&--------------------------------------------------------------------*
*      Events populated for TOP OF PAGE & USER COMAND
*---------------------------------------------------------------------*
FORM POPULATE_EVENT.
  READ TABLE V_EVENTS INTO WA_EVENT WITH KEY NAME = 'TOP_OF_PAGE'.
  IF SY-SUBRC EQ 0.
    WA_EVENT-FORM = 'TOP_OF_PAGE'.

    MODIFY V_EVENTS FROM WA_EVENT TRANSPORTING FORM WHERE NAME =
 WA_EVENT-FORM.
  ENDIF.

  READ TABLE V_EVENTS INTO WA_EVENT WITH KEY NAME = 'USER_COMMAND'.
  IF SY-SUBRC EQ 0.
    WA_EVENT-FORM = 'USER_COMMAND'.
    MODIFY V_EVENTS FROM WA_EVENT TRANSPORTING FORM WHERE NAME =
 WA_EVENT-NAME.

  ENDIF.

ENDFORM.                    "POPULATE_EVENT

*&--------------------------------------------------------------------*
*&      Form  TOP_OF_PAGE
*&--------------------------------------------------------------------*
*       List Heading
*---------------------------------------------------------------------*
FORM TOP_OF_PAGE.

*ALV Header declarations
  data: t_header type slis_t_listheader,
        wa_header type slis_listheader,
        t_line like wa_header-info,
        ld_lines type i,
        ld_linesc(10) type c.

* Title
  wa_header-typ  = 'H'.
  wa_header-info = 'Asset Register Report'.
  append wa_header to t_header.
  clear wa_header.

* Date
  wa_header-typ  = 'S'.
  wa_header-key = 'Date : '.
  CONCATENATE  sy-datum+6(2) '.'
               sy-datum+4(2) '.'
               sy-datum(4) INTO wa_header-info.   "todays date
  append wa_header to t_header.
  clear: wa_header.

*Run By
  wa_header-typ  = 'S'.
  wa_header-key = 'Run By : '.
  CONCATENATE sy-uname ' ' INTO wa_header-info.  "user name

  append wa_header to t_header.
  clear: wa_header.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      I_LOGO             = 'ZTEST3'
      IT_LIST_COMMENTARY = t_header.
*     I_END_OF_LIST_GRID       =
*     I_ALV_FORM               =

ENDFORM.                    "TOP_OF_PAGE

*&---------------------------------------------------------------------*
*&      Form  f_build_layout
*&---------------------------------------------------------------------*
*       Building the layout
*----------------------------------------------------------------------*

FORM f_build_layout .
* Initialize layout internal table work area
  CLEAR alv_layout.
  alv_layout-no_uline_hs = c_x.
  alv_layout-confirmation_prompt = c_x.
  alv_LAYOUT-EXPAND_ALL = 'X'.
  alv_layout-window_titlebar = ''.
  alv_layout-no_totalline = ''.
  alv_layout-colwidth_optimize = 'X'.
  alv_LAYOUT-GET_SELINFOS      = 'X'.
  alv_layout-zebra = c_x.
  "alv_layout-subtotals_text = ''.
ENDFORM.                    " f_BUILD_layout

*&--------------------------------------------------------------------*
*&      Form  USER_COMMAND
*&--------------------------------------------------------------------*
*      -->R_UCOMM    text
*      -->,          text
*      -->RS_SLEFIELDtext
*---------------------------------------------------------------------*
FORM USER_COMMAND USING R_UCOMM LIKE SY-UCOMM
RS_SELFIELD TYPE SLIS_SELFIELD.

  CASE R_UCOMM.
    WHEN '&IC1'.
      CLEAR gw_main.
      IF RS_SELFIELD-FIELDNAME = 'ANLN1'.
        READ TABLE gt_main INTO gw_main INDEX RS_SELFIELD-TABINDEX.
        IF NOT gw_main-anln1 IS INITIAL.
          SET PARAMETER ID 'BES' FIELD gw_main-anln1.
          CALL TRANSACTION 'MM03' AND SKIP FIRST SCREEN.
        ENDIF.
      ENDIF.

  ENDCASE.
ENDFORM.                    "USER_COMMAND

*&--------------------------------------------------------------------*
*&      Form  BUILD_FIELDCATLOG
*&--------------------------------------------------------------------*
*     Field catalog for detail report
*     Field catolog to display fields from internal table.
*---------------------------------------------------------------------*
FORM BUILD_FIELDCATLOG.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'BUKRS'.
  WA_FIELDCAT-SELTEXT_M = 'Company Code'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'ANLN1'.
  WA_FIELDCAT-SELTEXT_M = 'Asset Number.'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'ANLN2'.
  WA_FIELDCAT-SELTEXT_M = 'Sub-Asset Number.'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'AFABE'.
  WA_FIELDCAT-SELTEXT_M = 'Depr. Area.'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'VMGLI'.
  WA_FIELDCAT-SELTEXT_M = 'Classification Key.'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'TXT50'.
  WA_FIELDCAT-SELTEXT_M = 'Asset Description.'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'ANLHTXT'.
  WA_FIELDCAT-SELTEXT_M = 'Further Description.'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'NAPRZ'.
  WA_FIELDCAT-SELTEXT_M = 'Rate Amount in %.'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'GJA_KANSW'.
  WA_FIELDCAT-SELTEXT_M = 'Open Balance(Acq).'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'ANSWL'.
  WA_FIELDCAT-SELTEXT_M = 'Investment(Acq).'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'ABGAN'.
  WA_FIELDCAT-SELTEXT_M = 'Deduction(Acq)'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'LFD_KANSW'.
  WA_FIELDCAT-SELTEXT_M = 'Closing Balance(Acq)'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'NAFA_GJA'.
  WA_FIELDCAT-SELTEXT_M = 'Open Balance(Acc Depr)'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'NAFA_LFDG'.
  WA_FIELDCAT-SELTEXT_M = 'Acc Deprec(Acc Depr)'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'NAFAV'.
  WA_FIELDCAT-SELTEXT_M = 'Deduction(Acc Depr)'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'NAFA_GJE'.
  WA_FIELDCAT-SELTEXT_M = 'Open Balance(Acc Depr)'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'LFD_BCHWRT'.
  WA_FIELDCAT-SELTEXT_M = 'Net Value'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = '01_ANLP_PERAF'.
  WA_FIELDCAT-SELTEXT_M = 'Ord Depr. Jan'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = '02_ANLP_PERAF'.
  WA_FIELDCAT-SELTEXT_M = 'Ord Depr. Feb'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = '03_ANLP_PERAF'.
  WA_FIELDCAT-SELTEXT_M = 'Ord Depr. Mar'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = '04_ANLP_PERAF'.
  WA_FIELDCAT-SELTEXT_M = 'Ord Depr. Apr'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = '05_ANLP_PERAF'.
  WA_FIELDCAT-SELTEXT_M = 'Ord Depr. May'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = '06_ANLP_PERAF'.
  WA_FIELDCAT-SELTEXT_M = 'Ord Depr. Jun'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = '07_ANLP_PERAF'.
  WA_FIELDCAT-SELTEXT_M = 'Ord Depr. Jul'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = '08_ANLP_PERAF'.
  WA_FIELDCAT-SELTEXT_M = 'Ord Depr. Aug'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = '09_ANLP_PERAF'.
  WA_FIELDCAT-SELTEXT_M = 'Ord Depr. Sep'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = '10_ANLP_PERAF'.
  WA_FIELDCAT-SELTEXT_M = 'Ord Depr. Oct'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = '11_ANLP_PERAF'.
  WA_FIELDCAT-SELTEXT_M = 'Ord Depr. Nov'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = '12_ANLP_PERAF'.
  WA_FIELDCAT-SELTEXT_M = 'Ord Depr. Dec'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'AKTIV'.
  WA_FIELDCAT-SELTEXT_M = 'Cap. Date'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

  WA_FIELDCAT-TABNAME = 'GT_MAIN'.
  WA_FIELDCAT-FIELDNAME = 'KOSTL'.
  WA_FIELDCAT-SELTEXT_M = 'Cost Centre'.
  WA_FIELDCAT-EMPHASIZE = 'C71'.
  APPEND WA_FIELDCAT TO I_FIELDCAT.
  CLEAR WA_FIELDCAT.

ENDFORM.                    "BUILD_FIELDCATLOG

*&--------------------------------------------------------------------*
*&      Form  display_alv_report
*&--------------------------------------------------------------------*
*       display detail report
*---------------------------------------------------------------------*
FORM DISPLAY_ALV_REPORT.

  V_REPID = SY-REPID.
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
   EXPORTING
     I_CALLBACK_PROGRAM                = V_REPID
*   I_CALLBACK_PF_STATUS_SET          = ' '
     I_CALLBACK_USER_COMMAND           = 'USER_COMMAND'
     I_CALLBACK_TOP_OF_PAGE            = 'TOP_OF_PAGE'
     I_GRID_TITLE                      = I_TITLE_1
*   I_GRID_SETTINGS                   =
     IS_LAYOUT                         = ALV_LAYOUT
     IT_FIELDCAT                       = I_FIELDCAT[]
*   IT_EXCLUDING                      =
*   IT_SPECIAL_GROUPS                 =
     IT_SORT                           = GT_SORT
*   IT_FILTER                         =
*   IS_SEL_HIDE                       =
*     i_default                         = 'ZLAY1'
     I_SAVE                            = 'A'
*     is_variant                        = i_variant
     IT_EVENTS                         = V_EVENTS
    TABLES
      T_OUTTAB                          = GT_MAIN
* EXCEPTIONS
*   PROGRAM_ERROR                     = 1
*   OTHERS                            = 2
            .
  IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.                    "display_alv_report

*&---------------------------------------------------------------------*
*&      Form  sort_cat
*&---------------------------------------------------------------------*
*       Sub totals
*----------------------------------------------------------------------*
FORM sort_cat.

  CLEAR GS_SORT.
  GS_SORT-TABNAME = 'GT_OUT'.
  GS_SORT-FIELDNAME = 'ANLN1'.
  GS_SORT-SPOS = 1.
  GS_SORT-UP = 'X'.
  APPEND GS_SORT TO GT_SORT.
  CLEAR GS_SORT.

ENDFORM.                    "sort_cat
