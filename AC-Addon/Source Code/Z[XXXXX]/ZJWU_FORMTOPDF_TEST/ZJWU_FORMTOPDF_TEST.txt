*&---------------------------------------------------------------------*
*& Report  ZJWU_FORMTOPDF_TEST
*&
*&---------------------------------------------------------------------*
*&*Copied from the following URL
*&http://saptechnical.com/Tutorials/Smartforms/OTF2PDF.htm
*&
*&---------------------------------------------------------------------*

report  zjwu_formtopdf_test.


* Variable declarations
data:
w_form_name type tdsfname value 'YSE_SD_PO',
w_fmodule type rs38l_fnam,
w_cparam type ssfctrlop,
w_outoptions type ssfcompop,
w_bin_filesize type i, " Binary File Size
w_file_name type string,
w_file_path type string,
w_full_path type string,
w_nast type nast,
w_ekko type ekko,
w_pekko type pekko,
l_xekpo type table of  ekpo,
l_xekpa type table of  ekpa,
l_xpekpo type table of  pekpo,
l_xeket type table of  eket,
l_xtkomv type table of   komv,
l_xekkn type table of  ekkn,
l_xekek type table of  ekek,
l_xkomk type table of  komk.

* Internal tables declaration

* Internal table to hold the OTF data
data:
t_otf type itcoo occurs 0 with header line,

* Internal table to hold OTF data recd from the SMARTFORM
t_otf_from_fm type ssfcrescl,

* Internal table to hold the data from the FM CONVERT_OTF
t_pdf_tab like tline occurs 0 with header line.


* This function module call is used to retrieve the name of the Function
* module generated when the SMARTFORM is activated

call function 'SSF_FUNCTION_MODULE_NAME'
exporting
formname = w_form_name
* VARIANT = ' '
* DIRECT_CALL = ' '
importing
fm_name = w_fmodule
exceptions
no_form = 1
no_function_module = 2
others = 3
.
if sy-subrc <> 0.
  message id sy-msgid type sy-msgty number sy-msgno
  with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
endif.

* Calling the SMARTFORM using the function module retrieved above
* GET_OTF parameter in the CONTROL_PARAMETERS is set to get the OTF
* format of the output


w_cparam-device = 'PRINTER'.
w_cparam-no_dialog = 'X'.
w_cparam-preview = space. " Suppressing the dialog box
" for print preview
w_cparam-getotf = 'X'.

* Printer name to be used is provided in the export parameter
* OUTPUT_OPTIONS
w_outoptions-tddest = 'LP01'.

call function w_fmodule
exporting
* ARCHIVE_INDEX =
* ARCHIVE_INDEX_TAB =
* ARCHIVE_PARAMETERS =
control_parameters = w_cparam
* MAIL_APPL_OBJ =
* MAIL_RECIPIENT =
* MAIL_SENDER =
output_options = w_outoptions
zxekko = w_ekko
zxpekko = w_pekko
is_nast = w_nast
* USER_SETTINGS = 'X'
importing
* DOCUMENT_OUTPUT_INFO =
job_output_info = t_otf_from_fm
* JOB_OUTPUT_OPTIONS =
tables
l_xekpo = l_xekpo
l_xekpa = l_xekpa
l_xpekpo = l_xpekpo
l_xeket = l_xeket
l_xtkomv = l_xtkomv
l_xekkn = l_xekkn
l_xekek = l_xekek
l_xkomk = l_xkomk
exceptions
formatting_error = 1
internal_error = 2
send_error = 3
user_canceled = 4
others = 5
.
if sy-subrc <> 0.
  message id sy-msgid type sy-msgty number sy-msgno
  with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
endif.

t_otf[] = t_otf_from_fm-otfdata[].

* Function Module CONVERT_OTF is used to convert the OTF format to PDF

call function 'CONVERT_OTF'
exporting
format = 'PDF'
max_linewidth = 132
* ARCHIVE_INDEX = ' '
* COPYNUMBER = 0
* ASCII_BIDI_VIS2LOG = ' '
* PDF_DELETE_OTFTAB = ' '
importing
bin_filesize = w_bin_filesize
* BIN_FILE =
tables
otf = t_otf
lines = t_pdf_tab
exceptions
err_max_linewidth = 1
err_format = 2
err_conv_not_possible = 3
err_bad_otf = 4
others = 5
.
if sy-subrc <> 0.
  message id sy-msgid type sy-msgty number sy-msgno
  with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
endif.

* To display File SAVE dialog window
call method cl_gui_frontend_services=>file_save_dialog
* EXPORTING
* WINDOW_TITLE =
* DEFAULT_EXTENSION =
* DEFAULT_FILE_NAME =
* FILE_FILTER =
* INITIAL_DIRECTORY =
* WITH_ENCODING =
* PROMPT_ON_OVERWRITE = 'X'
changing
filename = w_file_name
path = w_file_path
fullpath = w_full_path
* USER_ACTION =
* FILE_ENCODING =
exceptions
cntl_error = 1
error_no_gui = 2
not_supported_by_gui = 3
others = 4
.
if sy-subrc <> 0.
  message id sy-msgid type sy-msgty number sy-msgno
  with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
endif.


* Use the FM GUI_DOWNLOAD to download the generated PDF file onto the
* presentation server

call function 'GUI_DOWNLOAD'
exporting
bin_filesize = w_bin_filesize
filename = w_full_path
filetype = 'BIN'
* APPEND = ' '
* WRITE_FIELD_SEPARATOR = ' '
* HEADER = '00'
* TRUNC_TRAILING_BLANKS = ' '
* WRITE_LF = 'X'
* COL_SELECT = ' '
* COL_SELECT_MASK = ' '
* DAT_MODE = ' '
* CONFIRM_OVERWRITE = ' '
* NO_AUTH_CHECK = ' '
* CODEPAGE = ' '
* IGNORE_CERR = ABAP_TRUE
* REPLACEMENT = '#'
* WRITE_BOM = ' '
* TRUNC_TRAILING_BLANKS_EOL = 'X'
* WK1_N_FORMAT = ' '
* WK1_N_SIZE = ' '
* WK1_T_FORMAT = ' '
* WK1_T_SIZE = ' '
* IMPORTING
* FILELENGTH =
tables
data_tab = t_pdf_tab
* FIELDNAMES =
* EXCEPTIONS
* FILE_WRITE_ERROR = 1
* NO_BATCH = 2
* GUI_REFUSE_FILETRANSFER = 3
* INVALID_TYPE = 4
* NO_AUTHORITY = 5
* UNKNOWN_ERROR = 6
* HEADER_NOT_ALLOWED = 7
* SEPARATOR_NOT_ALLOWED = 8
* FILESIZE_NOT_ALLOWED = 9
* HEADER_TOO_LONG = 10
* DP_ERROR_CREATE = 11
* DP_ERROR_SEND = 12
* DP_ERROR_WRITE = 13
* UNKNOWN_DP_ERROR = 14
* ACCESS_DENIED = 15
* DP_OUT_OF_MEMORY = 16
* DISK_FULL = 17
* DP_TIMEOUT = 18
* FILE_NOT_FOUND = 19
* DATAPROVIDER_EXCEPTION = 20
* CONTROL_FLUSH_ERROR = 21
* OTHERS = 22
.
if sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
* WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
endif.
