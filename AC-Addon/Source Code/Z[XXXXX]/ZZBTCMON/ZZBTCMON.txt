REPORT   ZZZBTCMON MESSAGE-ID BT.
PARAMETERS:
JOBNAME LIKE BTCH1170-JOBNAME DEFAULT '*',           " All jobs
USERNAM LIKE BTCH1170-USERNAME DEFAULT '*',          " for every user
FR_MIN_J(4)  TYPE N,                   " nb days from today date
* added by jtr to add option "From Now minus Nb of Hours"
FR_MIN_T LIKE BTCH1170-FROM_TIME DEFAULT '000000',    "  at 00:00:00
INTERVAL(10)          TYPE N,    "delay in seconds between 2 dates"
MAXBTCRN(10)          TYPE N,    "run time in seconds between 2 dates"
* end add by jtr
FROM_TI LIKE BTCH1170-FROM_TIME DEFAULT '000000',    "  at 00:00:00
TO_MIN_J(3)    TYPE N,                 " nb days from today date
TO_TIME LIKE BTCH1170-TO_TIME   DEFAULT '000000',    "  at 00:00:00
RUNNING LIKE BTCH1170-RUNNING   DEFAULT 'X',     " activ    or
FINISHE LIKE BTCH1170-FINISHED  DEFAULT 'X',     " finished or
ABORTED LIKE BTCH1170-ABORTED   DEFAULT 'X',     " aborted
LIST                            DEFAULT 'X ',     " output list ?
FILE                            DEFAULT 'X',     " write file ?
*filepath(24) default '/var/global/repo/BATCHLOG'. "  Filepath ?
* ADD by DGO 07042003.
P_FREQ TYPE I DEFAULT '1'.

PARAMETERS: FILEPATH(24) LOWER CASE.   " trace in filepath

* << INSERT BY DGO ON 08042003
*selection-screen skip 2.
*
*selection-screen begin of block select_all_jobs with frame
*                                                     title text-001.
*selection-screen begin of line.
*selection-screen comment 1(79) text-002.
*selection-screen end of line.
*selection-screen begin of line.
*selection-screen comment 1(79) text-003.
*selection-screen end of line.
*selection-screen begin of line.
*selection-screen comment 1(79) text-004.
*selection-screen end of line.
*selection-screen begin of line.
*selection-screen comment 1(79) text-005.
*selection-screen end of line.
*
*parameters : p_box as checkbox.
*selection-screen end of block select_all_jobs.
* >> END:

INITIALIZATION.

  MOVE '/var/SCC/global/BATCHLOG' TO FILEPATH.
  MOVE 1 TO  FR_MIN_J.
  MOVE 0 TO  TO_MIN_J.
  MOVE 0 TO FR_MIN_T.

  DATA TRACE_TO(37).                   "trace file name
* trace output written with OULIST table structure = PERFBTCST <<<<<<
* STRUCTURE OF OUTPUT FLAT UNIX FILE -----------------------------------
*field name  |pos |ddtp|ddln|deci|offs|exln|tid|abt|eid|digi|flag 1  |fl
*-----------------------------------------------------------------------
*jobname     |   1|char|  32|   0|   0|  32| 40|  0|c  |   0|00000000|00
*jobcount    |   2|char|   8|   0|  32|   8| 40|  0|c  |   0|00000000|00
*sdlstrtdt   |   3|dats|   8|   0|  40|  10|156|  1|d  |   0|00000000|00
*sdlstrttm   |   4|tims|   6|   0|  48|   8|188|  3|t  |   0|00000000|00
*btcsystem   |   5|char|  32|   0|  54|  32| 40|  0|c  |   0|00000100|00
*sdluname    |   6|char|  12|   0|  86|  12| 40|  0|c  |   0|00000000|00
*lastchdate  |   7|dats|   8|   0|  98|  10|156|  1|d  |   0|00000000|00
*lastchtime  |   8|tims|   6|   0| 106|   8|188|  3|t  |   0|00000000|00
*lastchname  |   9|char|  12|   0| 112|  12| 40|  0|c  |   0|00000000|00
*strtdate    |  10|dats|   8|   0| 124|  10|156|  1|d  |   0|00000000|00
*strttime    |  11|tims|   6|   0| 132|   8|188|  3|t  |   0|00000000|00
*enddate     |  12|dats|   8|   0| 138|  10|156|  1|d  |   0|00000000|00
*endtime     |  13|tims|   6|   0| 146|   8|188|  3|t  |   0|00000000|00
*periodic    |  14|char|   1|   0| 152|   1| 40|  0|c  |   0|00000000|00
*status      |  15|char|   1|   0| 153|   1| 40|  0|c  |   0|00000000|00
*wpnumber    |  16|int4|   4|   0| 156|  10|172|  8|i  |   0|00000010|00
*wpprocid    |  17|int4|   4|   0| 160|  10|172|  8|i  |   0|00000010|00
*btcsysreax  |  18|char|  32|   0| 164|  32| 40|  0|c  |   0|00000100|00
*jobclass    |  19|char|   1|   0| 196|   1| 40|  0|c  |   0|00000000|00
*execserve   |  20|char|  20|   0| 197|  20| 40|  0|c  |   0|00000100|00
*duration    |  21|int4|   4|   0| 220|  10|172|  8|i  |   0|00000010|00
*delay       |  22|int4|   4|   0| 224|  10|172|  8|i  |   0|00000010|00
*avgtimsec   |  23|int4|   4|   0| 228|  10|172|  8|i  |   0|00000010|00
*difftimsec  |  24|int4|   4|   0| 232|  10|172|  8|i  |   0|00000010|00
*selflag     |  25|char|   1|   0| 236|   1| 40|  0|c  |   0|00000000|00
*cntofjobs   |  26|int4|   4|   0| 240|  10|172|  8|i  |   0|00000010|00
*-----------------------------------------------------------------------

  DATA: FROM_DA LIKE BTCH1170-FROM_DATE.
  DATA: TO_DATE LIKE BTCH1170-TO_DATE.
  DATA: MESS(120).
  DATA: DELAY(10)          TYPE N.    "delay in seconds between 2 dates"
  DATA: RUN_TIME(10)       TYPE N.    "delay in seconds between 2 dates"

  TABLES :
          BTCH1170 ,   " Workarea f¨¹r die Eingabe des DB-Selektionskrit.
          SELECTVIEW ,                 " Workarea f¨¹r die Selektion

          BTCJSTAT , " Tabelle mit der durchschnittlichen Laufzeit eines
                                       " eines Batchjobs
          TBTCO ,                      " Jobkopfdaten
          BTCXP3 ,                     " exit status after external call
          BTCXPM ,   "length(3) + message(128)  exec protocol
          SXPGCOLIST.                  "name + parameters of command

  INCLUDE RPERFANA.

*
*  Konstanten zur Performanceanalyse
*
  DATA: BTC_WP(3) VALUE 'BTC'.

*
* Workareas und interne Tabelle zur Performanceanalyse
*

  DATA: BEGIN OF TABL OCCURS 0,
     LENGTH LIKE BTCXPM-LENGTH,
     MESSAGE LIKE BTCXPM-MESSAGE,
   END OF TABL.

  DATA: BEGIN OF OUTLIST OCCURS 0.
          INCLUDE STRUCTURE PERFBTCST.
  DATA : END OF OUTLIST.

  DATA: BEGIN OF DELTA_OUTLIST OCCURS 0.
          INCLUDE STRUCTURE PERFBTCST.
  DATA : END OF DELTA_OUTLIST.

  OUTLIST-SELFLAG = 'X'.


  DATA: BEGIN OF JOBSEL_PARAMS.
          INCLUDE STRUCTURE BTCSELECT.
  DATA: END OF JOBSEL_PARAMS.

  DATA BEGIN OF JOBLIST OCCURS 0.
          INCLUDE STRUCTURE TBTCJOB.
  DATA END OF JOBLIST.

  DATA BEGIN OF JOBLIST_AREA .
          INCLUDE STRUCTURE TBTCJOB.
  DATA END OF JOBLIST_AREA.



  DATA BEGIN OF JOBLIST_REFR_PARAM.
          INCLUDE STRUCTURE  BTCSELECT.
  DATA END OF JOBLIST_REFR_PARAM.


  DATA: BEGIN OF RAW_AD_WPSTAT_REC.
          INCLUDE STRUCTURE WPSTAT_ST.
  DATA: END OF RAW_AD_WPSTAT_REC.

  DATA BEGIN OF TIMETAB OCCURS 0 .
          INCLUDE STRUCTURE BTCJSTAT.
  DATA    END OF TIMETAB.

  DATA:
     BTC_NO                       LIKE BTCH0000-CHAR1 VALUE 'N',
     BTC_YES                      LIKE BTCH0000-CHAR1 VALUE 'Y',
    BTC_PERFORMANCE_LIST      LIKE BTCH0000-INT4 VALUE 32,
    BTC_PERFORMANCE_INFO      LIKE BTCH0000-INT4 VALUE 33,

    BTC_RUNNING    LIKE TBTCO-STATUS VALUE 'R',
    BTC_READY      LIKE TBTCO-STATUS VALUE 'Y',
    BTC_SCHEDULED  LIKE TBTCO-STATUS VALUE 'P',
    BTC_RELEASED   LIKE TBTCO-STATUS VALUE 'S',
    BTC_ABORTED    LIKE TBTCO-STATUS VALUE 'A',
    BTC_FINISHED   LIKE TBTCO-STATUS VALUE 'F',
    BTC_PUT_ACTIVE LIKE TBTCO-STATUS VALUE 'Z'.

  DATA: LIST_PROCESSING_CONTEXT LIKE BTCH0000-INT4 VALUE 0.

  DATA: OKCODE(4),
        NO_DATE              LIKE  SY-DATUM        VALUE '        ',
        NO_TIME              LIKE  SY-UZEIT        VALUE '      '.


  DATA: BATCH_ADMIN_PRIVILEGE_GIVEN  LIKE BTC_NO.

  DATA  INFO_EXISTS TYPE I .           " true = 0
                                       " false = 1

  DATA  RC TYPE I.

  DATA  STATUS(11).

  DATA  NUMBER_OF_OUTLIST TYPE I.      "Number of rows in outlist
 DATA  NUMBER_OF_VIEW TYPE I.          "Number of rows showed on screen

  DATA  DATE_LAST_DBREAD LIKE SY-DATUM."Date of the last read of tbtco
  DATA  TIME_LAST_DBREAD LIKE SY-UZEIT." in joblist

  DATA TEMPORARY_TIME LIKE SY-UZEIT.

 DATA  DATE_FIRST_DBREAD LIKE SY-DATUM."Date of the first read of tbtco
  DATA  TIME_FIRST_DBREAD LIKE SY-UZEIT. " in joblist

  DATA  LISTVIEW.     "Anzeigemodus  A = Laufzeit+Statistik
                                       "              S = Statistik
                                       "              L = Laufzeit

  DATA: TEXT1(10), TEXT2(10), TEXT3(10).  " Ausgabe Statistiken

  DATA  FIRST_CALL_1170(1) VALUE 'T'.  " To check if the call of screen
                                       " 1170 is the first call
                                       " 'T' True = first call
                                       " 'F' False

* << Add by DGO : to insert the job log.
  DATA: BEGIN OF I_JOBLOG OCCURS 0.
          INCLUDE STRUCTURE TBTC5.
  DATA END OF I_JOBLOG.

  DATA: BEGIN OF S_WRITEFILE.
  DATA: SEPAR1(1),
        ENTERTIME LIKE TBTC5-ENTERTIME,
        SEPAR2(1),
        ENTERDATE LIKE TBTC5-ENTERDATE,
        SEPAR3(1),
*        msgcode  like tbtc5-msgcode,
*        SEPAR4(1),
        TEXT LIKE TBTC5-TEXT.
  DATA END OF S_WRITEFILE.

*DGO 051201 18:35:00  data: w_file like rfpdo-rfbifile,
  DATA: W_FILE(50),
        W_TITLE(80).
* >> dgo


AT SELECTION-SCREEN.
  MOVE FILEPATH TO TRACE_TO.

  MOVE '/' TO TRACE_TO+24.
  MOVE SY-SYSID TO TRACE_TO+25(3).
  MOVE '_' TO TRACE_TO+28.
  MOVE SY-DATUM TO TRACE_TO+29(8).
  CONDENSE TRACE_TO NO-GAPS.

  FROM_DA = SY-DATUM - FR_MIN_J.
  TO_DATE = SY-DATUM - TO_MIN_J.
* added by jtr to add option "From Now minus Nb of Hours"
  TO_TIME = SY-UZEIT.
  FROM_TI = TO_TIME - FR_MIN_T.
* end add by jtr

* << Added by DGO 07042003
*  if running eq 'X' and p_box eq ' '.
  IF RUNNING EQ 'X'.
*break-point.
*    to_date = sy-datum.
    TO_DATE = SY-DATUM - TO_MIN_J.
    TO_TIME = SY-UZEIT.
    FROM_TI = TO_TIME - FR_MIN_T.
    DATA: TMPTIME TYPE I,
          W_NBR_HEURE(2) TYPE N.

    W_NBR_HEURE = ( MAXBTCRN / 3600 ) + P_FREQ.
    TMPTIME = TO_TIME(2) - W_NBR_HEURE(2).
    IF TMPTIME >= 0.
      FROM_TI(2) = FROM_TI(2) - W_NBR_HEURE(2).
    ELSE.
      FROM_DA = FROM_DA - 1.
      FROM_TI(2) = 24 + FROM_TI(2) - W_NBR_HEURE.
    ENDIF.
  ENDIF.

*if p_box eq 'X'.
*running = 'X'.
*finishe = ' '.
*aborted = ' '.
*list = 'X'.
*file = ' '.
*
*to_date = sy-datum.
*to_time = sy-uzeit.
*from_da = '19970101'.
*from_ti = '000000'.
*maxbtcrn = 400.
*endif.
* >> End modify DGO

START-OF-SELECTION.
  IF LIST NE SPACE.
    WRITE: / 'from date/time =' , FROM_DA , FROM_TI.
    WRITE: / 'to   date/time =' , TO_DATE, TO_TIME.
  ENDIF.

  MOVE JOBNAME TO BTCH1170-JOBNAME.
  MOVE USERNAM TO BTCH1170-USERNAME.
  MOVE FROM_DA TO BTCH1170-FROM_DATE.
  MOVE FROM_TI TO BTCH1170-FROM_TIME.
  MOVE TO_DATE TO BTCH1170-TO_DATE.
  MOVE TO_TIME TO BTCH1170-TO_TIME.
  MOVE RUNNING TO BTCH1170-RUNNING.
  MOVE FINISHE TO BTCH1170-FINISHED.
  MOVE ABORTED TO BTCH1170-ABORTED.
  MOVE JOBNAME TO SELECTVIEW-JOBNAME.
  MOVE USERNAM TO SELECTVIEW-SDLUNAME.
  MOVE FROM_DA TO SELECTVIEW-LOWDATE.
  MOVE FROM_TI TO SELECTVIEW-LOWTIME.
  MOVE TO_DATE TO SELECTVIEW-UPPDATE.
  MOVE TO_TIME TO SELECTVIEW-UPPTIME.
  MOVE RUNNING TO SELECTVIEW-ACTIV.
  MOVE FINISHE TO SELECTVIEW-READY.
  MOVE ABORTED TO SELECTVIEW-ABORT.

* Set the parameter for the selection in structure jobsel_params

 PERFORM SET_PERFORMANCE_PARA USING DATE_FIRST_DBREAD TIME_FIRST_DBREAD
                                     DATE_LAST_DBREAD TIME_LAST_DBREAD
                                     JOBSEL_PARAMS.

* Read all jobs from TBTCO with job setting according to jobsel_params
* into joblist and save jobsel_params in joblist_refr_param

  CALL FUNCTION 'BP_JOB_SELECT'
       EXPORTING
            JOBSELECT_DIALOG   = BTC_NO
            JOBSEL_PARAM_IN    = JOBSEL_PARAMS
       IMPORTING
            JOBSEL_PARAM_OUT   = JOBLIST_REFR_PARAM
       TABLES
            JOBSELECT_JOBLIST  = JOBLIST
       EXCEPTIONS
            NO_JOBS_FOUND      = 1
            SELECTION_CANCELED = 2
            OTHERS             = 99.

  CASE SY-SUBRC.
    WHEN 0.
                                       " Jobliste erfolgreich erstellt
    WHEN 1.
      MESSAGE S151.
      CHECK 1 EQ 0.                    " continue
    WHEN 2.
*     Abbruch
      CHECK 1 EQ 0.                    " continue
  ENDCASE.



  LOOP AT JOBLIST.
    MOVE-CORRESPONDING JOBLIST TO OUTLIST .
*{   INSERT         ID0K929093                                        2
  if outlist-status = 'A' or outlist-status = 'R'.
*}   INSERT
    APPEND OUTLIST.
*{   INSERT         ID0K929093                                        3
   endif.
*}   INSERT
  ENDLOOP.

  DESCRIBE TABLE OUTLIST LINES NUMBER_OF_OUTLIST.
  NUMBER_OF_VIEW = NUMBER_OF_OUTLIST.
*
* Aufbereitung der Jobliste
*

  PERFORM PREPARE_LIST TABLES OUTLIST.



  LIST_PROCESSING_CONTEXT = BTC_PERFORMANCE_LIST.


  SELECTVIEW-ACTIV = BTCH1170-RUNNING. "joblist_refr_running
  SELECTVIEW-ABORT = BTCH1170-ABORTED. "joblist_refr_param-aborted
  SELECTVIEW-READY = BTCH1170-FINISHED."joblist_refr_param-finished

*  Set the diplayed jobs concerning the first selection screen
*  and counts the number of displayed jobs

  NUMBER_OF_VIEW = 0.
*break-point 1.
  LOOP AT OUTLIST.
    OUTLIST-SELFLAG = ' '.
    PERFORM SELECT_VIEW_OUTLIST TABLES OUTLIST USING SELECTVIEW.
    MODIFY OUTLIST INDEX SY-TABIX.
  ENDLOOP.


  SORT OUTLIST BY JOBNAME.

  IF FILE NE SPACE.                    " WRITE a TRACE FILE ?
*{   REPLACE        ID0K927566                                        1
*\    OPEN DATASET TRACE_TO IN TEXT MODE FOR APPENDING
    OPEN DATASET TRACE_TO IN TEXT MODE FOR APPENDING ENCODING DEFAULT
*}   REPLACE
                                  MESSAGE MESS.
    IF SY-SUBRC NE 0.
      WRITE: / '!!!!!!!!!', TRACE_TO, MESS.
      MESSAGE S313 WITH MESS. EXIT.
    ENDIF.
    WRITE: / 'Selected jobs trace written to ==>', TRACE_TO.

    CLEAR OUTLIST.
    LOOP AT OUTLIST.
      IF OUTLIST-SELFLAG EQ 'X'.
        TRANSFER OUTLIST  TO TRACE_TO.
      ENDIF.
    ENDLOOP.

  ENDIF.
  IF LIST NE SPACE.                    "Write a list ?
    PERFORM WRITE_LIST.
  ENDIF.
*
*  TOP-OF-PAGE
*
TOP-OF-PAGE.

  CASE LIST_PROCESSING_CONTEXT.
    WHEN BTC_PERFORMANCE_LIST.
      PERFORM WRITE_PERFORMANCE_LIST_HEADER.
    WHEN BTC_PERFORMANCE_INFO.
      PERFORM WRITE_PERFORMANCE_INFO_HEADER.

  ENDCASE.



*---------------------------------------------------------------------*
*       FORM SET_PERFORMANCE_PARA                                     *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
*  -->  DATE1                                                         *
*  -->  TIME1                                                         *
*  -->  DATE2                                                         *
*  -->  TIME2                                                         *
*  -->  JOBSEL_PARAMS                                                 *
*---------------------------------------------------------------------*
FORM SET_PERFORMANCE_PARA USING DATE1 TIME1 DATE2 TIME2
                         JOBSEL_PARAMS STRUCTURE BTCSELECT.
  CLEAR JOBSEL_PARAMS.

  JOBSEL_PARAMS-JOBNAME   = '*'.
  JOBSEL_PARAMS-USERNAME  = '*'.
  JOBSEL_PARAMS-FROM_DATE   = DATE1.
  JOBSEL_PARAMS-FROM_TIME   = TIME1.
  JOBSEL_PARAMS-TO_DATE   = DATE2.
  JOBSEL_PARAMS-TO_TIME   = TIME2.
  JOBSEL_PARAMS-RUNNING   = 'X'.
  JOBSEL_PARAMS-FINISHED  = 'X'.
  JOBSEL_PARAMS-ABORTED   = 'X'.
ENDFORM.                               " SET_PERFORMANCE_PARA

*&---------------------------------------------------------------------*
*&      Form  WRITE_LIST
*&---------------------------------------------------------------------*
*       Anzeige der Grundliste der selektierten Batchjobs           *
*----------------------------------------------------------------------*
*
*
*----------------------------------------------------------------------*
FORM WRITE_LIST .

  IF LIST EQ SPACE. EXIT. ENDIF.

  NEW-PAGE NO-TITLE NO-HEADING LINE-SIZE 145.
  FORMAT INTENSIFIED ON.

  IF NUMBER_OF_VIEW NE 0.

    LOOP AT OUTLIST.
      RUN_TIME = 0.
      PERFORM CALC_DURATION USING OUTLIST-ENDDATE OUTLIST-ENDTIME
                            TO_DATE TO_TIME DELAY.
      IF DELAY < INTERVAL  OR OUTLIST-STATUS EQ 'R'.
        IF OUTLIST-STATUS EQ 'R'.
          PERFORM CALC_DURATION USING OUTLIST-STRTDATE OUTLIST-STRTTIME
                             TO_DATE TO_TIME RUN_TIME.
        ENDIF.
        IF DELAY < INTERVAL OR RUN_TIME > MAXBTCRN.

          PERFORM DESCRIBE_STATUS USING OUTLIST-STATUS STATUS.
          IF OUTLIST-SELFLAG EQ 'X'.
            WRITE :
             /1 SY-VLINE,
             2(32) OUTLIST-JOBNAME, 34 SY-VLINE,
             35(12) OUTLIST-SDLUNAME, 48 SY-VLINE,
             49(11) STATUS, 61 SY-VLINE NO-GAP.
            SET LEFT SCROLL-BOUNDARY.
            MOVE 'A' TO LISTVIEW.
            CASE LISTVIEW.
              WHEN 'A'.
                WRITE :
                 62(10) OUTLIST-STRTDATE USING EDIT MASK '__.__.____' ,
                 73 SY-VLINE,
                 74(8)  OUTLIST-STRTTIME USING EDIT MASK '__:__:__',
                 83 SY-VLINE,
                 84(10) OUTLIST-DURATION , 95 SY-VLINE ,
                 96(10) OUTLIST-DELAY, 107 SY-VLINE,
                108(12) OUTLIST-CNTOFJOBS RIGHT-JUSTIFIED, 121 SY-VLINE,
                122(10) OUTLIST-AVGTIMSEC , 133 SY-VLINE ,
                134(10) OUTLIST-DIFFTIMSEC , 145 SY-VLINE ,
                146(10) OUTLIST-ENDTIME , 157 SY-VLINE .
                INFO_EXISTS = 0 .
                HIDE: OUTLIST , INFO_EXISTS.

*>> Add by DGO
                PERFORM READ_JOB_LOG.
                PERFORM OPEN_FILE.
                PERFORM TRANSFER_DATA_TO_FILE.
                CLOSE DATASET W_FILE.
* << end DGO

* Changed by JTR2 to generate alert when job failed
* replace ' ' with '-' into outlist-jobname.
                TRANSLATE OUTLIST-JOBNAME USING ' _'.
                CONCATENATE SY-SYSID OUTLIST-JOBNAME OUTLIST-SDLUNAME
*{   INSERT         ID0K909372                                        1
*
*}   INSERT
              OUTLIST-STRTDATE OUTLIST-STRTTIME OUTLIST-STATUS RUN_TIME
*{   INSERT         ID0K909372                                        2
              OUTLIST-JOBCLASS
*}   INSERT
                            INTO SXPGCOLIST-PARAMETERS SEPARATED BY ' '.
*               into sxpgcolist-parameters separated by '#'.


                CALL FUNCTION 'SXPG_COMMAND_EXECUTE'
                     EXPORTING
                          COMMANDNAME                   = 'ZSAPJOBMON'
*          operatingsystem               = sy-opsys
*          targetsystem                  = sy-host
                          STDOUT                        = 'X'
                          STDERR                        = 'X'
                          TERMINATIONWAIT               = 'X'
                          TRACE                         = ' '
                  ADDITIONAL_PARAMETERS         = SXPGCOLIST-PARAMETERS
                     IMPORTING
                        STATUS                        = BTCXP3-EXITSTAT
                     TABLES
                          EXEC_PROTOCOL                 = TABL
                     EXCEPTIONS
                          NO_PERMISSION                 = 1
                          COMMAND_NOT_FOUND             = 2
                          PARAMETERS_TOO_LONG           = 3
                          SECURITY_RISK                 = 4
                          WRONG_CHECK_CALL_INTERFACE    = 5
                          PROGRAM_START_ERROR           = 6
                          PROGRAM_TERMINATION_ERROR     = 7
                          X_ERROR                       = 8
                          PARAMETER_EXPECTED            = 9
                          TOO_MANY_PARAMETERS           = 10
                         ILLEGAL_COMMAND               = 11
                          WRONG_ASYNCHRONOUS_PARAMETERS = 12
                          CANT_ENQ_TBTCO_ENTRY          = 13
                          JOBCOUNT_GENERATION_ERROR     = 14
                          OTHERS                        = 15.

* end changed by JTR2

              WHEN 'L'.
                WRITE :
                 62(10) OUTLIST-STRTDATE USING EDIT MASK '__.__.____' ,
                 73 SY-VLINE,
                 74(8)  OUTLIST-STRTTIME USING EDIT MASK '__:__:__',
                 83 SY-VLINE,
                 84(10) OUTLIST-DURATION , 95 SY-VLINE ,
                 96(10) OUTLIST-DELAY, 107 SY-VLINE.
                INFO_EXISTS = 0 .
                HIDE: OUTLIST , INFO_EXISTS.
              WHEN 'S'.
                IF OUTLIST-CNTOFJOBS NE 0.
                  TEXT1 = OUTLIST-CNTOFJOBS.
                ENDIF.
                IF OUTLIST-AVGTIMSEC NE 0.
                  TEXT2 = OUTLIST-AVGTIMSEC.
                ENDIF.
                IF OUTLIST-DIFFTIMSEC NE 0 OR
                                         OUTLIST-STATUS EQ BTC_FINISHED.
                  TEXT3 = OUTLIST-DIFFTIMSEC.
                ENDIF.
                WRITE :
                62(12) TEXT1 LEFT-JUSTIFIED, 75 SY-VLINE,
                76(10) TEXT2 , 87 SY-VLINE ,
                88(10) TEXT3 , 99 SY-VLINE .
                INFO_EXISTS = 0 .
                HIDE: OUTLIST , INFO_EXISTS.
            ENDCASE.
          ENDIF.
          CLEAR: TEXT1, TEXT2, TEXT3.

        ENDIF.
      ENDIF.
    ENDLOOP.
  ELSE.
    SKIP.
    WRITE : '*****  '.
 WRITE :'Zu diesem Auswahlkriterium werden keine Jobs angezeigt !'(031).
    WRITE : '  *****'.
    SKIP.
  ENDIF.

  CASE LISTVIEW.
    WHEN 'A'. ULINE /(145).
    WHEN 'L'. ULINE /(107).
    WHEN 'S'. ULINE /(99).
  ENDCASE.

ENDFORM.                               " WRITE_LIST

*&---------------------------------------------------------------------*
*&      Form  CALC_DURATION
*&---------------------------------------------------------------------*
*       Bestimmung der Jobdauer                                        *
*----------------------------------------------------------------------*
*  -->  dat1 starttag
*  -->  tim1 startzeit
*  -->  dat2 endtag
*  -->  tim2 endzeit
*  <--  diff Dauer in Sekunden
*----------------------------------------------------------------------*
FORM CALC_DURATION USING DAT1 TIM1 DAT2 TIM2 DIFF.
  DIFF = ( DAT2 - DAT1 ) * 86400 - TIM1 + TIM2.


ENDFORM.                               " CALC_DURATION

*&---------------------------------------------------------------------*
*&      Form  PREPARE_LIST
*&---------------------------------------------------------------------*
*       Aufbereiten der Jobliste                                   *
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM PREPARE_LIST TABLES H_OUTLIST STRUCTURE PERFBTCST.


*
*  Bestimmen der durchschnittl. Laufzeit f¨¹r Jobs
*

  PERFORM FILL_TIMETAB TABLES H_OUTLIST.






  LOOP AT H_OUTLIST.
*
* Bestimmen der Jobdauer
*
    PERFORM CHECK_JOBDURATION TABLES H_OUTLIST .

*
* Bestimmen der Versp#tung
*

    PERFORM CHECK_JOBDELAY USING H_OUTLIST .

*
* Bestimmen der Abweichung von der durchschnittlichen Laufzeit
*
    PERFORM CHECK_DIFF_AVGTIMSEC USING H_OUTLIST .
*
* Tabelleneintrag aktuallisieren
*
    IF LIST NE SPACE.
*{   REPLACE        ID0K927566                                        1
*\      WRITE H_OUTLIST TO H_OUTLIST INDEX SY-TABIX.
      MOVE H_OUTLIST TO H_OUTLIST.
*}   REPLACE
    ENDIF.
  ENDLOOP.

ENDFORM.                               " PREPARE_LIST

*&---------------------------------------------------------------------*
*&      Form  CHECK_JOBDURATION
*&---------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CHECK_JOBDURATION TABLES H_OUTLIST STRUCTURE PERFBTCST..

  H_OUTLIST-DURATION = 0.

  IF H_OUTLIST-STRTDATE EQ SPACE OR H_OUTLIST-ENDDATE EQ SPACE .
    H_OUTLIST-DURATION = 0.
  ELSE.
    PERFORM CALC_DURATION USING  H_OUTLIST-STRTDATE H_OUTLIST-STRTTIME
                                 H_OUTLIST-ENDDATE  H_OUTLIST-ENDTIME
                                 H_OUTLIST-DURATION.
  ENDIF.
ENDFORM.                               " CHECK_JOBDURATION

*&---------------------------------------------------------------------*
*&      Form  HANDLE_PERFORM_LIST
*&---------------------------------------------------------------------*
*       At-user-command in der Performanceanalyse                      *
*----------------------------------------------------------------------*
*
*
*----------------------------------------------------------------------*
FORM HANDLE_PERFORM_LIST.

  CASE SY-XCODE.
    WHEN 'SORT'.                       " sort list
      PERFORM SORT_PERFORMLIST.
    WHEN 'VIEW'.                       " change job display
      PERFORM SELC_PERFORMLIST.
    WHEN 'REFR'.                       " refresh job list
      PERFORM REFRESH_PERFORMLIST.
    WHEN 'INFO'.                       " all job info
      PERFORM SHOW_ALL_INFO.
    WHEN 'BPRO'.                                            "
      SUBMIT SAPBTCPR AND RETURN.
    WHEN 'SELK'.
      PERFORM EDIT_SELEC_KRIT.
    WHEN 'BECK'.
      LEAVE PROGRAM.
    WHEN 'STAC'.
      PERFORM RUN_RSBPCOLL.
    WHEN 'JOSE'.
      SUBMIT SAPBTCJO AND RETURN.
    WHEN 'JOST'.
      SET PF-STATUS 'PERFLIST' EXCLUDING 'JOST'.
      LISTVIEW = 'S'.
      SUBTRACT 1 FROM SY-LSIND.
      PERFORM WRITE_LIST.
    WHEN 'JOLA'.
      SET PF-STATUS 'PERFLIST' EXCLUDING 'JOLA'.
      LISTVIEW = 'L'.
      SUBTRACT 1 FROM SY-LSIND.
      PERFORM WRITE_LIST.
    WHEN 'JOAL'.
      SET PF-STATUS 'PERFLIST' EXCLUDING 'JOAL'.
      LISTVIEW = 'A'.
      SUBTRACT 1 FROM SY-LSIND.
      PERFORM WRITE_LIST.
    WHEN 'JOLO'.                       " Display job protocoll
      PERFORM DISPLAY_JOB_PROTOCOL.




  ENDCASE.

ENDFORM.                               " HANDLE_PERFORM_LIST

*&---------------------------------------------------------------------*
*&      Form  REFRESH_PERFORMLIST
*&---------------------------------------------------------------------*
*       Neulesen der Performanceliste.                                 *
*----------------------------------------------------------------------*
*
*
*----------------------------------------------------------------------*
FORM REFRESH_PERFORMLIST.
  PERFORM TIME_PLUS_MINUS USING DATE_LAST_DBREAD TIME_LAST_DBREAD '+'.
  PERFORM REFRESH_OUTLIST USING DATE_LAST_DBREAD TIME_LAST_DBREAD
                                SY-DATUM SY-UZEIT 'R'.

  SUBTRACT 1 FROM SY-LSIND.
  PERFORM WRITE_LIST.



ENDFORM.                               " REFRESH_PERFORMLIST

*&---------------------------------------------------------------------*
*&      Form  SHOW_ALL_INFO
*&---------------------------------------------------------------------*
*       Show all infos for the selected job
*----------------------------------------------------------------------*
*
*
*----------------------------------------------------------------------*
FORM SHOW_ALL_INFO.
  DATA: SAVE_PROCESSING_CONTEXT LIKE BTCH0000-INT4 .

  SAVE_PROCESSING_CONTEXT = LIST_PROCESSING_CONTEXT.
  LIST_PROCESSING_CONTEXT = BTC_PERFORMANCE_INFO.

  IF INFO_EXISTS = 0 .

    CALL FUNCTION 'BP_JOB_READ'
         EXPORTING
              JOB_READ_JOBNAME  = OUTLIST-JOBNAME
              JOB_READ_JOBCOUNT = OUTLIST-JOBCOUNT
              JOB_READ_OPCODE   = 20   "All Jobdata
         IMPORTING
              JOB_READ_JOBHEAD  = JOBLIST
         TABLES
              JOB_READ_STEPLIST = STEPLIST
         EXCEPTIONS
              JOB_DOESNT_EXIST  = 1
              OTHERS            = 99.

    CASE SY-SUBRC.
      WHEN 0.
                                       " Lesen hat geklappt
      WHEN 1.
        MESSAGE E127 WITH OUTLIST-JOBNAME.
      WHEN OTHERS.
        MESSAGE E155 WITH OUTLIST-JOBNAME.
    ENDCASE.


    CALL SCREEN 3030 STARTING AT 30 8
                     ENDING AT 100 25.
  ELSE.
    LIST_PROCESSING_CONTEXT = SAVE_PROCESSING_CONTEXT.
    MESSAGE W402.
  ENDIF.


  LIST_PROCESSING_CONTEXT = SAVE_PROCESSING_CONTEXT.



ENDFORM.                               " SHOW_ALL_INFO

*&---------------------------------------------------------------------*
*&      Form  CHECK_JOBDELAY
*&---------------------------------------------------------------------*
*       Bestimmen der Jobversp#tung = Differenz Startzeit - Planzeit   *
*----------------------------------------------------------------------*
*
*
*----------------------------------------------------------------------*
FORM CHECK_JOBDELAY USING H_OUTLIST STRUCTURE PERFBTCST..

  H_OUTLIST-DELAY = 0.

  IF H_OUTLIST-SDLSTRTDT EQ SPACE OR  H_OUTLIST-STRTDATE EQ SPACE.
    H_OUTLIST-DELAY = 0.
  ELSE.
   PERFORM CALC_DURATION USING  H_OUTLIST-SDLSTRTDT H_OUTLIST-SDLSTRTTM
                                 H_OUTLIST-STRTDATE  H_OUTLIST-STRTTIME
                                              H_OUTLIST-DELAY.
  ENDIF.


ENDFORM.                               " CHECK_JOBDELAY

*&---------------------------------------------------------------------*
*&      Form  CHECK_AVERAGE-RUNTIME
*&---------------------------------------------------------------------*
*       Bestimmen der Durchschnittlichen Laufzeit durch Lesen der  *
*       Tabelle  btcjstat .
*
*
*----------------------------------------------------------------------*
*
*  <-- outlist-avrgrunt
*----------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  FILL_TIMETAB
*&---------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM FILL_TIMETAB TABLES H_OUTLIST STRUCTURE PERFBTCST.



  DATA : MERKE LIKE SY-TABIX.

  LOOP AT H_OUTLIST.
    MERKE = SY-TABIX.

    READ TABLE TIMETAB WITH KEY JOBNAME = H_OUTLIST-JOBNAME
                              LASTCHDATE = H_OUTLIST-LASTCHDATE
                              LASTCHTIME = H_OUTLIST-LASTCHTIME.

    IF SY-SUBRC <> 0.
      SELECT SINGLE * FROM BTCJSTAT
            WHERE JOBNAME = H_OUTLIST-JOBNAME
             AND  LASTCHDATE = H_OUTLIST-LASTCHDATE
             AND  LASTCHTIME = H_OUTLIST-LASTCHTIME.

      IF SY-SUBRC = 0.
        MOVE-CORRESPONDING BTCJSTAT TO TIMETAB.

      ELSE.
        MOVE-CORRESPONDING OUTLIST TO TIMETAB.

      ENDIF.
      APPEND TIMETAB.
    ENDIF.
    H_OUTLIST-AVGTIMSEC = TIMETAB-AVGTIMSEC.
    H_OUTLIST-CNTOFJOBS = TIMETAB-CNTOFJOBS.



    MODIFY H_OUTLIST INDEX MERKE.
  ENDLOOP.

ENDFORM.                               " FILL_TIMETAB

*&---------------------------------------------------------------------*
*&      Form  CHECK_DIFF_AVGTIMSEC
*&---------------------------------------------------------------------*
*       Bestimmen der Abweichung von der durchschnittlichen            *
*       Laufzeit des Jobs.
*
*----------------------------------------------------------------------*
*
*  <--  outlist-difftimsec
*----------------------------------------------------------------------*
FORM CHECK_DIFF_AVGTIMSEC USING H_OUTLIST STRUCTURE PERFBTCST..

  IF H_OUTLIST-STATUS = 'F'.
    H_OUTLIST-DIFFTIMSEC = H_OUTLIST-DURATION - H_OUTLIST-AVGTIMSEC .

  ELSE.

    H_OUTLIST-DIFFTIMSEC = 0 .

  ENDIF.


ENDFORM.                               " CHECK_DIFF_AVGTIMSEC

*&---------------------------------------------------------------------*
*&      Form  SORT_PERFORMLIST
*&---------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SORT_PERFORMLIST.
  DATA: SORT_FIELD(100).




  GET CURSOR FIELD SORT_FIELD.



  PERFORM SORT_OUTLIST USING SORT_FIELD.
  SUBTRACT 1 FROM SY-LSIND.
  PERFORM WRITE_LIST.


ENDFORM.                               " SORT_PERFORMLIST

*&---------------------------------------------------------------------*
*&      Form  SORT_OUTLIST
*&---------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
*  -->  sort_field
*  <--  outlist
*----------------------------------------------------------------------*
FORM SORT_OUTLIST USING SORT_FIELD.

  CASE SORT_FIELD.

    WHEN 'OUTLIST-JOBNAME'.
      SORT OUTLIST BY JOBNAME.
    WHEN 'OUTLIST-SDLUNAME'.
      SORT OUTLIST BY SDLUNAME.
    WHEN 'STATUS'.
      SORT OUTLIST BY STATUS.
    WHEN 'OUTLIST-STRTDATE'.
      SORT OUTLIST BY STRTDATE STRTTIME.
    WHEN 'OUTLIST-STRTTIME'.
      SORT OUTLIST BY STRTDATE STRTTIME.
    WHEN 'OUTLIST-DURATION'.
      SORT OUTLIST BY DURATION DESCENDING.
    WHEN 'OUTLIST-DELAY'.
      SORT OUTLIST BY DELAY DESCENDING.
    WHEN 'TEXT2'.
      SORT OUTLIST BY AVGTIMSEC DESCENDING.
    WHEN 'TEXT3'.
      SORT OUTLIST BY DIFFTIMSEC DESCENDING.
    WHEN 'TEXT1'.
      SORT OUTLIST BY CNTOFJOBS DESCENDING.

  ENDCASE.





ENDFORM.                               " SORT_OUTLIST

*&---------------------------------------------------------------------*
*&      Form  WRITE_OUTLIST_HEADER
*&---------------------------------------------------------------------*
*       TOP-OF-PAGE f¨¹r Performance Liste                      *
*----------------------------------------------------------------------*
*
*
*----------------------------------------------------------------------*
FORM WRITE_PERFORMANCE_LIST_HEADER.
  IF LIST EQ SPACE. EXIT. ENDIF.
  INFO_EXISTS = 1.

  WRITE : / 'Jobselektion '(100).
  HIDE INFO_EXISTS.
* write : ' am '(102), date_last_dbread ,' um '(103) ,time_last_dbread.
* hide info_exists.
  SKIP.
  WRITE :/ 'Anzahl gelesener Jobs    '(132) , 27 NUMBER_OF_OUTLIST.
  HIDE INFO_EXISTS.


  WRITE : / 'Davon angezeigt '(104),  27 NUMBER_OF_VIEW RIGHT-JUSTIFIED.
  HIDE INFO_EXISTS.
  SKIP.

  WRITE :  'Anzeigekriterium         '(105).
  HIDE INFO_EXISTS.

  SKIP.
  NEW-LINE NO-SCROLLING.
  WRITE :  / 'Jobname :'(106), SELECTVIEW-JOBNAME.
  HIDE INFO_EXISTS.
  WRITE :40 'vom '(107), 45 SELECTVIEW-LOWDATE.
  HIDE INFO_EXISTS.
  IF SELECTVIEW-LOWTIME EQ NO_TIME.
    WRITE : 60 '00:00:00'.
  ELSE.
    WRITE :60 SELECTVIEW-LOWTIME.
  ENDIF.

  WRITE :75 'Aktiv '(108), 93 ':', SELECTVIEW-ACTIV.

  NEW-LINE NO-SCROLLING.
  WRITE : / 'Benutzer:'(109), SELECTVIEW-SDLUNAME.
  WRITE :40 'bis '(110), 45 SELECTVIEW-UPPDATE.

  IF SELECTVIEW-UPPTIME EQ NO_TIME.
    WRITE : 60 '23:59:59'.
  ELSE.
    WRITE :60 SELECTVIEW-UPPTIME.
  ENDIF.


  WRITE :75 'Fertig'(111), 93 ':' ,SELECTVIEW-READY.

  NEW-LINE NO-SCROLLING.
  WRITE : /75 'Abgebrochen'(112), 93 ':', SELECTVIEW-ABORT .

  SKIP.
  CASE  LISTVIEW.
    WHEN 'A'.
      ULINE AT /107(39).
      WRITE : /107 SY-VLINE,
        108(37) 'Jobstatistik '(029) CENTERED , 145 SY-VLINE .
      ULINE AT /01(145).
    WHEN 'S'.
      ULINE AT /61(39).
      WRITE : /61 SY-VLINE,
        62(37) 'Jobstatistik '(029) CENTERED , 99 SY-VLINE .
      ULINE AT /01(99).
    WHEN 'L'.
      SKIP.
      ULINE AT /01(107).

  ENDCASE.





  WRITE :
   /1 SY-VLINE,
    2(32) 'Jobname'(113), 34 SY-VLINE,
   35(12)  'Eingeplant'(114), 48 SY-VLINE,
   49(11)  'Status'(115), 61 SY-VLINE.
  HIDE INFO_EXISTS.
  CASE LISTVIEW.
    WHEN 'A'.
      WRITE:
       62(10) 'Start'(116)  ,
       83 SY-VLINE,
       84(10) 'Dauer    '(117)          , 95 SY-VLINE ,
       96(10) 'Versp#tung'(118), 107 SY-VLINE,
      108(12) 'Erfolgreiche   '(119), 121 SY-VLINE,
      122(10) 'mittlere  '(120), 133 SY-VLINE ,
      134(10) 'Laufzeit- '(131) , 145 SY-VLINE .
      HIDE INFO_EXISTS.
    WHEN 'L'.
      WRITE :
      62(10) 'Start'(116)  ,
      83 SY-VLINE,
      84(10) 'Dauer    '(117)          , 95 SY-VLINE ,
      96(10) 'Versp#tung'(118), 107 SY-VLINE.
      HIDE INFO_EXISTS.
    WHEN 'S'.
      WRITE :
       62(12) 'Erfolgreiche   '(119), 75 SY-VLINE,
       76(10) 'mittlere  '(120), 87 SY-VLINE ,
       88(10) 'Laufzeit- '(131) , 99 SY-VLINE .
      HIDE INFO_EXISTS.
  ENDCASE.


  WRITE:
  /1 SY-VLINE,
  34 SY-VLINE,
  35(12) 'd. Benutzer '(122) ,48 SY-VLINE,
  61 SY-VLINE.
  CASE LISTVIEW.
    WHEN 'A'.
      WRITE :
    62(10) 'am  '(123),
    74(8)  'Uhrzeit '(124), 83 SY-VLINE,
    84(10) 'in sec   '(030)          ,95 SY-VLINE ,
    96(10) 'in sec   '(030),107 SY-VLINE,
    108(12) 'Ausf¨¹hrungen'(125), 121 SY-VLINE,
    122(10) 'Laufzeit  '(126) , 133 SY-VLINE ,
    134(10) 'abweichung'(130)  ,
    145 SY-VLINE .
      HIDE INFO_EXISTS.
      ULINE AT /01(145).
    WHEN 'L'.
      WRITE :
     62(10) 'am  '(123),
     74(8)  'Uhrzeit '(124), 83 SY-VLINE,
      84(10) 'in sec   '(030)          ,95 SY-VLINE ,
     96(10) 'in sec   '(030),107 SY-VLINE.
      HIDE INFO_EXISTS.
      ULINE AT /01(107).
    WHEN 'S'.
      WRITE :
     62(12) 'Ausf¨¹hrungen'(125), 75 SY-VLINE,
     76(10) 'Laufzeit  '(126) , 87 SY-VLINE ,
     88(10) 'abweichung'(130)  ,
     99 SY-VLINE .
      HIDE INFO_EXISTS.
      ULINE AT /01(99).
  ENDCASE.

ENDFORM.                               " WRITE_PERFORMANCELIST_HEADER

*&---------------------------------------------------------------------*
*&      Form  SELC_PERFORMLIST
*&---------------------------------------------------------------------*
*       Selektion der angezeigten Jobs
*----------------------------------------------------------------------*
*  -->
*  <--
*----------------------------------------------------------------------*
FORM SELC_PERFORMLIST.


  CALL SCREEN 3020.

  IF OKCODE = 'RUN'.

    NUMBER_OF_VIEW = 0.

    LOOP AT OUTLIST.
      OUTLIST-SELFLAG = ' '.
      PERFORM SELECT_VIEW_OUTLIST TABLES OUTLIST USING SELECTVIEW.
      MODIFY OUTLIST INDEX SY-TABIX.
    ENDLOOP.

  ENDIF.


  SUBTRACT 1 FROM SY-LSIND.
  PERFORM WRITE_LIST.














ENDFORM.                               " SELC_PERFORMLIST

*&---------------------------------------------------------------------*
*&      Form  SELECT_VIEW_OUTLIST
*&---------------------------------------------------------------------*
*       Setzt das Selektionsflag in Abh#ngigkeit vom Selektions-
*       kriterium
*----------------------------------------------------------------------*
*  -->  view structure select_view
*  <--  outlist-selflag
*----------------------------------------------------------------------*
FORM SELECT_VIEW_OUTLIST TABLES H_OUTLIST STRUCTURE PERFBTCST
                         USING VIEW STRUCTURE SELECTVIEW.

* Jobname entspricht Selektion
  IF NOT ( H_OUTLIST-JOBNAME CP VIEW-JOBNAME ).
    EXIT.
  ENDIF.

  IF NOT ( H_OUTLIST-SDLUNAME CP VIEW-SDLUNAME ).
    EXIT.
  ENDIF.

  IF H_OUTLIST-STRTDATE > VIEW-UPPDATE OR
                                    H_OUTLIST-STRTDATE < VIEW-LOWDATE.
    EXIT.
  ELSE.
    IF H_OUTLIST-STRTDATE = VIEW-UPPDATE AND
       H_OUTLIST-STRTTIME > VIEW-UPPTIME .
      EXIT.
    ENDIF.

    IF H_OUTLIST-STRTDATE = VIEW-LOWDATE AND
       H_OUTLIST-STRTTIME < VIEW-LOWTIME .
      EXIT.
    ENDIF.
  ENDIF.

* Versp#tung entspricht Selektion
  IF H_OUTLIST-DELAY < VIEW-DELAY.

* Sometimes the sdlstrttm > strttime (BUG ???) to get this job,it will
*  be in the display independent of the view-delay

    IF  H_OUTLIST-DELAY GE 0 .
      EXIT.
    ENDIF.

  ENDIF.

* Dauer entspricht Selektion
  IF H_OUTLIST-DURATION < VIEW-DURATION.

* Sometimes the endtime < starttime BUG ??? to get this job,it will
* be in the display independent of the view-duration


    IF H_OUTLIST-DURATION GE 0.
      EXIT.
    ENDIF.

  ENDIF.

* Status entspricht Selektion

  CASE H_OUTLIST-STATUS .

    WHEN 'F'.
      IF VIEW-READY EQ SPACE .
        EXIT.
      ENDIF.

    WHEN 'A'.
      IF VIEW-ABORT EQ SPACE .
        EXIT.
      ENDIF.

    WHEN 'R'.
      IF VIEW-ACTIV EQ SPACE .
        EXIT.
      ENDIF.

  ENDCASE.

  H_OUTLIST-SELFLAG = 'X'.
  ADD 1 TO NUMBER_OF_VIEW .
ENDFORM.                               " SELECT_VIEW_OUTLIST

*&---------------------------------------------------------------------*
*&      Form  WRITE_PERFORMANCE_INFO_HEADER
*&---------------------------------------------------------------------*
*       Header for all Info for a special job.                         *
*----------------------------------------------------------------------*
*
*
*----------------------------------------------------------------------*
FORM WRITE_PERFORMANCE_INFO_HEADER.






ENDFORM.                               " WRITE_PERFORMANCE_INFO_HEADER

*&---------------------------------------------------------------------*
*&      Form  DESCRIBE_STATUS
*&---------------------------------------------------------------------*
*       Describe the status of a job with whole word.             *
*----------------------------------------------------------------------*
*  -->  status    Letter for the job status
*  <--  text      Word for the status.
*----------------------------------------------------------------------*
FORM DESCRIBE_STATUS USING STATUS TEXT.

  CASE STATUS.
    WHEN BTC_ABORTED.
      TEXT = 'Abgebrochen'(127).
    WHEN BTC_FINISHED.
      TEXT = 'Fertig     '(128).
    WHEN BTC_RUNNING.
      TEXT = 'Aktiv      '(129).
  ENDCASE.
ENDFORM.                               " DESCRIBE_STATUS






*&---------------------------------------------------------------------*
*&      Form  EDIT_SELEC_KRIT
*&---------------------------------------------------------------------*
*       Selektionskriterium f¨¹r die DB-Tabelle TBTCO #ndern.      *
*----------------------------------------------------------------------*
*
*
*----------------------------------------------------------------------*
FORM EDIT_SELEC_KRIT.

  BTCH1170  = JOBLIST_REFR_PARAM.

  BTCH1170-FROM_DATE = DATE_FIRST_DBREAD.
  BTCH1170-FROM_TIME = TIME_FIRST_DBREAD.

  CALL SCREEN 1170.


  SUBTRACT 1 FROM SY-LSIND.
  PERFORM WRITE_LIST.




ENDFORM.                               " EDIT_SELEC_KRIT

*&---------------------------------------------------------------------*
*&      Form  CHECK_DATE1_DATE2
*&---------------------------------------------------------------------*
*       Pr¨¹fen, ob date1 time1 kleiner date2 time2                     *
*       TRUE  rc = 0       False rc = 1
*----------------------------------------------------------------------*
*  -->  date1 time1 date2 time2    Datum und Zeit
*  <--  rc                         Returncode
*----------------------------------------------------------------------*
FORM CHECK_DATE1_DATE2  USING DATE1 TIME1 DATE2 TIME2 RC.

  RC = 0.
  IF DATE2 < DATE1.
    RC = 1.

  ELSE.
    IF DATE2 = DATE1 AND
       TIME2 < TIME1 .
      RC = 1.
    ENDIF.
  ENDIF.
ENDFORM.                               " CHECK_DATE1_DATE2

*&---------------------------------------------------------------------*
*&      Form  REFRESH_OUTLIST
*&---------------------------------------------------------------------*
*       Von der Datenbank neu Selektieren und outlist aktualisieren.
*----------------------------------------------------------------------*
*
*
*----------------------------------------------------------------------*
FORM REFRESH_OUTLIST USING DATE_FIRST TIME_FIRST DATE_LAST TIME_LAST
                           FLAG.
  REFRESH JOBLIST.
  CLEAR JOBLIST.


  PERFORM SET_PERFORMANCE_PARA USING DATE_FIRST TIME_FIRST
                                     DATE_LAST TIME_LAST
                                     JOBLIST_REFR_PARAM.

  CASE FLAG.
    WHEN 'R'.
      DATE_LAST_DBREAD = JOBLIST_REFR_PARAM-TO_DATE.
      TIME_LAST_DBREAD = JOBLIST_REFR_PARAM-TO_TIME.
      SELECTVIEW-UPPDATE = DATE_LAST_DBREAD.
      SELECTVIEW-UPPTIME = TIME_LAST_DBREAD.


    WHEN 'P'.
      DATE_FIRST_DBREAD = JOBLIST_REFR_PARAM-FROM_DATE.
      TIME_FIRST_DBREAD = JOBLIST_REFR_PARAM-FROM_TIME.
      SELECTVIEW-LOWDATE = DATE_FIRST_DBREAD.
      SELECTVIEW-LOWTIME = TIME_FIRST_DBREAD.

  ENDCASE.


  CALL FUNCTION 'BP_JOB_SELECT'
       EXPORTING
            JOBSELECT_DIALOG   = BTC_NO
            JOBSEL_PARAM_IN    = JOBLIST_REFR_PARAM
       IMPORTING
            JOBSEL_PARAM_OUT   = JOBLIST_REFR_PARAM
       TABLES
            JOBSELECT_JOBLIST  = JOBLIST
       EXCEPTIONS
            NO_JOBS_FOUND      = 1
            SELECTION_CANCELED = 2
            OTHERS             = 99.

  CASE SY-SUBRC.
    WHEN 0.
                                       " Jobliste erfolgreich erstellt
    WHEN 2.
*     Abbruch
      CHECK 1 EQ 0.                    " continue
  ENDCASE.

  LOOP AT OUTLIST WHERE STATUS = 'R' .

    CLEAR JOBLIST_AREA.
    CLEAR JOBLIST.
    CALL FUNCTION 'BP_JOB_READ'
         EXPORTING
              JOB_READ_JOBNAME  = OUTLIST-JOBNAME
              JOB_READ_JOBCOUNT = OUTLIST-JOBCOUNT
              JOB_READ_OPCODE   = 20   "All Jobdata
         IMPORTING
              JOB_READ_JOBHEAD  = JOBLIST_AREA
         TABLES
              JOB_READ_STEPLIST = STEPLIST
         EXCEPTIONS
              OTHERS            = 99.

    IF SY-SUBRC NE 0.  " The active job was deleted from tbtco
      DELETE OUTLIST.                  " Delete Job in outlist
      CHECK 1 EQ 0.
    ELSE.

      IF JOBLIST_AREA-STATUS NE 'R'.
       DELETE OUTLIST.  " The active job in outlist was finished/aborted
        MOVE JOBLIST_AREA TO JOBLIST.
        APPEND JOBLIST.    " the new data for this job append on joblist
      ENDIF.

    ENDIF.

  ENDLOOP.

  CLEAR DELTA_OUTLIST.
  REFRESH DELTA_OUTLIST.
  LOOP AT JOBLIST.
    MOVE-CORRESPONDING JOBLIST TO DELTA_OUTLIST.
    APPEND DELTA_OUTLIST.
  ENDLOOP.



  PERFORM PREPARE_LIST TABLES DELTA_OUTLIST.





  LOOP AT DELTA_OUTLIST.
    DELTA_OUTLIST-SELFLAG = ' '.
    PERFORM SELECT_VIEW_OUTLIST TABLES DELTA_OUTLIST USING SELECTVIEW.
    MOVE-CORRESPONDING DELTA_OUTLIST TO OUTLIST.
    APPEND OUTLIST.

  ENDLOOP.

  DESCRIBE TABLE OUTLIST LINES NUMBER_OF_OUTLIST.

ENDFORM.                               " REFRESH_OUTLIST

*&---------------------------------------------------------------------*
*&      Form  TIME_PLUS_MINUS
*&---------------------------------------------------------------------*
*       Bestimmt Zeitpunkt - und + 1 Sekunde                           *
*----------------------------------------------------------------------*
*  --> date time  Flag ( +/- 1 Sekunde )
*  <-- date time
*----------------------------------------------------------------------*
FORM TIME_PLUS_MINUS USING DATE TIME FLAG.

  CASE FLAG.
    WHEN '+'.
      IF TIME EQ '235959'.

        DATE = DATE + 1.
      ENDIF.
      TIME = TIME + 1.
    WHEN '-'.
      IF TIME EQ '000000'.

        DATE = DATE - 1.
      ENDIF.
      TIME = TIME - 1.
  ENDCASE.

ENDFORM.                               " TIME_PLUS_MINUS

*&---------------------------------------------------------------------*
*&      Form  RUN_RSBPCOLL
*&---------------------------------------------------------------------*
*       Aktualisieren der Jobstatisk ( mittlere Laufzeit bestimmen)
*----------------------------------------------------------------------*
*
*
*----------------------------------------------------------------------*
FORM RUN_RSBPCOLL.

  SUBMIT RSBPCOLL AND RETURN.

  REFRESH TIMETAB.
  CLEAR TIMETAB.

  PERFORM FILL_TIMETAB TABLES OUTLIST.

  LOOP AT OUTLIST.

    PERFORM CHECK_DIFF_AVGTIMSEC USING OUTLIST .
*{   REPLACE        ID0K927566                                        1
*\    WRITE OUTLIST TO OUTLIST INDEX SY-TABIX.
    MOVE OUTLIST TO OUTLIST.
*}   REPLACE

  ENDLOOP.

  SUBTRACT 1 FROM SY-LSIND.
  PERFORM WRITE_LIST.



ENDFORM.                               " RUN_RSBPCOLL


*&---------------------------------------------------------------------*
*&      Form  WRITE_INFO
*&---------------------------------------------------------------------*
*       Write Infos for a selected job                       *
*----------------------------------------------------------------------*
*
*
*----------------------------------------------------------------------*
FORM WRITE_INFO USING HOUTLIST STRUCTURE PERFBTCST.

  DATA : TEXT(11).

  WRITE : / 'Jobname   '(027), 25 ':', HOUTLIST-JOBNAME.
  WRITE : / 'Eingeplant durch User'(001) , 25 ':', HOUTLIST-SDLUNAME.




  SKIP.
  WRITE : / 'Eingeplant f¨¹r den'(002) ,25 ':'.
  WRITE : 27(10) HOUTLIST-SDLSTRTDT USING EDIT MASK '__.__.____'.
  WRITE :  'um'(003) ,42 HOUTLIST-SDLSTRTTM USING EDIT MASK '__:__:__'.
  WRITE : / 'Gestartet am'(004) ,25 ':'.
  WRITE : 27(10) HOUTLIST-STRTDATE USING EDIT MASK '__.__.____'.
  WRITE :  'um'(005) ,42 HOUTLIST-STRTTIME USING EDIT MASK '__:__:__'.

  SKIP.
  PERFORM DESCRIBE_STATUS USING HOUTLIST-STATUS TEXT.
  WRITE : / 'Status'(006) ,25 ':', TEXT.

  IF HOUTLIST-BTCSYSTEM EQ SPACE.
    WRITE : / 'Zielsystem  '(007),25 ':', 'OPTIONAL'(008).
  ELSE.
    WRITE : / 'Zielsystem  '(007),25 ':', HOUTLIST-BTCSYSTEM.
  ENDIF.

  WRITE : / 'Ausf¨¹hrendes System'(009) ,25 ':', HOUTLIST-BTCSYSREAX.
  SKIP.




  WRITE : / 'Jobklasse    '(010), 25 ':', HOUTLIST-JOBCLASS.

  IF HOUTLIST-PERIODIC EQ 'X'.
    WRITE : / 'Periodischer Job'(011), 25 ': JA '(013).
  ELSE.
    WRITE : / 'Periodischer Job'(012), 25 ': NEIN'(014).
  ENDIF.
  SKIP.
  IF HOUTLIST-STATUS NE BTC_RUNNING.
    WRITE : / 'Beendet am  '(015),25 ':'.
    WRITE : 27(10) HOUTLIST-ENDDATE USING EDIT MASK '__.__.____'.
    WRITE :  'um'(003),42  HOUTLIST-ENDTIME USING EDIT MASK '__:__:__'.
    WRITE : / 'Dauer   '(016),25 ':',HOUTLIST-DURATION, 's'.
  ENDIF.




  IF HOUTLIST-STATUS EQ BTC_RUNNING.
* Zur Sicherheit wird durchschnittliche Laufzeit und Versp#tung nochmal
* bestimmt.

    SELECT SINGLE * FROM BTCJSTAT
          WHERE JOBNAME = HOUTLIST-JOBNAME
           AND  LASTCHDATE = HOUTLIST-LASTCHDATE
           AND  LASTCHTIME = HOUTLIST-LASTCHTIME.

    IF SY-SUBRC = 0.
      HOUTLIST-AVGTIMSEC = BTCJSTAT-AVGTIMSEC.
      PERFORM CHECK_JOBDELAY USING HOUTLIST.

    ENDIF.

  ENDIF.

  WRITE : / 'Versp#tung '(017),25 ':', HOUTLIST-DELAY, 's'.
  WRITE : / 'mittlere Laufzeit'(018), 25 ':', HOUTLIST-AVGTIMSEC, 's'.

  IF HOUTLIST-STATUS EQ BTC_FINISHED.
    WRITE : / 'Abweichung'(019), 25 ':', HOUTLIST-DIFFTIMSEC , 's'.
  ENDIF.
  SKIP.
  IF HOUTLIST-LASTCHNAME NE SPACE.
    WRITE : / 'Letzte #nderung am  '(020) ,25 ':'.
    WRITE : 27(10) HOUTLIST-LASTCHDATE USING EDIT MASK '__.__.____'.
   WRITE : 'um'(003),42  HOUTLIST-LASTCHTIME USING EDIT MASK '__:__:__'.
    WRITE : / 'Ge#ndert durch '(021), 25 ':', HOUTLIST-LASTCHNAME.
  ENDIF.

  SKIP.

  WRITE: / 'Stepliste'.
  LOOP AT STEPLIST.
    IF STEPLIST-TYP EQ 'A'.
      WRITE : / 'Report         '(022),25 ':', STEPLIST-PROGRAM+0(45).
    ELSE.
  WRITE : / 'Externes Programm    '(023),25 ':', STEPLIST-PROGRAM+0(45).
    ENDIF.
  ENDLOOP.

ENDFORM.                               " WRITE_INFO
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_JOB_PROTOCOL
*&---------------------------------------------------------------------*
*       Read and diplay Job_protocol                            *
*----------------------------------------------------------------------*
* Read the job protocol for the selected job (outlist)
*
*----------------------------------------------------------------------*
FORM DISPLAY_JOB_PROTOCOL.


  CALL FUNCTION 'BP_JOBLOG_SHOW'
       EXPORTING
            JOBNAME  = OUTLIST-JOBNAME
            JOBCOUNT = OUTLIST-JOBCOUNT
       EXCEPTIONS
            OTHERS   = 99.




ENDFORM.                               " DISPLAY_JOB_PROTOCOL


* << Add by DGO
*---------------------------------------------------------------------*
*       FORM OPEN_FILE                                                *
*---------------------------------------------------------------------*
* Open file                                                           *
*---------------------------------------------------------------------*
FORM OPEN_FILE.
*  move '/var/SCC/global/BATCHLOG/joblog.txt' to w_file.
  CONCATENATE  '/var/SCC/global/BATCHLOG/' SY-SYSID 'joblog.txt'
      INTO W_FILE.
*{   REPLACE        ID0K927566                                        1
*\  OPEN DATASET W_FILE FOR OUTPUT IN TEXT MODE.
  OPEN DATASET W_FILE FOR OUTPUT IN TEXT MODE ENCODING DEFAULT .
*}   REPLACE

  IF SY-SUBRC NE 0.
    WRITE: / 'Error to open file :', W_FILE.
    EXIT.
  ENDIF.
ENDFORM.


*---------------------------------------------------------------------*
*       FORM TRANSFER_DATA_TO_FILE                                    *
*---------------------------------------------------------------------*
* Transfer job log data into a unix file                              *
*---------------------------------------------------------------------*
FORM TRANSFER_DATA_TO_FILE.
  TRANSFER 'Additional information (Job log) : ' TO W_FILE.
  TRANSFER '---------------------------------- ' TO W_FILE.
* title
*  move '| Time | Date   |MsgID| Text' to w_title.
  MOVE '| Time | Date   | Text' TO W_TITLE.
  TRANSFER W_TITLE TO W_FILE.
* contents of joblog
  LOOP AT I_JOBLOG.
    CLEAR S_WRITEFILE.
    MOVE-CORRESPONDING I_JOBLOG TO S_WRITEFILE.
    MOVE '|' TO S_WRITEFILE-SEPAR1.
    MOVE '|' TO S_WRITEFILE-SEPAR2.
    MOVE '|' TO S_WRITEFILE-SEPAR3.
*    move '|' to s_writefile-separ4.
    TRANSFER S_WRITEFILE TO W_FILE.
  ENDLOOP.
  IF SY-SUBRC EQ '4'.
    TRANSFER 'No additional information found' TO W_FILE.
  ENDIF.
ENDFORM.


*---------------------------------------------------------------------*
*       FORM READ_JOB_LOG                                             *
*---------------------------------------------------------------------*
* Read job log and save into an internal table I_JOBLOG               *
*---------------------------------------------------------------------*
FORM READ_JOB_LOG.
* Lit le log du job et le stocke dans la table interne I_JOBLOG
  REFRESH I_JOBLOG. CLEAR I_JOBLOG.

  CALL FUNCTION 'BP_JOBLOG_READ'
      EXPORTING
           CLIENT                = SY-MANDT
           JOBCOUNT              = OUTLIST-JOBCOUNT
*         joblog                =
           JOBNAME               = OUTLIST-JOBNAME
       TABLES
            JOBLOGTBL             = I_JOBLOG
     EXCEPTIONS
          CANT_READ_JOBLOG      = 1
          JOBCOUNT_MISSING      = 2
          JOBLOG_DOES_NOT_EXIST = 3
          JOBLOG_IS_EMPTY       = 4
          JOBLOG_NAME_MISSING   = 5
          JOBNAME_MISSING       = 6
          JOB_DOES_NOT_EXIST    = 7
          OTHERS                = 8.

ENDFORM.

* >> end dgo

*
*$*$--------- End of INCLUDE ZZZPEF01 ---------------------------$*$*
