*----------------------------------------------------------------------*
* PROGRAM ID           : ZMDM_MATERIAL_MASS_MVKE_MARA                  *
* PROGRAM TITLE        : Establish automated link between CP1, AP1, SQL*
* AUTHOR               : Geert Rutten                                  *
* DATE                 : 25/06/2013                                    *
* DEVELOPMENT ID       :                                               *
*                                                                      *
* CHANGE REQUEST NUMBER:  AD1K915892                                   *
*                                                                      *
* Program Description:  Download of EINE, EINA, A954, A924 (CR 197)    *
*                                                                      *
************************************************************************
REPORT ZMDM_MATERIAL_PURINF_ZPRO MESSAGE-ID yam_inf.

************************************************************************
*                   T Y P E - P O O L S                                *
************************************************************************
TYPE-POOLS: ibco2.

************************************************************************
*                   C O N S T A N T S                                  *
************************************************************************
CONSTANTS: gc_stat_dl  TYPE j_status  VALUE 'I0076',
           c_rec_l5(28)    TYPE c        VALUE 'ZMDM_MATERIAL_MASS_PRIC_ZPRO',
           gc_charx(1) TYPE c VALUE 'X',
           gc_vw(2)    TYPE c VALUE 'VW',
           c_all     TYPE c VALUE '*',    "generic filename shall select
           c_zpro     TYPE c VALUE 'ZMDM_MATERIAL_MASS_PRIC_ZPRO*'.

************************************************************************
*                  I N T E R N A L   T A B L E S                       *
************************************************************************


TABLES: MARA, MAKT, MVKE, MARC, EINA, EINE, A954.

TYPES: name_of_dir(1024)        TYPE c,
       name_of_file(260)        TYPE c.



TYPES: BEGIN OF TP_OUTPUT5,
        KNUMH LIKE A954-KNUMH,
        KSCHL LIKE A954-KSCHL,
        VKORG LIKE A954-VKORG,
        MATNR LIKE A954-MATNR,
        DATBI LIKE A954-DATBI,
        KBETR LIKE KONP-KBETR,
        KONWA LIKE KONP-KONWA,
       END OF TP_OUTPUT5.


DATA: IT_OUTPUT5 TYPE TABLE OF TP_OUTPUT5,
      WA_OUTPUT5 TYPE TP_OUTPUT5.

DATA: g_delfile    TYPE epspath,
      g_lin        TYPE i,
      g_numlin(3)  TYPE c.

DATA: BEGIN OF file_list OCCURS 100,
        dirname     TYPE name_of_dir,  " name of directory. (possibly
                                       " truncated.)
        name        TYPE name_of_file, " name of entry. (possibly
                                       " truncated.)
        errno(3)    TYPE c,
        errmsg(40)  TYPE c,
      END OF file_list.


DATA: BEGIN OF file,
        dirname     TYPE name_of_dir,  " name of directory. (possibly
                                       " truncated.)
        name        TYPE name_of_file, " name of entry. (possibly
                                       " truncated.)
        errno(3)    TYPE c,
        errmsg(40)  TYPE c,
      END OF file.
*------------------------------------------------------------------
* Variables
DATA: lt_viqmfe TYPE TABLE OF wqmfe,
      ls_viqmfe TYPE wqmfe,
      lt_viqmur TYPE TABLE OF wqmur,
      ls_viqmur TYPE wqmur,
      es_viqmel TYPE viqmel,
      lt_longtxt TYPE TABLE OF alm_me_longtext,
      ls_longtxt TYPE alm_me_longtext,
      lt_longtxt_item TYPE TABLE OF alm_me_longtext.

DATA  gv_werks TYPE werks.

DATA: lv_sttxt(40)  TYPE c.
DATA: lv_sttxtu(40)  TYPE c,
      lv_objnr_ord LIKE aufk-objnr.

DATA: BEGIN OF h_status_tab OCCURS 30.
        INCLUDE STRUCTURE jstat.
DATA: END OF h_status_tab.

DATA: lv_file(40) TYPE c,
      lv_kbetr    TYPE kbetr.


DATA: g_directory(25) TYPE c VALUE '/var/load/xxx/UK/read/',
      g_ofile         LIKE /sapdmc/lsoinp-filename,
      p_logsys        LIKE tbdlst-logsys.

DATA: et_longtext_seo TYPE TABLE OF bapi_alm_text_lines,
      ls_longtext_seo TYPE bapi_alm_text_lines,
      lv_lines TYPE i.



DATA: BEGIN OF gt_mat_c5 OCCURS 0,
        knumh      TYPE dd03l-fieldname,
        deli1      TYPE c,
        kschl      TYPE dd03l-fieldname,
        deli2      TYPE c,
        vkorg      TYPE dd03l-fieldname,
        deli3      TYPE c,
        matnr      TYPE dd03l-fieldname,
        deli4      TYPE c,
        datbi      TYPE dd03l-fieldname,
        deli5      TYPE c,
        kbetr      TYPE dd03l-fieldname,
        deli6      TYPE c,
        konwa      TYPE dd03l-fieldname,
      END OF gt_mat_c5.


DATA: BEGIN OF gt_mat5 OCCURS 0,
        knumh      TYPE knumh,
        deli1      TYPE c,
        kschl      TYPE kschl,
        deli2      TYPE c,
        vkorg      TYPE vkorg,
        deli3      TYPE c,
        matnr      TYPE matnr,
        deli4      TYPE c,
        datbi      TYPE datbi,
        deli5      TYPE c,
        kbetr(16)  TYPE c,
        deli6      TYPE c,
        konwa      TYPE konwa,
      END OF gt_mat5.


DATA: BEGIN OF searchpoints OCCURS 1,
          dirname     TYPE name_of_dir,  " name of directory.
          sp_name     TYPE name_of_file, " name of entry.
          sp_cs(40)   TYPE c,         " ContainsString pattern for name.
        END OF searchpoints.

FIELD-SYMBOLS: <gs_value>  TYPE ibco2_value_rec.


TABLES: qmel.
DATA:  lv_kdauf TYPE kdauf,
       lv_kdpos TYPE kdpos,
       lv_plnnr TYPE mpos-plnnr,
       lv_plnal TYPE mpos-plnal,
       lv_plnty TYPE mpos-plnty,
       lv_pstxt TYPE mpos-pstxt.
DATA:  et_return TYPE TABLE OF BAPIRET2.
DATA:  lt_texts        TYPE STANDARD TABLE OF bapi_alm_text.

************************************************************************
*       S E L E C T - O P T I O N S / P A R A M E T E R S              *
************************************************************************
SELECTION-SCREEN : BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.
SELECT-OPTIONS: s_matnr  FOR  mara-matnr.
SELECT-OPTIONS: s_vkorg  FOR  mvke-vkorg.
SELECT-OPTIONS: s_werks  FOR  marc-werks.

PARAMETERS:     p_day    DEFAULT '0'.
PARAMETERS:     p_mat    TYPE mara-mtart DEFAULT 'ZMAT'.

PARAMETERS:     l_filet5  LIKE rlgrap-filename
                    DEFAULT 'C:\SAP\material_ZPRO'.
SELECTION-SCREEN: END OF BLOCK b1.

* Comment
SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE text-002.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(72) text-c01.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(72) text-c02.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 1(72) text-c03.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK b2.



*- Initialization -----------------------------------------------------*
INITIALIZATION.

  CALL FUNCTION 'OWN_LOGICAL_SYSTEM_GET'
    IMPORTING
      own_logical_system             = p_logsys
    EXCEPTIONS
      own_logical_system_not_defined = 1
      OTHERS                         = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
         WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

************************************************************************
*       S T A R T - O F - S E L E C T I O N    E V E N T               *
************************************************************************
START-OF-SELECTION.

  lv_file = 'ZMDM_MATERIAL_MASS_PRIC_ZPRO*'.
  PERFORM delete_old_files USING lv_file.



  SELECT   a954~knumh a954~kschl a954~vkorg a954~matnr a954~datbi konp~kbetr konp~konwa
           INTO TABLE it_output5
           FROM a954
           inner join konp
           on a954~knumh EQ konp~knumh
           WHERE vkorg IN s_vkorg AND
                 matnr IN s_matnr AND
                 datbi = '99991231' AND
                 a954~kschl = 'ZPRO'
           ORDER BY a954~matnr a954~vkorg.

***



***

  LOOP AT it_output5 INTO wa_output5.
    MOVE-CORRESPONDING wa_output5 to gt_mat5.
*   gt_mat5-stprs = wa_output5-stprs.
    MOVE '|' TO: gt_mat5-deli1, gt_mat5-deli2, gt_mat5-deli3, gt_mat5-deli4, gt_mat5-deli5, gt_mat5-deli6.
    APPEND gt_mat5.
  ENDLOOP.

  FREE it_output5[].

  IF NOT gt_mat5[] IS INITIAL.
    PERFORM download_files.
  ENDIF.


*&---------------------------------------------------------------------*
*&      Form  get_details
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*



*&---------------------------------------------------------------------*
*&      Form  download_files
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM download_files.

  DATA: file TYPE string.
  data: lw_path(60) type c.
  data: lw_filename(60) type c.
  clear:  lw_path , lw_filename.

  PERFORM header_fill5.


  IF sy-batch = 'X'.

    REPLACE 'xxx' IN g_directory WITH p_logsys(3).

* Header
    CONCATENATE g_directory c_rec_l5 '_'  syst-datlo syst-timlo INTO g_ofile.

    OPEN DATASET g_ofile FOR OUTPUT IN TEXT MODE ENCODING DEFAULT.
    IF sy-subrc <> 0.
      WRITE: / text-e04, g_ofile.
      EXIT.
    else.
*---- Generate spool with newly posted record file
      split g_ofile at 'read/' into lw_path lw_filename .
      write: / 'FILES POSTED' color 5 , c_rec_l5+19(9) color 5.
      NEW-LINE.
      uline AT 1(50).
      write / lw_filename.
      SKIP 1.
    ENDIF.

    TRANSFER gt_mat_c5 TO g_ofile.
    LOOP AT gt_mat5.
      TRANSFER gt_mat5 TO g_ofile.
    ENDLOOP.

    CLOSE DATASET g_ofile.
    IF sy-subrc <> 0.
      WRITE: / text-e05, g_ofile.
      EXIT.
    ENDIF.



  ELSE.

    file = l_filet5.
    CONCATENATE file '_' syst-datlo syst-timlo '.txt' INTO file.

    CALL FUNCTION 'GUI_DOWNLOAD'
      EXPORTING
        filename                = file
        append                  = ' '
        filetype                = 'DAT'
        write_field_separator   = 'X'
      TABLES
        data_tab                = gt_mat_c5
      EXCEPTIONS
        file_write_error        = 1
        no_batch                = 2
        gui_refuse_filetransfer = 3
        invalid_type            = 4
        no_authority            = 5
        unknown_error           = 6
        header_not_allowed      = 7
        separator_not_allowed   = 8
        filesize_not_allowed    = 9
        header_too_long         = 10
        dp_error_create         = 11
        dp_error_send           = 12
        dp_error_write          = 13
        unknown_dp_error        = 14
        access_denied           = 15
        dp_out_of_memory        = 16
        disk_full               = 17
        dp_timeout              = 18
        file_not_found          = 19
        dataprovider_exception  = 20
        control_flush_error     = 21
        OTHERS                  = 22.

    CALL FUNCTION 'GUI_DOWNLOAD'
      EXPORTING
        filename                = file
        append                  = 'X'
        filetype                = 'DAT'
        write_field_separator   = 'X'
      TABLES
        data_tab                = gt_mat5
      EXCEPTIONS
        file_write_error        = 1
        no_batch                = 2
        gui_refuse_filetransfer = 3
        invalid_type            = 4
        no_authority            = 5
        unknown_error           = 6
        header_not_allowed      = 7
        separator_not_allowed   = 8
        filesize_not_allowed    = 9
        header_too_long         = 10
        dp_error_create         = 11
        dp_error_send           = 12
        dp_error_write          = 13
        unknown_dp_error        = 14
        access_denied           = 15
        dp_out_of_memory        = 16
        disk_full               = 17
        dp_timeout              = 18
        file_not_found          = 19
        dataprovider_exception  = 20
        control_flush_error     = 21
        OTHERS                  = 22.




  ENDIF.

ENDFORM.                    "download_file

*&---------------------------------------------------------------------*
*&      Form  header_fill
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM header_fill5.

  MOVE '|' TO: gt_mat_c5-deli1, gt_mat_c5-deli2, gt_mat_c5-deli3, gt_mat_c5-deli4, gt_mat_c5-deli5, gt_mat_c5-deli6.


  gt_mat_c5-knumh = 'KNUMH'.
  gt_mat_c5-kschl = 'KSCHL'.
  gt_mat_c5-vkorg = 'VKORG'.
  gt_mat_c5-matnr = 'MATNR'.
  gt_mat_c5-datbi = 'DATBI'.
  gt_mat_c5-kbetr = 'KBETR'.
  gt_mat_c5-konwa = 'KONWA'.
  APPEND gt_mat_c5.

ENDFORM.

*---------------------------------------------------------------------*
*&      Form  delete_old_files
*&---------------------------------------------------------------------*
*       delete files older then a week
*----------------------------------------------------------------------*
FORM delete_old_files USING lv_file.


  DATA: g_date    LIKE sy-datum,
        g_subrc   LIKE sy-subrc.

  g_date = sy-datum - p_day.
* get directory
  g_subrc = 0.
  REFRESH file_list.
  REFRESH searchpoints.

  searchpoints-dirname = g_directory.
  searchpoints-sp_name = c_all.
  searchpoints-sp_cs   = lv_file.
  APPEND searchpoints.

  LOOP AT searchpoints.
    PERFORM fill_file_list USING searchpoints-dirname
                                 searchpoints-sp_name
                                 searchpoints-sp_cs.
    g_subrc = sy-subrc.
  ENDLOOP.

  write: / 'FILES DELETED' color 6 , lv_file+19(9) color 6.
  NEW-LINE.
  uline AT 1(50).

  IF g_subrc <> 0 OR
     file_list[] IS INITIAL.
    IF SY-BATCH <> 'X'.
      WRITE: / text-e03.                "No files were selected
      EXIT.
    endif.
  ENDIF.

  IF file_list[] is initial.
    write / 'No old files to delete'.
  ENDIF.

* file must be older then 1 week.
  LOOP AT file_list.

    IF file_list-name+29(8) CO '0123456789'.      "MOD-001 * insert
      IF file_list-name+29(8) <= g_date.
        CONCATENATE file_list-dirname '/' file_list-name INTO g_delfile.
        DELETE DATASET g_delfile.
        IF sy-subrc = 0.
          write / file_list-name.
        ENDIF.
      ENDIF.
*** MOD-001 * begin insert ***
    ELSE.
*     New filename (with FAM code)
*      IF file_list-name+4(8) CO '0123456789'.
*        IF file_list-name+4(8) < g_date.
*          CONCATENATE file_list-dirname '/' file_list-name INTO g_delfile.
*          DELETE DATASET g_delfile.
*        ENDIF.
*      ENDIF.
    ENDIF.
*** MOD-001 * end insert ***

  ENDLOOP.
  SKIP 1.

ENDFORM.                    "delete_old_files

*&---------------------------------------------------------------------*
*&      Form  fill_file_list
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->A_DIR_NAME      text
*      -->A_GENERIC_NAME  text
*      -->A_MUST_CS       text
*----------------------------------------------------------------------*
FORM fill_file_list USING a_dir_name a_generic_name a_must_cs.

  CALL 'C_DIR_READ_FINISH'             " just to be sure
      ID 'ERRNO'  FIELD file_list-errno
      ID 'ERRMSG' FIELD file_list-errmsg.

  REPLACE 'xxx' IN a_dir_name WITH p_logsys(3).

  CALL 'C_DIR_READ_START' ID 'DIR'    FIELD a_dir_name
                          ID 'FILE'   FIELD a_generic_name
                          ID 'ERRNO'  FIELD file-errno
                          ID 'ERRMSG' FIELD file-errmsg.
  IF sy-subrc <> 0.
    sy-subrc = 4.
    EXIT.
  ENDIF.

  DO.
    CLEAR file.
    CALL 'C_DIR_READ_NEXT'
      ID 'NAME'   FIELD file-name
      ID 'ERRNO'  FIELD file-errno
      ID 'ERRMSG' FIELD file-errmsg.
    file-dirname = a_dir_name.

    IF sy-subrc <> 0.
      EXIT.
    ENDIF.

*   Does the filename contains the requested pattern?
*   Then store it, else forget it.
    IF a_must_cs CS '*'.
      IF file-name CP a_must_cs.
        MOVE-CORRESPONDING file TO file_list.
        APPEND file_list.
      ENDIF.
    ELSE.
      IF file-name EQ a_must_cs.
        MOVE-CORRESPONDING file TO file_list.
        APPEND file_list.
      ENDIF.
    ENDIF.
  ENDDO.

  CALL 'C_DIR_READ_FINISH'
      ID 'ERRNO'  FIELD file_list-errno
      ID 'ERRMSG' FIELD file_list-errmsg.
  IF sy-subrc <> 0.
    WRITE: / 'C_DIR_READ_FINISH', 'SUBRC', sy-subrc.
  ENDIF.

  sy-subrc = 0.

ENDFORM.                    "fill_file_list
