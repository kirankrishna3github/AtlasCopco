*&---------------------------------------------------------------------*
*& Report  ZALV_LIST1
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

report  zalv_list1.

* Data Declaration

types : begin of ty.

        include structure mara.

* For cell editing and displaying cell as push button

types : cellstyles type lvc_t_styl,

* For cell coloring

cellcolor type lvc_t_scol,

end of ty.

data: itab type standard table of ty,"Output Internal table

      i_fieldcat type standard table of lvc_s_fcat,"Field catalog

      wa type ty,

      w_variant type disvariant,

      w_layout type lvc_s_layo,"Layout structure

      w_cellcolor type lvc_s_scol, "For cell color

      w_style type lvc_s_styl, "cell editing and

      "displaying cell as push button

      o_docking type ref to cl_gui_docking_container,"Docking Container

      o_grid type ref to cl_gui_alv_grid. "Grid



field-symbols: <fs_fcat> type lvc_s_fcat.



select * from mara into corresponding fields of table itab up to 10 rows.

call screen 9000.



*&---------------------------------------------------------------------*

*& Module STATUS_9000 OUTPUT

*&---------------------------------------------------------------------*

* PBO

*----------------------------------------------------------------------*

module status_9000 output.

  if o_docking is initial.

    set pf-status 'ZSTATUS'. "GUI Status

    set titlebar 'ZTITLE'. "Title

* Creating Docking Container and grid

    perform create_object.

* Filling the fieldcatalog table

    perform create_fieldcat.

* Setting layout

    perform set_layout.

* Colouring a cell

    perform color_cell.

* Displaying cell as Push button

*    perform cell_button.

* Making a cell as non-editable in a column

*    perform cell_edit.

* Displaying the output

    perform display_output.

  endif.

endmodule. " STATUS_9000 OUTPUT

*&---------------------------------------------------------------------*

*& Module USER_COMMAND_9000 INPUT

*&---------------------------------------------------------------------*

* PAI

*----------------------------------------------------------------------*

module user_command_9000 input.

  data lv_ucomm type sy-ucomm.

  lv_ucomm = sy-ucomm.

  case lv_ucomm.

    when 'CANCEl' or 'EXIT'.

      perform free_objects.

      leave program.

    when 'BACK'.

      perform free_objects.

      set screen '0'.

      leave screen.

  endcase.

endmodule. " USER_COMMAND_9000 INPUT

*&---------------------------------------------------------------------*

*& Form free_objects

*&---------------------------------------------------------------------*

* Free Objects

*----------------------------------------------------------------------*

form free_objects .

  call method o_grid->free
    exceptions
      cntl_error        = 1
      cntl_system_error = 2
      others            = 3.

  if sy-subrc <> 0.

    message id sy-msgid type sy-msgty number sy-msgno

    with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.

  endif.

  call method o_docking->free
    exceptions
      cntl_error        = 1
      cntl_system_error = 2
      others            = 3.

  if sy-subrc <> 0.

    message id sy-msgid type sy-msgty number sy-msgno

    with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.

  endif.

endform. " free_objects

*&---------------------------------------------------------------------*

*& Form create_object

*&---------------------------------------------------------------------*

* Creating Docking Container and grid

*----------------------------------------------------------------------*

form create_object .

* Creating Docking Container

  create object o_docking
    exporting
      ratio = '95'.

  if sy-subrc eq 0.

* Creating Grid

    create object o_grid
      exporting
        i_parent = o_docking.

  endif.

endform. " create_object

*&---------------------------------------------------------------------*

*& Form create_fieldcat

*&---------------------------------------------------------------------*

* Filling the fieldcatalog table

*----------------------------------------------------------------------*

form create_fieldcat .

* Filling the fieldcatalog table

  call function 'LVC_FIELDCATALOG_MERGE'
    exporting
      i_structure_name       = 'MARA'
    changing
      ct_fieldcat            = i_fieldcat
    exceptions
      inconsistent_interface = 1
      program_error          = 2
      others                 = 3.

endform. " create_fieldcat

*&---------------------------------------------------------------------*

*& Form set_layout

*&---------------------------------------------------------------------*

* Setting layout

*----------------------------------------------------------------------*

form set_layout .

  w_variant-report = sy-repid.

* Setting layout

  w_layout-stylefname = 'CELLSTYLES' ."cell-push button and edit

  w_layout-ctab_fname = 'CELLCOLOR'."For cell coloring

endform. " set_layout

*&---------------------------------------------------------------------*

*& Form color_cell

*&---------------------------------------------------------------------*

* Colouring a cell

*----------------------------------------------------------------------*

form color_cell .

* Colouring a cell

  clear w_cellcolor.

  w_cellcolor-fname = 'ERSDA'.

  w_cellcolor-color-col = '5'.

  w_cellcolor-color-int = '1'.

  w_cellcolor-color-inv = '1'.

  append w_cellcolor to wa-cellcolor.

  modify itab from wa index 7 transporting cellcolor.

endform. " color_cell

*&---------------------------------------------------------------------*

*& Form cell_button

*&---------------------------------------------------------------------*

* Displaying cell as Push button

*----------------------------------------------------------------------*

form cell_button .

* Displaying cell as Push button

  clear w_style.

  w_style-fieldname = 'ERNAM' .

  w_style-style = cl_gui_alv_grid=>mc_style_button .

  append w_style to wa-cellstyles.

  modify itab from wa index 1 transporting cellstyles.

endform. " cell_button

*&---------------------------------------------------------------------*

*& Form cell_edit

*&---------------------------------------------------------------------*

* Making a cell as non-editable in a column

*----------------------------------------------------------------------*

form cell_edit .

  loop at i_fieldcat assigning <fs_fcat>.

    case <fs_fcat>-fieldname.

      when 'ERNAM'.

* Making a column as Editable

        <fs_fcat>-edit = 'X'.

    endcase.

  endloop.

* Making a particular cell as non-editable and other editable. Similarly we can make a

* particular cell as non-editable based on some condition.

  clear w_style.

  w_style-fieldname = 'ERNAM'.

  w_style-style = cl_gui_alv_grid=>mc_style_disabled.

  refresh wa-cellstyles.

  append w_style to wa-cellstyles.

  modify itab from wa index 3 transporting cellstyles.

endform. " cell_edit

*&---------------------------------------------------------------------*

*& Form display_output

*&---------------------------------------------------------------------*

* Displaying the output

*----------------------------------------------------------------------*

form display_output .

* Displaying the output

  call method o_grid->set_table_for_first_display
    exporting
      is_variant                    = w_variant
      i_save                        = 'A'
      is_layout                     = w_layout
    changing
      it_outtab                     = itab
      it_fieldcatalog               = i_fieldcat
    exceptions
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      others                        = 4.

  if sy-subrc <> 0.

    message id sy-msgid type sy-msgty number sy-msgno

    with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.

  endif.

endform. " display_output
