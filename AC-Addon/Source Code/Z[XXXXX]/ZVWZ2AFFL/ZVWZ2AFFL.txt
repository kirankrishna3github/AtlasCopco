*&---------------------------------------------------------------------*
*& Report  ZVWZ2AFFL
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  ZVWZ2AFFL.
* Report analysiert die AFFL auf doppelte Eintr#ge.
* wenn Test = space wird der jeweils erste doppelte Eintrag
* gel#scht
*  siehe auch Problem 64473 1999
*  Ursache f¨¹r den Fehlerfall bisher ungekl#rt

tables: caufv, affl.
DATA: BEGIN OF caufv_tab OCCURS 0,
    aufpl LIKE caufv-aufpl,
    AUFNR LIKE AFIH-AUFNR,
    autyp LIKE caufv-autyp,
END OF caufv_tab.
DATA: BEGIN OF affl_tab OCCURS 0,
    aufpl LIKE caufv-aufpl,
    aplzl LIKE affl-aplzl,
END OF affl_tab.
data: H_aufpl like affl-aufpl.
data:  H_index like sy-tabix.
data:  x       like sy-tabix.
data:  y       like sy-tabix.
data:  z       like sy-tabix.
data: affl_del_aufpl like affl-aufpl.
data: affl_del_aplzl like affl-aplzl.


SELECT-OPTIONS:
  S_ORDER FOR caufv-AUFNR.
Parameters: test default 'X'.

SELECT aufpl aufnr autyp FROM caufv appending corresponding fields of
                                              TABLE caufv_TAB where
                                             ( AUTYP = 30  and
                                               AUFNR IN S_ORDER ) OR
                                             ( AUTYP = 20  and
                                               AUFNR IN S_ORDER ).

CHECK NOT CAUFV_TAB[] is initial.

sort caufv_tab by aufpl.

SELECT * FROM affl                 for all entries in caufv_tab
                                   where  aufpl = caufv_tab-aufpl.
  affl_tab-aufpl = affl-aufpl.
  affl_tab-aplzl = affl-aplzl.
  append affl_tab.
endselect.

sort affl_tab by aufpl aplzl.

loop at affl_tab.
  affl_del_aufpl = affl_tab-aufpl.
  affl_del_aplzl = affl_tab-aplzl.
  H_aufpl = affl_tab-aufpl.
  H_index = sy-tabix + 1.
  read table affl_tab index h_index.
  if sy-subrc = 0.
    if affl_tab-aufpl = H_aufpl.
      z = z + 1.
      read table caufv_tab with key aufpl = affl_tab-aufpl
                                         binary search.
      write: / z, caufv_tab-aufnr, affl_tab-aufpl.
      if test is initial.
        delete  from affl  where aufpl = affl_del_aufpl
                           and   aplzl = affl_del_aplzl.
        if sy-subrc = 0.
          write : / '======> deleted: ', affl_del_aufpl, affl_del_aplzl.
        endif.
      endif.
    endif.
  endif.
endloop.

describe table affl_tab lines x.
describe table caufv_tab lines y.
uline.
write: / 'AFFL' , x.
write: / 'CAUFV' , y.
write: / 'corrupt Records' , z.

*Selection text£º
*S_ORDER:D       .
