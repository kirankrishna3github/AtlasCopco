REPORT ZAL_ABAP message-id 26 line-size 255
no standard page heading.
* YBO_LinkToIQ9.
PARAMETER DOWNLOAD(1) DEFAULT 'N' lower case. "N-svr,Y-clnt
PARAMETER EXECMODE(1) DEFAULT 'B' lower case. "D-dlg,B-btch
PARAMETER OUT_DIR(48) DEFAULT "output file dir
*'/var/load/CP1/UK/read' LOWER CASE.
'/var/load/xxx/UK/read' LOWER CASE.
PARAMETER IN_DIR(48) DEFAULT "input file dir
*'/var/load/CP1/UK/read' LOWER CASE.
'/var/load/xxx/UK/read' LOWER CASE.

PARAMETER P_DF_VK(40) DEFAULT "ABAP data flow object key
'' lower case.
PARAMETER P_DI_GEN(40) DEFAULT "DI version that generated ABAP
'' lower case.

*** Machine generated ABAP. Do not modify.            ***
*** # Copyright Business Objects S.A.  All rights reserved. ***
*
* Date Time:
*    06/09/15 03:53:32
* SAP used for generated this ABAP:
*    Release: 701
*    Host   : 10.25.3.26
*
* ABAP Dataflow Name:
*    DF_SDMM_R3_MachineStock
* ABAP Dataflow comments:
*    SAP source: EQBS, JEST, EQUI, TJ02T, T001W
* ABAP program name in SAP:
*    YBO_LINKTOIQ9
* Generated ABAP file name:
*    D:/Data/SAPLogistics/PRD/ABAP/YBO_LinkToIQ9
TABLES EQBS.
TABLES JEST.
TABLES EQUI.
TABLES T001W.

DATA: begin of ITAB5 occurs 0,
MANDT(3) TYPE C,
EQUNR(18) TYPE C,
KDAUF(10) TYPE C,
KDPOS(6) TYPE N,
B_WERK(4) TYPE C,
B_LAGER(4) TYPE C,
SERNR(18) TYPE C,
MATNR(18) TYPE C,
ERDAT TYPE D,
OBJNR(22) TYPE C,
STAT(5) TYPE C,
LBBSA(2) TYPE C.
DATA: end of ITAB5.

data: append_flag(1) value ' ',
      cntbuf type i,
      delimleng type i.

CONSTANTS C_DF_VK(40) VALUE '7929'.
CONSTANTS C_DI_GEN(40) VALUE '12.2.2.3'.
DATA WARN_MSG(50).
DATA: gv_directory     TYPE epsdirnam  VALUE '/var/load/xxx/UK/read/',
      gv_logsys        like tbdlst-logsys.

start-of-selection.
* Logical system
  CALL FUNCTION 'OWN_LOGICAL_SYSTEM_GET'
    IMPORTING
      own_logical_system             = gv_logsys
    EXCEPTIONS
      own_logical_system_not_defined = 1
      OTHERS                         = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE 'E' NUMBER sy-msgno
         WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    STOP.
  ENDIF.
  REPLACE 'xxx' IN out_dir WITH gv_logsys(3).
  REPLACE 'xxx' IN in_dir WITH gv_logsys(3).



PERFORM FORM5.
PERFORM FORM6.
FREE ITAB5.

end-of-selection.

CLEAR WARN_MSG.

IF NOT P_DF_VK IS INITIAL.
  IF P_DF_VK <> C_DF_VK.
     CONCATENATE '$$Warning$'
                 C_DF_VK
                 '$' INTO WARN_MSG.
  ENDIF.
ENDIF.
IF NOT P_DI_GEN IS INITIAL.
  IF P_DI_GEN <> C_DI_GEN.
     IF WARN_MSG IS INITIAL.
       CONCATENATE '$$Warning$$'
                   C_DI_GEN
                   INTO WARN_MSG.
     ELSE.
       CONCATENATE WARN_MSG
                   C_DI_GEN
                   INTO WARN_MSG.
     ENDIF.
  ENDIF.
ENDIF.

IF NOT WARN_MSG IS INITIAL.
  IF EXECMODE = 'D'.
    WRITE WARN_MSG.
    NEW-LINE.
  ELSE.
    MESSAGE S000 with WARN_MSG.
  ENDIF.
ENDIF.


write  '* Program Complete *'.
write  '# Copyright Business Objects S.A.  All rights reserved.'
.

FORM FORM5.
DATA ALTMP1(3) TYPE C.
DATA ALTMP2(18) TYPE C.
DATA ALTMP3(10) TYPE C.
DATA ALTMP4(6) TYPE N.
DATA ALTMP5(4) TYPE C.
DATA ALTMP6(4) TYPE C.
DATA ALTMP7(18) TYPE C.
DATA ALTMP8(18) TYPE C.
DATA ALTMP9 TYPE D.
DATA ALTMP10(22) TYPE C.
DATA ALTMP11(5) TYPE C.
DATA ALTMP12(2) TYPE C.

DATA EQBS9MANDT LIKE EQBS-MANDT.
DATA EQBS9EQUNR LIKE EQBS-EQUNR.
DATA EQBS9KDAUF LIKE EQBS-KDAUF.
DATA EQBS9KDPOS LIKE EQBS-KDPOS.
DATA EQBS9B_WERK LIKE EQBS-B_WERK.
DATA EQBS9B_LAGER LIKE EQBS-B_LAGER.
DATA EQUI9SERNR LIKE EQUI-SERNR.
DATA EQUI9MATNR LIKE EQUI-MATNR.
DATA EQUI9ERDAT LIKE EQUI-ERDAT.
DATA EQUI9OBJNR LIKE EQUI-OBJNR.
DATA JEST9STAT LIKE JEST-STAT.
DATA EQBS9LBBSA LIKE EQBS-LBBSA.
DATA T001W9EKORG LIKE T001W-EKORG.
DATA JEST9INACT LIKE JEST-INACT.
DATA T001W9WERKS LIKE T001W-WERKS.
DATA EQUI9EQUNR LIKE EQUI-EQUNR.
DATA JEST9OBJNR LIKE JEST-OBJNR.



SELECT
  EQBS9~MANDT
  EQBS9~EQUNR
  EQBS9~KDAUF
  EQBS9~KDPOS
  EQBS9~B_WERK
  EQBS9~B_LAGER
  EQUI9~SERNR
  EQUI9~MATNR
  EQUI9~ERDAT
  EQUI9~OBJNR
  JEST9~STAT
  EQBS9~LBBSA
  T001W9~EKORG
  JEST9~INACT
  T001W9~WERKS
  EQUI9~EQUNR
  JEST9~OBJNR
into (EQBS9MANDT,
  EQBS9EQUNR,
  EQBS9KDAUF,
  EQBS9KDPOS,
  EQBS9B_WERK,
  EQBS9B_LAGER,
  EQUI9SERNR,
  EQUI9MATNR,
  EQUI9ERDAT,
  EQUI9OBJNR,
  JEST9STAT,
  EQBS9LBBSA,
  T001W9EKORG,
  JEST9INACT,
  T001W9WERKS,
  EQUI9EQUNR,
  JEST9OBJNR)
FROM JEST AS JEST9
 INNER JOIN EQUI AS EQUI9
 ON ( JEST9~OBJNR = EQUI9~OBJNR )
 INNER JOIN EQBS AS EQBS9
 ON ( EQBS9~EQUNR = EQUI9~EQUNR )
 INNER JOIN T001W AS T001W9
 ON ( EQBS9~B_WERK = T001W9~WERKS )
WHERE ( JEST9~STAT IN ('I0184',
'I0076')
 AND ( ( JEST9~INACT = ' ' )
 AND T001W9~EKORG IN ('CN01',
'CN04',
'HK01',
'RU01') ) ).
ALTMP1 = EQBS9MANDT.
ALTMP2 = EQBS9EQUNR.
ALTMP3 = EQBS9KDAUF.
ALTMP4 = EQBS9KDPOS.
ALTMP5 = EQBS9B_WERK.
ALTMP6 = EQBS9B_LAGER.
ALTMP7 = EQUI9SERNR.
ALTMP8 = EQUI9MATNR.
ALTMP9 = EQUI9ERDAT.
ALTMP10 = EQUI9OBJNR.
ALTMP11 = JEST9STAT.
ALTMP12 = EQBS9LBBSA.
 move ALTMP1 to ITAB5-MANDT.
 move ALTMP2 to ITAB5-EQUNR.
 move ALTMP3 to ITAB5-KDAUF.
 move ALTMP4 to ITAB5-KDPOS.
 move ALTMP5 to ITAB5-B_WERK.
 move ALTMP6 to ITAB5-B_LAGER.
 move ALTMP7 to ITAB5-SERNR.
 move ALTMP8 to ITAB5-MATNR.
 move ALTMP9 to ITAB5-ERDAT.
 move ALTMP10 to ITAB5-OBJNR.
 move ALTMP11 to ITAB5-STAT.
 move ALTMP12 to ITAB5-LBBSA.
 append ITAB5.
 cntbuf = cntbuf + 1.
 if download = 'N'.
  if cntbuf > 5000.
    perform FORM6.
    clear cntbuf.
    refresh ITAB5.
    append_flag = 'A'.
  endif.
 endif.
ENDSELECT.
ENDFORM.

FORM FORM6.
data: outfile(128), ldfile(50).
ldfile = 'EQBS_EQUI_JEST_TJ02T'.
concatenate out_dir ldfile into outfile
  separated by '/'.
data  dlmtlen type i value '1'.
data xdlmtlen type i value '1'.
data:
  ht(1) type c,
  xht(1) type x,
  conv type ref to cl_abap_conv_in_ce.
xht = '7F'.
conv = cl_abap_conv_in_ce=>create(
  encoding = '4110'
  input = xht
).
call method conv->read(
  exporting n    = xdlmtlen
  importing data = ht
            len = dlmtlen
).
data return_code type i.
 perform write_delimited_file
           tables   ITAB5
           using    outfile
                    append_flag
                    ht
                    dlmtlen
                    download
           changing return_code.

  case return_code.
    when 1.
      IF EXECMODE = 'D'.
        WRITE: /5 'No line selected'.
      ELSE.
        MESSAGE E098.
      ENDIF.
    when 2.
      IF EXECMODE = 'D'.
        WRITE: /5 'Open File Error -- ', 25 OUTFILE.
      ELSE.
        MESSAGE  E107 WITH OUTFILE.
      ENDIF.
    when 3.
      IF EXECMODE = 'D'.
        WRITE: /5 'Data exceed length limit (8192) '.
      ELSE.
        MESSAGE  E000 WITH
             'Data exceed length limit (8192) '.
      ENDIF.
    when 4.
      IF EXECMODE = 'D'.
        WRITE: /5 'Call function WS_DOWNLOAD error'.
      ELSE.
        MESSAGE  E000 WITH
             'Call function WS_DOWNLOAD error'.
      ENDIF.
  endcase.
ENDFORM.

FORM SUBSTRING USING SRC BEG LEN CHANGING RET.

DATA: VA1 TYPE I.
DATA: VA2 TYPE I.
DATA: VA3 TYPE I.

VA3 = STRLEN( SRC ).

IF  BEG = 0.   VA1 = 0.
ELSE.
  IF  BEG < 0.
    VA1 = VA3 + BEG.
    IF  VA1 < 0.   VA1 = 0.
    ENDIF.
  ELSE.          VA1 = BEG - 1.
  ENDIF.
ENDIF.

IF  LEN < 0.   VA2 = 0.
ELSE.          VA2 = VA3 - VA1.
ENDIF.

IF  VA2 > LEN. VA2 = LEN.
ENDIF.

IF  VA2 < 1.   MOVE ''           TO RET.
ELSE.          MOVE SRC+VA1(VA2) TO RET.
ENDIF.

ENDFORM.

form write_delimited_file
           tables   datatab
           using    file
                    append
                    delimit
                    dlength
                    dwnload
          changing rc.

  data: type1,
        appd(1),
        temp(32),
        time1(8),
        date1(10),
        output(8192),
        rcount type i,
        offset type i,
        tablen type i,
        maxlen type i value '8192'.

  data: begin of clientab occurs 0,
             output(8192),
          end of clientab.

  field-symbols: <f>.
  field-symbols <delim1>.
  data delim2(16).
  data l_filename type string.

  appd = append.
  if appd is not initial.
     appd = 'X'.
  endif.
  move file to l_filename.
  describe table datatab lines tablen.


  if dwnload = 'Y'.
     clear clientab. refresh clientab.
     rcount = 0.
  else.
     if appd = space.
         open dataset file for output in text mode ENCODING
UTF-8.
     else.
         open dataset file for appending in text mode ENCODING
UTF-8.
     endif.
     if sy-subrc <> 0.
         rc = 2. exit.
     endif.
  endif.

  loop at datatab.
    clear: tablen, offset, output.
    do.
      assign component sy-index of
         structure datatab to <f>.
      if sy-subrc <> 0. exit. endif.
      if sy-index > 1.
         assign delimit(dlength) TO <delim1> CASTING TYPE C.
         delim2 = <delim1>.
         write delim2(dlength) to output+offset(dlength).
         add dlength to offset.
      endif.

      describe field <f> type type1.

      if type1 = 'I' or type1 = 'N'.
          type1 = 'P'.
      endif.

      case type1.
        when 'D'.
          if <f> = '00000000'.
             <f> = ' '.
          else.
             move <f> to time1.
             assign time1 to <f>.
          endif.
        when 'F'.
          if <f> = '0.0'.
            temp = '0.0'.
          else.
             write <f> to temp exponent 0.
          endif.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
        when 'P'.
          if <f> < 0.
             write '-' to output+offset(1).
             add 1 to offset.
             <f> = <f> * ( -1 ).
          endif.
          move <f> to temp.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
      endcase.

      sy-fdpos = strlen( <f> ).

      tablen = offset + sy-fdpos.
      if tablen > maxlen.
         rc = 3. exit.
      endif.
      write <f> to output+offset(sy-fdpos).
      add sy-fdpos to offset.
    enddo.

    if dwnload = 'Y'.
       clientab-output = output.
       append clientab.
       rcount = rcount + 1.
       if rcount >= 50.
          SY-BATCH = SPACE.
          CALL FUNCTION 'GUI_DOWNLOAD'
            EXPORTING
              FILENAME = l_filename
              FILETYPE = 'ASC'
              CODEPAGE = '4110'
              APPEND   = appd
              WRITE_FIELD_SEPARATOR = 'X'
*            IMPORTING
*              FILELENGTH =
            TABLES
              DATA_TAB = clientab
            EXCEPTIONS
              OTHERS = 1.
          if sy-subrc <> 0.
             rc = 4.
          endif.
          clear clientab. refresh clientab.
          rcount = 0. appd = 'A'.
       endif.
    else.
       transfer output to file.
    endif.
  endloop.

  if dwnload = 'Y'.
       SY-BATCH = SPACE.
       CALL FUNCTION 'GUI_DOWNLOAD'
         EXPORTING
           FILENAME = l_filename
           FILETYPE = 'ASC'
              CODEPAGE = '4110'
           APPEND   = appd
           WRITE_FIELD_SEPARATOR = 'X'
*         IMPORTING
*           FILELENGTH =
         TABLES
           DATA_TAB = clientab
         EXCEPTIONS
           OTHERS = 1.
          if sy-subrc <> 0.
             rc = 4.
          endif.
  else.
       close dataset file.
  endif.
endform.
