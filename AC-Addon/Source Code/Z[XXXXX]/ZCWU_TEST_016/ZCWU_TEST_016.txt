*&---------------------------------------------------------------------*
*& Report  ZCWU_TEST_016
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  zcwu_test_016  MESSAGE-ID 02.

TYPES:
       abaplist_table TYPE TABLE OF abaplist,
       BEGIN OF listpattern,
         name(5),
         startline TYPE i,
         endline   TYPE i,
       END OF listpattern,
       listpatterntab TYPE TABLE OF listpattern WITH KEY name,
       BEGIN OF textrow,
         text(255),
       END OF textrow,
       BEGIN OF listpatterntrace,
         classified TYPE TABLE OF textrow WITH DEFAULT KEY,
         patterns   TYPE listpatterntab,
       END OF listpatterntrace,
       BEGIN OF rowinfo,
         hascheckbox,
         checkboxset,
         alert,
       END OF rowinfo,
       BEGIN OF columninfo,
         column      TYPE i,
         leng        TYPE i,
         header(255) TYPE c,
       END OF columninfo,
       BEGIN OF tableinfo,
         rows    TYPE i,
         columns TYPE i,
         it_lable      TYPE TABLE OF textrow WITH DEFAULT KEY,
         it_columninfo TYPE TABLE OF columninfo WITH DEFAULT KEY,
         it_rowinfo    TYPE TABLE OF rowinfo WITH DEFAULT KEY,
       END OF tableinfo,
       BEGIN OF treeinfo,
         name(80)      TYPE c,
         expanded      TYPE c,
         isnode        TYPE c,
         level         TYPE i,
       END OF treeinfo,
       treeinfotab TYPE TABLE OF treeinfo WITH DEFAULT KEY,
       BEGIN OF listinfo,
         elementtype,
         lable(80),
         tableinfo TYPE tableinfo,
         it_treeinfo  TYPE TABLE OF treeinfo WITH DEFAULT KEY,
         it_text      TYPE TABLE OF textrow WITH DEFAULT KEY,
       END OF listinfo.

TYPE-POOLS: slist, abap.

* ABAPLIST_functions: TABLES / EXPORTPARAMETER alte Versionen
DATA: list_description_v1 TYPE slist_listds_v1.
DATA: list_pages_v1       LIKE pageds1    OCCURS 0 WITH HEADER LINE.
DATA: list_lines_v1       TYPE slist_listline_v1
                                          OCCURS 0 WITH HEADER LINE.

START-OF-SELECTION.
   SUBMIT SAPLPRGN_TREE USING selection-SCREEN 121 VIA SELECTION-SCREEN.

*  DATA: print_parameters TYPE pri_params,
*        list_object TYPE STANDARD TABLE OF abaplist.
*
*  SUBMIT zcwu_alv_color WITH cb_col = 'X' EXPORTING LIST TO MEMORY AND RETURN.
*
*  CALL FUNCTION 'LIST_FROM_MEMORY'
*    TABLES
*      listobject = list_object
*    EXCEPTIONS
*      not_found  = 1
*      OTHERS     = 2.
*  IF sy-subrc <> 0.
*    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*  ENDIF.
*
*  UPDATE afih SET iphas = '2'
*     WHERE aufnr = '004000000035'.
*
**    CALL FUNCTION 'WRITE_LIST'
**      EXPORTING
**        WRITE_ONLY       = ''
**      TABLES
**        listobject       = list_object
***     EXCEPTIONS
***       EMPTY_LIST       = 1
***       OTHERS           = 2
**              .
**    IF sy-subrc <> 0.
*** MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
***         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
**    ENDIF.
*  DATA: list_text TYPE char1024 OCCURS 10 WITH HEADER LINE.
*  CALL FUNCTION 'LIST_TO_TXT'
**     EXPORTING
**       LIST_INDEX               = -1
*    TABLES
*      listtxt                  = list_text
*      listobject               = list_object
*    EXCEPTIONS
*      empty_list               = 1
*      list_index_invalid       = 2
*      OTHERS                   = 3 .
*  IF sy-subrc <> 0.
*    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*           WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*  ENDIF.
*
*  DATA: gt_text TYPE char1024 OCCURS 10 WITH HEADER LINE,
*        moff TYPE i.
*  LOOP AT list_text.
*    SPLIT list_text AT cl_abap_char_utilities=>newline
*      INTO TABLE gt_text.
*  ENDLOOP.
*
*  LOOP AT gt_text.
*    FIND '|' IN gt_text MATCH OFFSET moff.
*    IF moff < 0.
*      DELETE gt_text.
*    ELSE.
*      WRITE gt_text.
*    ENDIF.
*  ENDLOOP.
**   TYPES:
*  DATA:gt_city TYPE  zcwu_city OCCURS 10 WITH HEADER LINE.
*
*  LOOP AT gt_text.
*    SPLIT gt_text AT '|' INTO
*      gt_city-mandt gt_city-cityid  gt_city-clevel
*      gt_city-description.
*    APPEND gt_city.
**      WRITE: gt_city.
*  ENDLOOP.
*
*  WRITE: 'End'.
*
*  DATA: ls_mara TYPE mara.
*  SELECT SINGLE *
*    FROM mara
*    INTO ls_mara
*    WHERE matnr = '000000010000100001'
*      AND laeda = '00000000'.
*
*  WRITE: 'vpsta = :' ,ls_mara-matnr.
