*&---------------------------------------------------------------------*
*&  Include           ZEM_ABAP_OO_VEHICLE
*&---------------------------------------------------------------------*

INTERFACE lintf_vehicle.
  METHODS : getmaxspeed RETURNING value(speed) TYPE i,
            getcurrentspeed RETURNING value(speed) TYPE i.
ENDINTERFACE.                    "lintf_vehicle
*&---------------------------------------------------------------------*
*&       Class LCL_VEHICLE
*&---------------------------------------------------------------------*
*        Text
*----------------------------------------------------------------------*
CLASS lcl_vehicle DEFINITION ABSTRACT.

  PUBLIC SECTION.
    INTERFACES: lintf_vehicle.

    METHODS : constructor,
*              getcurrentspeed RETURNING value(speed) TYPE i,
              setcurrentspeed IMPORTING ip_speed TYPE i,
*              getmaxspeed RETURNING value(speed) TYPE i,
              setmaxspeed IMPORTING ip_speed TYPE i,
              getcartype RETURNING value(ctype) TYPE string ,
              setcartype IMPORTING ip_cartype TYPE c,
              getnbrofvehicles RETURNING value(nbr) TYPE i,
              setnbrofvehicles IMPORTING ip_nbr TYPE i,
              displayattributes,
              accelerate ABSTRACT RAISING zcx_test.

    CLASS-METHODS : displaynbofvehicles RETURNING value(nbr) TYPE i.

  PROTECTED SECTION.
    DATA: cartype TYPE c LENGTH 10,
          maxspeed TYPE i,
          currentspeed TYPE i.

    CLASS-DATA: nbofvehicles TYPE i.

ENDCLASS.               "LCL_VEHICLE

*&---------------------------------------------------------------------*
*&       Class (Implementation)  lcl_vehicle
*&---------------------------------------------------------------------*
*        Text
*----------------------------------------------------------------------*
CLASS lcl_vehicle IMPLEMENTATION.
  METHOD constructor.
    currentspeed = 0.
    nbofvehicles = nbofvehicles + 1.
  ENDMETHOD.                    "constructor

  METHOD lintf_vehicle~getcurrentspeed.
    speed = currentspeed.
  ENDMETHOD.                    "getCurrentSpeed

  METHOD setcurrentspeed.
    currentspeed = ip_speed.
  ENDMETHOD.                    "setCurrentSpeed

  METHOD lintf_vehicle~getmaxspeed.
    speed = maxspeed.
  ENDMETHOD.                    "getmaxspeed

  METHOD setmaxspeed.
    maxspeed = ip_speed.
  ENDMETHOD.                    "setmaxspeed

  METHOD getcartype.
    ctype = cartype.
  ENDMETHOD.                    "getcartype

  METHOD setcartype.
    cartype = ip_cartype.
  ENDMETHOD.                    "setcartype

  METHOD getnbrofvehicles.
    nbr = nbofvehicles.
  ENDMETHOD.                    "getmaxspeed

  METHOD setnbrofvehicles.
    nbofvehicles = ip_nbr.
  ENDMETHOD.                    "setmaxspeed

  METHOD displayattributes.
    WRITE: / 'Maximum Speed', maxspeed.
    WRITE: 'Current Speed', currentspeed.
    WRITE: 'Number of vehicles: ', nbofvehicles.
  ENDMETHOD.                    "displayAttributes

*  METHOD accelerate.
*    currentspeed = currentspeed + ip_speed.
*  ENDMETHOD.                    "Accelerate

  METHOD displaynbofvehicles.
    nbr = nbofvehicles.
  ENDMETHOD.                    "displayNbOfVehicles
ENDCLASS.                    "lcl_vehicle IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS lcl_car DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_car DEFINITION INHERITING FROM lcl_vehicle.
  PUBLIC SECTION.
    METHODS : constructor IMPORTING im_cartype TYPE c OPTIONAL,
*              getcartype EXPORTING em_cartype TYPE c,
              displayattributes REDEFINITION,
              accelerate REDEFINITION.

ENDCLASS.                    "lcl_car DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_car IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_car IMPLEMENTATION.
  METHOD constructor.
    CALL METHOD super->constructor( ).
    IF NOT im_cartype IS INITIAL.
      cartype = im_cartype.
    ELSE.
      cartype = 'Unknown'.
    ENDIF.
  ENDMETHOD.                    "constructor

*  METHOD getcartype.
*    em_cartype = cartype.
*    ENDMETHOD.

  METHOD displayattributes.
    CALL METHOD super->displayattributes( ).

    WRITE: 'Car Type: ', cartype.
    WRITE: 'nbr.', lcl_vehicle=>nbofvehicles.
  ENDMETHOD.                    "displayattributes

  METHOD accelerate.
    currentspeed = currentspeed + 5.
    IF currentspeed > maxspeed.
      RAISE EXCEPTION TYPE zcx_test
        EXPORTING
          textid = zcx_test=>too_fast.
    ENDIF.
  ENDMETHOD.                    "accelerate
ENDCLASS.                    "lcl_car IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS lcl_truck DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_truck DEFINITION INHERITING FROM lcl_vehicle.
  PUBLIC SECTION.

    METHODS : constructor IMPORTING
                  im_cartype TYPE c OPTIONAL
                  im_maxcargo TYPE i OPTIONAL,
              setmaxcargo IMPORTING im_maxcargo TYPE i,
              getmaxcargo RETURNING value(ep_maxcargo) TYPE i,
              displayattributes REDEFINITION,
              accelerate REDEFINITION.

  PRIVATE SECTION.
    DATA: maxcargo TYPE i.
ENDCLASS.                    "lcl_truck DEFINITION

*----------------------------------------------------------------------*
*       CLASS lcl_truck IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lcl_truck IMPLEMENTATION.
  METHOD constructor.
    CALL METHOD super->constructor( ).
    IF NOT im_cartype IS INITIAL.
      cartype = im_cartype.
    ELSE.
      cartype = 'Unknown'.
    ENDIF.
    IF NOT im_maxcargo IS INITIAL.
      maxcargo = im_maxcargo.
    ELSE.
      maxcargo = 0.
    ENDIF.
  ENDMETHOD.                    "constructor

  METHOD setmaxcargo.
    maxcargo = im_maxcargo.
  ENDMETHOD.                    "setmaxcargo

  METHOD getmaxcargo.
    ep_maxcargo = maxcargo.
  ENDMETHOD.                    "getmaxcargo

  METHOD displayattributes.
    CALL METHOD super->displayattributes( ).

    WRITE: 'Car Type: ', cartype.
    WRITE: 'Max. Cargo: ', maxcargo.
  ENDMETHOD.                    "displayattributes

  METHOD accelerate.
    currentspeed = currentspeed + 2.
  ENDMETHOD.                    "accelerate
ENDCLASS.                    "lcl_truck IMPLEMENTATION
