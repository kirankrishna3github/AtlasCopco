*&---------------------------------------------------------------------*
*& Report  ZTEST_123
*&
*&---------------------------------------------------------------------*
*&  exit : loop endloop.  fm:  form    endform .
*&
*&---------------------------------------------------------------------*

REPORT  ZTEST_123.

data : amt type p decimals 2.
  data : char1(10) value '54314.05'.
       amt =  char1 * 18 / 100.




data : obj type ref to zcl_test2.

data : lv_mara type mara.
start-of-selection.

create object obj.

CALL METHOD obj->get_data
  EXPORTING
    i_ernam = 'AIR22204'.
    .
.
    .
CALL METHOD obj->disp.
    .




*CLASS C1 DEFINITION.
*  PUBLIC SECTION.
*  DATA : VAR1 TYPE CHAR10 VALUE 'ABCD'.
*  METHODS : DISP.
*  ENDCLASS.
*
*  CLASS C1 IMPLEMENTATION.
*    METHOD DISP.
*    WRITE : VAR1.
*    ENDMETHOD.
*    ENDCLASS.
*
*
*    DATA : OBJ TYPE REF TO C1.
*
*    START-OF-SELECTION.
*
*
*    CREATE OBJECT OBJ.
*
*      CALL METHOD OBJ->DISP.


*DATA: IT_MARA TYPE TABLE OF MARA,
*      WA_MARA TYPE MARA.
*PARAMETERS: P_MATNR TYPE MARA-MATNR.
*
*START-OF-SELECTION.
*  SELECT SINGLE * FROM MARA INTO WA_MARA WHERE MATNR = P_MATNR.
*
*  IF WA_MARA IS INITIAL.
*    EXIT. "exit program
*  ENDIF.
*  WRITE:/ WA_MARA-MATNR, WA_MARA-MTART, WA_MARA-MATKL.





*  DATA: IT_MARA TYPE TABLE OF MARA,
*        WA_MARA TYPE MARA.
*
*START-OF-SELECTION.
*  SELECT * FROM MARA INTO TABLE IT_MARA UP TO 50 ROWS.
*  STOP.
*
*SELECT SINGLE * FROM MARA INTO WA_MARA ."WHERE MATNR = P_MATNR.
*
*end-of-selection.
*  LOOP AT IT_MARA INTO WA_MARA.
*    WRITE:/ WA_MARA-MATNR, WA_MARA-MTART, WA_MARA-MATKL.
*  ENDLOOP.


*DATA: IT_MARA TYPE TABLE OF MARA,
*      WA_MARA TYPE MARA.
*START-OF-SELECTION.
*  SELECT * FROM MARA INTO TABLE IT_MARA UP TO 10000 ROWS.
*
*  LOOP AT IT_MARA INTO WA_MARA.
**    IF WA_MARA-MTART = 'HALB'. "Don¡¯t print if material type is 'HALB'
**      CONTINUE. "Skip the record and go for next record
**    ENDIF.
*    WRITE:/ WA_MARA-MATNR, WA_MARA-MTART, WA_MARA-MATKL.
*  ENDLOOP.
*  PARAMETERS p_check AS CHECKBOX USER-COMMAND uc1.
*
*SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME.
*PARAMETERS p_1 TYPE char10 MODIF ID mod.
*SELECTION-SCREEN END OF BLOCK b1.
*
*AT SELECTION-SCREEN OUTPUT.
*
*  IF p_check NE 'X'.
*    LOOP AT SCREEN.
*      IF screen-group1 = 'MOD'.
*        screen-active = '0'.
*        MODIFY SCREEN.
*      ENDIF.
*    ENDLOOP.
*  ELSE.
*    LOOP AT SCREEN.
*      IF screen-group1 = 'MOD'.
*        screen-active = '1'.
*        MODIFY SCREEN.
*      ENDIF.
*    ENDLOOP.
*  ENDIF.


*  CLASS CL_EVENTS DEFINITION DEFERRED.
*    DATA LO_EVENT TYPE REF TO CL_EVENTS.
*    DATA WA_MARA TYPE MARA.
*    PARAMETERS : P_MATNR TYPE MATNR.
*    CLASS CL_EVENTS DEFINITION.
*
*      PUBLIC SECTION.
*      EVENTS : NO_MATERIAL."EVENT.
*      METHODS : GET_MATERIALS
*                IMPORTING I_MATNR TYPE MATNR
*                  EXPORTING E_MARA TYPE MARA.
*      METHODS : EVENT_HANDLER FOR EVENT NO_MATERIAL OF CL_EVENTS.
*      endclass.
*
*    START-OF-SELECTION.
*
*    CREATE OBJECT LO_EVENT.
*
*    SET HANDLER LO_EVENT->EVENT_HANDLER FOR LO_EVENT.
*    CALL METHOD LO_EVENT->GET_MATERIALS
*    EXPORTING I_MATNR = P_MATNR
*      IMPORTING  E_MARA = WA_MARA.
*    WRITE:/ WA_MARA-MATNR,WA_MARA-MTART.
*
*    CLASS CL_EVENTS IMPLEMENTATION.
*      METHOD GET_MATERIALS.
*
*      SELECT SINGLE * FROM MARA
*      INTO E_MARA
*      WHERE MATNR = I_MATNR.
*     IF SY-SUBRC NE 0.
*       RAISE EVENT NO_MATERIAL.
*       ENDIF.
*      ENDMETHOD.
*
*      METHOD EVENT_HANDLER.
*        WRITE:/ 'NO MATERIAL FOUND'.
*        ENDMETHOD.
*ENDCLASS.
