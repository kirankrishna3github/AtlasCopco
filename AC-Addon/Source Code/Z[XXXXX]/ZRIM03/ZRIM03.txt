REPORT GHBIKRT0 MESSAGE-ID FB.
************************************************************************
*        Erzeugen von Testdaten f¨¹r Batch-Input:
*                     Kreditorstammdaten
*        Verschiedene Testsituationen unterst¨¹tzt.
************************************************************************
*        Erweiterung der Strukturen:
*        1.1H
*           BLFA1-STCEG(20)       Umsatzst.-Id.Nr.
*        1.2A
*           BLFA1-STKZN(1)        Nat¨¹rliche Person
*           BLFB1-MINDK(3)        Minderheitenkennzeichen
*           BLFB1-ALTKN(10)       Alte Kontonummer
*           BLFM1-KZABS(1)        Auftragsbest#tigung
*           BLFM1-KALSK(2)        Gruppe f¨¹r Kalkulationsschema
*           BLFM1-KZAUT(1)        Automatische Bestellung
*        1.3A
*           BLFM1-EXPVZ(1)        Verkehrszweig
*           BLFM1-ZOLLA(1)        Ausgangszollstelle
*           BLFB1-ZGRUP(2)        Gruppierschl¨¹ssel
*           BLFBK-BNKLZ(15)       Bankleitzahl in Funktionsteil BNKA
************************************************************************

PARAMETERS: MANDT        LIKE SY-MANDT DEFAULT SY-MANDT,
            DS_NAME(40)  TYPE C
*              DEFAULT '/tmp/RFBIKR00' LOWER CASE
               DEFAULT '/sapmnt/hs0017/a/FI/vendor' LOWER CASE
                         OBLIGATORY,
            USNAM        LIKE SY-UNAME DEFAULT SY-UNAME,
            TCODE        LIKE SY-TCODE DEFAULT 'XK02',
            GR_COUNT(2)  TYPE C DEFAULT 1,
            GR_NAME1(12) TYPE C DEFAULT 'VENDOR1',
            GR_NAME2(12) TYPE C DEFAULT 'VENDOR',
            TR_COUNT(8)  TYPE C DEFAULT '1',
            BV_COUNT(8)  TYPE C DEFAULT '0',
            DATUM        LIKE SY-DATUM DEFAULT SY-DATUM.

*-----------------------------------------------------------------------
*        Tabellen
*-----------------------------------------------------------------------
TABLES:  BGR00,                        " Batch-Input Mappendaten
         BLF00,                        " Batch-Input Kopfsatz
         BLFA1,                        " Batch-Input Kred. Allg.Teil
         BLFB1,                        " Batch-Input Kred. Bukrs-Daten
         BLFB5,                        " Batch-Input Kred. Mahndaten
         BLFBK,                        " Batch-Input Kred. Bankverbind.
         BLFM1.                        " Batch-Input Kred. Einkaufsdaten

*------- Einzelfelder --------------------------------------------------
DATA:    CHAR(50)        TYPE C.          " Hilfsfeld
DATA:    BANKV(3)        TYPE N.          " aktuelle Bankverbindung
DATA:    GROUP(3)        TYPE N.          " aktuelle Mappe
DATA:    TRANS(8)        TYPE N.          " aktuelle Transaktion

*------- Konstanten ----------------------------------------------------
DATA:    C_NODATA(1)  TYPE C VALUE '/'.   " Default NODATA

*eject
************************************************************************
*        Hauptablauf  Anfang
************************************************************************

************************************************************************
*STOP.         " Nach Kopieren des Reports diese Zeile l#schen
************************************************************************



*------- Dataset #ffnen ------------------------------------------------
OPEN DATASET DS_NAME FOR OUTPUT IN TEXT MODE ENCODING DEFAULT.

*------- Strukturen einmal mit '/' 'initialisieren' --------------------
PERFORM INIT_STRUKTUREN_ERZEUGEN(RFBIKRI0) USING C_NODATA.

*-----------------------------------------------------------------------
*        Mappen erstellen
*-----------------------------------------------------------------------
CLEAR GROUP.
DO GR_COUNT TIMES.
  GROUP = GROUP + 1.
  PERFORM BGR00_DATEN.
  CLEAR TRANS.
  DO TR_COUNT TIMES.
    TRANS = TRANS + 1.
    CASE TCODE.
      WHEN 'XK01'.
        PERFORM TRANS_ANLEGEN.
      WHEN 'XK02'.
        PERFORM TRANS_AENDERN.
      WHEN 'XK05'.
        PERFORM TRANS_SPERREN.
      WHEN 'XK06'.
        PERFORM TRANS_LOEVM.

*------- einmal alles durchtesten ... ----------------------------------
      WHEN '*'.
        PERFORM TRANS_ANLEGEN.
        PERFORM TRANS_ANLEGEN.
        PERFORM TRANS_AENDERN.
        PERFORM TRANS_AENDERN.
        PERFORM TRANS_SPERREN.
        PERFORM TRANS_SPERREN.
        PERFORM TRANS_LOEVM.
        PERFORM TRANS_LOEVM.
      WHEN OTHERS.
        MESSAGE A899
          WITH 'Transaction ' TCODE ' nicht unterstuetzt'. "#EC NOTEXT
    ENDCASE.
  ENDDO.
ENDDO.

*------- Dataset schliessen --------------------------------------------
CLOSE DATASET DS_NAME.

*------- Bearbeitungsmeldung -------------------------------------------
SKIP 3.
WRITE: / '      ******************************************************'.
WRITE: / '      Batch-Input-Test: Kreditor-Stammdaten '.     "#EC NOTEXT
WRITE: / '      ----------------------------------------'.
WRITE: / '      Testdaten fuer Batch-Input wurden erzeugt.'. "#EC NOTEXT
WRITE: / '      Pfadname der Datei: ', DS_NAME.              "#EC NOTEXT
WRITE: / '      Es wurde(n) Testdaten fuer ', GR_COUNT.      "#EC NOTEXT
WRITE: / '      Mappe(n) erzeugt.'.                          "#EC NOTEXT
WRITE: / '      ******************************************************'.

************************************************************************
*        Hauptablauf  Ende
************************************************************************
*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BGR00_DATEN                                       *
*---------------------------------------------------------------------*
*        Mappenvorsatz                                                *
*---------------------------------------------------------------------*
FORM BGR00_DATEN.
  PERFORM INIT_BGR00(RFBIKRI0) USING BGR00.
  BGR00-MANDT = MANDT.
  CASE GROUP.
    WHEN '1'.
      BGR00-GROUP     = GR_NAME1.
    WHEN OTHERS.
      BGR00-GROUP     = GR_NAME2.
  ENDCASE.
  BGR00-USNAM  = USNAM.
* BGR00-START  = '19920522'.
* BGR00-XKEEP  = 'X'.
  BGR00-NODATA = C_NODATA.
  TRANSFER BGR00 TO DS_NAME.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE TRANS_ANLEGEN
*---------------------------------------------------------------------*
FORM TRANS_ANLEGEN.
  PERFORM BLF00_ANLEGEN.
  PERFORM BLFA1_DATEN.
  CLEAR BANKV.
  DO BV_COUNT TIMES.
    BANKV = BANKV + 1.
    PERFORM BLFBK_DATEN.
  ENDDO.
* PERFORM BLFB1_DATEN.
* PERFORM BLFB5_DATEN.
* PERFORM BLFM1_DATEN.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE TRANS_AENDERN
*---------------------------------------------------------------------*
FORM TRANS_AENDERN.
  PERFORM BLF00_AENDERN.
  PERFORM BLFA1_DATEN.
  CLEAR BANKV.
  DO BV_COUNT TIMES.
    BANKV = BANKV + 1.
    PERFORM BLFBK_DATEN.
  ENDDO.
  PERFORM BLFB1_DATEN.
* PERFORM BLFB5_DATEN.
* PERFORM BLFM1_DATEN.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE TRANS_SPERREN
*---------------------------------------------------------------------*
FORM TRANS_SPERREN.
  PERFORM BLF00_XK05.
  PERFORM BLFA1_DATEN_XK05.
  PERFORM BLFB1_DATEN_XK05.
  PERFORM BLFM1_DATEN_XK05.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE TRANS_LOEVM
*---------------------------------------------------------------------*
FORM TRANS_LOEVM.
  PERFORM BLF00_XK06.
  PERFORM BLFA1_DATEN_XK06.
  PERFORM BLFB1_DATEN_XK06.
  PERFORM BLFM1_DATEN_XK06.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLF00_ANLEGEN                                     *
*---------------------------------------------------------------------*
*        Kopfsatz mit Testdaten f¨¹llen  (Einstiegsbild) xk01          *
*---------------------------------------------------------------------*
FORM BLF00_ANLEGEN.
  PERFORM INIT_BLF00(RFBIKRI0) USING BLF00.
  BLF00-TCODE   = 'XK01'.
  BLF00-KTOKK   = 'ALLE'.
  CASE TRANS.
    WHEN 1.
*     BLF00-LIFNR     = 'BI-4712'.
*     BLF00-BUKRS     = '0001'.
*     BLF00-EKORG     = '1230'.
    WHEN 2.
*     BLF00-LIFNR     = '0000012300'.
*     BLF00-BUKRS     = '0001'.
    WHEN OTHERS.
*     BLF00-LIFNR     = '12300'.
*     BLF00-BUKRS     = '0001'.
  ENDCASE.
  TRANSFER BLF00 TO DS_NAME.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLF00_AENDERN                                     *
*---------------------------------------------------------------------*
*        Kopfsatz mit Testdaten f¨¹llen  (Einstiegsbild)               *
*---------------------------------------------------------------------*
FORM BLF00_AENDERN.
  PERFORM INIT_BLF00(RFBIKRI0) USING BLF00.
  BLF00-TCODE = 'XK02'.
  CASE TRANS.
    WHEN 1.
      BLF00-LIFNR     = 'BI-4711'.
      BLF00-BUKRS     = '0001'.
*     BLF00-EKORG     = '1234'.
    WHEN 2.
      BLF00-LIFNR     = 'BI-4711   '.
*     BLF00-BUKRS     = '0001'.
    WHEN OTHERS.
      BLF00-LIFNR     = 'BI-4711'.
      BLF00-BUKRS     = 'ikpp'.
  ENDCASE.
  TRANSFER BLF00 TO DS_NAME.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLF00_XK05                                        *
*---------------------------------------------------------------------*
*        Einstiegsbild XK05 Sperren
*---------------------------------------------------------------------*
FORM BLF00_XK05.
  PERFORM INIT_BLF00(RFBIKRI0) USING BLF00.
  BLF00-TCODE   = 'XK05'.
  CASE TRANS.
    WHEN 1.
      BLF00-LIFNR     = 'IHRIG'.
*     BLF00-LIFNR     = 'GH-KREDI'.
      BLF00-BUKRS     = '0001'.
      BLF00-EKORG     = '1234'.
    WHEN OTHERS.
      BLF00-LIFNR     = 'IHRIG'.
  ENDCASE.
  TRANSFER BLF00 TO DS_NAME.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLF00_XK06                                        *
*---------------------------------------------------------------------*
*        Einstiegsbild XK06 L#VM
*---------------------------------------------------------------------*
FORM BLF00_XK06.
  PERFORM INIT_BLF00(RFBIKRI0) USING BLF00.
  BLF00-TCODE   = 'XK06'.
  CASE TRANS.
    WHEN 1.
      BLF00-LIFNR     = 'IHRIG-0'.
      BLF00-BUKRS     = '0001'.
      BLF00-EKORG     = '1234'.
    WHEN 2.
      BLF00-LIFNR     = 'BI-4711'.
      BLF00-BUKRS     = '0002'.
    WHEN OTHERS.
      BLF00-LIFNR     = 'IHRIG'.
      BLF00-BUKRS     = '0001'.
  ENDCASE.
  TRANSFER BLF00 TO DS_NAME.
ENDFORM.
*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLFA1_DATEN                                       *
*---------------------------------------------------------------------*
*        Testdaten f¨¹r Allg.Teil LFA1                                 *
*---------------------------------------------------------------------*
FORM BLFA1_DATEN.
  PERFORM INIT_BLFA1(RFBIKRI0) USING BLFA1.
  CASE TRANS.
    WHEN 1.
      BLFA1-NAME1     = 'Batch-Input Test 1'.                "#EC NOTEXT
      BLFA1-NAME2     = DATUM.
      BLFA1-NAME3     = 'XXX'.
      BLFA1-SORTL     = 'YIK-BI'.
      BLFA1-ORT01     = 'Neue Kleinstadt'.                   "#EC NOTEXT
      BLFA1-PSTLZ     = '1234'.
      BLFA1-LAND1     = 'DE'.
      BLFA1-SPRAS     = 'D'.
      BLFA1-TELF1     = '06221-9999999'.
*     BLFA1-SPERR     = 'X'.
*     BLFA1-LOEVM     = 'X'.
*     BLFA1-KUNNR     = 'PLATE'.
*     BLFA1-LNRZA     = 'PLATE'.
*     BLFA1-STCEG     = 'DE123456789'.
      BLFA1-STKZN     = 'X'.
    WHEN OTHERS.
      BLFA1-NAME1     = 'Batch-Input Test 2'.                "#EC NOTEXT
      BLFA1-NAME2     = DATUM.
      BLFA1-NAME3     = 'XXX'.
      BLFA1-SORTL     = 'YIK-BI'.
      BLFA1-ORT01     = 'Neue Gro#stadt'.                    "#EC NOTEXT
      BLFA1-PSTLZ     = '9999'.
      BLFA1-LAND1     = 'DE'.
      BLFA1-SPRAS     = 'D'.
      BLFA1-TELF1     = '06221-1111111'.
*     BLFA1-LOEVM     = SPACE.
*     BLFA1-KUNNR     = 'PLATE'.
*     BLFA1-STCEG     = 'DE987654321'.
  ENDCASE.
  TRANSFER BLFA1 TO DS_NAME.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLFA1_DATEN_XK05                                  *
*---------------------------------------------------------------------*
*        Testdaten f¨¹r XK05 (Sperrdaten)                              *
*---------------------------------------------------------------------*
FORM BLFA1_DATEN_XK05.
  PERFORM INIT_BLFA1(RFBIKRI0) USING BLFA1.
  BLFA1-SPERR     = 'X'.
  BLFA1-SPERM     = 'X'.
  BLFA1-SPERQ     = 'BE'.
  TRANSFER BLFA1 TO DS_NAME.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLFA1_DATEN_XK06                                  *
*---------------------------------------------------------------------*
*        Testdaten f¨¹r XK06 (L#schvormerkungen)                       *
*---------------------------------------------------------------------*
FORM BLFA1_DATEN_XK06.
  PERFORM INIT_BLFA1(RFBIKRI0) USING BLFA1.
  BLFA1-LOEVM(1)  = 'X'.
  TRANSFER BLFA1 TO DS_NAME.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLFBK_DATEN                                       *
*---------------------------------------------------------------------*
*        Testdaten f¨¹r Allg.Teil LFBK  (Bankverbindungen)             *
*---------------------------------------------------------------------*
FORM BLFBK_DATEN.

*------- Anlegen: Bankverbindungen hinzuf¨¹gen --------------------------
  IF BLF00-TCODE = 'XK01'.
    CASE BANKV.
      WHEN 1.
        PERFORM INIT_BLFBK(RFBIKRI0) USING BLFBK.
        BLFBK-BANKS     = 'DE'.
        BLFBK-BANKL     = '12343333'.
        BLFBK-BANKN     = '1111111111'.
*       BLFBK-XDELE     = 'X'.
        BLFBK-BANKA     = 'Neue Bank 12343333'.              "#EC NOTEXT
        BLFBK-ORT01     = '6900 Heidelberg'.                 "#EC NOTEXT
*       BLFBK-BNKLZ(15) = '1234567890'.
        TRANSFER BLFBK TO DS_NAME.
      WHEN OTHERS.
        PERFORM INIT_BLFBK(RFBIKRI0) USING BLFBK.
        BLFBK-BANKS     = 'D'.
        BLFBK-BANKL     = '11111111'.
        BLFBK-BANKN     = '3333333333'.
*       BLFBK-BNKLZ(15) = '1234567890'.
        TRANSFER BLFBK TO DS_NAME.
    ENDCASE.

*------- #ndern: Bankverbindungen pflegen/l#schen ---------------------
  ELSE.
    CASE BANKV.
      WHEN 1.
        PERFORM INIT_BLFBK(RFBIKRI0) USING BLFBK.
        BLFBK-BANKS     = 'T01'.
*       BLFBK-BANKL     = '99996666'.
        BLFBK-BANKN     = '1234554321'.
        BLFBK-BVTYP     = '1234'.
*       BLFBK-XDELE     = 'X'.
        BLFBK-BANKA     = 'Neue Bank intern Batch-Input'.    "#EC NOTEXT
        BLFBK-ORT01     = '1234 Neue Kleinstadt'.            "#EC NOTEXT
        BLFBK-BNKLZ(15) = '12345678'.
        TRANSFER BLFBK TO DS_NAME.
      WHEN 2.
        PERFORM INIT_BLFBK(RFBIKRI0) USING BLFBK.
        BLFBK-BANKS     = 'IN'.
*       BLFBK-BANKL     = '12349999'.
        BLFBK-BANKN     = '9999999999'.
*       BLFBK-BVTYP     = '1234'.
*       BLFBK-XDELE     = 'X'.
        BLFBK-BANKA     = 'Neue interne Bank'.               "#EC NOTEXT
        BLFBK-ORT01     = '1234 Neue Kleinstadt'.            "#EC NOTEXT
        BLFBK-BNKLZ(15) = '1234567890'.
        TRANSFER BLFBK TO DS_NAME.
      WHEN 3.
        PERFORM INIT_BLFBK(RFBIKRI0) USING BLFBK.
        BLFBK-BANKS     = 'TS4'.
        BLFBK-BANKL     = '47118888'.
        BLFBK-BANKN     = '1111122222'.
        BLFBK-BANKA     = 'Neue externe Bank'.               "#EC NOTEXT
        BLFBK-ORT01     = '9876 Neue Gro#stadt'.             "#EC NOTEXT
        BLFBK-BNKLZ(15) = '1234567890'.
        TRANSFER BLFBK TO DS_NAME.
      WHEN OTHERS.
        PERFORM INIT_BLFBK(RFBIKRI0) USING BLFBK.
        BLFBK-BANKS     = 'IN0'.
*       BLFBK-BANKL     = '4711-01'.
*       BLFBK-BANKN     = '1111122222'.
        BLFBK-BANKA     = 'Neue Bank intern ohne Ktonr'.     "#EC NOTEXT
        BLFBK-ORT01     = '9876 Neue Gro#stadt'.             "#EC NOTEXT
        BLFBK-BNKLZ(15) = '1234567890'.
        TRANSFER BLFBK TO DS_NAME.
    ENDCASE.
  ENDIF.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLFB1_DATEN                                       *
*---------------------------------------------------------------------*
*        Testdaten f¨¹r Buchungskreisbreich                            *
*---------------------------------------------------------------------*
FORM BLFB1_DATEN.
  PERFORM INIT_BLFB1(RFBIKRI0) USING BLFB1.
  IF BLF00-TCODE = 'XK01'.
    BLFB1-AKONT     = '0000160000'.
  ENDIF.
  BLFB1-ZUAWA     = '003'.
  BLFB1-ZTERM     = 'ZB00'.
* BLFB1-KVERM(30) = 'Batch-Input mit alter Struktur'.
* BLFB1-SPERR     = 'X'.
  BLFB1-MINDK(3)  = 'CHI'.
  BLFB1-ALTKN(10) = '12345678'.
  BLFB1-ZGRUP(2)  = '01'.
  TRANSFER BLFB1 TO DS_NAME.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLFB1_DATEN_XK05                                  *
*---------------------------------------------------------------------*
*        Testdaten f¨¹r XK05 (L#schvormaerkungen)                      *
*---------------------------------------------------------------------*
FORM BLFB1_DATEN_XK05.
  PERFORM INIT_BLFB1(RFBIKRI0) USING BLFB1.
  BLFB1-SPERR(1)  = 'X'.
  TRANSFER BLFB1 TO DS_NAME.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLFB1_DATEN_XK06                                  *
*---------------------------------------------------------------------*
*        Testdaten f¨¹r XK06 (L#schvormerkungen)                       *
*---------------------------------------------------------------------*
FORM BLFB1_DATEN_XK06.
  PERFORM INIT_BLFB1(RFBIKRI0) USING BLFB1.
  BLFB1-LOEVM(1)  = 'X'.
  TRANSFER BLFB1 TO DS_NAME.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLFB5_DATEN                                       *
*---------------------------------------------------------------------*
*        Testdaten f¨¹r LFB5 Mahndaten                                 *
*---------------------------------------------------------------------*
FORM BLFB5_DATEN.
  PERFORM INIT_BLFB5(RFBIKRI0) USING BLFB5.
  BLFB5-MAHNA     = '0001'.
  TRANSFER BLFB5 TO DS_NAME.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLFM1_DATEN                                       *
*---------------------------------------------------------------------*
*        Testdaten f¨¹r Einkaufsorg.Daten                              *
*---------------------------------------------------------------------*
FORM BLFM1_DATEN.
  PERFORM INIT_BLFM1(RFBIKRI0) USING BLFM1.
  BLFM1-WAERS     = 'DEM  '.
  BLFM1-ZTERM     = 'ZB01'.
  BLFM1-TELF1     = '06221-1234567'.
  BLFM1-WEBRE     = 'X'.
  BLFM1-KZABS(1)  = 'X'.
  BLFM1-KALSK(2)  = '01'.
  BLFM1-KZAUT(1)  = 'X'.
  BLFM1-EXPVZ(1)  = '2'.
  BLFM1-ZOLLA(6)  = '0020  '.
  TRANSFER BLFM1 TO DS_NAME.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLFM1_DATEN_XK05                                  *
*---------------------------------------------------------------------*
*        Testdaten f¨¹r XK05 (Sperrdaten)                              *
*---------------------------------------------------------------------*
FORM BLFM1_DATEN_XK05.
  PERFORM INIT_BLFM1(RFBIKRI0) USING BLFM1.
  BLFM1-SPERM     = 'X'.
  TRANSFER BLFM1 TO DS_NAME.
ENDFORM.

*eject
*---------------------------------------------------------------------*
*        SUBROUTINE BLFM1_DATEN_XK06                                  *
*---------------------------------------------------------------------*
*        Testdaten f¨¹r XK05 (Sperrdaten)                              *
*---------------------------------------------------------------------*
FORM BLFM1_DATEN_XK06.
  PERFORM INIT_BLFM1(RFBIKRI0) USING BLFM1.
  BLFM1-LOEVM     = 'X'.
  TRANSFER BLFM1 TO DS_NAME.
ENDFORM.

*Selection text£º
*BV_COUNT:        No.of bank details per trans.
*DATUM:        Date
*DS_NAME:        File name
*GR_COUNT:        Number of batch input sessions
*GR_NAME1:        Name of first session
*GR_NAME2:        Name of further sessions
*MANDT:        Client
*TCODE:        Transaction code
*TR_COUNT:        No.of transactions per session
*USNAM:        User
