*&---------------------------------------------------------------------*
*& Report  ZCWU_TEST_014
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  ZCWU_TEST_014.

* Reportspezifische NODES Anweisungen
NODES: anla0,               " Einstiegstabelle log.Datenbank ADA
       anlav,               " Anlagenreporting: ANLA-Felder + Kst...
       anlb,                           " Abschreibungsparameter
       anek,                           " Belegkopf Anlagenbuchung
       anepv,               " Anlagen-Einzelposten (ANEP + ANEA + ANEK)
       anlcv.               " Anlagenreporting: ANLC-Felder + Summen



DATA: caufvd_exp TYPE caufvd,
      SUBRC_E TYPE sy-SUBRC.

DATA: gt_qmel TYPE STANDARD TABLE OF qmel,
      gs_qmel TYPE qmel,
      ls_qmel TYPE QMEL.

DATA: itab_data LIKE fiaa_salvtab_rabest OCCURS 10 WITH HEADER LINE.
SELECT *
  FROM QMEL
  INto TABLE gt_qmel.

SORT gt_qmel by aufnr.

LOOP AT gt_qmel INTO gs_qmel.
  IF gs_qmel-aufnr = ls_qmel-aufnr.
    WRITE: gs_qmel-aufnr.
  ENDIF.
  ls_qmel = gs_qmel.
ENDLOOP.

GET anla0.


* Angabe der NICHT-KEY-Felder aus der Datenbank
GET anlav FIELDS aktiv  ktogr  txt50
                 txa50  zugdt  deakt  xanlgr.

  CHECK SELECT-OPTIONS.

* sollte Folgendes nicht lieber in die logische DB?
* Nur Anlagen seleketieren, die aktiviert wurden ...
  CHECK not anlav-zugdt is initial.
* ... und zwar vor dem Berichtsdatum.
  CHECK     anlav-zugdt le berdatum.


* keine Bereichsdaten erforderlich
GET anlb FIELDS anln1.

GET anlcv.

  MOVE-CORRESPONDING anlb TO itab_data.                     "no 456965
  MOVE-CORRESPONDING anlav TO itab_data.


* Alles in der Tabelle ist ausw#hlbar!
  itab_data-flg_pick_up = 'X'.
* Alle Eintr#ge in der ersten Stufe
  itab_data-range = 1.

*   ITAB_DATA nur dann aufbauen, wenn KEIN Summenbericht
    APPEND itab_data.
end-OF-SELECTION.
WRITE: itab_data-flg_pick_up .
