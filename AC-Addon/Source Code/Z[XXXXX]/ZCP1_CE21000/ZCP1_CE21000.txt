REPORT ZAL_ABAP message-id 26 line-size 255
no standard page heading.
* ZCP1_CE21000.
PARAMETER DOWNLOAD(1) DEFAULT 'S' lower case. "N-svr,Y-clnt
PARAMETER EXECMODE(1) DEFAULT 'B' lower case. "D-dlg,B-btch
PARAMETER OUT_DIR(48) DEFAULT "output file dir
'/var/load/CD1/UK/read' lower case.
PARAMETER IN_DIR(48) DEFAULT "input file dir
'/var/load/CD1/UK/read' lower case.
PARAMETER P_DEST TYPE RFCDES-RFCDEST DEFAULT
'NONE'.
PARAMETER P_PROGID TYPE RFCOPT-RFCEXEC DEFAULT
SPACE.
PARAMETER P_GWHOST TYPE RFCOPT-RFCGWHOST DEFAULT
SPACE.
PARAMETER P_GWSERV TYPE RFCOPT-RFCGWSERV DEFAULT
SPACE.
PARAMETER P_SRVFM(30) DEFAULT "Server Callback function
SPACE.
PARAMETER P_PKGSZ TYPE I DEFAULT "Stream package size
5000.
PARAMETER P_SNC_ON(1) DEFAULT "X-on SPACE-off
SPACE.

PARAMETER $PARAM1(50) TYPE C.

PARAMETER P_DF_VK(40) DEFAULT "ABAP data flow object key
'' lower case.
PARAMETER P_DI_GEN(40) DEFAULT "DI version that generated ABAP
'' lower case.

*** Machine generated ABAP. Do not modify.            ***
*** (C)Copyright Business Objects S.A.  All rights reserved. ***
*
* Date Time:
*    12/24/15 07:41:12
* SAP used for generated this ABAP:
*    Release: 701
*    Host   : 10.25.3.82
*
* ABAP Dataflow Name:
*    DF_R3_CTS_LZ_SAP_CP1_CE21000_D
* ABAP program name in SAP:
*  ZCP1_CE21000
* Generated ABAP file name:
*    //AIRSBEAP0512/D$/Data/SAPLogistics/VAL/ABAP/ZCP1_CE21000
TABLES CE21000.
TABLES ZSTC_SALES_COMP.

DATA: begin of ITAB3 occurs 0,
MANDT(3) TYPE C,
PALEDGER(2) TYPE C,
VRGAR(1) TYPE C,
VERSI(3) TYPE C,
PAOBJNR(10) TYPE N,
PASUBNR(4) TYPE N,
BELNR(10) TYPE C,
PERBL(7) TYPE N,
HZDAT TYPE D,
USNAM(12) TYPE C,
GJAHR(4) TYPE N,
PAPAOBJNR(10) TYPE N,
PAPASUBNR(4) TYPE N,
KNDNR(10) TYPE C,
ARTNR(18) TYPE C,
FKART(4) TYPE C,
FRWAE(5) TYPE C,
REC_WAERS(5) TYPE C,
KAUFN(10) TYPE C,
KDPOS(6) TYPE N,
RKAUFNR(12) TYPE C,
SKOST(10) TYPE C,
PRZNR(12) TYPE C,
BUKRS(4) TYPE C,
KOKRS(4) TYPE C,
WERKS(4) TYPE C,
GSBER(4) TYPE C,
VKORG(4) TYPE C,
VTWEG(2) TYPE C,
SPART(2) TYPE C,
HRKFT(4) TYPE C,
KSTAR(10) TYPE C,
PSPNR(8) TYPE N,
KSTRG(12) TYPE C,
RBELN(10) TYPE C,
RPOSN(6) TYPE C,
PRCTR(10) TYPE C,
PPRCTR(10) TYPE C,
RKESTATU(10) TYPE C,
TIMESTMP(16) TYPE P DECIMALS 0,
AUART(4) TYPE C,
BEMOT(2) TYPE C,
EQUNR(18) TYPE C,
PRODH(18) TYPE C,
WW001(1) TYPE C,
WW002(3) TYPE C,
WW003(2) TYPE C,
WW004(10) TYPE C,
WW005(4) TYPE C,
WW006(4) TYPE C,
WW007(4) TYPE C,
VKBUR(4) TYPE C,
KTGRD(2) TYPE C,
KUNWE(10) TYPE C,
MATKL(9) TYPE C,
WW008(6) TYPE C,
WW009(3) TYPE C,
VV010_ME(3) TYPE C,
ABSMG_ME(3) TYPE C,
VV010001(16) TYPE P DECIMALS 3,
VV100001(16) TYPE P DECIMALS 2,
VV110001(16) TYPE P DECIMALS 2,
VV200001(16) TYPE P DECIMALS 2,
VV300001(16) TYPE P DECIMALS 2,
VV400001(16) TYPE P DECIMALS 2,
VV500001(16) TYPE P DECIMALS 2,
VV600001(16) TYPE P DECIMALS 2,
VV120001(16) TYPE P DECIMALS 2,
VV101001(16) TYPE P DECIMALS 2,
VV199001(16) TYPE P DECIMALS 2,
VV111001(16) TYPE P DECIMALS 2,
VV112001(16) TYPE P DECIMALS 2,
VV113001(16) TYPE P DECIMALS 2,
VV114001(16) TYPE P DECIMALS 2,
VV115001(16) TYPE P DECIMALS 2,
VV116001(16) TYPE P DECIMALS 2,
VV117001(16) TYPE P DECIMALS 2,
VV118001(16) TYPE P DECIMALS 2,
VV130001(16) TYPE P DECIMALS 2,
VV140001(16) TYPE P DECIMALS 2,
VV150001(16) TYPE P DECIMALS 2,
VV650001(16) TYPE P DECIMALS 2,
VV700001(16) TYPE P DECIMALS 2,
VV710001(16) TYPE P DECIMALS 2,
VV720001(16) TYPE P DECIMALS 2,
VV730001(16) TYPE P DECIMALS 2,
ABSMG001(16) TYPE P DECIMALS 3,
Z_BUKRS(4) TYPE C,
Z_VKORG(4) TYPE C,
Z_WERKS(4) TYPE C,
Z_EKORG(4) TYPE C,
Z_MAMUSERCMPY(4) TYPE C,
Z_REGION(40) TYPE C,
Z_COUNTRY(40) TYPE C,
Z_COUNTRYDSCR(255) TYPE C,
Z_SALESCOMPANY(40) TYPE C,
Z_SALESCMPDSCR(255) TYPE C.
DATA: end of ITAB3.

data: append_flag(1) value ' ',
      cntbuf type i,
      delimleng type i,last_batch(1) value ' '.

CONSTANTS C_DF_VK(40) VALUE '1641'.
CONSTANTS C_DI_GEN(40) VALUE '14.2.3.660'.
DATA WARN_MSG(50).


DATA: gv_directory     TYPE epsdirnam  VALUE '/var/load/xxx/UK/read/',
      gv_logsys        LIKE tbdlst-logsys.

start-of-selection.
* Logical system
  CALL FUNCTION 'OWN_LOGICAL_SYSTEM_GET'
    IMPORTING
      own_logical_system             = gv_logsys
    EXCEPTIONS
      own_logical_system_not_defined = 1
      OTHERS                         = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE 'E' NUMBER sy-msgno
         WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    STOP.
  ENDIF.
  REPLACE 'xxx' IN out_dir WITH gv_logsys(3).
  REPLACE 'xxx' IN in_dir WITH gv_logsys(3).


  IF DOWNLOAD = 'S' OR
     DOWNLOAD = 'N' OR
     DOWNLOAD = 'Y'.
      .
  ELSE.
     DATA: m_xfer_err_msg(700).
     CONCATENATE
'ABAP program does not recognize this new '
'data transfer method: ' DOWNLOAD
'. Regenerate the ABAP program and upload to this system.'
     INTO m_xfer_err_msg.
     MESSAGE  E240(S#) WITH m_xfer_err_msg.
  ENDIF.

  IF EXECMODE = 'B' OR
     EXECMODE = 'D'.
      .
  ELSE.
     DATA: m_exec_err_msg(700).
     CONCATENATE
'ABAP program does not recognize this new '
'execution option: ' EXECMODE
'. Regenerate the ABAP program and upload to this system.'
     INTO m_exec_err_msg.
     MESSAGE  E240(S#) WITH m_exec_err_msg.
  ENDIF.

  IF DOWNLOAD = 'S'.
     PERFORM CONNECT_RFCDEST_TO_PROGID.
  ENDIF.



PERFORM FORM3.
last_batch = 'X'.
PERFORM FORM4.
FREE ITAB3.
  IF DOWNLOAD = 'S'.
     PERFORM DISCONNECT_RFCDEST_FROM_PROGID.
  ENDIF.


end-of-selection.

CLEAR WARN_MSG.

IF NOT P_DF_VK IS INITIAL.
  IF P_DF_VK <> C_DF_VK.
     CONCATENATE '$$Warning$'
                 C_DF_VK
                 '$' INTO WARN_MSG.
  ENDIF.
ENDIF.
IF NOT P_DI_GEN IS INITIAL.
  IF P_DI_GEN <> C_DI_GEN.
     IF WARN_MSG IS INITIAL.
       CONCATENATE '$$Warning$$'
                   C_DI_GEN
                   INTO WARN_MSG.
     ELSE.
       CONCATENATE WARN_MSG
                   C_DI_GEN
                   INTO WARN_MSG.
     ENDIF.
  ENDIF.
ENDIF.

IF NOT WARN_MSG IS INITIAL.
  IF EXECMODE = 'D'.
    WRITE WARN_MSG.
    NEW-LINE.
  ELSE.
    MESSAGE S240(S#) with WARN_MSG.
  ENDIF.
ENDIF.


write  '* Program Complete *'.
write  '(C)Copyright Business Objects S.A.  All rights reserved.'.

FORM FORM3.
DATA ALTMP975(3) TYPE C.
DATA ALTMP976(2) TYPE C.
DATA ALTMP977(1) TYPE C.
DATA ALTMP978(3) TYPE C.
DATA ALTMP979(10) TYPE N.
DATA ALTMP980(4) TYPE N.
DATA ALTMP981(10) TYPE C.
DATA ALTMP982(7) TYPE N.
DATA ALTMP983 TYPE D.
DATA ALTMP984(12) TYPE C.
DATA ALTMP985(4) TYPE N.
DATA ALTMP986(10) TYPE N.
DATA ALTMP987(4) TYPE N.
DATA ALTMP988(10) TYPE C.
DATA ALTMP989(18) TYPE C.
DATA ALTMP990(4) TYPE C.
DATA ALTMP991(5) TYPE C.
DATA ALTMP992(5) TYPE C.
DATA ALTMP993(10) TYPE C.
DATA ALTMP994(6) TYPE N.
DATA ALTMP995(12) TYPE C.
DATA ALTMP996(10) TYPE C.
DATA ALTMP997(12) TYPE C.
DATA ALTMP998(4) TYPE C.
DATA ALTMP999(4) TYPE C.
DATA ALTMP1000(4) TYPE C.
DATA ALTMP1001(4) TYPE C.
DATA ALTMP1002(4) TYPE C.
DATA ALTMP1003(2) TYPE C.
DATA ALTMP1004(2) TYPE C.
DATA ALTMP1005(4) TYPE C.
DATA ALTMP1006(10) TYPE C.
DATA ALTMP1007(8) TYPE N.
DATA ALTMP1008(12) TYPE C.
DATA ALTMP1009(10) TYPE C.
DATA ALTMP1010(6) TYPE C.
DATA ALTMP1011(10) TYPE C.
DATA ALTMP1012(10) TYPE C.
DATA ALTMP1013(10) TYPE C.
DATA ALTMP1014(16) TYPE P DECIMALS 0.
DATA ALTMP1015(4) TYPE C.
DATA ALTMP1016(2) TYPE C.
DATA ALTMP1017(18) TYPE C.
DATA ALTMP1018(18) TYPE C.
DATA ALTMP1019(1) TYPE C.
DATA ALTMP1020(3) TYPE C.
DATA ALTMP1021(2) TYPE C.
DATA ALTMP1022(10) TYPE C.
DATA ALTMP1023(4) TYPE C.
DATA ALTMP1024(4) TYPE C.
DATA ALTMP1025(4) TYPE C.
DATA ALTMP1026(4) TYPE C.
DATA ALTMP1027(2) TYPE C.
DATA ALTMP1028(10) TYPE C.
DATA ALTMP1029(9) TYPE C.
DATA ALTMP1030(6) TYPE C.
DATA ALTMP1031(3) TYPE C.
DATA ALTMP1032(3) TYPE C.
DATA ALTMP1033(3) TYPE C.
DATA ALTMP1034(16) TYPE P DECIMALS 3.
DATA ALTMP1035(16) TYPE P DECIMALS 2.
DATA ALTMP1036(16) TYPE P DECIMALS 2.
DATA ALTMP1037(16) TYPE P DECIMALS 2.
DATA ALTMP1038(16) TYPE P DECIMALS 2.
DATA ALTMP1039(16) TYPE P DECIMALS 2.
DATA ALTMP1040(16) TYPE P DECIMALS 2.
DATA ALTMP1041(16) TYPE P DECIMALS 2.
DATA ALTMP1042(16) TYPE P DECIMALS 2.
DATA ALTMP1043(16) TYPE P DECIMALS 2.
DATA ALTMP1044(16) TYPE P DECIMALS 2.
DATA ALTMP1045(16) TYPE P DECIMALS 2.
DATA ALTMP1046(16) TYPE P DECIMALS 2.
DATA ALTMP1047(16) TYPE P DECIMALS 2.
DATA ALTMP1048(16) TYPE P DECIMALS 2.
DATA ALTMP1049(16) TYPE P DECIMALS 2.
DATA ALTMP1050(16) TYPE P DECIMALS 2.
DATA ALTMP1051(16) TYPE P DECIMALS 2.
DATA ALTMP1052(16) TYPE P DECIMALS 2.
DATA ALTMP1053(16) TYPE P DECIMALS 2.
DATA ALTMP1054(16) TYPE P DECIMALS 2.
DATA ALTMP1055(16) TYPE P DECIMALS 2.
DATA ALTMP1056(16) TYPE P DECIMALS 2.
DATA ALTMP1057(16) TYPE P DECIMALS 2.
DATA ALTMP1058(16) TYPE P DECIMALS 2.
DATA ALTMP1059(16) TYPE P DECIMALS 2.
DATA ALTMP1060(16) TYPE P DECIMALS 2.
DATA ALTMP1061(16) TYPE P DECIMALS 3.
DATA ALTMP1062(4) TYPE C.
DATA ALTMP1063(4) TYPE C.
DATA ALTMP1064(4) TYPE C.
DATA ALTMP1065(4) TYPE C.
DATA ALTMP1066(4) TYPE C.
DATA ALTMP1067(40) TYPE C.
DATA ALTMP1068(40) TYPE C.
DATA ALTMP1069(255) TYPE C.
DATA ALTMP1070(40) TYPE C.
DATA ALTMP1071(255) TYPE C.

DATA CE210009MANDT LIKE CE21000-MANDT.
DATA CE210009PALEDGER LIKE CE21000-PALEDGER.
DATA CE210009VRGAR LIKE CE21000-VRGAR.
DATA CE210009VERSI LIKE CE21000-VERSI.
DATA CE210009PAOBJNR LIKE CE21000-PAOBJNR.
DATA CE210009PASUBNR LIKE CE21000-PASUBNR.
DATA CE210009BELNR LIKE CE21000-BELNR.
DATA CE210009PERBL LIKE CE21000-PERBL.
DATA CE210009HZDAT LIKE CE21000-HZDAT.
DATA CE210009USNAM LIKE CE21000-USNAM.
DATA CE210009GJAHR LIKE CE21000-GJAHR.
DATA CE210009PAPAOBJNR LIKE CE21000-PAPAOBJNR.
DATA CE210009PAPASUBNR LIKE CE21000-PAPASUBNR.
DATA CE210009KNDNR LIKE CE21000-KNDNR.
DATA CE210009ARTNR LIKE CE21000-ARTNR.
DATA CE210009FKART LIKE CE21000-FKART.
DATA CE210009FRWAE LIKE CE21000-FRWAE.
DATA CE210009REC_WAERS LIKE CE21000-REC_WAERS.
DATA CE210009KAUFN LIKE CE21000-KAUFN.
DATA CE210009KDPOS LIKE CE21000-KDPOS.
DATA CE210009RKAUFNR LIKE CE21000-RKAUFNR.
DATA CE210009SKOST LIKE CE21000-SKOST.
DATA CE210009PRZNR LIKE CE21000-PRZNR.
DATA CE210009BUKRS LIKE CE21000-BUKRS.
DATA CE210009KOKRS LIKE CE21000-KOKRS.
DATA CE210009WERKS LIKE CE21000-WERKS.
DATA CE210009GSBER LIKE CE21000-GSBER.
DATA CE210009VKORG LIKE CE21000-VKORG.
DATA CE210009VTWEG LIKE CE21000-VTWEG.
DATA CE210009SPART LIKE CE21000-SPART.
DATA CE210009HRKFT LIKE CE21000-HRKFT.
DATA CE210009KSTAR LIKE CE21000-KSTAR.
DATA CE210009PSPNR LIKE CE21000-PSPNR.
DATA CE210009KSTRG LIKE CE21000-KSTRG.
DATA CE210009RBELN LIKE CE21000-RBELN.
DATA CE210009RPOSN LIKE CE21000-RPOSN.
DATA CE210009PRCTR LIKE CE21000-PRCTR.
DATA CE210009PPRCTR LIKE CE21000-PPRCTR.
DATA CE210009RKESTATU LIKE CE21000-RKESTATU.
DATA CE210009TIMESTMP LIKE CE21000-TIMESTMP.
DATA CE210009AUART LIKE CE21000-AUART.
DATA CE210009BEMOT LIKE CE21000-BEMOT.
DATA CE210009EQUNR LIKE CE21000-EQUNR.
DATA CE210009PRODH LIKE CE21000-PRODH.
DATA CE210009WW001 LIKE CE21000-WW001.
DATA CE210009WW002 LIKE CE21000-WW002.
DATA CE210009WW003 LIKE CE21000-WW003.
DATA CE210009WW004 LIKE CE21000-WW004.
DATA CE210009WW005 LIKE CE21000-WW005.
DATA CE210009WW006 LIKE CE21000-WW006.
DATA CE210009WW007 LIKE CE21000-WW007.
DATA CE210009VKBUR LIKE CE21000-VKBUR.
DATA CE210009KTGRD LIKE CE21000-KTGRD.
DATA CE210009KUNWE LIKE CE21000-KUNWE.
DATA CE210009MATKL LIKE CE21000-MATKL.
DATA CE210009WW008 LIKE CE21000-WW008.
DATA CE210009WW009 LIKE CE21000-WW009.
DATA CE210009VV010_ME LIKE CE21000-VV010_ME.
DATA CE210009ABSMG_ME LIKE CE21000-ABSMG_ME.
DATA CE210009VV010001 LIKE CE21000-VV010001.
DATA CE210009VV100001 LIKE CE21000-VV100001.
DATA CE210009VV110001 LIKE CE21000-VV110001.
DATA CE210009VV200001 LIKE CE21000-VV200001.
DATA CE210009VV300001 LIKE CE21000-VV300001.
DATA CE210009VV400001 LIKE CE21000-VV400001.
DATA CE210009VV500001 LIKE CE21000-VV500001.
DATA CE210009VV600001 LIKE CE21000-VV600001.
DATA CE210009VV120001 LIKE CE21000-VV120001.
DATA CE210009VV101001 LIKE CE21000-VV101001.
DATA CE210009VV199001 LIKE CE21000-VV199001.
DATA CE210009VV111001 LIKE CE21000-VV111001.
DATA CE210009VV112001 LIKE CE21000-VV112001.
DATA CE210009VV113001 LIKE CE21000-VV113001.
DATA CE210009VV114001 LIKE CE21000-VV114001.
DATA CE210009VV115001 LIKE CE21000-VV115001.
DATA CE210009VV116001 LIKE CE21000-VV116001.
DATA CE210009VV117001 LIKE CE21000-VV117001.
DATA CE210009VV118001 LIKE CE21000-VV118001.
DATA CE210009VV130001 LIKE CE21000-VV130001.
DATA CE210009VV140001 LIKE CE21000-VV140001.
DATA CE210009VV150001 LIKE CE21000-VV150001.
DATA CE210009VV650001 LIKE CE21000-VV650001.
DATA CE210009VV700001 LIKE CE21000-VV700001.
DATA CE210009VV710001 LIKE CE21000-VV710001.
DATA CE210009VV720001 LIKE CE21000-VV720001.
DATA CE210009VV730001 LIKE CE21000-VV730001.
DATA CE210009ABSMG001 LIKE CE21000-ABSMG001.
DATA ZSTC_SALE_019BUKRS LIKE ZSTC_SALES_COMP-BUKRS.
DATA ZSTC_SALE_019VKORG LIKE ZSTC_SALES_COMP-VKORG.
DATA ZSTC_SALE_019WERKS LIKE ZSTC_SALES_COMP-WERKS.
DATA ZSTC_SALE_019EKORG LIKE ZSTC_SALES_COMP-EKORG.
DATA ZSTC_SALE_019MAMUSERCMPY LIKE ZSTC_SALES_COMP-MAMUSERCMPY.
DATA ZSTC_SALE_019REGION LIKE ZSTC_SALES_COMP-REGION.
DATA ZSTC_SALE_019COUNTRY LIKE ZSTC_SALES_COMP-COUNTRY.
DATA ZSTC_SALE_019COUNTRYDSCR LIKE ZSTC_SALES_COMP-COUNTRYDSCR.
DATA ZSTC_SALE_019SALESCOMPANY LIKE ZSTC_SALES_COMP-SALESCOMPANY.
DATA ZSTC_SALE_019SALESCMPDSCR LIKE ZSTC_SALES_COMP-SALESCMPDSCR.



SELECT
  CE210009~MANDT
  CE210009~PALEDGER
  CE210009~VRGAR
  CE210009~VERSI
  CE210009~PAOBJNR
  CE210009~PASUBNR
  CE210009~BELNR
  CE210009~PERBL
  CE210009~HZDAT
  CE210009~USNAM
  CE210009~GJAHR
  CE210009~PAPAOBJNR
  CE210009~PAPASUBNR
  CE210009~KNDNR
  CE210009~ARTNR
  CE210009~FKART
  CE210009~FRWAE
  CE210009~REC_WAERS
  CE210009~KAUFN
  CE210009~KDPOS
  CE210009~RKAUFNR
  CE210009~SKOST
  CE210009~PRZNR
  CE210009~BUKRS
  CE210009~KOKRS
  CE210009~WERKS
  CE210009~GSBER
  CE210009~VKORG
  CE210009~VTWEG
  CE210009~SPART
  CE210009~HRKFT
  CE210009~KSTAR
  CE210009~PSPNR
  CE210009~KSTRG
  CE210009~RBELN
  CE210009~RPOSN
  CE210009~PRCTR
  CE210009~PPRCTR
  CE210009~RKESTATU
  CE210009~TIMESTMP
  CE210009~AUART
  CE210009~BEMOT
  CE210009~EQUNR
  CE210009~PRODH
  CE210009~WW001
  CE210009~WW002
  CE210009~WW003
  CE210009~WW004
  CE210009~WW005
  CE210009~WW006
  CE210009~WW007
  CE210009~VKBUR
  CE210009~KTGRD
  CE210009~KUNWE
  CE210009~MATKL
  CE210009~WW008
  CE210009~WW009
  CE210009~VV010_ME
  CE210009~ABSMG_ME
  CE210009~VV010001
  CE210009~VV100001
  CE210009~VV110001
  CE210009~VV200001
  CE210009~VV300001
  CE210009~VV400001
  CE210009~VV500001
  CE210009~VV600001
  CE210009~VV120001
  CE210009~VV101001
  CE210009~VV199001
  CE210009~VV111001
  CE210009~VV112001
  CE210009~VV113001
  CE210009~VV114001
  CE210009~VV115001
  CE210009~VV116001
  CE210009~VV117001
  CE210009~VV118001
  CE210009~VV130001
  CE210009~VV140001
  CE210009~VV150001
  CE210009~VV650001
  CE210009~VV700001
  CE210009~VV710001
  CE210009~VV720001
  CE210009~VV730001
  CE210009~ABSMG001
  ZSTC_SALE_019~BUKRS
  ZSTC_SALE_019~VKORG
  ZSTC_SALE_019~WERKS
  ZSTC_SALE_019~EKORG
  ZSTC_SALE_019~MAMUSERCMPY
  ZSTC_SALE_019~REGION
  ZSTC_SALE_019~COUNTRY
  ZSTC_SALE_019~COUNTRYDSCR
  ZSTC_SALE_019~SALESCOMPANY
  ZSTC_SALE_019~SALESCMPDSCR
into (CE210009MANDT,
  CE210009PALEDGER,
  CE210009VRGAR,
  CE210009VERSI,
  CE210009PAOBJNR,
  CE210009PASUBNR,
  CE210009BELNR,
  CE210009PERBL,
  CE210009HZDAT,
  CE210009USNAM,
  CE210009GJAHR,
  CE210009PAPAOBJNR,
  CE210009PAPASUBNR,
  CE210009KNDNR,
  CE210009ARTNR,
  CE210009FKART,
  CE210009FRWAE,
  CE210009REC_WAERS,
  CE210009KAUFN,
  CE210009KDPOS,
  CE210009RKAUFNR,
  CE210009SKOST,
  CE210009PRZNR,
  CE210009BUKRS,
  CE210009KOKRS,
  CE210009WERKS,
  CE210009GSBER,
  CE210009VKORG,
  CE210009VTWEG,
  CE210009SPART,
  CE210009HRKFT,
  CE210009KSTAR,
  CE210009PSPNR,
  CE210009KSTRG,
  CE210009RBELN,
  CE210009RPOSN,
  CE210009PRCTR,
  CE210009PPRCTR,
  CE210009RKESTATU,
  CE210009TIMESTMP,
  CE210009AUART,
  CE210009BEMOT,
  CE210009EQUNR,
  CE210009PRODH,
  CE210009WW001,
  CE210009WW002,
  CE210009WW003,
  CE210009WW004,
  CE210009WW005,
  CE210009WW006,
  CE210009WW007,
  CE210009VKBUR,
  CE210009KTGRD,
  CE210009KUNWE,
  CE210009MATKL,
  CE210009WW008,
  CE210009WW009,
  CE210009VV010_ME,
  CE210009ABSMG_ME,
  CE210009VV010001,
  CE210009VV100001,
  CE210009VV110001,
  CE210009VV200001,
  CE210009VV300001,
  CE210009VV400001,
  CE210009VV500001,
  CE210009VV600001,
  CE210009VV120001,
  CE210009VV101001,
  CE210009VV199001,
  CE210009VV111001,
  CE210009VV112001,
  CE210009VV113001,
  CE210009VV114001,
  CE210009VV115001,
  CE210009VV116001,
  CE210009VV117001,
  CE210009VV118001,
  CE210009VV130001,
  CE210009VV140001,
  CE210009VV150001,
  CE210009VV650001,
  CE210009VV700001,
  CE210009VV710001,
  CE210009VV720001,
  CE210009VV730001,
  CE210009ABSMG001,
  ZSTC_SALE_019BUKRS,
  ZSTC_SALE_019VKORG,
  ZSTC_SALE_019WERKS,
  ZSTC_SALE_019EKORG,
  ZSTC_SALE_019MAMUSERCMPY,
  ZSTC_SALE_019REGION,
  ZSTC_SALE_019COUNTRY,
  ZSTC_SALE_019COUNTRYDSCR,
  ZSTC_SALE_019SALESCOMPANY,
  ZSTC_SALE_019SALESCMPDSCR)
FROM ZSTC_SALES_COMP AS ZSTC_SALE_019
 INNER JOIN CE21000 AS CE210009
 ON ( CE210009~VKORG = ZSTC_SALE_019~VKORG )
WHERE ( ( CE210009~TIMESTMP >= $PARAM1 )
 AND ( ( CE210009~VTWEG = '11' )
 AND ( NOT ( ( CE210009~VKORG like '%04' ) )
 AND ( NOT ( ( CE210009~VKORG like '%03' ) )
 AND NOT ( ( CE210009~VKORG like '%02' ) ) ) ) ) ).
ALTMP975 = CE210009MANDT.
ALTMP976 = CE210009PALEDGER.
ALTMP977 = CE210009VRGAR.
ALTMP978 = CE210009VERSI.
ALTMP979 = CE210009PAOBJNR.
ALTMP980 = CE210009PASUBNR.
ALTMP981 = CE210009BELNR.
ALTMP982 = CE210009PERBL.
ALTMP983 = CE210009HZDAT.
ALTMP984 = CE210009USNAM.
ALTMP985 = CE210009GJAHR.
ALTMP986 = CE210009PAPAOBJNR.
ALTMP987 = CE210009PAPASUBNR.
ALTMP988 = CE210009KNDNR.
ALTMP989 = CE210009ARTNR.
ALTMP990 = CE210009FKART.
ALTMP991 = CE210009FRWAE.
ALTMP992 = CE210009REC_WAERS.
ALTMP993 = CE210009KAUFN.
ALTMP994 = CE210009KDPOS.
ALTMP995 = CE210009RKAUFNR.
ALTMP996 = CE210009SKOST.
ALTMP997 = CE210009PRZNR.
ALTMP998 = CE210009BUKRS.
ALTMP999 = CE210009KOKRS.
ALTMP1000 = CE210009WERKS.
ALTMP1001 = CE210009GSBER.
ALTMP1002 = CE210009VKORG.
ALTMP1003 = CE210009VTWEG.
ALTMP1004 = CE210009SPART.
ALTMP1005 = CE210009HRKFT.
ALTMP1006 = CE210009KSTAR.
ALTMP1007 = CE210009PSPNR.
ALTMP1008 = CE210009KSTRG.
ALTMP1009 = CE210009RBELN.
ALTMP1010 = CE210009RPOSN.
ALTMP1011 = CE210009PRCTR.
ALTMP1012 = CE210009PPRCTR.
ALTMP1013 = CE210009RKESTATU.
ALTMP1014 = CE210009TIMESTMP.
ALTMP1015 = CE210009AUART.
ALTMP1016 = CE210009BEMOT.
ALTMP1017 = CE210009EQUNR.
ALTMP1018 = CE210009PRODH.
ALTMP1019 = CE210009WW001.
ALTMP1020 = CE210009WW002.
ALTMP1021 = CE210009WW003.
ALTMP1022 = CE210009WW004.
ALTMP1023 = CE210009WW005.
ALTMP1024 = CE210009WW006.
ALTMP1025 = CE210009WW007.
ALTMP1026 = CE210009VKBUR.
ALTMP1027 = CE210009KTGRD.
ALTMP1028 = CE210009KUNWE.
ALTMP1029 = CE210009MATKL.
ALTMP1030 = CE210009WW008.
ALTMP1031 = CE210009WW009.
ALTMP1032 = CE210009VV010_ME.
ALTMP1033 = CE210009ABSMG_ME.
ALTMP1034 = CE210009VV010001.
ALTMP1035 = CE210009VV100001.
ALTMP1036 = CE210009VV110001.
ALTMP1037 = CE210009VV200001.
ALTMP1038 = CE210009VV300001.
ALTMP1039 = CE210009VV400001.
ALTMP1040 = CE210009VV500001.
ALTMP1041 = CE210009VV600001.
ALTMP1042 = CE210009VV120001.
ALTMP1043 = CE210009VV101001.
ALTMP1044 = CE210009VV199001.
ALTMP1045 = CE210009VV111001.
ALTMP1046 = CE210009VV112001.
ALTMP1047 = CE210009VV113001.
ALTMP1048 = CE210009VV114001.
ALTMP1049 = CE210009VV115001.
ALTMP1050 = CE210009VV116001.
ALTMP1051 = CE210009VV117001.
ALTMP1052 = CE210009VV118001.
ALTMP1053 = CE210009VV130001.
ALTMP1054 = CE210009VV140001.
ALTMP1055 = CE210009VV150001.
ALTMP1056 = CE210009VV650001.
ALTMP1057 = CE210009VV700001.
ALTMP1058 = CE210009VV710001.
ALTMP1059 = CE210009VV720001.
ALTMP1060 = CE210009VV730001.
ALTMP1061 = CE210009ABSMG001.
ALTMP1062 = ZSTC_SALE_019BUKRS.
ALTMP1063 = ZSTC_SALE_019VKORG.
ALTMP1064 = ZSTC_SALE_019WERKS.
ALTMP1065 = ZSTC_SALE_019EKORG.
ALTMP1066 = ZSTC_SALE_019MAMUSERCMPY.
ALTMP1067 = ZSTC_SALE_019REGION.
ALTMP1068 = ZSTC_SALE_019COUNTRY.
ALTMP1069 = ZSTC_SALE_019COUNTRYDSCR.
ALTMP1070 = ZSTC_SALE_019SALESCOMPANY.
ALTMP1071 = ZSTC_SALE_019SALESCMPDSCR.
 move ALTMP975 to ITAB3-MANDT.
 move ALTMP976 to ITAB3-PALEDGER.
 move ALTMP977 to ITAB3-VRGAR.
 move ALTMP978 to ITAB3-VERSI.
 move ALTMP979 to ITAB3-PAOBJNR.
 move ALTMP980 to ITAB3-PASUBNR.
 move ALTMP981 to ITAB3-BELNR.
 move ALTMP982 to ITAB3-PERBL.
 move ALTMP983 to ITAB3-HZDAT.
 move ALTMP984 to ITAB3-USNAM.
 move ALTMP985 to ITAB3-GJAHR.
 move ALTMP986 to ITAB3-PAPAOBJNR.
 move ALTMP987 to ITAB3-PAPASUBNR.
 move ALTMP988 to ITAB3-KNDNR.
 move ALTMP989 to ITAB3-ARTNR.
 move ALTMP990 to ITAB3-FKART.
 move ALTMP991 to ITAB3-FRWAE.
 move ALTMP992 to ITAB3-REC_WAERS.
 move ALTMP993 to ITAB3-KAUFN.
 move ALTMP994 to ITAB3-KDPOS.
 move ALTMP995 to ITAB3-RKAUFNR.
 move ALTMP996 to ITAB3-SKOST.
 move ALTMP997 to ITAB3-PRZNR.
 move ALTMP998 to ITAB3-BUKRS.
 move ALTMP999 to ITAB3-KOKRS.
 move ALTMP1000 to ITAB3-WERKS.
 move ALTMP1001 to ITAB3-GSBER.
 move ALTMP1002 to ITAB3-VKORG.
 move ALTMP1003 to ITAB3-VTWEG.
 move ALTMP1004 to ITAB3-SPART.
 move ALTMP1005 to ITAB3-HRKFT.
 move ALTMP1006 to ITAB3-KSTAR.
 move ALTMP1007 to ITAB3-PSPNR.
 move ALTMP1008 to ITAB3-KSTRG.
 move ALTMP1009 to ITAB3-RBELN.
 move ALTMP1010 to ITAB3-RPOSN.
 move ALTMP1011 to ITAB3-PRCTR.
 move ALTMP1012 to ITAB3-PPRCTR.
 move ALTMP1013 to ITAB3-RKESTATU.
 move ALTMP1014 to ITAB3-TIMESTMP.
 move ALTMP1015 to ITAB3-AUART.
 move ALTMP1016 to ITAB3-BEMOT.
 move ALTMP1017 to ITAB3-EQUNR.
 move ALTMP1018 to ITAB3-PRODH.
 move ALTMP1019 to ITAB3-WW001.
 move ALTMP1020 to ITAB3-WW002.
 move ALTMP1021 to ITAB3-WW003.
 move ALTMP1022 to ITAB3-WW004.
 move ALTMP1023 to ITAB3-WW005.
 move ALTMP1024 to ITAB3-WW006.
 move ALTMP1025 to ITAB3-WW007.
 move ALTMP1026 to ITAB3-VKBUR.
 move ALTMP1027 to ITAB3-KTGRD.
 move ALTMP1028 to ITAB3-KUNWE.
 move ALTMP1029 to ITAB3-MATKL.
 move ALTMP1030 to ITAB3-WW008.
 move ALTMP1031 to ITAB3-WW009.
 move ALTMP1032 to ITAB3-VV010_ME.
 move ALTMP1033 to ITAB3-ABSMG_ME.
 move ALTMP1034 to ITAB3-VV010001.
 move ALTMP1035 to ITAB3-VV100001.
 move ALTMP1036 to ITAB3-VV110001.
 move ALTMP1037 to ITAB3-VV200001.
 move ALTMP1038 to ITAB3-VV300001.
 move ALTMP1039 to ITAB3-VV400001.
 move ALTMP1040 to ITAB3-VV500001.
 move ALTMP1041 to ITAB3-VV600001.
 move ALTMP1042 to ITAB3-VV120001.
 move ALTMP1043 to ITAB3-VV101001.
 move ALTMP1044 to ITAB3-VV199001.
 move ALTMP1045 to ITAB3-VV111001.
 move ALTMP1046 to ITAB3-VV112001.
 move ALTMP1047 to ITAB3-VV113001.
 move ALTMP1048 to ITAB3-VV114001.
 move ALTMP1049 to ITAB3-VV115001.
 move ALTMP1050 to ITAB3-VV116001.
 move ALTMP1051 to ITAB3-VV117001.
 move ALTMP1052 to ITAB3-VV118001.
 move ALTMP1053 to ITAB3-VV130001.
 move ALTMP1054 to ITAB3-VV140001.
 move ALTMP1055 to ITAB3-VV150001.
 move ALTMP1056 to ITAB3-VV650001.
 move ALTMP1057 to ITAB3-VV700001.
 move ALTMP1058 to ITAB3-VV710001.
 move ALTMP1059 to ITAB3-VV720001.
 move ALTMP1060 to ITAB3-VV730001.
 move ALTMP1061 to ITAB3-ABSMG001.
 move ALTMP1062 to ITAB3-Z_BUKRS.
 move ALTMP1063 to ITAB3-Z_VKORG.
 move ALTMP1064 to ITAB3-Z_WERKS.
 move ALTMP1065 to ITAB3-Z_EKORG.
 move ALTMP1066 to ITAB3-Z_MAMUSERCMPY.
 move ALTMP1067 to ITAB3-Z_REGION.
 move ALTMP1068 to ITAB3-Z_COUNTRY.
 move ALTMP1069 to ITAB3-Z_COUNTRYDSCR.
 move ALTMP1070 to ITAB3-Z_SALESCOMPANY.
 move ALTMP1071 to ITAB3-Z_SALESCMPDSCR.
 append ITAB3.
 cntbuf = cntbuf + 1.
 if download = 'N'.
  if cntbuf > 5000.
    perform FORM4.
    clear cntbuf.
    refresh ITAB3.
    append_flag = 'A'.
  endif.
 endif.
 if download = 'S'.
  if cntbuf > P_PKGSZ.
    perform FORM4.
    clear cntbuf.
    refresh ITAB3.
  endif.
 endif.
ENDSELECT.
ENDFORM.

FORM FORM4.
data: outfile(512), ldfile(50).
ldfile = 'Z_SAP_CP1_CE21000_D'.
concatenate out_dir ldfile into outfile
  separated by '/'.
  IF DOWNLOAD = 'S'.
     DATA: error_message(700),mtext(800),iEOP(1).
     CALL FUNCTION P_SRVFM
          DESTINATION P_DEST
          KEEPING LOGICAL UNIT OF WORK
          EXPORTING
            EOS = last_batch
          IMPORTING
            EOP = iEOP
          TABLES
            E_TABLE = ITAB3
          EXCEPTIONS
            READ_ERROR = 1
            SYSTEM_FAILURE = 2
            MESSAGE error_message
            COMMUNICATION_FAILURE = 3
            MESSAGE error_message
            OTHERS = 4.

     IF sy-subrc ne 0.
        Case sy-subrc.
        when 1.
        CONCATENATE
        'Data Services read error. '
        'Check Data Services error log.'
        INTO mtext.
        MESSAGE  E240(S#) WITH mtext.
        when 2.
        CONCATENATE
'SAP System Failure while calling DS remote function: '
      error_message INTO mtext.
        MESSAGE  E240(S#) WITH mtext.
        when 3.
        CONCATENATE
'SAP System Failure while calling DS remote function: '
      error_message INTO mtext.
        MESSAGE  E240(S#) WITH mtext.
        when 4.
        MESSAGE  E240(S#) WITH
'Other SAP System Failure while calling DS remote function.'.
        endcase.
      ENDIF.
      IF iEOP = 'X'.
         PERFORM DISCONNECT_RFCDEST_FROM_PROGID.
         LEAVE PROGRAM.
       ENDIF.
  ELSE.
data  dlmtlen type i value '1'.
data xdlmtlen type i value '1'.
data:
  ht(1) type c,
  xht(1) type x,
  conv type ref to cl_abap_conv_in_ce.
xht = '7F'.
conv = cl_abap_conv_in_ce=>create(
  encoding = '1100'
  input = xht
).
call method conv->read(
  exporting n    = xdlmtlen
  importing data = ht
            len = dlmtlen
).
data return_code type i.
 perform write_delimited_file
           tables   ITAB3
           using    outfile
                    append_flag
                    ht
                    dlmtlen
                    download
           changing return_code.

  case return_code.
    when 1.
      IF EXECMODE = 'D'.
        WRITE: /5 'No line selected'.
      ELSE.
        MESSAGE E047(S#).
      ENDIF.
    when 2.
      IF EXECMODE = 'D'.
        WRITE: /5 'Open File Error -- ', 25 OUTFILE.
      ELSE.
        MESSAGE  E084(E0) WITH OUTFILE.
      ENDIF.
    when 3.
      IF EXECMODE = 'D'.
        WRITE: /5 'Data exceed length limit (8192) '.
      ELSE.
        MESSAGE  E240(S#) WITH
             'Data exceed length limit (8192) '.
      ENDIF.
    when 4.
      IF EXECMODE = 'D'.
        WRITE: /5 'Call function WS_DOWNLOAD error'.
      ELSE.
        MESSAGE  E240(S#) WITH
             'Call function WS_DOWNLOAD error'.
      ENDIF.
  endcase.
 ENDIF.
ENDFORM.

FORM SUBSTRING USING SRC BEG LEN CHANGING RET.

DATA: VA1 TYPE I.
DATA: VA2 TYPE I.
DATA: VA3 TYPE I.

VA3 = STRLEN( SRC ).

IF  BEG = 0.   VA1 = 0.
ELSE.
  IF  BEG < 0.
    VA1 = VA3 + BEG.
    IF  VA1 < 0.   VA1 = 0.
    ENDIF.
  ELSE.          VA1 = BEG - 1.
  ENDIF.
ENDIF.

IF  LEN < 0.   VA2 = 0.
ELSE.          VA2 = VA3 - VA1.
ENDIF.

IF  VA2 > LEN. VA2 = LEN.
ENDIF.

IF  VA2 < 1.   MOVE ''           TO RET.
ELSE.          MOVE SRC+VA1(VA2) TO RET.
ENDIF.

ENDFORM.

form write_delimited_file
           tables   datatab
           using    file
                    append
                    delimit
                    dlength
                    dwnload
          changing rc.

  data: type1,
        appd(1),
        temp(32),
        time1(8),
        date1(10),
        output(8192),
        rcount type i,
        offset type i,
        tablen type i,
        maxlen type i value '8192'.

  data: begin of clientab occurs 0,
             output(8192),
          end of clientab.

  field-symbols: <f>.
  field-symbols <delim1>.
  data delim2(16).
  data l_filename type string.

  appd = append.
  if appd is not initial.
     appd = 'X'.
  endif.
  move file to l_filename.
  describe table datatab lines tablen.


  if dwnload = 'Y'.
     clear clientab. refresh clientab.
     rcount = 0.
  else.
     if appd = space.
   open dataset file for output in text mode ENCODING UTF-8.
     else.
    open dataset file for appending in text mode ENCODING UTF-8.
     endif.
     if sy-subrc <> 0.
         rc = 2. exit.
     endif.
  endif.

  loop at datatab.
    clear: tablen, offset, output.
    do.
      assign component sy-index of
         structure datatab to <f>.
      if sy-subrc <> 0. exit. endif.
      if sy-index > 1.
         assign delimit(dlength) TO <delim1> CASTING TYPE C.
         delim2 = <delim1>.
         write delim2(dlength) to output+offset(dlength).
         add dlength to offset.
      endif.

      describe field <f> type type1.

      if type1 = 'I' or type1 = 'N'.
          type1 = 'P'.
      endif.

      case type1.
        when 'D'.
          if <f> = '00000000'.
             <f> = ' '.
          else.
             move <f> to time1.
             assign time1 to <f>.
          endif.
        when 'F'.
          if <f> = '0.0'.
            temp = '0.0'.
          else.
             write <f> to temp exponent 0.
          endif.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
        when 'P'.
          if <f> < 0.
             write '-' to output+offset(1).
             add 1 to offset.
             <f> = <f> * ( -1 ).
          endif.
          move <f> to temp.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
      endcase.

      sy-fdpos = strlen( <f> ).

      tablen = offset + sy-fdpos.
      if tablen > maxlen.
         rc = 3. exit.
      endif.
      write <f> to output+offset(sy-fdpos).
      add sy-fdpos to offset.
    enddo.

    if dwnload = 'Y'.
       clientab-output = output.
       append clientab.
       rcount = rcount + 1.
       if rcount >= 50.
          SY-BATCH = SPACE.
          CALL FUNCTION 'GUI_DOWNLOAD'
            EXPORTING
              FILENAME = l_filename
              FILETYPE = 'ASC'
              CODEPAGE = '4110'
              APPEND   = appd
              WRITE_FIELD_SEPARATOR = 'X'
*            IMPORTING
*              FILELENGTH =
            TABLES
              DATA_TAB = clientab
            EXCEPTIONS
              OTHERS = 1.
          if sy-subrc <> 0.
             rc = 4.
          endif.
          clear clientab. refresh clientab.
          rcount = 0. appd = 'A'.
       endif.
    else.
       transfer output to file.
    endif.
  endloop.

  if dwnload = 'Y'.
       SY-BATCH = SPACE.
       CALL FUNCTION 'GUI_DOWNLOAD'
         EXPORTING
           FILENAME = l_filename
           FILETYPE = 'ASC'
              CODEPAGE = '4110'
           APPEND   = appd
           WRITE_FIELD_SEPARATOR = 'X'
*         IMPORTING
*           FILELENGTH =
         TABLES
           DATA_TAB = clientab
         EXCEPTIONS
           OTHERS = 1.
          if sy-subrc <> 0.
             rc = 4.
          endif.
  else.
       close dataset file.
  endif.
endform.

FORM CONNECT_RFCDEST_TO_PROGID.
 INCLUDE rfctypes.

 DATA: len     type i,
       R3NAME(4),
       SYSTNR(2),
       uid     LIKE SYS_UID,
       options LIKE RFCOPT,
       isunicode  TYPE n.

 DATA: NTOTAL     LIKE GWY_STRUCT-NOREG,
       GWY_GWHOST LIKE GWY_STRUCT-GWHOST,
       GWY_GWSERV LIKE GWY_STRUCT-GWSERV,
       GWY_TPNAME LIKE GWY_SYSTEM-TPNAME.

 TABLES: RFCSI.

* Check program ID
 IF P_PROGID = SPACE.							
    RAISE INVALID_PROGRAM_ID.
 ENDIF.

* determine if the RFC destination authority
  CALL FUNCTION 'RFC_READ_TCPIP_DESTINATION'
       EXPORTING destination = P_DEST
                 authority_check = 'X'
  IMPORTING rfcunicode = isunicode.

* Use current gateway if no info exits
 IF P_GWHOST = SPACE OR P_GWSERV = SPACE.
  CALL FUNCTION 'RFC_SYSTEM_INFO'
      IMPORTING
          RFCSI_EXPORT = RFCSI.

  len = strlen( rfcsi-rfcdest ) - 2.
  systnr = rfcsi-rfcdest+len.
  len = len - 1 - 3.
  r3name = rfcsi-rfcdest+len(3).
  len = len - 1.
  options-rfcgwhost = rfcsi-rfcdest(len).
  CONCATENATE 'sapgw' SYSTNR INTO options-rfcgwserv.
 ELSE.
   options-rfcgwhost = P_GWHOST.
   options-rfcgwserv = P_GWSERV.
 ENDIF.

* Parameters for GWY function call
  GWY_GWHOST = OPTIONS-RFCGWHOST.
  GWY_GWSERV = OPTIONS-RFCGWSERV.
  GWY_TPNAME = P_PROGID.

* Check gateway and server program registered
  CALL FUNCTION 'GWY_GET_NO_REG_PROGRAMS'
     EXPORTING
        GWHOST      = GWY_GWHOST
        GWSERV      = GWY_GWSERV
        TPNAME      = GWY_TPNAME
     IMPORTING
        NOREG_TOTAL = NTOTAL
     EXCEPTIONS
        OTHERS      = 1.

  IF sy-subrc NE 0.
     raise CONNECT_TO_GATEWAY_FAILED.
  ENDIF.

  IF NTOTAL = 0.
     raise SERVER_NOT_REGISTERED.
  ENDIF.

  IF NTOTAL GT 1.
     raise DUPLICATE_REG_PROGRAMS.
  ENDIF.

* build new connection to a registered server
  options-rfcexec   = gwy_tpname.
  options-rfcgwhost = gwy_gwhost.
  options-rfcgwserv = gwy_gwserv.
  options-rfchost   = '%%RFCSERVER%%'.
  IF P_SNC_ON = 'X'.
    options-rfcsnc  = 'X'.
  ENDIF.

  CALL 'RFCControl' ID 'CODE' FIELD 'O'
                    ID 'DESTINATION' FIELD P_DEST
                    ID 'TYPE' FIELD rfctype_external_tcp
                    ID 'OPTIONS' FIELD options.

  IF sy-subrc NE 0.
     RAISE CONNECT_TO_REG_SERVER_FAILED.
   ENDIF.

* and set exclusive mode to keep server owned
  CALL FUNCTION 'SYSTEM_SET_REG_SERVER_PROPERTY'
      EXPORTING  destination = P_DEST
                 exclusiv    = 'Y'
      EXCEPTIONS connect_to_reg_server_failed = 1
                 exclusiv_not_supported       = 2.

  IF SY-SUBRC NE 0.
     CASE SY-SUBRC.
          WHEN 1.
              RAISE CONNECT_TO_REG_SERVER_FAILED.
          WHEN 2.
              RAISE EXCLUSIV_NOT_SUPPORTED.
     ENDCASE.
  ENDIF.

ENDFORM.

FORM DISCONNECT_RFCDEST_FROM_PROGID.
* set exclusive mode to E to end the session
  CALL FUNCTION 'SYSTEM_SET_REG_SERVER_PROPERTY'
     EXPORTING
         destination = P_DEST
         exclusiv    = 'E'
     EXCEPTIONS
         connect_to_reg_server_failed = 1				
         exclusiv_not_supported       = 2.
ENDFORM.
