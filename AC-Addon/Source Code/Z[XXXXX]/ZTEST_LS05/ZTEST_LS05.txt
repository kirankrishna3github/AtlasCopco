*&---------------------------------------------------------------------*
*& Report  ZTEST_LS05
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  ZTEST_LS05.


*----------------------------------------------------------------------*
* 定义结构
*----------------------------------------------------------------------*

DATA: IT_DATA TYPE STANDARD TABLE OF STRING,
      WA_DATA LIKE LINE OF IT_DATA.
DATA :TAB_NAME TYPE STRING.
FIELD-SYMBOLS:<FS_DNY_TAB> TYPE STANDARD  TABLE.
FIELD-SYMBOLS:<DYN_WA> TYPE ANY.
DATA: DYN_TABLE TYPE REF TO DATA. "内表结构
DATA: DY_LINE TYPE REF TO DATA. "内表结构
*----------------------------------------------------------------------*
* 选择文件路径
*----------------------------------------------------------------------*
SELECTION-SCREEN BEGIN OF BLOCK BLK1 WITH FRAME TITLE TEXT-001.
  PARAMETER C_1 RADIOBUTTON GROUP C1.
  PARAMETER C_2 RADIOBUTTON GROUP C1.
  PARAMETER C_3 RADIOBUTTON GROUP C1.
SELECTION-SCREEN END OF BLOCK BLK1.

PARAMETERS: P_FILE TYPE RLGRAP-FILENAME.


*----------------------------------------------------------------------*
* AT SELECTION-SCREEN ON VALUE-REQUEST
*----------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.

  CALL FUNCTION 'F4_FILENAME'
    EXPORTING
      FIELD_NAME = 'P_FILE'
    IMPORTING
      FILE_NAME  = P_FILE.

*----------------------------------------------------------------------*
* START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.
DATA l_name TYPE string.
l_name = P_FILE.

CASE 'X'.
  WHEN C_1.
    TAB_NAME = 'YSE_FORWARDER_MN'.
  WHEN C_2.
    TAB_NAME = 'YSE_FORWARDER_CN'.
  WHEN OTHERS.
ENDCASE.

CREATE DATA DYN_TABLE TYPE TABLE OF (TAB_NAME).
ASSIGN DYN_TABLE->* TO <FS_DNY_TAB>.

 CREATE DATA DY_LINE LIKE LINE OF <FS_DNY_TAB>.
  ASSIGN DY_LINE->* TO <DYN_WA>.

DATA: it_name TYPE STANDARD TABLE OF YSE_FORWARDER_MN.

CALL FUNCTION 'GUI_UPLOAD'
  EXPORTING
    FILENAME                      = l_name
    FILETYPE                      = 'ASC'
*   HAS_FIELD_SEPARATOR           = 'X'
*    HEADER_LENGTH                 = 3
*   READ_BY_LINE                  = 'X'
*   DAT_MODE                      = ' '
    CODEPAGE                      = '8400'
*   IGNORE_CERR                   = ABAP_TRUE
*    REPLACEMENT                   = ','
*   CHECK_BOM                     = ' '
*   VIRUS_SCAN_PROFILE            =
*   NO_AUTH_CHECK                 = ' '
* IMPORTING
*   FILELENGTH                    =
*   HEADER                        =
  TABLES
    DATA_TAB                      = IT_DATA
 EXCEPTIONS
   FILE_OPEN_ERROR               = 1
   FILE_READ_ERROR               = 2
   NO_BATCH                      = 3
   GUI_REFUSE_FILETRANSFER       = 4
   INVALID_TYPE                  = 5
   NO_AUTHORITY                  = 6
   UNKNOWN_ERROR                 = 7
   BAD_DATA_FORMAT               = 8
   HEADER_NOT_ALLOWED            = 9
   SEPARATOR_NOT_ALLOWED         = 10
   HEADER_TOO_LONG               = 11
   UNKNOWN_DP_ERROR              = 12
   ACCESS_DENIED                 = 13
   DP_OUT_OF_MEMORY              = 14
   DISK_FULL                     = 15
   DP_TIMEOUT                    = 16
   OTHERS                        = 17
          .
IF SY-SUBRC <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.
DATA str1 TYPE STRING.
DATA str2 TYPE STRING.

IF IT_DATA IS  INITIAL.
  MESSAGE ' No data in the file' TYPE 'S' DISPLAY LIKE 'E'.
  LEAVE LIST-PROCESSING.
ELSE.

   FIELD-SYMBOLS:<FS_STRING> TYPE any.
   DATA l_num TYPE i.
   DATA it_splt TYPE STANDARD TABLE OF string.
   DATA wa_splt TYPE string.
  LOOP AT IT_DATA INTO WA_DATA.

       SPLIT WA_DATA AT CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB INTO table it_splt.
       loop at it_splt INTO wa_splt.
         l_num = SY-tabix + 1.
        ASSIGN COMPONENT l_num  OF STRUCTURE <DYN_WA> TO <FS_STRING>.
         IF <FS_STRING> IS ASSIGNED.
           <FS_STRING> = wa_splt.
         ENDIF.
       endloop.
       APPEND <DYN_WA> to <FS_DNY_TAB>.
       CLEAR:it_splt,<DYN_WA>.
  ENDLOOP.

ENDIF.
DATA MESSAGE TYPE STRING.
DATA L_STRING TYPE STRING.
DATA L_STRING2 TYPE STRING.
L_NUM = LINES( <FS_DNY_TAB> ).
INSERT (TAB_NAME) FROM TABLE <FS_DNY_TAB> ACCEPTING DUPLICATE KEYS.
L_STRING = L_NUM - SY-DBCNT.
L_STRING2 = SY-DBCNT.
CONCATENATE  'SUCCESS:'L_STRING2 'ERROR:'L_STRING INTO L_STRING SEPARATED BY SPACE.
WRITE: 'INSERT TABLE:', TAB_NAME,/,L_STRING.

*Text symbol text：

*001:Table choice
*Selection text：
*C_1:        YSE_FORWARDER_MN
*C_2:        YSE_FORWARDER_CN
*C_3:        YSE_FORWARDER_RN
*P_FILE:        FILE CHOICE
