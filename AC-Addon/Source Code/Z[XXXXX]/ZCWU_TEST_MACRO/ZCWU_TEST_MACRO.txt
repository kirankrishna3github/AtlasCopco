*&---------------------------------------------------------------------*
*& Report  ZCWU_TEST_MACRO
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  zcwu_test_macro.

TABLES: smodilog,
        smodisrc,
        d020t,
        d020s.
DATA: lv_dynpro_prog(44) TYPE c.
DATA: lv_sql TYPE string.
PARAMETERS:
  p_sql TYPE char200.

START-OF-SELECTION.
  DATA: LT_FILEDS TYPE STANDARD TABLE OF D021S,
        LT_FLOWLOGIC TYPE  DYN_FLOWLIST,
        lt_PARAMS      TYPE STANDARD TABLE OF D023S.


  DATA: LS_D020S  TYPE D020S,
        LV_DESCRIPT TYPE D020T-DTXT,
        FILE  TYPE RLGRAP-FILENAME VALUE 'C:\ABAP\SCREEN\100.txt'.

*  SELECT SINGLE *
*    FROM D020S
*    INTO LS_D020S
*    WHERE PROG  = 'ZCWU_SQL_TOOL'
*      AND DNUM  = '0100'.

 SELECT SINGLE DTXT
   FROM D020T
   INTO LV_DESCRIPT
    WHERE PROG  = 'ZCWU_SQL_TOOL'
      AND DYNR  = '0100'.

      lv_dynpro_prog       = 'ZCWU_SQL_TOOL'. "ls_program-name.
      lv_dynpro_prog+40(4) = '0100'.          "ls_program-dynr.

      IMPORT DYNPRO ls_d020s LT_FILEDS LT_FLOWLOGIC lt_PARAMS
             ID lv_dynpro_prog.

      IF sy-subrc = 0.
        PERFORM dynpro_download USING LS_D020S
                                      LV_DESCRIPT
                                      FILE
                                CHANGING LT_FILEDS
                                         LT_FLOWLOGIC
                                         lt_PARAMS .
      ENDIF.




*  DEFINE sql.
*    DATA: lv_string TYPE string.
*    lv_string = ( &1 ).
**    lv_string.
**  EXEC SQL PERFORMING evaluate.
**      (&1)
***  SELECT * FROM spfli INTO :wa
**  ENDEXEC.
*  END-OF-DEFINITION.
*
*  DATA wa TYPE spfli.
*  lv_sql = 'SELECT * FROM spfli INTO :wa'. "p_sql.
*  sql lv_sql.

**&---------------------------------------------------------------------*
**&      Form  evaluate
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
*FORM evaluate.
*  WRITE: / wa-carrid,  wa-connid.
*ENDFORM.                    "evaluate




*  EXEC SQL
*  ENDEXEC.
*&---------------------------------------------------------------------*
*&      Form  DYNPRO_DOWNLOAD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DYNPRO_DOWNLOAD USING header TYPE D020S
                           DESCRIPT TYPE D020T-DTXT
                           file     TYPE RLGRAP-FILENAME
                        CHANGING fields type table
                               flowlogic type DYN_FLOWLIST
                               PARAMS TYPE table.
  CONSTANTS:
             stars(64)          VALUE
'****************************************************************',
                                                            "#EC NOTEXT
  comment1(64)       VALUE
'*   THIS FILE IS GENERATED BY THE SCREEN PAINTER.              *',
                                                            "#EC NOTEXT
           comment2(64)       VALUE
'*   NEVER CHANGE IT MANUALLY, PLEASE !                         *',
 dynpro_text(8)     VALUE '%_DYNPRO',             "#EC NOTEXT
           header_text(8)     VALUE '%_HEADER',             "#EC NOTEXT
           params_text(8)     VALUE '%_PARAMS',             "#EC NOTEXT
           descript_text(13)  VALUE '%_DESCRIPTION',        "#EC NOTEXT
           fields_text(8)     VALUE '%_FIELDS',             "#EC NOTEXT
           kreuz(1)           VALUE 'x',                    "#EC NOTEXT
           flowlogic_text(11) VALUE '%_FLOWLOGIC'.          "#EC NOTEXT
  DATA  prog_len     TYPE p.
  DATA  header_char LIKE scr_chhead.
  DATA  status.
  DATA  fields_char LIKE scr_chfld OCCURS 0 WITH HEADER LINE.
  DATA  dynp_char LIKE scr_chfld OCCURS 0 WITH HEADER LINE.
  DATA: filename TYPE string,
        ls_params TYPE D023S,
        ls_flowlogic  TYPE D022S ,
        path     TYPE string,
        fullpath TYPE string,
        user_action TYPE i.
  DATA: filter TYPE string,
        filelength type i.

  CALL FUNCTION 'RS_SCRP_HEADER_RAW_TO_CHAR'
       EXPORTING
            header_int  = header
       IMPORTING
            header_char = header_char
       EXCEPTIONS
            OTHERS      = 1.

  REFRESH dynp_char.

* Comment
  dynp_char = stars.    APPEND dynp_char.
  dynp_char = comment1. APPEND dynp_char.
  dynp_char = comment2. APPEND dynp_char.
  dynp_char = stars.    APPEND dynp_char.

* Identification
  dynp_char = dynpro_text.      APPEND dynp_char.          "  '%_DYNPRO'
  dynp_char = header_char-prog. APPEND dynp_char.
  dynp_char = header_char-dnum. APPEND dynp_char.
  dynp_char = sy-saprl.         APPEND dynp_char.
  DESCRIBE FIELD d020t-prog LENGTH prog_len IN CHARACTER MODE.
  dynp_char(16) = prog_len.      APPEND dynp_char.

* Header
  dynp_char = header_text.      APPEND dynp_char.     "  '%_HEADER'
  APPEND header_char TO dynp_char.

* Description
  dynp_char = descript_text.    APPEND dynp_char.     "  '%_DESCRIPTION'
  APPEND descript TO dynp_char.

* Fieldlist
  dynp_char = fields_text.          "  '%_FIELDS'
  APPEND dynp_char.
  CALL FUNCTION 'RS_SCRP_FIELDS_RAW_TO_CHAR'
       TABLES
            fields_int  = fields
            fields_char = fields_char
       EXCEPTIONS
            OTHERS      = 1.

  LOOP AT fields_char.
    APPEND fields_char TO dynp_char.
  ENDLOOP.

* Flowlogic
  dynp_char = flowlogic_text.         "  '%_FLOWLOGIC'
  APPEND dynp_char.

  LOOP AT flowlogic INTO ls_flowlogic.
    APPEND ls_flowlogic TO dynp_char.
  ENDLOOP.

* Dynpro Parameters
  dynp_char = params_text.
  APPEND dynp_char.

  LOOP AT params INTO ls_params.
    APPEND ls_params TO dynp_char.
  ENDLOOP.

* Download  (ab 5.0 mittels GUI_DOWNLOAD anstelle von DOWNLOAD
  fullpath = file.
  CALL FUNCTION 'GUI_DOWNLOAD'
       EXPORTING
            filename = fullpath
            filetype = 'ASC'
            write_field_separator = 'X'
            trunc_trailing_blanks = 'X'
       importing
            filelength = filelength
       TABLES
            data_tab = dynp_char
       EXCEPTIONS
            OTHERS   = 1.
  IF sy-subrc <> 0.
    IF sy-msgty <> space.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
        RAISING not_executed.
    ELSE.
      MESSAGE s604(eu) RAISING not_executed.
*         Aktion abgebrochen
    ENDIF.
  else.
    message s606(eu) with filelength.
  ENDIF.
ENDFORM.                    " DYNPRO_DOWNLOAD
