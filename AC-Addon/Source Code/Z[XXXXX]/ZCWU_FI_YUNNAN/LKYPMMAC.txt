*----------------------------------------------------------------------*
*   INCLUDE LKYPMMAC                                                   *
*----------------------------------------------------------------------*

*-----------------------------------------------------------------------
* Konstanten f¨¹r Segmentbezeichner
TYPES: __y_seg_name(40) TYPE c.
CONSTANTS:
   BEGIN OF __c_segment,
     BEGIN OF import,
       definition  TYPE __y_seg_name VALUE 'IMPORT: DEFINITION',
       check       TYPE __y_seg_name VALUE 'IMPORT: CHECK     ',
       generate    TYPE __y_seg_name VALUE 'IMPORT: GENERATE  ',
     END   OF import,
     BEGIN OF start,
       init        TYPE __y_seg_name VALUE 'START: INITIALISATION ',
       variables   TYPE __y_seg_name VALUE 'START: VARIABLES      ',
       sel         TYPE __y_seg_name VALUE 'START: SEL            ',
       selektion   TYPE __y_seg_name VALUE 'START: DATA SELECTION ',
     END   OF start,
   END   OF __c_segment.

*-----------------------------------------------------------------------
* Globale Datenfelder f¨¹r Performancemessungen
DATA: __performance_mode           TYPE i,
      __segment_active_flag(1)     TYPE c.

*-----------------------------------------------------------------------
* TRACE einschalten
DEFINE rkd_performance_trace_on.
  if &2 eq 'P'.

    call function 'RKD_PERFORMANCE_TRACE_ON'
         exporting
              i_segment_key         = &1
         importing
              e_performance_mode    = __performance_mode
              e_segment_active_flag = __segment_active_flag.

    if __segment_active_flag eq 'X'.
      set run time analyzer on.        "MODE __PERFORMANCE_MODE.
    endif.

  endif.
END-OF-DEFINITION.

*-----------------------------------------------------------------------
* TRACE ausschalten
DEFINE rkd_performance_trace_off.
  if &2 eq 'P'.

    call function 'RKD_PERFORMANCE_TRACE_OFF'
         exporting
              i_segment_key = &1.

  endif.
END-OF-DEFINITION.

*-----------------------------------------------------------------------
* TRACE initialisieren
DEFINE rkd_performance_init.

  call function 'RKD_PERFORMANCE_INIT'
       importing
            e_rkb1d_test   = &1
       exceptions
            abnormal_leave = 01.
  check sy-subrc = 0.

END-OF-DEFINITION.

*-----------------------------------------------------------------------
* TRACE beenden
DEFINE rkd_performance_end.

  if &1 eq 'P'.
    call function 'RKD_PERFORMANCE_END'.
  endif.

END-OF-DEFINITION.

*-----------------------------------------------------------------------
* TRACE starten
DEFINE rkd_performance_start.

  if &1 eq 'P'.
    call function 'RKD_PERFORMANCE_START'.
  endif.

END-OF-DEFINITION.
