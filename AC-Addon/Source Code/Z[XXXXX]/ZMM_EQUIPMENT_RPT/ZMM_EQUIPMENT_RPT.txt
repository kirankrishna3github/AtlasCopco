*&---------------------------------------------------------------------*
*& Report  ZPK_EQUIPMENT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  zmm_equipment_rpt.

TYPE-POOLS: slis.

*Tables Decerations.
TABLES: t399i.

*Types Declerations.
TYPES: BEGIN OF ty_equz,
         equnr TYPE equnr,
         datbi TYPE datbi,
         tdline TYPE tdline,
       END OF ty_equz.

*Internal Table Declerations.
DATA: t_equz TYPE STANDARD TABLE OF ty_equz INITIAL SIZE 0,
      t_final TYPE STANDARD TABLE OF ty_equz INITIAL SIZE 0,
      t_lines LIKE STANDARD TABLE OF tline WITH HEADER LINE,
      t_fieldcat TYPE slis_t_fieldcat_alv,
      w_fieldcat TYPE slis_fieldcat_alv,
      w_final TYPE ty_equz,
      w_equz TYPE ty_equz.

*Global Variables.
DATA: lv_name TYPE tdobname.


*Global Constants.
CONSTANTS: c_date(10) TYPE c        VALUE '31.12.9999',
           c_intv     TYPE tdid     VALUE 'INTV',
           c_e        TYPE spras    VALUE 'E',
           c_equi     TYPE tdobject VALUE 'EQUI'.


*Selection screen Design.
SELECTION-SCREEN: BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.
SELECT-OPTIONS: s_werks FOR t399i-iwerk DEFAULT 'ADEA'.
SELECTION-SCREEN: END OF BLOCK b1.


*Screen Events.
AT SELECTION-SCREEN.
  PERFORM validate_screen_fields.

START-OF-SELECTION.
  PERFORM build_records.
  PERFORM build_fieldcat USING t_fieldcat.
  PERFORM alv_display.


*&---------------------------------------------------------------------*
*&      Form  BUILD_FIELDCAT
*&---------------------------------------------------------------------*
*       Field Catalog.
*----------------------------------------------------------------------*
FORM build_fieldcat CHANGING t_fieldcat TYPE slis_t_fieldcat_alv.

*Local Variables.
  DATA: col_pos TYPE i.

*Equipment.
  col_pos = '1'.
  w_fieldcat-col_pos       = col_pos.
  w_fieldcat-seltext_m     = text-006.
  w_fieldcat-fieldname     = 'EQUNR'.
  w_fieldcat-tabname       = 'T_FINAL'.
  w_fieldcat-outputlen     = '18'.
  APPEND w_fieldcat TO t_fieldcat.
  CLEAR  w_fieldcat.

*Internal Note.
  col_pos = col_pos + 1.
  w_fieldcat-col_pos       = col_pos.
  w_fieldcat-seltext_m     = text-007.
  w_fieldcat-fieldname     = 'TDLINE'.
  w_fieldcat-tabname       = 'T_FINAL'.
  w_fieldcat-outputlen     = '50'.
  APPEND w_fieldcat TO t_fieldcat.
  CLEAR: w_fieldcat,
         col_pos.

ENDFORM.                    " BUILD_FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  BUILD_RECORDS
*&---------------------------------------------------------------------*
*       Fetching records for processing.
*----------------------------------------------------------------------*
FORM build_records .

*Selecting the equipments from Equipment time segment table based on plant.
  SELECT equnr
         datbi
         FROM equz
         INTO TABLE t_equz
         WHERE iwerk IN s_werks.
  IF sy-subrc = 0.
    SORT t_equz BY equnr.
  ENDIF.


  LOOP AT t_equz INTO w_equz.
*Checking for the latest equipment.
    CHECK w_equz-datbi GE c_date.
    lv_name = w_equz-equnr.

    REFRESH : t_lines[].
*Retrieving the Internal Note.
    CALL FUNCTION 'READ_TEXT'
      EXPORTING
        client                  = sy-mandt
        id                      = c_intv
        language                = c_e
        name                    = lv_name
        object                  = c_equi
        archive_handle          = 0
      TABLES
        lines                   = t_lines[]
      EXCEPTIONS
        id                      = 1
        language                = 2
        name                    = 3
        not_found               = 4
        object                  = 5
        reference_check         = 6
        wrong_access_to_archive = 7
        OTHERS                  = 8.

    IF sy-subrc = 0.
      IF NOT t_lines[] IS INITIAL.
        READ TABLE t_lines INDEX 1.
        IF sy-subrc = 0.
          IF NOT t_lines-tdline IS INITIAL.
            w_final-equnr = w_equz-equnr.
            w_final-tdline = t_lines-tdline.
            APPEND w_final TO t_final.
            CLEAR: w_final.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " BUILD_RECORDS
*&---------------------------------------------------------------------*
*&      Form  ALV_DISPLAY
*&---------------------------------------------------------------------*
*       ALV Display.
*----------------------------------------------------------------------*
FORM alv_display .

*Local Variables.
  DATA: lv_prog TYPE sy-repid.

*Table for Events.
  DATA: t_events TYPE slis_t_event,
        w_events TYPE slis_alv_event.

*ALV Events.
  CLEAR: w_events.
  w_events-form = slis_ev_top_of_page.
  w_events-name = 'TOP_OF_PAGE'.
  APPEND w_events TO t_events.

  lv_prog = sy-repid.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program     = lv_prog
      i_callback_top_of_page = 'TOP_OF_PAGE'
      i_grid_title           = text-005
      it_fieldcat            = t_fieldcat[]
      it_events              = t_events[]
    TABLES
      t_outtab               = t_final[]
    EXCEPTIONS
      program_error          = 1
      OTHERS                 = 2.

  IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
ENDFORM.                    " ALV_DISPLAY

*&-------------------------------------------------------------------*
*&      Form  TOP_OF_PAGE
*&-------------------------------------------------------------------*
*       text
*--------------------------------------------------------------------*
FORM top_of_page.

*Local variables.
  DATA: lv_date(2),
        lv_month(2),
        lv_year(4),
        v_date(10).

* ALV header declarations
  DATA: t_header      TYPE slis_t_listheader,
        wa_header     TYPE slis_listheader.

* Header details.
  wa_header-typ  = 'S'.
  wa_header-key  = text-003.
  wa_header-info = sy-uname.
  APPEND wa_header TO t_header.
  CLEAR: wa_header.

*Item Details.
  lv_date = sy-datum+6(2).
  lv_month = sy-datum+4(2).
  lv_year = sy-datum(4).
  CONCATENATE lv_date '/' lv_month '/' lv_year INTO v_date.

  wa_header-typ  = 'S'.
  wa_header-key  = text-004.
  wa_header-info = v_date.
  APPEND wa_header TO t_header.
  CLEAR: wa_header.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = t_header.

ENDFORM.                    "TOP_OF_PAGE
*&---------------------------------------------------------------------*
*&      Form  VALIDATE_SCREEN_FIELDS
*&---------------------------------------------------------------------*
*       Validate Screen Fields.
*----------------------------------------------------------------------*
FORM validate_screen_fields .

*Local Variable.
  DATA: lv_werks TYPE iwerk.

  IF NOT s_werks-low IS INITIAL.
    SELECT SINGLE iwerk FROM t399i
                INTO lv_werks WHERE iwerk IN s_werks.

    IF sy-subrc NE 0.
      IF NOT s_werks-high IS INITIAL.
        MESSAGE e001(00) WITH text-002 s_werks-low 'to' s_werks-high.
      ELSE.
        MESSAGE e001(00) WITH text-002 s_werks-low.
      ENDIF.
    ENDIF.
  ELSE.
    MESSAGE e001(00) WITH text-008.
  ENDIF.

ENDFORM.                    " VALIDATE_SCREEN_FIELDS

*Text symbol text£º
*001:Screen Inputs.
*002:Entered Plant is Invalid:
*003:Executed by:
*004:Execution Date:
*005:Equipments with Internal Note
*006:Equipment Number
*007:Internal Note

*008:Please enter the Lower limit.
*Selection text£º
*S_WERKS:D       .
