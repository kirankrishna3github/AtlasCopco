*&---------------------------------------------------------------------*
*& Report  ZAL_ABAP
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT ZAL_ABAP message-id 26 line-size 255
no standard page heading.
* YBO_Company.
PARAMETER DOWNLOAD(1) DEFAULT 'N' lower case. "N-svr,Y-clnt
PARAMETER EXECMODE(1) DEFAULT 'D' lower case. "D-dlg,B-btch
PARAMETER OUT_DIR(48) DEFAULT "output file dir
'/var/load/CQ1/UK/read' lower case.
PARAMETER IN_DIR(48) DEFAULT "input file dir
'/var/load/CQ1/UK/read' lower case.

PARAMETER P_DF_VK(40) DEFAULT "R/3 Dataflow object key
'' lower case.
PARAMETER P_DI_GEN(40) DEFAULT "DI version that generated ABAP
'' lower case.

*** Machine generated ABAP. Do not modify.            ***
*** Copyright Business Objects Data Integration, Inc. ***
*
* Date Time:
*    06/15/09 15:28:52
* SAP used for generated this ABAP:
*    Release: 700
*    Host   : 10.25.3.82
*
* R3 Dataflow Name:
*    DF_R3_SDMM_Company
* R3 Dataflow comments:
*    SAP source: T001
* ABAP program name in R3:
*    YBO_COMPANY
* Generated ABAP file name:
*    D:/XI/Data Integrator/ABAP/YBO_Company
TABLES T001.

DATA: begin of ITAB2 occurs 0,
MANDT(3) TYPE C,
BUKRS(4) TYPE C,
BUTXT(25) TYPE C,
ORT01(25) TYPE C,
LAND1(3) TYPE C,
WAERS(5) TYPE C,
SPRAS(1) TYPE C,
RCOMP(6) TYPE C.
DATA: end of ITAB2.

data: append_flag(1) value ' ',
      cntbuf type i,
      delimleng type i.

CONSTANTS C_DF_VK(40) VALUE '1341'.
CONSTANTS C_DI_GEN(40) VALUE '11.7.2.3'.
DATA WARN_MSG(50).


start-of-selection.




  PERFORM FORM2.
  PERFORM FORM3.
  FREE ITAB2.

end-of-selection.

  CLEAR WARN_MSG.

  IF NOT P_DF_VK IS INITIAL.
    IF P_DF_VK <> C_DF_VK.
      CONCATENATE '$$Warning$'
                  C_DF_VK
                  '$' INTO WARN_MSG.
    ENDIF.
  ENDIF.
  IF NOT P_DI_GEN IS INITIAL.
    IF P_DI_GEN <> C_DI_GEN.
      IF WARN_MSG IS INITIAL.
        CONCATENATE '$$Warning$$'
                    C_DI_GEN
                    INTO WARN_MSG.
      ELSE.
        CONCATENATE WARN_MSG
                    C_DI_GEN
                    INTO WARN_MSG.
      ENDIF.
    ENDIF.
  ENDIF.

  IF NOT WARN_MSG IS INITIAL.
    IF EXECMODE = 'D'.
      WRITE WARN_MSG.
      NEW-LINE.
    ELSE.
      MESSAGE S000 with WARN_MSG.
    ENDIF.
  ENDIF.


  write  '* Program Complete *'.
  write  'Copyright Business Objects Data Integration, Inc.'.

*&---------------------------------------------------------------------*
*&      Form  FORM2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM FORM2.
  DATA ALTMP1(3) TYPE C.
  DATA ALTMP2(4) TYPE C.
  DATA ALTMP3(25) TYPE C.
  DATA ALTMP4(25) TYPE C.
  DATA ALTMP5(3) TYPE C.
  DATA ALTMP6(5) TYPE C.
  DATA ALTMP7(1) TYPE C.
  DATA ALTMP8(6) TYPE C.




  SELECT
    MANDT
    BUKRS
    BUTXT
    ORT01
    LAND1
    WAERS
    SPRAS
    RCOMP
  INTO CORRESPONDING FIELDS OF T001
  FROM T001
  .
    ALTMP1 = T001-MANDT.
    ALTMP2 = T001-BUKRS.
    ALTMP3 = T001-BUTXT.
    ALTMP4 = T001-ORT01.
    ALTMP5 = T001-LAND1.
    ALTMP6 = T001-WAERS.
    ALTMP7 = T001-SPRAS.
    ALTMP8 = T001-RCOMP.
    move ALTMP1 to ITAB2-MANDT.
    move ALTMP2 to ITAB2-BUKRS.
    move ALTMP3 to ITAB2-BUTXT.
    move ALTMP4 to ITAB2-ORT01.
    move ALTMP5 to ITAB2-LAND1.
    move ALTMP6 to ITAB2-WAERS.
    move ALTMP7 to ITAB2-SPRAS.
    move ALTMP8 to ITAB2-RCOMP.
    append ITAB2.
    cntbuf = cntbuf + 1.
    if download = 'N'.
      if cntbuf > 5000.
        perform FORM3.
        clear cntbuf.
        refresh ITAB2.
        append_flag = 'A'.
      endif.
    endif.
  ENDSELECT.
ENDFORM.                                                    "FORM2

*&---------------------------------------------------------------------*
*&      Form  FORM3
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM FORM3.
  data: outfile(128), ldfile(50).
  ldfile = 'T001_COMPANY'.
  concatenate out_dir ldfile into outfile
    separated by '/'.
  data  dlmtlen type i value '1'.
  data xdlmtlen type i value '1'.
  data:
    ht(1) type c,
    xht(1) type x,
    conv type ref to cl_abap_conv_in_ce.
  xht = '1E'.
  conv = cl_abap_conv_in_ce=>create(
    encoding = '1100'
    input = xht
  ).
  call method conv->read(
    exporting n    = xdlmtlen
    importing data = ht
              len = dlmtlen
  ).
  data return_code type i.
  perform write_delimited_file
            tables   ITAB2
            using    outfile
                     append_flag
                     ht
                     dlmtlen
                     download
            changing return_code.

  case return_code.
    when 1.
      IF EXECMODE = 'D'.
        WRITE: /5 'No line selected'.
      ELSE.
        MESSAGE E098.
      ENDIF.
    when 2.
      IF EXECMODE = 'D'.
        WRITE: /5 'Open File Error -- ', 25 OUTFILE.
      ELSE.
        MESSAGE  E107 WITH OUTFILE.
      ENDIF.
    when 3.
      IF EXECMODE = 'D'.
        WRITE: /5 'Data exceed length limit (8192) '.
      ELSE.
        MESSAGE  E000 WITH
             'Data exceed length limit (8192) '.
      ENDIF.
    when 4.
      IF EXECMODE = 'D'.
        WRITE: /5 'Call function WS_DOWNLOAD error'.
      ELSE.
        MESSAGE  E000 WITH
             'Call function WS_DOWNLOAD error'.
      ENDIF.
  endcase.
ENDFORM.                                                    "FORM3

*&---------------------------------------------------------------------*
*&      Form  SUBSTRING
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->SRC        text
*      -->BEG        text
*      -->LEN        text
*      -->RET        text
*----------------------------------------------------------------------*
FORM SUBSTRING USING SRC BEG LEN CHANGING RET.

  DATA: VA1 TYPE I.
  DATA: VA2 TYPE I.
  DATA: VA3 TYPE I.

  VA3 = STRLEN( SRC ).

  IF  BEG = 0.
    VA1 = 0.
  ELSE.
    IF  BEG < 0.
      VA1 = VA3 + BEG.
      IF  VA1 < 0.
        VA1 = 0.
      ENDIF.
    ELSE.
      VA1 = BEG - 1.
    ENDIF.
  ENDIF.

  IF  LEN < 0.
    VA2 = 0.
  ELSE.
    VA2 = VA3 - VA1.
  ENDIF.

  IF  VA2 > LEN.
    VA2 = LEN.
  ENDIF.

  IF  VA2 < 1.
    MOVE ''           TO RET.
  ELSE.
    MOVE SRC+VA1(VA2) TO RET.
  ENDIF.

ENDFORM.                    "SUBSTRING

*&---------------------------------------------------------------------*
*&      Form  write_delimited_file
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->DATATAB    text
*      -->FILE       text
*      -->APPEND     text
*      -->DELIMIT    text
*      -->DLENGTH    text
*      -->DWNLOAD    text
*      -->RC         text
*----------------------------------------------------------------------*
form write_delimited_file
           tables   datatab
           using    file
                    append
                    delimit
                    dlength
                    dwnload
          changing rc.

  data: type1,
        appd(1),
        temp(32),
        time1(8),
        date1(10),
        output(8192),
        rcount type i,
        offset type i,
        tablen type i,
        maxlen type i value '8192'.

  data: begin of clientab occurs 0,
             output(8192),
          end of clientab.

  field-symbols: <f>.
  field-symbols <delim1>.
  data delim2(16).
  data l_filename type string.

  appd = append.
  if appd is not initial.
    appd = 'X'.
  endif.
  move file to l_filename.
  describe table datatab lines tablen.


  if dwnload = 'Y'.
    clear clientab. refresh clientab.
    rcount = 0.
  else.
    if appd = space.
      open dataset file for output in text mode ENCODING
DEFAULT.
    else.
      open dataset file for appending in text mode ENCODING
DEFAULT.
    endif.
    if sy-subrc <> 0.
      rc = 2. exit.
    endif.
  endif.

  loop at datatab.
    clear: tablen, offset, output.
    do.
      assign component sy-index of
         structure datatab to <f>.
      if sy-subrc <> 0. exit. endif.
      if sy-index > 1.
        assign delimit(dlength) TO <delim1> CASTING TYPE C.
        delim2 = <delim1>.
        write delim2(dlength) to output+offset(dlength).
        add dlength to offset.
      endif.

      describe field <f> type type1.

      if type1 = 'I' or type1 = 'N'.
        type1 = 'P'.
      endif.

      case type1.
        when 'D'.
          if <f> = '00000000'.
            <f> = ' '.
          else.
            move <f> to time1.
            assign time1 to <f>.
          endif.
        when 'F'.
          if <f> = '0.0'.
            temp = '0.0'.
          else.
            write <f> to temp exponent 0.
          endif.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
        when 'P'.
          if <f> < 0.
            write '-' to output+offset(1).
            add 1 to offset.
            <f> = <f> * ( -1 ).
          endif.
          move <f> to temp.
          condense temp no-gaps.
          translate temp using ',.'.
          assign temp to <f>.
      endcase.

      sy-fdpos = strlen( <f> ).

      tablen = offset + sy-fdpos.
      if tablen > maxlen.
        rc = 3. exit.
      endif.
      write <f> to output+offset(sy-fdpos).
      add sy-fdpos to offset.
    enddo.

    if dwnload = 'Y'.
      clientab-output = output.
      append clientab.
      rcount = rcount + 1.
      if rcount >= 50.
        SY-BATCH = SPACE.
        CALL FUNCTION 'GUI_DOWNLOAD'
          EXPORTING
            FILENAME = l_filename
            FILETYPE = 'ASC'
            CODEPAGE = '4110'
            APPEND   = appd
            WRITE_FIELD_SEPARATOR = 'X'
*            IMPORTING
*              FILELENGTH =
          TABLES
            DATA_TAB = clientab
          EXCEPTIONS
            OTHERS = 1.
        if sy-subrc <> 0.
          rc = 4.
        endif.
        clear clientab. refresh clientab.
        rcount = 0. appd = 'A'.
      endif.
    else.
      transfer output to file.
    endif.
  endloop.

  if dwnload = 'Y'.
    SY-BATCH = SPACE.
    CALL FUNCTION 'GUI_DOWNLOAD'
      EXPORTING
        FILENAME = l_filename
        FILETYPE = 'ASC'
           CODEPAGE = '4110'
        APPEND   = appd
        WRITE_FIELD_SEPARATOR = 'X'
*         IMPORTING
*           FILELENGTH =
      TABLES
        DATA_TAB = clientab
      EXCEPTIONS
        OTHERS = 1.
    if sy-subrc <> 0.
      rc = 4.
    endif.
  else.
    close dataset file.
  endif.
endform.                    "write_delimited_file
