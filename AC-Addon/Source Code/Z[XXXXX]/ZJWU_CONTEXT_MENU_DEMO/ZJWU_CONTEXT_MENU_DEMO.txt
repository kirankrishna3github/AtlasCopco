*&---------------------------------------------------------------------*
*& Report  ZJWU_CONTEXT_MENU_DEMO
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

report  zjwu_context_menu_demo.

* Table declaration
data: i_vbak type standard table of vbak initial size 0,
      i_vbap type standard table of vbap initial size 0.

* Workarea declaration
data: w_vbak type vbak,
      w_vbap type vbap.

start-of-selection.

* Set custom status
  set pf-status 'BASIC'.

* Fetch header data
  select * from vbak
  into table i_vbak
  up to 50 rows.

  if sy-subrc = 0.

*   Fetch line item data
    select * from vbap
    into table i_vbap
    for all entries in i_vbap
    where vbeln = i_vbap-vbeln.

    check sy-subrc = 0.

*   Display basic list
    loop at i_vbak into w_vbak.
      format color col_heading.
      write : /10 w_vbak-vbeln,
               20 w_vbak-erdat,
               35 w_vbak-erzet,
               55 w_vbak-ernam.
      hide: w_vbak-vbeln.
    endloop.
  endif.

at user-command.
* handle user command
  case sy-ucomm.
    when 'DETAIL'.
      check not w_vbak is initial.

*     display detail list
      loop at i_vbap into w_vbap where vbeln =
                                  w_vbak-vbeln.
        format color col_heading.
        write : /10 w_vbap-vbeln,
                 25 w_vbap-posnr,
                 35 w_vbap-matnr,
                 55 w_vbap-matwa.
      endloop.
      window starting at 20 20
         ending  at 120 110.
  endcase.

*&---------------------------------------------------------------*
*&      Form  on_ctmenu_request
*&---------------------------------------------------------------*
*       Creation of custom context menu- It is called dynamically
*       by ABAP runtime
*----------------------------------------------------------------*
*      -->L_MENU     Handle for context menu
*----------------------------------------------------------------*
form on_ctmenu_request using l_menu type ref to cl_ctmenu.
  data lin type i.

  get cursor line lin.
  if lin > 2 and sy-lsind = 0.
*   Add menu
    call method l_menu->add_function
      exporting
        fcode = 'DETAIL'
        text  = text-001.
  endif.
*   Add menu
  call method l_menu->add_function
    exporting
      fcode = 'BACK'
      text  = text-002.
endform.                    "on_ctmenu_request

*Text symbol text£º
*001:Detail
*002:Back
