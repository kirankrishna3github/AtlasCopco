*&---------------------------------------------------------------------*
*& Report  ZCWU_TEST100
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  zcwu_test100.

TABLES: mara.
DATA: error TYPE char100.
PARAMETERS: p_test  TYPE mara-matnr,
            p_path  TYPE rlgrap-filename.


data: unixcom like   rlgrap-filename.
data: begin of tabl occurs 500,
        line(400),
      end of tabl.

 tabl-line = '/usr/sap/tmp/test/'.
 append tabl.
 unixcom = 'mkdir mydir'. "command to create dir
"to execute the unix command
call 'SYSTEM' id 'COMMAND' field unixcom
                  id 'TAB' field tabl[].

BREAK-POINT.

TRY.
    OPEN DATASET p_path MESSAGE error
      FOR OUTPUT IN BINARY MODE.
  CATCH cx_sy_file_open .
    WRITE: 'File already open'.
  CATCH cx_sy_codepage_converter_init.
    WRITE: 'Code page '.
  CATCH CX_SY_CONVERSION_CODEPAGE .
    WRITE: 'a'.
  CATCH CX_SY_PIPES_NOT_SUPPORTED .
    WRITE: 'a'.
  CATCH CX_SY_TOO_MANY_FILES .
    WRITE: 'a'.
  CATCH cx_sy_file_authority.
    WRITE: 'No authorization'.
ENDTRY.
DATA: directory TYPE BTCH0000-TEXT80,
       l_com TYPE rlgrap-filename.
directory  = '/usr/sap/tmp/test'.
IF sy-subrc <> 0.
  CALL FUNCTION 'PFL_CHECK_DIRECTORY'
     EXPORTING
       directory         = directory " Application server path(\\test\test1\test2)
     EXCEPTIONS
       pfl_dir_not_exist = 1.
  IF sy-subrc = 1.
     CONCATENATE 'cmd /c mkdir' directory INTO l_com SEPARATED BY space.
     CALL 'SYSTEM' ID 'COMMAND' FIELD l_com.
  ENDIF.
ENDIF.

TRY .
  TRANSFER sy-datum TO p_path.
CATCH CX_SY_FILE_OPEN .
  WRITE: 'FILE IS NOT OPEN!'.
CATCH CX_SY_FILE_OPEN_MODE.
  WRITE: 'Open mode is incorrect!'.
ENDTRY.

*Selection text£º
*P_TEST:D       .
