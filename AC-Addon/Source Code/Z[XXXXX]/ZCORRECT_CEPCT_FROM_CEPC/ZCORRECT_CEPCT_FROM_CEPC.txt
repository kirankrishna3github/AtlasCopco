*&---------------------------------------------------------------------*
*& Report  ZCORRECT_CEPCT_FROM_CEPC                                    *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
REPORT  ZCORRECT_CEPCT_FROM_CEPC.

TABLES: cepc, cepct.

DATA: ls_cepct LIKE cepct,
      lt_cepct LIKE TABLE OF cepct,
      ls_cepc  LIKE cepc,
      lt_cepc  LIKE TABLE OF cepc.

DATA: ld_count LIKE sy-tabix.

FIELD-SYMBOLS: <fs_cepct> LIKE cepct.

PARAMETERS: lp_kokrs LIKE cepct-kokrs OBLIGATORY,
            lp_test  TYPE flag DEFAULT 'X'.

* 1. Daten der CEPCT holen, sprachunabh#ngig
SELECT prctr datbi kokrs FROM cepct
                         INTO CORRESPONDING FIELDS OF ls_cepct
                         WHERE kokrs = lp_kokrs.
  COLLECT ls_cepct INTO lt_cepct.
ENDSELECT.

* 2. Daten der CEPC holen
SELECT * FROM cepc INTO TABLE lt_cepc
                         WHERE kokrs = lp_kokrs.

* 3. ¨¹berpr¨¹fen der Daten in CEPCT
CLEAR ld_count.

LOOP AT lt_cepct ASSIGNING <fs_cepct>.
  READ TABLE lt_cepc WITH KEY prctr = <fs_cepct>-prctr
                              datbi = <fs_cepct>-datbi
                              kokrs = <fs_cepct>-kokrs
                     TRANSPORTING NO FIELDS.

  IF NOT sy-subrc IS INITIAL.
*   Eintrag mit datbi nicht vorhanden in CEPC
    ld_count = ld_count + 1.
    IF lp_test IS INITIAL.
      DELETE FROM cepct WHERE prctr = <fs_cepct>-prctr
                          AND datbi = <fs_cepct>-datbi
                          AND kokrs = <fs_cepct>-kokrs.
    ENDIF.
  ENDIF.
ENDLOOP.

IF lp_test IS INITIAL.
  WRITE: /, ld_count, 'incorrect entries in CEPCT corrected.'.
ELSE.
  WRITE: /, ld_count, 'incorrect entries in CEPCT would be corrected.'.
ENDIF.
*&---------------------------------------------------------------------*

