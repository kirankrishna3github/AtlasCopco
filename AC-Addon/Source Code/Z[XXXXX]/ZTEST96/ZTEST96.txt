*&---------------------------------------------------------------------*
*& Report  ZTEST96                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  ZTEST96                                 .

*data: table1 type standard table of BAPICONDCT,
*      wtable1 type BAPICONDCT,
*      table2 type standard table of BAPICONDHD,
*      wtable2 type BAPICONDHD,
*      table3 type standard table of BAPICONDIT,
*      wtable3 type BAPICONDIT,
*      table4 type standard table of BAPICONDQS,
*      table5 type standard table of BAPICONDVS,
*      table6 type standard table of BAPIRET2,
*      ret type BAPIRET2,
*      table7 type standard table of BAPIKNUMHS,
*      table8 type standard table of CND_MEM_INITIAL.
*
*wtable1-table_no = '954'.
*wtable1-applicatio = 'V'.
*wtable1-cond_type = 'ZPR0'.
*wtable1-operation = '009'.
*wtable1-varkey = '13001001USD 000000000050068946'.
*wtable1-valid_to = '99991231'.
*wtable1-valid_from = '20051101'.
*wtable1-cond_no = '$000000001'.
*
*APPEND wtable1 TO table1.
*
*
*wtable2-operation = '009'.
*wtable2-cond_no = '$000000001'.
*wtable2-created_by = sy-uname.
*wtable2-creat_date = '20051022'.
*wtable2-cond_usage = 'A'.
*wtable2-table_no = '110'.
*wtable2-applicatio = 'V'.
*wtable2-cond_type = 'ZPR0'.
*wtable2-varkey = '13001001USD 000000000050068946'.
*wtable2-valid_from = '20051101'.
*wtable2-valid_to = '99991231'.
*
*
*APPEND wtable2 TO table2.
*
*
*
*wtable3-operation = '009'.
*wtable3-cond_no = '$000000001'.
*wtable3-cond_count = '01'.
*wtable3-applicatio = 'V'.
*wtable3-cond_type = 'ZPR0'.
*wtable3-scaletype = 'A'.
*wtable3-scalebasin = 'C'.
*wtable3-scale_qty = '1'.
*wtable3-cond_p_unt = '1'.
*wtable3-cond_unit = 'EA'.
*wtable3-calctypcon = 'C'.
*wtable3-cond_value = '454'.
*wtable3-condcurr = 'USD'.
*
*APPEND wtable3 TO table3.
*
*
*CALL FUNCTION 'BAPI_PRICES_CONDITIONS'
** EXPORTING
** PI_initialmode = 'X'
** PI_BLOCKNUMBER =
*TABLES
*ti_bapicondct = table1
*ti_bapicondhd = table2
*ti_bapicondit = table3
*ti_bapicondqs = table4
*ti_bapicondvs = table5
*to_bapiret2 = table6
*to_bapiknumhs = table7
*to_mem_initial = table8
*EXCEPTIONS
*update_error = 1
*OTHERS = 2
*.
*IF sy-subrc <> 0.
*MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*ENDIF.
*
*READ TABLE table6 WITH KEY type = 'E' TRANSPORTING NO FIELDS.
*
*IF sy-subrc = 0.
*
*loop at table6 into ret.
*
*write: / ret-type, ret-message, ret-id, RET-LOG_NO, RET-LOG_MSG_NO,
*RET-MESSAGE_V1, RET-MESSAGE_V2, RET-MESSAGE_V3, RET-MESSAGE_V4,
*RET-PARAMETER,RET-ROW,RET-FIELD.
*
*endloop.
*
*ELSE.
*
*CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
**EXPORTING
** WAIT =
*IMPORTING
*return = ret
*.
*ENDIF.
*
*
*
**report test.
**
*** At least the key fields of the conditiontable
*** (here 800) must be filled in structure ls_komg.
**
**data: ls_komk type komk,
**      ls_komp type komp,
**      ls_komg type komg,
**      lt_komv type standard table of komv,
**      ls_komv type komv,
**      lv_new_record(35) type kom
**
**ls_komg-vbeln = '2898'. " document number
**ls_komg-posnr = '000010'. " item number
**
***clear wt_komv.
**ls_komv-kappl = 'V '. " Application V = Sales
**ls_komv-kschl = 'ZPRO'. " Condition type
**ls_komv-waers = 'EUR'. " Currency
**ls_komv-kmein = 'ST'. " Unit of measurement
**ls_komv-kpein = '1'.
**ls_komv-krech = 'M'. " calculation type;
**"M = Quantity - monthy price
**ls_komv-kbetr = '0'. " new condition value
**
**append ls_komv to lt_komv.
**
**
**call function 'RV_CONDITION_COPY'
**exporting
**application = 'V'
**condition_table = '954' " cond. table
**condition_type = 'ZPRO' " cond. type
**date_from = '20070612' " valid on
**date_to = '20070614' " valid to
**enqueue = 'X' " lock entry
**i_komk = ls_komk
**i_komp = ls_komp
**key_fields = ls_komg " key fields
**maintain_mode = 'B' " A= create
**" B= change,
**" C= display
**" D= create with reference
**no_authority_check = 'X'
**keep_old_records = 'X'
**overlap_confirmed = 'X'
**no_db_update = space
**importing
**e_komk = ls_komk
**e_komp = ls_komp
**new_record = lv_new_record
**tables
**copy_records = lt_komv
**exceptions
**
**call function 'RV_CONDITION_SAVE'.
**call function 'RV_CONDITION_RESET'.
*** necessary to write data
**commit work.


TABLES: TRDIR.

PARAMETERS: P_PROG LIKE TRDIR-NAME OBLIGATORY.

START-OF-SELECTION.
  SELECT SINGLE * FROM TRDIR WHERE NAME = P_PROG.
  IF SY-SUBRC = 0.
    IF TRDIR-EDTX = 'X'.
      MOVE ' ' TO TRDIR-EDTX.
      MODIFY TRDIR.
      WRITE: /'Editor Lock was removed from', P_PROG.
    ELSE.
      WRITE: /'Program', P_PROG, 'does not have an Editor Lock'.
    ENDIF.
  ELSE.
    WRITE: /'No match found for program', P_PROG.
  ENDIF.
