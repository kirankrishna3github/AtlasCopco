*&---------------------------------------------------------------------*
*& Report  ZZQMEL_DEFECTS_2
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  ZZQMEL_DEFECTS_2.
* Report repairs notifications with defect status object
DATA: WA_QMEL     TYPE QMEL.
DATA: ITAB_QMEL   TYPE TABLE OF QMEL.
DATA: WA_JSTO     TYPE JSTO.
DATA: LINES       TYPE I.
DATA: WA_QMSM     TYPE QMSM.
DATA: L_STA_TAB   TYPE TABLE OF JSTAT,
      L_STA_WA    TYPE JSTAT .


CONSTANTS: C_X    TYPE C VALUE 'X'.

TABLES: QMEL, JSTO.

* Set Testmode (Testmode: Test = 'X')
PARAMETERS TESTMODE TYPE C AS CHECKBOX DEFAULT 'X'.
* Check if notification type is 02 (Quality notification)
SELECT * INTO WA_QMEL FROM QMEL WHERE HERKZ LIKE 'Q%'.
* Check if notfication has a status 'DLFL: Deletion Flag'
* (I0076).
  CALL FUNCTION 'STATUS_CHECK'
       EXPORTING
            CLIENT            = SY-MANDT
            OBJNR             = WA_QMEL-OBJNR
            STATUS            = 'I0076'
       EXCEPTIONS
            OBJECT_NOT_FOUND  = 1
            STATUS_NOT_ACTIVE = 2
            OTHERS            = 3.
  IF SY-SUBRC = 0.
* If notification has status 'DLFL', system looks for notification
* status 'OSNO: Outstanding notification' (I0068)
    CALL FUNCTION 'STATUS_CHECK'
         EXPORTING
              CLIENT            = SY-MANDT
              OBJNR             = WA_QMEL-OBJNR
              STATUS            = 'I0068'
         EXCEPTIONS
              OBJECT_NOT_FOUND  = 1
              STATUS_NOT_ACTIVE = 2
              OTHERS            = 3.
    IF SY-SUBRC = 0.
* Notification has both status 'DLFL' and 'OSNO'
      APPEND WA_QMEL TO ITAB_QMEL.
    ENDIF.
  ENDIF.
ENDSELECT.

CLEAR WA_QMEL.

* If internal table contains records, the report repairs the status of
* these affected notifications.
DESCRIBE TABLE ITAB_QMEL LINES LINES.
IF LINES > 0.
* Adapt for each affected notification the status:
* Delete status 'OSNO: Outstanding notification'.
  MOVE 'I0068' TO L_STA_WA-STAT.
  MOVE C_X TO L_STA_WA-INACT.
  APPEND L_STA_WA TO L_STA_TAB.
* Set status 'NOCO: Notification completed' (I0072)
  MOVE 'I0072' TO L_STA_WA-STAT.
  CLEAR L_STA_WA-INACT.
  APPEND L_STA_WA TO L_STA_TAB.
  LOOP AT ITAB_QMEL INTO WA_QMEL.
    CASE TESTMODE.
      WHEN C_X.
* Test mode: Displays only a list of being affected notifications.
        WRITE: / 'Notification ', WA_QMEL-QMNUM.
        WRITE: ' has status DLFL and OSNO,'.
        WRITE: 'and should be corrected.'.
      WHEN SPACE.
* Update mode: The report makes a database update and adopts status
        CALL FUNCTION 'STATUS_CHANGE_INTERN'
             EXPORTING
                  CLIENT              = SY-MANDT
                  OBJNR               = WA_QMEL-OBJNR
             TABLES
                  STATUS              = L_STA_TAB
             EXCEPTIONS
                  OBJECT_NOT_FOUND    = 1
                  STATUS_INCONSISTENT = 2
                  STATUS_NOT_ALLOWED  = 3
                  OTHERS              = 4.
        IF SY-SUBRC <> 0.
          WRITE: / 'Notification ', WA_QMEL-QMNUM, ': system could not'.
          WRITE:   ' adapt status.'.
        ELSE.
          COMMIT WORK.
          WRITE: / 'Notification ', WA_QMEL-QMNUM, ' contains now a'.
          WRITE:   ' correct status.'.
        ENDIF.
    ENDCASE.
 ENDLOOP.
ELSE.
  WRITE: / 'There are no notifications with status DLFL and OSNO.'.
  WRITE: / 'Everything is ok.'.
ENDIF.
