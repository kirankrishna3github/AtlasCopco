*&---------------------------------------------------------------------*
*& Report  ZCWU_TEST6
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  zcwu_test6.
DATA: alv_grid TYPE REF TO cl_gui_alv_grid,
      container TYPE REF TO cl_gui_custom_container,
      spfli TYPE STANDARD TABLE OF spfli .

DATA: ok_code TYPE sy-ucomm,
      save_ok TYPE sy-ucomm.

DATA: gv_str TYPE string.

*----------------------------------------------------------------------*
*       CLASS zcl_event_handle DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS zcl_event_handle DEFINITION.
  PUBLIC SECTION.
    METHODS: m_change FOR EVENT data_changed OF cl_gui_alv_grid
                IMPORTING er_data_changed
                          e_onf4
                          e_onf4_before
                          e_onf4_after
                          e_ucomm.
ENDCLASS.                    "zcl_event_handle DEFINITION

START-OF-SELECTION.

*----------------------------------------------------------------------*
*       CLASS zcl_event_handle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS zcl_event_handle IMPLEMENTATION.
  METHOD m_change.
    DATA: lv_cell TYPE lvc_s_modi.
    LOOP AT er_data_changed->mt_mod_cells INTO lv_cell.
      IF lv_cell-fieldname IS NOT INITIAL.
        CONCATENATE gv_str lv_cell-fieldname INTO gv_str.
      ENDIF.
    ENDLOOP.
  ENDMETHOD.                    "m_change
ENDCLASS.                    "zcl_event_handle IMPLEMENTATION

START-OF-SELECTION.

  CALL SCREEN 100.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'STA_100'.
  SELECT *
    FROM spfli
    INTO TABLE spfli
    UP TO 10 ROWS.
  IF container IS INITIAL.
    CREATE OBJECT container
      EXPORTING
        container_name              = 'CST'
      EXCEPTIONS
        cntl_error                  = 1
        cntl_system_error           = 2
        create_error                = 3
        lifetime_error              = 4
        lifetime_dynpro_dynpro_link = 5
        OTHERS                      = 6.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.

    CREATE OBJECT alv_grid
      EXPORTING
        i_parent          = container
      EXCEPTIONS
        error_cntl_create = 1
        error_cntl_init   = 2
        error_cntl_link   = 3
        error_dp_create   = 4
        OTHERS            = 5.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.

    CALL METHOD alv_grid->set_table_for_first_display
      EXPORTING
        i_structure_name              = 'SPFLI'
      CHANGING
        it_outtab                     = SPFLI
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        others                        = 4
            .
    IF sy-subrc <> 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

  ENDIF.
ENDMODULE.                 " STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  save_ok = ok_code.
  CLEAR ok_code.
  CASE save_ok.
    WHEN 'EXIT'.
      LEAVE PROGRAM.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
    WHEN OTHERS.
      LEAVE TO LIST-PROCESSING.
      WRITE save_ok.
  ENDCASE.
ENDMODULE.                 " USER_COMMAND_0100  INPUT
