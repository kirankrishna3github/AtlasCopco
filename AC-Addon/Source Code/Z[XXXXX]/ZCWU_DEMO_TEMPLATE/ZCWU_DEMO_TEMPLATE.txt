
**********************************************************************
* Program ID         : ZCWU_DEMO_TEMPLATE                            *
* Program Title      : CTP quotation upload program                  *
* Author             : XX XXXX XXXX                                  *
* Date               : 2016.05.01                                    *
* Change Request Nr. : CD1KXXXXXX                                    *
*====================================================================*
* Change History Log                                                 *
*--------------------------------------------------------------------*
* Mod.no.|  Date    | Name                 | Corr.Nr. |Change Ref    *
*--------------------------------------------------------------------*
* MOD-001|08.09.2010|     XX XXXX XXXX     |CD1KXXXXXX|CRXXXXXXXXXX  *
*     - include freight                                              *
*     - for CMT: copy plant of CTP to SO SAP                         *
* MOD-002|16.12.2010|     XX XXXX XXXX     |CD1KXXXXXX|CRXXXXXXXXXX  *
*     - wrong quantity input for availability check                  *
*--------------------------------------------------------------------*

REPORT  zcwu_demo_template.

INCLUDE zcwu_class_exc.

*--------------------------------------------------------------------*
*DEFINE TYPE POOL
*--------------------------------------------------------------------*
TYPE-POOLS:slis,truxs.

*--------------------------------------------------------------------*
*DEFINE TABLES
*--------------------------------------------------------------------*
*TABLES:

*--------------------------------------------------------------------*
*DEFINE CONSTANTS
*--------------------------------------------------------------------*
CONSTANTS: co_bwart_stock_trans TYPE mseg-bwart VALUE '311'.

*--------------------------------------------------------------------*
*DEFINE INTERNAL TABLES & VARIANTS
*--------------------------------------------------------------------*

*--------------------------------------------------------------------*
*DEFINE RANGES
*--------------------------------------------------------------------*

*--------------------------------------------------------------------*
*PARAMETERS
*--------------------------------------------------------------------*
SELECTION-SCREEN BEGIN OF BLOCK blk_010 WITH FRAME TITLE text-001.
PARAMETERS: p_file TYPE char128.
SELECTION-SCREEN END OF BLOCK blk_010.

*--------------------------------------------------------------------*
*INITIALIZATION
*--------------------------------------------------------------------*
INITIALIZATION.
*  PERFORM INIT_PARAMETERS.

*--------------------------------------------------------------------*
*AT SELECTION-SCREEN OUTPUT
*--------------------------------------------------------------------*
AT SELECTION-SCREEN OUTPUT.

*--------------------------------------------------------------------*
*AT SELECTION-SCREEN
*--------------------------------------------------------------------*
AT SELECTION-SCREEN.

*--------------------------------------------------------------------*
*AT SELECTION-SCREEN ON VALUE-REQUEST
*--------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_file.
  CALL FUNCTION 'KD_GET_FILENAME_ON_F4'
   EXPORTING
*     PROGRAM_NAME        = SYST-REPID
*     DYNPRO_NUMBER       = SYST-DYNNR
*     FIELD_NAME          = ' '
     static              = 'X'
*     MASK                = ' '
*     FILEOPERATION       = 'R'
*     PATH                =
    CHANGING
      file_name           = p_file
*     LOCATION_FLAG       = 'P'
*   EXCEPTIONS
*     MASK_TOO_LONG       = 1
*     OTHERS              = 2
            .
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

*--------------------------------------------------------------------*
*AT SELECTION-SCREEN ON HELP-REQUEST
*--------------------------------------------------------------------*

*--------------------------------------------------------------------*
*START-OF-SELECTION
*--------------------------------------------------------------------*
START-OF-SELECTION.

  DATA: lr_airplane TYPE REF TO lcl_airplane,
        lr_passenger  TYPE REF TO lcl_passenger_plane,
        lr_cargo      TYPE REF TO lcl_cargo_plane,
        lt_airplan  TYPE STANDARD TABLE OF REF TO lcl_airplane.

  DO 5 TIMES.
    CREATE OBJECT lr_airplane
      EXPORTING
        iv_name     = 'test'
        iv_panetype = 'MA'.
    lcl_airplane=>dispay_no_airplanes( ).
    lr_airplane->display_attributes( ).
    NEW-LINE.
    APPEND lr_airplane TO lt_airplan.
  ENDDO.

  WRITE: 'Passenger Plane:'.
  ULINE.
  CREATE OBJECT lr_passenger
    EXPORTING
      iv_name     = 'Passenger Plane'
      iv_planetype = 'MB'
      iv_maxseat  = '200'.
  lcl_airplane=>dispay_no_airplanes( ).
  lr_passenger->display_attributes( ).

  WRITE: 'Cargo Plane:'.
  ULINE.
  CREATE OBJECT lr_cargo
    EXPORTING
      iv_name      = 'Cargo'
      iv_planetype  = 'MA'
      iv_productor = 'China'.
  lcl_airplane=>dispay_no_airplanes( ).
  lr_cargo->display_attributes( ).

  WRITE: 'Carrier:'.
  ULINE.
  DATA: lr_carrier TYPE REF TO lcl_carrier.

  CREATE OBJECT lr_carrier EXPORTING im_name = 'Carrier'.
  lr_carrier->add_airplan( EXPORTING im_airplane = lr_passenger  ).
  lr_carrier->add_airplan( EXPORTING im_airplane = lr_cargo  ).

  lr_carrier->display_attributes( ).

  WRITE: 'Using Interface:'.
  ULINE.
  ULINE.
  DATA: lr_vehicel TYPE REF TO lcl_vehicel,
        lr_truck   TYPE REF TO lcl_truck,
        lr_bus     TYPE REF TO lcl_bus,
        lr_rental  TYPE REF TO lcl_rental,
        lr_agncy   TYPE REF TO lcl_travel_agency,
        li_partner  TYPE REF TO lif_partners.

  CREATE OBJECT lr_bus EXPORTING im_make = 'BUS'
                                 im_passengers = '10'.
  CREATE OBJECT lr_truck EXPORTING im_make = 'TRUCK'
                                   im_cargo = '50'.
  CREATE OBJECT lr_vehicel EXPORTING im_make = 'VEHICEL'.

  create OBJECT lr_rental EXPORTING im_name = 'RENTAL'.
  lr_rental->add_vehicel( EXPORTING im_vehicel = lr_bus ).
  lr_rental->add_vehicel( EXPORTING im_vehicel = lr_truck ).

  CREATE OBJECT lr_agncy EXPORTING im_name = 'Travel Agency'.
  lr_agncy->add_partner( EXPORTING im_partner = lr_rental ).
  lr_agncy->add_partner( EXPORTING im_partner = lr_carrier ).

  lr_agncy->display_agency_partners( ).

*--------------------------------------------------------------------*
*END-OF-SELECTION
*--------------------------------------------------------------------*
END-OF-SELECTION.
