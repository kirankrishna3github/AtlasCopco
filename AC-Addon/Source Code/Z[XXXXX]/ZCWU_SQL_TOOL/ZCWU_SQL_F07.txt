*&---------------------------------------------------------------------*
*&  Include           ZSQLEXPLORERI01
*&---------------------------------------------------------------------*
************************************************************************
*^ Written By      : Anda Wu
*^ Date Written    : 2017/05/26
*^ Include Name    : ZSQLEXPLORERI01
*^ Used in Programs: <Programs referencing this include>
*^ Purpose         : To Define Screen 100 PAI
*
*^ Other           :
************************************************************************
************************************************************************
*&      Form  EXIT_PROGRAM
************************************************************************
FORM exit_program.


*& Free All Memory Located By Objects
  PERFORM destroy_alv_object       CHANGING go_grid      .
  PERFORM destroy_editor_object    CHANGING go_editor    .
  PERFORM destroy_editor_object    CHANGING go_editor1   .
  PERFORM destroy_splitter_object  CHANGING go_splitter  .
  PERFORM destroy_splitter_object  CHANGING go_splitter1 .
  PERFORM destroy_container_object CHANGING go_container .


*& Finally Flush
  CALL METHOD cl_gui_cfw=>flush
    EXCEPTIONS
      OTHERS = 1.
  case gv_ucomm.
    WHEN 'EXIT' OR 'BREAK'.
      LEAVE PROGRAM.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
  ENDCASE.

ENDFORM.                               " EXIT_PROGRAM

************************************************************************
*&      Form  Set_Runtime
************************************************************************
FORM set_runtime_and_lines USING  pv_start  TYPE  i
                                  pv_end    TYPE  i
                                  pv_number TYPE  i .
  DATA :   lv_temp     TYPE string,
           lv_status   TYPE c   LENGTH 100,
           lv_spend    TYPE p LENGTH 12 DECIMALS 3 .

*& Set Runtime
  lv_spend  = ( pv_end  - pv_start ) / 1000000 .
  lv_temp = lv_spend .

  CONCATENATE ' Runtime :' lv_temp 'Seconds'
         INTO lv_status
    SEPARATED BY space .

*& Set The Number Of The Total Records
  lv_temp = pv_number. "l_number . MOD-ANDA 170505

  CONCATENATE lv_status ', Total Records :' lv_temp
         INTO lv_status
    SEPARATED BY space .


  PERFORM set_status_text          USING go_editor1
                                         lv_status .

ENDFORM .                    "Set_Runtime

*&---------------------------------------------------------------------*
*&      Form  DO_INITIALIZATION
*&---------------------------------------------------------------------*
*       Initial setup
*----------------------------------------------------------------------*
FORM DO_INITIALIZATION .

  DATA: ls_keyword TYPE ty_s_keyword.
  fill_keyword:
    'SELECT'        SPACE,
    'FROM'          space,
    'INNER'         space,
    'JOIN'          space,
    'ON'            space,
    'LEFT'          space,
    'OUTER'         space,
    'CLIENT'        space,
    'SPECIFIED'     space,
    'INTO'          space,
    'APPENDING'     space,
    'AND'           space,
    'OR'            space,
    'IN'            space,
    'BETWEEN'       space,
    'LIKE'          space,
    'WHERE'         space,
    'ORDER'         space,
    'BY'            space,
    'GROUP'         space,
    'HAVING'        space,
    'ASCENDING'     space,
    'DESCENDING'    space,
    'SORT'          space,
    'AS'            space,
    'SINGLE'        space,
    'DISTINCT'      space,
    'SUM'           space,
    'COUNT'         space,
    'MIN'           space,
    'MAX'           space,
    'AVG'           space.

  PERFORM app_log_initial.

  gv_maxline = 99999999.

ENDFORM.                    " DO_INITIALIZATION
*&---------------------------------------------------------------------*
*&      Form  APP_LOG_INITIAL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM APP_LOG_INITIAL .
*.. Local variables
  DATA: ls_log    TYPE bal_s_log.

  ls_log-object = 'YAM_AUTO_INST_EQUI'.

*.. Create application log
  CALL FUNCTION 'BAL_LOG_CREATE'
    EXPORTING
      i_s_log                 = ls_log
    IMPORTING
      e_log_handle            = gv_handle
    EXCEPTIONS
      log_header_inconsistent = 1
      OTHERS                  = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.                    " APP_LOG_INITIAL
*&---------------------------------------------------------------------*
*&      Form  ADD_MESSAGE_TO_LOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM ADD_MESSAGE_TO_LOG .
*.. Local variables
  DATA: ls_msg TYPE bal_s_msg.

  MOVE-CORRESPONDING syst TO ls_msg.
  CALL FUNCTION 'BAL_LOG_MSG_ADD'
    EXPORTING
*     I_LOG_HANDLE              =
      i_s_msg                   = ls_msg
*   IMPORTING
*     E_S_MSG_HANDLE            =
*     E_MSG_WAS_LOGGED          =
*     E_MSG_WAS_DISPLAYED       =
    EXCEPTIONS
      log_not_found             = 1
      msg_inconsistent          = 2
      log_is_full               = 3
      OTHERS                    = 4
            .
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.                    " ADD_MESSAGE_TO_LOG
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_APP_LOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM DISPLAY_APP_LOG .
*.. Local variables
  DATA: ls_prof TYPE bal_s_prof.

*.. Reset log indicator once displayed
*  CLEAR gv_log.

*.. Get a prepared profile
  CALL FUNCTION 'BAL_DSP_PROFILE_POPUP_GET'
    IMPORTING
      e_s_display_profile = ls_prof
    EXCEPTIONS
      OTHERS              = 1.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
             WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

*.. Use grid for display if wanted
  ls_prof-use_grid = 'X'.
  ls_prof-start_row = 1.
  ls_prof-end_row = 25.
  CLEAR ls_prof-pop_adjst.

*.. When you use also other ALV lists in your report,
*.. please specify a handle to distinguish between the display
*.. variants of these different lists, e.g:
  ls_prof-disvariant-handle = 'LOG'.

*.. Call display function module
  CALL FUNCTION 'BAL_DSP_LOG_DISPLAY'
    EXPORTING
      i_s_display_profile = ls_prof
    EXCEPTIONS
      OTHERS              = 1.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
             WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.                    " DISPLAY_APP_LOG
*&---------------------------------------------------------------------*
*&      Form  SAVE_APPLICATION_LOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM SAVE_APPLICATION_LOG .
*.. Local variables
  DATA: lt_handle TYPE bal_t_logh.

  APPEND gv_handle TO lt_handle.

  CALL FUNCTION 'BAL_DB_SAVE'
    EXPORTING
*     I_CLIENT               = SY-MANDT
      i_in_update_task       = 'X'
      i_t_log_handle         = lt_handle
*   IMPORTING
*     E_NEW_LOGNUMBERS       =
    EXCEPTIONS
      log_not_found          = 1
      save_not_allowed       = 2
      numbering_error        = 3
      OTHERS                 = 4
            .
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  COMMIT WORK.
ENDFORM.                    " SAVE_APPLICATION_LOG
