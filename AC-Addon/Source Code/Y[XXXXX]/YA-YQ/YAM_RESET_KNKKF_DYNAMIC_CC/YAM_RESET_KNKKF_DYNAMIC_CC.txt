*&---------------------------------------------------------------------*
*& Report  YAM_RESET_KNKKF_DYNAMIC_CC                                  *
*&                                                                     *
*----------------------------------------------------------------------
* PROGRAM ID           : YAM_RESET_KNKKF_DYNAMIC_CC                    *
* PROGRAM TITLE        :                                               *
* AUTHOR               : Branko Oklobdzija                             *
* DATE                 : 28/02/2008                                    *
* DEVELOPMENT ID       :                                               *
* CHANGE REQUEST NUMBER:                                               *
* PROGRAM DESCRIPTION  :Reset the external credit management           *
* assignments in tables KNKKF1 and KKNKF2 after system or client copies*                                              *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*
*                                                                      *
*----------------------------------------------------------------------*


REPORT  YAM_RESET_KNKKF_DYNAMIC_CC              .

tables:  KNKKF1 , KNKKF2, mseg.

*- DATA------------------------------------------------------------

DATA: wa type table of KNKKF1 with header line,
wa2 type table of KNKKF2 with header line,
tab_lines TYPE sy-index.
DATA: ok_code LIKE sy-ucomm,
ok_code2 LIKE sy-ucomm,
       xv_text(10) TYPE c,
       counter like sy-tabix,
ja(1) type c,
tablinesd(4) type c,
ne(2) type c.
*&---------------------------------------------------------------------*
*&      MAIN program
*&---------------------------------------------------------------------*
PARAMETERS:
*              Mjahr like MSEG-MJAHR,
logsys like T000-logsys,
TKNKKF1 RADIOBUTTON GROUP rad DEFAULT 'X',
TKNKKF2 RADIOBUTTON GROUP rad,
test LIKE mseg-kzear DEFAULT 'X'.
DATA  YES.
perform auth_check.
*START-OF-SELECTION.

select * from KNKKF1 into corresponding fields of wa where logsys = logsys.
  append wa.
endselect.

if TKNKKF1 = 'X' and test = 'X'.
  write: / 'entries to be deleted from KNKKF1(key fields)'.
  loop at wa.
    write: / sy-tabix, wa-logsys, wa-kunnr, wa-KKBER, wa-REGUL.
  endloop.
elseif TKNKKF1 = 'X' and test = ''.


  DESCRIBE TABLE wa LINES tab_lines.



  call screen 100.

  if ja = 'X'.

    Loop at wa.
      delete from KNKKF1 where logsys = wa-logsys and kunnr = wa-kunnr and KKBER = wa-KKBER  and REGUL = wa-REGUL.
      if sy-subrc ne 0.
        sy-tabix = counter.
        exit.
      endif.
    endloop.
    Loop at wa.
      if sy-tabix LE counter.
        insert into KNKKF1 values wa.

      endif.

    endloop.
  endif.

else.
******************************* TABLE KNKKF2*********************************

  select * from KNKKF2 into corresponding fields of wa2 where logsys = logsys.
    append wa.
  endselect.
  if TKNKKF2 = 'X' and test = 'X'.
    write: / 'entries to be deleted from KNKKF2(key fields)'.
    loop at wa2.
      write: / sy-tabix, wa2-logsys, wa2-kunnr, wa2-KKBER, wa2-REGUL, wa2-verzn.
    endloop.
  elseif TKNKKF2 = 'X' and test = ''.


    DESCRIBE TABLE wa2 LINES tab_lines.


    call screen 120.
    if ja = 'X'.
      Loop at wa2.
        delete  from KNKKF2 where logsys = wa2-logsys and KUNNR = wa2-KUNNR and KKBER = wa2-KKBER and REGUL = wa2-REGUL and VERZN = wa2-VERZN.
        if sy-subrc ne 0.
          sy-tabix = counter.
          exit.
        endif.
      endloop.

      Loop at wa2.
        if sy-tabix LE counter.
          insert into KNKKF2 values wa2.

        endif.
      endloop.




    endif.
  endif.
endif.



*&---------------------------------------------------------------------*
*&      Module  CLEAR_OK_CODE1  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE clear_ok_code1 OUTPUT.
  CLEAR ok_code.
  tablinesd = tab_lines.
ENDMODULE.                 " CLEAR_OK_CODE  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  CLEAR_OK_CODE2  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE clear_ok_code2 OUTPUT.
  CLEAR ok_code2.
  tablinesd = tab_lines.
ENDMODULE.                 " CLEAR_OK_CODE  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT                               *
*&---------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

  CASE ok_code.
    WHEN 'YES'.
      ja = 'X'.
      LEAVE TO SCREEN 0.
    WHEN 'NO'.
      ne = 'X'.
      LEAVE TO SCREEN 0.

  ENDCASE.
ENDMODULE.                             " USER_COMMAND_0100  INPUT



*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0120  INPUT                               *
*&---------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
MODULE user_command_0120 INPUT.

  CASE ok_code2.
    WHEN 'YES'.
      ja = 'X'.
      LEAVE TO SCREEN 0.
    WHEN 'NO'.
      ne = 'X'.
      LEAVE TO SCREEN 0.

  ENDCASE.
ENDMODULE.                             " USER_COMMAND_0120  INPUT
*&---------------------------------------------------------------------*
*&      Form  auth_check2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM auth_check.
* check if run through transactio
  IF sy-tcode <> 'YAM_RESET_KNKKF'.
    MESSAGE ID 'YSE_GENERAL' TYPE 'E' NUMBER '011'.
  ENDIF.

* check special authorization
  AUTHORITY-CHECK OBJECT 'YAM_ADMIN'
              ID 'ACTVT' FIELD '02'.

  IF SY-SUBRC = 4.
*   No authorisation to display data from Sales Organisation
*   p_vkorg
    MESSAGE ID 'YSE_GENERAL' TYPE 'E' NUMBER '011'.
  ELSEIF SY-SUBRC <> 0.
*   Error checking authorization.
    MESSAGE ID 'YSE_GENERAL' TYPE 'E' NUMBER '004'.
  ENDIF.

ENDFORM.                    "auth_check

*Selection text£º
*MJAHR:        jeahr
*TEST:        Test run
*TKNKKF1:        Delete from KNKKF1
*TKNKKF2:        Delete from KNKKF2
