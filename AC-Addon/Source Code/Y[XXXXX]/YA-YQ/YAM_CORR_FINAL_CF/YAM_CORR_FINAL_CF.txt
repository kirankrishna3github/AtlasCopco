*&---------------------------------------------------------------------*
*& Report  ZLME_TEST_GETDETAIL
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  yam_corr_final_cf.
TABLES aufk.

SELECT-OPTIONS: s_aufnr FOR aufk-aufnr.

DATA: it_methods LIKE bapi_alm_order_method OCCURS 0 WITH HEADER LINE,
      it_header  LIKE bapi_alm_order_headers_i OCCURS 0 WITH HEADER LINE,
      gt_return  TYPE bapiret2_t,
      gs_return  LIKE bapiret2,
      lv_vkorg   TYPE vkorg,
      gt_aufk TYPE TABLE OF aufk,
      gs_aufk TYPE aufk,
      lv_objnr TYPE JEST-OBJNR,
      lv_buco TYPE c,
      lv_teco TYPE c.

CONSTANTS: c_status_teco LIKE jest-stat VALUE 'I0045',
           c_status_cl LIKE jest-stat VALUE 'I0046',
           c_status_rel LIKE jest-stat VALUE 'I0002'.

SELECT * FROM aufk INTO TABLE gt_aufk
 WHERE aufnr IN s_aufnr.

LOOP AT gt_aufk INTO gs_aufk.
  CLEAR: lv_buco, lv_teco.
  CONCATENATE 'OR' gs_aufk-aufnr INTO lv_objnr.

  CALL FUNCTION 'STATUS_CHECK'
  EXPORTING
*   BYPASS_BUFFER           = ' '
*   CLIENT                  = SY-MANDT
    objnr                   = lv_objnr
    status                  = 'I0046'
 EXCEPTIONS
   object_not_found        = 1
   status_not_active       = 2
   OTHERS                  = 3
          .
  IF sy-subrc = 0.
    PERFORM cancel_buco.
    lv_buco = 'X'.
  ENDIF.

  IF lv_buco <> 'X'.
    CALL FUNCTION 'STATUS_CHECK'
    EXPORTING
*   BYPASS_BUFFER           = ' '
*   CLIENT                  = SY-MANDT
      objnr                   = lv_objnr
      status                  = 'I0045'
   EXCEPTIONS
     object_not_found        = 1
     status_not_active       = 2
     OTHERS                  = 3
            .
    IF sy-subrc = 0.
      PERFORM cancel_teco.
      lv_teco = 'X'.
    ENDIF.
  ENDIF.

  PERFORM set_cnf.

  if lv_teco = 'X' or lv_buco = 'X'.
  CALL FUNCTION 'STATUS_CHECK'
  EXPORTING
*   BYPASS_BUFFER           = ' '
*   CLIENT                  = SY-MANDT
    objnr                   = lv_objnr
    status                  = 'I0045'
 EXCEPTIONS
   object_not_found        = 1
   status_not_active       = 2
   OTHERS                  = 3
          .
  IF sy-subrc <> 0.
    PERFORM teco.
  ENDIF.
  endif.

  if lv_buco = 'X'.
  CALL FUNCTION 'STATUS_CHECK'
  EXPORTING
*   BYPASS_BUFFER           = ' '
*   CLIENT                  = SY-MANDT
    objnr                   = lv_objnr
    status                  = 'I0046'
 EXCEPTIONS
   object_not_found        = 1
   status_not_active       = 2
   OTHERS                  = 3
          .
  IF sy-subrc <> 0.
    PERFORM buco.
  ENDIF.
  endif.
ENDLOOP.

*&---------------------------------------------------------------------*
*&      Form  CANCEL_BUCO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM cancel_buco.

  DATA: gt_status TYPE STANDARD TABLE OF jstat
        INITIAL SIZE 0 WITH HEADER LINE.


* Inactivate TECO/CLSD-status
  REFRESH gt_status.
* gt_status-stat = c_status.
  gt_status-stat = c_status_cl.
  gt_status-inact = 'X'.
  APPEND gt_status.
  gt_status-stat = c_status_rel.
  gt_status-inact = space.
  APPEND gt_status.

  UPDATE afih SET iphas = '2'
  WHERE aufnr EQ gs_aufk-aufnr.


  UPDATE aufk SET phas3 = ' '
  WHERE aufnr EQ gs_aufk-aufnr.

  UPDATE aufk SET phas1 = 'X'
  WHERE aufnr EQ gs_aufk-aufnr.

  CALL FUNCTION 'STATUS_CHANGE_INTERN'
     EXPORTING
           objnr               = gs_aufk-objnr
     TABLES
           status              = gt_status
     EXCEPTIONS
           object_not_found
           status_inconsistent
           status_not_allowed.

  COMMIT WORK AND WAIT.
  write: /  'CANCEL BUCO set for order ', gs_aufk-aufnr.

ENDFORM.                    "CANCEL_BUCO

*&---------------------------------------------------------------------*
*&      Form  CANCEL_TECO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM cancel_teco.
  DATA: gt_status TYPE STANDARD TABLE OF jstat
        INITIAL SIZE 0 WITH HEADER LINE.


* Inactivate TECO/CLSD-status
  REFRESH gt_status.
* gt_status-stat = c_status.
  gt_status-stat = c_status_teco.
  gt_status-inact = 'X'.
  APPEND gt_status.
  gt_status-stat = c_status_rel.
  gt_status-inact = space.
  APPEND gt_status.

  UPDATE afih SET iphas = '2'
  WHERE aufnr EQ gs_aufk-aufnr.


  UPDATE aufk SET phas2 = ' '
  WHERE aufnr EQ gs_aufk-aufnr.

  UPDATE aufk SET phas1 = 'X'
  WHERE aufnr EQ gs_aufk-aufnr.

  CALL FUNCTION 'STATUS_CHANGE_INTERN'
     EXPORTING
           objnr               = gs_aufk-objnr
     TABLES
           status              = gt_status
     EXCEPTIONS
           object_not_found
           status_inconsistent
           status_not_allowed.

  COMMIT WORK AND WAIT.
  write: /  'CANCEL TECO set for order ', gs_aufk-aufnr.
ENDFORM.                    "CANCEL_TECO

*&---------------------------------------------------------------------*
*&      Form  TECO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM teco.

  it_methods-refnumber = '000001'.
  it_methods-method = 'TECHNICALCOMPLETE'.
  it_methods-objectkey = gs_aufk-aufnr.
  it_methods-objecttype = 'HEADER'.
  APPEND it_methods.

  CLEAR it_methods.
  it_methods-method = 'SAVE'.
  APPEND it_methods.

  it_header-orderid = gs_aufk-aufnr.
  APPEND it_header.

  REFRESH gt_return.
  CALL FUNCTION 'BAPI_ALM_ORDER_MAINTAIN'
    TABLES
      it_methods = it_methods
      it_header  = it_header
      return     = gt_return.

  READ TABLE gt_return INTO gs_return WITH KEY type = 'E'.
  IF sy-subrc = 0.

    write: /  'TECO NOT set for order ', gs_aufk-aufnr.
  ELSE.
    COMMIT WORK AND WAIT.
    write: /  'TECO set for order ', gs_aufk-aufnr.
**  WRITE: / 'Service order ', p_aufnr,
**     ' TECO has been set'.
*
** Put notification to complete ('NOCO')
*    CLEAR lv_vkorg.
*    SELECT SINGLE vkorg FROM qmel INTO lv_vkorg
*    WHERE aufnr = gs_aufk-aufnr.
*
*    WAIT UP TO 3 SECONDS.
*
*    SUBMIT yam_close_notifs_for_order
*      WITH s_aufnr = gs_aufk-aufnr
*      WITH p_vkorg = lv_vkorg
*      WITH p_test = ' '
*       AND RETURN.
  ENDIF.
ENDFORM.                    "TECO

*&---------------------------------------------------------------------*
*&      Form  BUCO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM buco.

  DATA: gt_status TYPE STANDARD TABLE OF jstat
        INITIAL SIZE 0 WITH HEADER LINE.

  CALL FUNCTION 'STATUS_CHECK'
  EXPORTING
*   BYPASS_BUFFER           = ' '
*   CLIENT                  = SY-MANDT
    objnr                   = lv_objnr
    status                  = 'I0045'
 EXCEPTIONS
   object_not_found        = 1
   status_not_active       = 2
   OTHERS                  = 3.

   IF sy-subrc = 0.

  gt_status-stat = c_status_cl.
  gt_status-inact = ' '.
  APPEND gt_status.
  gt_status-stat = c_status_teco.
  gt_status-inact = 'X'.
  APPEND gt_status.


    UPDATE afih SET iphas = '6'
    where aufnr eq gs_aufk-aufnr.

    UPDATE AUFK SET IDAT3 = SY-DATUM
    where aufnr eq gs_aufk-aufnr.


  UPDATE aufk SET phas2 = ' '
  WHERE aufnr EQ gs_aufk-aufnr.


  UPDATE aufk SET phas3 = 'X'
  WHERE aufnr EQ gs_aufk-aufnr.

  CALL FUNCTION 'STATUS_CHANGE_INTERN'
     EXPORTING
           OBJNR               = lv_objnr
     TABLES
           STATUS              = gt_status
     EXCEPTIONS
           OBJECT_NOT_FOUND
           STATUS_INCONSISTENT
           STATUS_NOT_ALLOWED.

  COMMIT WORK AND WAIT.
  write: /  'BUCO set for order ', gs_aufk-aufnr.
  ENDIF..

ENDFORM.                    "BUCO

*&---------------------------------------------------------------------*
*&      Form  SET_CNF
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM set_cnf.

  DATA: lv_vaplz type gewrk, lv_bemot TYPE bemot,
        gs_afru TYPE afru.

  SELECT SINGLE vaplz bemot FROM aufk INTO (lv_vaplz, lv_bemot)
    WHERE aufnr = gs_aufk-aufnr.

  CALL FUNCTION 'YSE_SET_CNF' STARTING NEW TASK 'CNF'
    EXPORTING
      ip_aufnr = gs_aufk-aufnr
      ip_vaplz = lv_vaplz
      ip_bemot = lv_bemot.


  WAIT UP TO 3 SECONDS.
  select SINGLE * FROM afru INTO gs_afru
    where aufnr = gs_aufk-aufnr.
  IF sy-subrc <> 0.
    WAIT UP TO 5 SECONDS.
  ENDIF.
    select SINGLE * FROM afru INTO gs_afru
    where aufnr = gs_aufk-aufnr.
    IF sy-subrc = 0.
     write: /  'confirmation is created for order ', gs_aufk-aufnr.
    ELSE.
     write: /  'no confirmation is created for order ', gs_aufk-aufnr.
    ENDIF.
ENDFORM.                    "SET_CNF

*Selection text£º
*S_AUFNR:        Order Number
