*----------------------------------------------------------------------
* PROGRAM ID           : YAM_BUG_EQ_STAT_CHGNR                         *
* PROGRAM TITLE        : Overview equipments with wrong change nbr 999 *
* AUTHOR               : Geert Rutten                                  *
* DATE                 : 07/01/2013                                    *
* DEVELOPMENT ID       :                                               *
* CHANGE REQUEST NUMBER:                                               *
* PROGRAM DESCRIPTION  : Overview equipments with wrong chgnr 999      *
*                        in change docs                                *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
REPORT  yam_bug_eq_stat_chgnr  MESSAGE-ID yam_re  .
*.................. Tables............................................ *
TABLES: equi, jest.

*.................. Global variables.................................. *
*.................. Variables
DATA: BEGIN OF gt_equi OCCURS 0,
        equnr     LIKE equi-equnr,
        objnr     LIKE equi-objnr,
      END OF gt_equi.


DATA: BEGIN OF i_logtab OCCURS 0,
        cod(1)     TYPE c,
        msg(119)   TYPE c,
      END OF i_logtab.

DATA: g_directory(25) TYPE c VALUE '/var/load/xxx/UK/read/',
      g_ofile         LIKE /sapdmc/lsoinp-filename,
      p_logsys        LIKE tbdlst-logsys.


DATA: lv_sav_stat TYPE jcds-stat,
      g_objnr          LIKE  jest-objnr,
      g_msg(120)       TYPE c,
      t_tj30t          TYPE tj30t,
      lv_lines         TYPE i,
      gt_jest TYPE TABLE OF jest with HEADER LINE,
      gt_jcds          TYPE TABLE OF jcds.



CONSTANTS c_obj(2)        TYPE c           VALUE 'IE'.
*.................. Field symbols

*.................. Constants......................................... *
CONSTANTS : c_rec_l(14)     TYPE c        VALUE 'equi_jcds_stat_list'.
*.................. Selection screen.................................. *
SELECTION-SCREEN BEGIN OF BLOCK b01.
SELECT-OPTIONS: s_equnr   FOR equi-equnr.
SELECT-OPTIONS: s_erdat   FOR equi-erdat.
SELECT-OPTIONS: s_stat   FOR jest-stat.
PARAMETERS:     p_iwerk LIKE v_equi-iwerk OBLIGATORY.
SELECTION-SCREEN END   OF BLOCK b01.


DATA: s_filenm TYPE string.
*.................. Events............................................ *

*.................. Main program...................................... *
START-OF-SELECTION.

  CALL FUNCTION 'OWN_LOGICAL_SYSTEM_GET'
    IMPORTING
      own_logical_system             = p_logsys
    EXCEPTIONS
      own_logical_system_not_defined = 1
      OTHERS                         = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
         WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.


  SELECT DISTINCT e~equnr e~objnr
         INTO TABLE gt_equi
         FROM equi AS e
         INNER JOIN equz AS z
                    ON z~equnr = e~equnr
         WHERE e~equnr IN s_equnr
           AND e~erdat IN s_erdat
           AND z~iwerk = p_iwerk
           AND e~eqart = 'EQUIPMENT' .



LOOP AT gt_equi.

    CLEAR: GT_JEST[].
    SELECT * INTO TABLE gt_jest
      FROM JEST
      WHERE objnr = gt_equi-objnr
         AND CHGNR = '999' AND
             STAT IN s_stat.





IF GT_JEST[] IS NOT INITIAL.

LOOP AT GT_JEST.

CLEAR:  GT_JCDS[], lv_lines.

  SELECT * FROM JCDS INTO TABLE GT_JCDS
    WHERE OBJNR = GT_JEST-OBJNR AND STAT = GT_JEST-STAT.

  DESCRIBE TABLE GT_JCDS LINES lv_lines.
  IF lv_lines > 0.
    UPDATE JEST
    SET CHGNR = lv_lines
    WHERE OBJNR = GT_JEST-OBJNR  AND STAT = GT_JEST-STAT
          AND CHGNR = '999'.
   IF SY-SUBRC = 0.
   g_msg = text-i03.
   REPLACE '&2' WITH GT_JEST-OBJNR INTO g_msg.
   REPLACE '&1' WITH GT_JEST-STAT INTO g_msg.
   PERFORM add_message_to_tab USING g_msg ' '.
   ELSE.
   g_msg = text-i05.
   REPLACE '&2' WITH GT_JEST-OBJNR INTO g_msg.
   REPLACE '&1' WITH GT_JEST-STAT INTO g_msg.
   PERFORM add_message_to_tab USING g_msg ' '.
   ENDIF.

    UPDATE JCDS
    SET CHGNR = lv_lines
    WHERE OBJNR = GT_JEST-OBJNR AND STAT = GT_JEST-STAT
    AND CHGNR = '999'.
   IF SY-SUBRC = 0.
   g_msg = text-i04.
   REPLACE '&2' WITH GT_JEST-OBJNR INTO g_msg.
   REPLACE '&1' WITH GT_JEST-STAT INTO g_msg.
   PERFORM add_message_to_tab USING g_msg ' '.
   ELSE.
   g_msg = text-i06.
   REPLACE '&2' WITH GT_JEST-OBJNR INTO g_msg.
   REPLACE '&1' WITH GT_JEST-STAT INTO g_msg.
   PERFORM add_message_to_tab USING g_msg ' '.
   ENDIF.
  ELSE.
    UPDATE JEST
    SET CHGNR = 1
    WHERE OBJNR = GT_JEST-OBJNR  AND STAT = GT_JEST-STAT
          AND CHGNR = '999'.
   IF SY-SUBRC = 0.
   g_msg = text-i03.
   REPLACE '&2' WITH GT_JEST-OBJNR INTO g_msg.
   REPLACE '&1' WITH GT_JEST-STAT INTO g_msg.
   PERFORM add_message_to_tab USING g_msg ' '.
   ELSE.
   g_msg = text-i05.
   REPLACE '&2' WITH GT_JEST-OBJNR INTO g_msg.
   REPLACE '&1' WITH GT_JEST-STAT INTO g_msg.
   PERFORM add_message_to_tab USING g_msg ' '.
   ENDIF.
  ENDIF.
ENDLOOP.
ENDIF.

ENDLOOP.



               "set_status

*&---------------------------------------------------------------------*
*&      Form  add_message_to_tab
*&---------------------------------------------------------------------*
*       Add modification message to log table
*----------------------------------------------------------------------*
*      -->P_MSG : Message
*      -->P_COD : Processing code
*----------------------------------------------------------------------*
FORM add_message_to_tab USING p_msg p_cod.

  i_logtab-msg = p_msg.
  i_logtab-cod = p_cod.
  APPEND i_logtab.
  CLEAR i_logtab.

ENDFORM.                    "add_message_to_tab

*&---------------------------------------------------------------------*
*&      Form  write_results
*&---------------------------------------------------------------------*
*       Modification log
*----------------------------------------------------------------------*
FORM write_results.


  LOOP AT i_logtab.
    IF i_logtab-cod = ' '.
      WRITE: / i_logtab-msg.
    ELSE.
      FORMAT COLOR COL_NEGATIVE.
      WRITE: /13 i_logtab-msg.
      FORMAT RESET.
    ENDIF.
  ENDLOOP.

ENDFORM.                    "write_results

*Text symbol text£º
*E01:Invalid Customer Number
*E02:You are not authorized for sales organisation:
*E03:Invalid sales organisation
*E04:Invalid distribution channel
*E05:Invalid division
*E06:Open dataset failed for :
*E07:Close dataset failed for :
*I01:Equipment &2 : status &1 reset
*I02:Equipment &2 : status &1 set
*I03:Equipment &2 :sCHGNR &1 UPDATE JEST
*I04:Equipment &2 : CHGNR &1 UPDATE JCDS
*I05:Eq &2: CHGNR &1 NOT UPDATED IN JEST

*I06:Eq &2: CHGNR &1 NOT UPDATED IN JCDS
*Selection text£º
*P_FILENM:        Filename errorlist JCDS
*P_IWERK:        Planning Plant
*S_EQUNR:        Equipment Number
*S_ERDAT:        Equipment Creation Date
*S_STAT:        Status
