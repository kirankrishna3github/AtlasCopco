*&---------------------------------------------------------------------*
*& Report  YAM_AUTO_INSTALL_EQUI                                       *
*&                                                                     *
*&---------------------------------------------------------------------*
*& This report will allow a semi-automatic installation of equipments  *
*& when newly arrived from BPCS                                        *
*&---------------------------------------------------------------------*
*& Modifications                                                       *
*&---------------------------------------------------------------------*
* MOD-001|2007.03.21|Luc Mertens      |CD1K912754|Changes for SEED     *
* MOD-002|2007.05.15|Luc Mertens      |CD1K915012|Changes for SEED     *
* MOD-003|2007.09.17|Luc Mertens      |CD1K920644|SEED: Issue 3014     *
* MOD-004|2008.06.24|Christophe VM    |          |Auto Creation Added  *
* MOD-005|2009.03.17|Jules Smets      |CD1K947034|FLoc name for SEED   *
* MOD-006|2009.06.29|W. Deplancke     |CD1K948971|Tcode monitor active *
* MOD-007|2009.08.10|M.Jacobs         |CD1K949649|CR0870               *
* MOD-008|2009.10.05|G.Rutten         |CD1K950780| bug Cross-business  *
* MOD-009|2009.12.22|L. Mertens       |CD1K953044|CR1176               *
* MOD-010|2010.01.11|M.Jacobs         |CD1K953490|Bugfix               *
* MOD-011|2011.10.06|L.Mertens        |CD1K968263|CR1889               *
*&---------------------------------------------------------------------*

REPORT  yam_auto_install_equi MESSAGE-ID yam_re.

*.................. Tables definitions................................ *
TABLES: v_equi,
        equi,
        kna1,
        mara,
        ihpa,
        addr1_data.

*.................. Variable definitions.............................. *
TYPE-POOLS: slis.

TYPES: BEGIN OF ty_equi.
        INCLUDE STRUCTURE yam_p057_equi.
TYPES:  selkz TYPE selkz_list,
        objnr TYPE j_objnr,
        adrnr TYPE ad_addrnum,
        exclu TYPE c,
* begin of change MOD-001
*       swerk type swerk,
        iwerk TYPE iwerk,
* end of change MOD-001
        land1 TYPE land1,
        spras TYPE spras,
        kunnr_sortl TYPE ad_sort1ul,
        name2 TYPE ad_name2,
        telf1 TYPE ad_tlnmbr1,
        mobnr TYPE ad_mbnmbr1,
        faxnr TYPE ad_fxnmbr1,
        email TYPE ad_smtpadr,
        matnr TYPE matnr,
        vkorg TYPE vkorg,
        vtweg TYPE vtweg,
        spart TYPE spart,
        vkgrp TYPE vkgrp,
        floc  TYPE tplnr,
        bukrs TYPE bukrs,
       END   OF ty_equi.

TYPES: BEGIN OF ty_floc.
        INCLUDE STRUCTURE yam_p057_floc.
TYPES:  selkz      TYPE selkz_list,
        adrnr      TYPE ad_addrnum,
        vkorg      TYPE vkorg,
        vtweg      TYPE vtweg,
        spart      TYPE spart,
        vkbur      TYPE vkbur,
        vkgrp      TYPE vkgrp,
        ingrp      TYPE ingrp,
        gewrk      TYPE gewrk,
        objnr      TYPE j_objnr,
        comp_ok(1) TYPE c,
       END   OF ty_floc.

*.. Global variables
DATA: gv_msg    TYPE c,
      gv_handle TYPE balloghndl,
      gv_ok(1)  TYPE c,            "creation funct.loc level 3 result
      gv_nok(1) TYPE c,            "avoid installation on floc. level 2
      gv_log    TYPE c.

DATA: gt_equi     TYPE STANDARD TABLE OF ty_equi WITH HEADER LINE.
DATA: gt_floc     TYPE STANDARD TABLE OF ty_floc WITH HEADER LINE.

DATA: gt_errmsg TYPE TABLE OF bdcmsgcoll,
      wa_errmsg LIKE LINE OF gt_errmsg.

* begin of insert MOD-003
DATA: i_inherit_flags LIKE inheritance_flags,
      s_equi          LIKE v_equi,
      r_iflo          LIKE iflo.
* end of insert MOD-003

DATA: gv_floc       TYPE v_equi-tplnr,
      gv_tplma      TYPE tplma,
      gv_iwerk      TYPE iwerk,
      gv_ucomm      TYPE syucomm,
      gv_kunnr      TYPE kunnr,
      gv_kunwe      TYPE kunnr,
* begin of delete MOD-001
*     gv_swerk      type swerk,
* end of delete MOD-001
      gv_name1      TYPE ad_name1,
      gv_street     TYPE ad_street,
      gv_post_code1 TYPE ad_pstcd1,
      gv_city1      TYPE ad_city1,
      gv_land1      TYPE land1,
      gv_spras      TYPE spras,
      gv_pltxt      TYPE pltxt,
      gv_ingrp      TYPE ingrp,
      gv_vkorg      TYPE vkorg,
      gv_vtweg      TYPE vtweg,
      gv_spart      TYPE spart,
      gv_vkbur      TYPE vkbur,
      gv_vkgrp      TYPE vkgrp,
      gv_ifl        TYPE tplnr,
      gv_name2      TYPE ad_name2,
      gv_telf1      TYPE ad_tlnmbr1,
      gv_mobnr      TYPE ad_mbnmbr1,
      gv_faxnr      TYPE ad_fxnmbr1,
* begin of insert mod-009
      gv_region     type regio,
* end of insert mod-009
      gv_email      TYPE ad_smtpadr,
      gv_sortl      TYPE sortl,
      gv_gewrk      TYPE gewrk,
      gv_costl      TYPE kostl.

DATA: BEGIN OF lt_object OCCURS 0,
        objnr LIKE aufk-objnr,
      END OF lt_object.

DATA: BEGIN OF lt_object_cp OCCURS 0,
        objnr LIKE aufk-objnr,
      END OF lt_object_cp.

DATA: it_iflo     TYPE STANDARD TABLE OF iflo WITH HEADER LINE,
      it_iflo_err TYPE STANDARD TABLE OF iflo WITH HEADER LINE,
      it_yam_ctam_ccodes TYPE STANDARD TABLE OF yam_ctam_ccodes
                        WITH HEADER LINE.


DATA: wa_iflot      LIKE iflo,
      equi_idx      LIKE sy-tabix.

DATA:
      addr1_data_name1_sh      LIKE addr1_data-name1,
      addr1_data_name2_sh      LIKE addr1_data-name2,
      addr1_data_city1_sh      LIKE addr1_data-city1,
      addr1_data_street_sh     LIKE addr1_data-street,
      addr1_data_post_code1_sh LIKE addr1_data-post_code1,
* begin of insert mod-009
      addr1_data_region_sh     like addr1_data-region,
* end of insert mod-009
      addr1_data_land_sh       LIKE addr1_data-country,
      addr1_data_spras_sh      LIKE addr1_data-langu,
      addr1_data_telf1_sh      TYPE ad_tlnmbr1,
      addr1_data_faxnr_sh      TYPE ad_fxnmbr1,
      addr1_data_mob_sh        TYPE ad_tlnmbr1,
      addr1_data_email_sh      TYPE ad_smtpadr.

*.. Global constants
CONSTANTS: gc_charx     TYPE c            VALUE 'X',
           gc_blank(3)  TYPE c            VALUE '   ',
           lv_99991231  LIKE sy-datum     VALUE '99991231',
           lv_eqart     LIKE v_equi-eqart VALUE 'EQUIPMENT',
           gc_ag        TYPE parvw        VALUE 'AG',
           gc_we        TYPE parvw        VALUE 'WE',
           gc_green(3)  TYPE c            VALUE 'C50',
           gc_red(3)    TYPE c            VALUE 'C60',
           gc_yellow(3) TYPE c            VALUE 'C30',
           gc_blue(3)   TYPE c            VALUE 'C40'.

DATA: lv_yse_auto_inst_eq   LIKE yse_auto_inst_eq,
      lv_yse_auto_inst_eq_kunnr LIKE yse_auto_inst_eq,
      lv_mode    TYPE c VALUE 'N'.

FIELD-SYMBOLS: <field1> TYPE ANY,
               <field2> TYPE ANY.



DATA: i_bdcdata LIKE bdcdata OCCURS 0 WITH HEADER LINE,
      struct_bdcdata TYPE bdcdata.
* begin of insertion MOD-007
data : lv_len(2)      type n,
       lv_pstlz_part  type pstlz,
       lv_pstlz       type pstlz,
       lv_times       type i.
* end of insertion MOD-007


*.. Constants
CONSTANTS:
      gc_trans     LIKE tstc-tcode   VALUE 'IL01',
      gc_trans_ie02 LIKE tstc-tcode   VALUE 'IE02'.
.

*.................. Layout selection screen........................... *
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-b01.
PARAMETERS:
  p_tplnr      TYPE      v_equi-tplnr OBLIGATORY.
SELECT-OPTIONS:
  s_equnr      FOR       equi-equnr MATCHCODE OBJECT equi,
  s_sernr      FOR       equi-sernr,
  s_kunnr      FOR       kna1-kunnr,
  s_shipto     FOR       kna1-kunnr,
  s_datab      FOR       v_equi-datab DEFAULT '00000000' TO sy-datum,
  s_prdha      FOR       mara-prdha.
SELECTION-SCREEN END   OF BLOCK b1.

*.................. Selection screen validations...................... *
AT SELECTION-SCREEN ON p_tplnr.

  SELECT SINGLE tplma iwerk
       INTO (gv_tplma, gv_iwerk)
       FROM iflo
       WHERE tplnr = p_tplnr.

  IF sy-subrc = 0.
    IF NOT gv_tplma IS INITIAL.
*.... Functional location is not country level
      MESSAGE e001(00) WITH text-e01.
    ENDIF.
  ELSE.
*.. Functional location does not exist
    MESSAGE e001(00) WITH text-e02.
  ENDIF.

  AUTHORITY-CHECK OBJECT 'I_IWERK'
           ID 'TCD'   FIELD sy-tcode
           ID 'IWERK' FIELD gv_iwerk.

  IF sy-subrc NE 0.
*.. No authorization for plant: &1
    MESSAGE e001(00) WITH text-e03 gv_iwerk.
  ENDIF.

*.................. Include programs.................................. *
  INCLUDE yam_auto_install_equi_f01.

  INCLUDE yam_auto_install_equi_f02.

  INCLUDE yam_auto_install_equi_f03.


*.................. Main program...................................... *
START-OF-SELECTION.

* begin of insert MOD-006
*...................Transaction counter...............................*

  CALL METHOD YCL_STATISTICS=>RECORD_TRANSACTION.
* end of insert MOD-006

*.. Initialization
  PERFORM initialization.

*.. Select the relevant equipments
  PERFORM select_equipments.

*.. Output the ALV list with selected equipments
  PERFORM output_list_equi.

*.. Save application log
  PERFORM save_application_log.

*Text symbol text£º
*B01:Selection
*E01:Functional location is not country level
*E02:Functional location does not exist
*E03:No authorisation for plant :
*H00:Installation of equipments
*H01:Selected Funct. Loc.  :
*H02:Selected Date from    :
*H11:Equipment
*H12:Street
*H13:Postcode+City
*H14:Name
*P01:Install equipment?
*P02:You are about to install the equipment. Are you sure you want to continue?

*T01:Are you sure you want to process all the equipment's from the output list
*Selection text£º
*P_TPLNR:D       .
*S_DATAB:D       .
*S_EQUNR:D       .
*S_KUNNR:        Sold-to party
*S_PRDHA:D       .
*S_SERNR:D       .
*S_SHIPTO:        Ship-to party
