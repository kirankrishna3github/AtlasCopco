************************************************************************
*  Verwendung des Kommunikations-Interfaces ¨¹ber SAPscript:
*
*  Dieser Report zeigt an einem einfachen Beispiel, wie man auch
*  ¨¹ber SAPscript von der erweiterten Funktionalit#t des
*  neuen Kommunikations-Interfaces profitieren kann.
*  Hier gezeigt am Beispiel des schickens an SAPOffice user.
*
************************************************************************

FORM PREPARE_EMAIL_INTERN.
DATA: MESSAGE TYPE SWC_OBJECT.
DATA: LS_SOUIO TYPE SOUIO.

* Deklaration eines Containers
  SWC_CONTAINER CONTAINER.
************************************************************************
*  1. Sender (BOR-Objekt-ID)                                           *
************************************************************************

* Objektreferenz auf ein RECIPIENT-Objekt erzeugen
  SWC_CREATE_OBJECT SENDER 'RECIPIENT' SPACE.
* Container leeren
  SWC_CLEAR_CONTAINER CONTAINER.
* Adresse (aufrufender interner Benutzer)
  SWC_SET_ELEMENT CONTAINER 'AddressString' SY-UNAME.
* Adre#typ (interner Benutzer)
  SWC_SET_ELEMENT CONTAINER 'TypeId' 'B'.
* Aufruf der Methode RECIPIENT.FindAddress
  SWC_CALL_METHOD SENDER 'FindAddress' CONTAINER.
* Ausgabe der zur Ausnahme geh#rigen Fehlermeldung
  IF SY-SUBRC NE 0.
    MESSAGE ID SY-MSGID TYPE 'E' NUMBER SY-MSGNO.
  ENDIF.
* Ermittlung der BOR-Objekt-ID
  SWC_OBJECT_TO_PERSISTENT SENDER SENDER_ID.

************************************************************************
*  2.  Empf#nger (BOR-Objekt-ID)                                       *
************************************************************************
* Objektreferenz auf ein RECIPIENT-Objekt erzeugen
  SWC_CREATE_OBJECT RECIPIENT 'RECIPIENT' SPACE.
* Container leeren
  SWC_CLEAR_CONTAINER CONTAINER.

* Importparameter: Adre#typ (FAX)
*swc_set_element container 'TypeId' 'F'.
* Importparameter: FAX-Nummer
*MOVE: land   TO address_string,
*      number TO address_string+3.

* Adresse (interner Benutzer)
  SWC_SET_ELEMENT CONTAINER 'TypeId' 'B'.
  ADDRESS_STRING = WWORKPAPER-TDTELENUM.
  SWC_SET_ELEMENT CONTAINER 'AddressString' ADDRESS_STRING.
* Aufruf der Methode RECIPIENT.CreateAddress
  SWC_CALL_METHOD RECIPIENT 'CreateAddress' CONTAINER.
* Ausgabe der zur Ausnahme geh#rigen Fehlermeldung
  IF SY-SUBRC NE 0.
    MESSAGE ID SY-MSGID TYPE 'E' NUMBER SY-MSGNO.
  ENDIF.
* Ermittlung der BOR-Objekt-ID
  SWC_OBJECT_TO_PERSISTENT RECIPIENT RECIPIENT_ID.

************************************************************************
*  3.  Sendeattribute setzen                                           *
************************************************************************
  IF CAUFVD-PRIOK = '1'.
***  Belegen des Sendeattributs "Expre#"
***     mit Hilfe der Methode RECIPIENT.SetExpress
*** Importparameter in Container schreiben
* Container leeren
    SWC_CLEAR_CONTAINER CONTAINER.
* SendExpress-Flag
    SWC_SET_ELEMENT CONTAINER 'SendExpress' 'X'.
*** Methodenaufruf
    SWC_CALL_METHOD RECIPIENT 'SetExpress' CONTAINER.
    IF SY-SUBRC NE 0.
* Ausgabe der zur Ausnahme geh#rigen Fehlermeldung
      MESSAGE ID SY-MSGID TYPE 'E' NUMBER SY-MSGNO
                        WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.
  ENDIF.

*** Outbox-Flag setzen (Dokument nach Senden im Ausgang ablegen)
* Container leeren
*  swc_clear_container container.
* Outbox-Flag = 'X'
*  swc_set_element container 'OutboxFlag' 'X'.
* Message.SetOutboxFlag
*  swc_call_method message 'SetOutboxFlag' container.
*  IF sy-subrc NE 0.
* Ausgabe der zur Ausnahme geh#rigen Fehlermeldung
*    MESSAGE ID sy-msgid TYPE 'E' NUMBER sy-msgno
*                      WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*  ENDIF.

************************************************************************
*                 Anwendungsobjekt (BOR-Objekt-ID)                     *
************************************************************************

* Dieser Parameter (MAIL_APPL_OBJECT) sollte mit der BOR-Objekt-ID
* des Anwendungsobjekts (z.B. Rechnung, Bestellung), von dem aus
* das Senden initiiert wird, gef¨¹llt werden. Beim Senden wird dieses
* Anwendungsobjekt automatisch mit dem Dokument verkn¨¹pft.
* In diesem Beispiel wird als Anwendungsobjekt-ID die BOR-ID des
* Eingangs des Reportaufrufers genommen.

* Bemerkung: Die Objektverkn¨¹pfung ist zur Zeit noch nicht realisiert !

* Lesen der Eingangs-ID des Aufrufers
  CALL FUNCTION 'SO_USER_ID_FROM_SAPNAM_GET'
    EXPORTING
      USER_NAME            = sy-uname
    IMPORTING
      USER_ID              = LS_SOUIO
    EXCEPTIONS
      USER_NOT_EXIST       = 1
      OTHERS               = 2.
  IF SY-SUBRC EQ 0.
    select single * from SOUD
      where USRTP eq ls_souio-usrtp
      and   USRYR eq ls_souio-usryr
      and   USRNO eq ls_souio-usrno.
  ENDIF.
  IF SY-SUBRC NE 0.
* Aufrufer besitzt kein Office => wird angelegt
    CALL FUNCTION 'SO_USER_AUTOMATIC_INSERT'
         EXPORTING
              SAPNAME        = SY-UNAME
         EXCEPTIONS
              NO_INSERT      = 1
              SAP_NAME_EXIST = 2
              X_ERROR        = 3
              OTHERS         = 4.
    IF SY-SUBRC NE 0.
*   Office konnte nicht angelegt werden: Inbox-ID = SPACE
      CLEAR SOUD.
    ELSE.
* * Neuer Versuch: Lesen der Eingangs-ID des Aufrufers
      CALL FUNCTION 'SO_USER_ID_FROM_SAPNAM_GET'
        EXPORTING
          USER_NAME            = sy-uname
        IMPORTING
          USER_ID              = LS_SOUIO
        EXCEPTIONS
          USER_NOT_EXIST       = 1
          OTHERS               = 2.
      IF SY-SUBRC EQ 0.
        select single * from SOUD
          where USRTP eq ls_souio-usrtp
          and   USRYR eq ls_souio-usryr
          and   USRNO eq ls_souio-usrno.
      ENDIF.
    ENDIF.
  ENDIF.

* Anlegen eines Anwendungsobjekts (hier vom Typ SOFMFOL)
  CLEAR SOFMFOL_KEY.
  SOFMFOL_KEY-TYPE   = 'FOL'.
  SOFMFOL_KEY-YEAR   = SOUD-INBYR.
  SOFMFOL_KEY-NUMBER = SOUD-INBNO.
  BOR_KEY = SOFMFOL_KEY.
  IF NOT BOR_KEY IS INITIAL.
    SWC_CREATE_OBJECT FOLDER 'SOFMFOL' BOR_KEY.
    IF SY-SUBRC = 0.
* * Ermittlung der BOR-Objekt-ID
      SWC_OBJECT_TO_PERSISTENT FOLDER APPL_OBJECT_ID.
      IF SY-SUBRC NE 0.
        CLEAR APPL_OBJECT_ID.
      ENDIF.
    ENDIF.
  ELSE.
    CLEAR APPL_OBJECT_ID.
  ENDIF.

************************************************************************
*        Anlegen des Textbausteins,                                    *
************************************************************************
* passiert sp#ter im eigentlichen Druckreport.
*REFRESH lines.
*CLEAR lines.
*lines-tdline = 'FAXen ¨¹ber SAPscript mit Device = MAIL,'.
*APPEND lines.
*CLEAR lines.
*lines-tdformat = '* '.
*lines-tdline = 'd.h. ¨¹ber das neue Kommunikations-Interface.'.
*APPEND lines.

* F¨¹llen des Text-Headers f¨¹r SAPscript
*CLEAR header.
*header-tdobject = 'TEXT'.
*header-tdname   = 'Testmail'.
*header-tdid     = 'ST'.
*header-tdspras  = sy-langu.
*header-tdform   = 'SYSTEM'.

* Aufl#sen des Recipient-Objekts in "flache" Recipient-Objekte mit
* Hilfe der Methode Expand.
* Bei diesem konkreten Beispiel (Recipient = genau eine Officeuser)
* ist diese Aufl#sung eigentlich nicht n#tig. F¨¹r den allgemeinen Fall
* wird diese Vorgehensweise jedoch dringend empfohlen und daher in
* diesem Beispiel vorgef¨¹hrt.
  SWC_CLEAR_CONTAINER CONTAINER.
  REFRESH RECIPIENT_TAB.
  SWC_CALL_METHOD RECIPIENT 'EXPAND' CONTAINER.
  IF SY-SUBRC NE 0.
    MESSAGE ID SY-MSGID TYPE 'E' NUMBER SY-MSGNO.
  ENDIF.
* "Flache" Recipient-Objekte aus Container lesen
  SWC_GET_TABLE CONTAINER 'ResultTable' RECIPIENT_TAB.
  IF SY-SUBRC NE 0.
    REFRESH RECIPIENT_TAB.
  ENDIF.

* Loop ¨¹ber die "flachen" Recipient-Objekt.
  LOOP AT RECIPIENT_TAB.
* * F¨¹r jedes "flache" Recipient-Objekt ein Aufruf von SAPscript:
* * BOR-Objekt-ID des Handles ermitteln
    SWC_OBJECT_TO_PERSISTENT RECIPIENT_TAB RECIPIENT_ID.
* * Aufruf von OPEN_FORM
*  CALL FUNCTION 'OPEN_FORM'
*       EXPORTING
*            device           = 'MAIL'
*            dialog           = space
*            form             = header-tdform
*            language         = header-tdspras
*            mail_sender      = sender_id
*            mail_recipient   = recipient_id
*            mail_appl_object = appl_object_id
*       exceptions
*            canceled         = 1
*           device           = 2
*            form             = 3
*            options          = 4
*            unclosed         = 5
*           mail_options     = 6
*            others           = 7.
*  IF sy-subrc NE 0.
*    MESSAGE a634(so) WITH 'OPEN_FORM' sy-subrc.
*  ENDIF.

*  CALL FUNCTION 'WRITE_FORM_LINES'
*       EXPORTING
*            header = header
*       TABLES
*            lines  = lines
*       EXCEPTIONS
*            others = 1.
*  IF sy-subrc NE 0.
*    MESSAGE a634(so) WITH 'WRITE_FORM_LINES' sy-subrc.
*  ENDIF.

*  CALL FUNCTION 'CLOSE_FORM'
*       IMPORTING
*            result  = result
*       TABLES
*            otfdata = otfdata
*       EXCEPTIONS
*            others  = 1.
*  IF sy-subrc NE 0.
*    MESSAGE a634(so) WITH 'CLOSE_FORM' sy-subrc.
*  ENDIF.

  ENDLOOP.
ENDFORM.
