*----------------------------------------------------------------------*
***INCLUDE YAM_BACK_BILLING_F02 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  user_command
*&---------------------------------------------------------------------*
*       text: User Command callback routine for ALV
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM user_command USING r_ucomm LIKE sy-ucomm
                        rs_selfield TYPE slis_selfield.
  CASE r_ucomm.
    WHEN 'BILR'.
      PERFORM create_bil_requests.
      rs_selfield-refresh = gc_charx.
    WHEN 'LOG'.
      PERFORM display_log.
    WHEN 'CONT'.
      PERFORM display_contract.
    WHEN 'PRAG'.
      PERFORM display_price_agreement.
    WHEN 'RJCT'.
      PERFORM reject_items.
      rs_selfield-refresh = gc_charx.
  ENDCASE.

ENDFORM.                    " user_command

*eject
*&---------------------------------------------------------------------*
*&      Form  PF_STATUS_SET
*&---------------------------------------------------------------------*
*       text: PF-status callback routine for ALV
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM pf_status_set USING rt_extab TYPE slis_t_extab.
  SET PF-STATUS 'YAM_BB'.
ENDFORM.                    " PF_STATUS_SET

*eject
*&---------------------------------------------------------------------*
*&      Form  end_of_list
*&---------------------------------------------------------------------*
*       text: end of list callback routine for ALV
*----------------------------------------------------------------------*
FORM end_of_list .
*.. Output message to indicate log entries exist
  IF gv_log EQ gc_charx.
*.... Back-billing log contains entries. Please check
    MESSAGE s005.
  ENDIF.
ENDFORM.                    " end_of_list

*eject
*&---------------------------------------------------------------------*
*&      Form  top_of_page
*&---------------------------------------------------------------------*
*       text: top of page callback routine for ALV
*----------------------------------------------------------------------*
FORM top_of_page .
*.. Local variables
  DATA: lt_comment TYPE slis_t_listheader,
        ls_comment TYPE slis_listheader.

*.. Header
  ls_comment-typ  = 'H'.
  ls_comment-info = text-h00.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.

*.. Selection
  ls_comment-typ  = 'S'.
  ls_comment-key  = text-h01.
  CONCATENATE p_vkorg p_vtweg p_spart INTO ls_comment-info SEPARATED BY space.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.

  ls_comment-typ  = 'S'.
  ls_comment-key  = text-h02.
  ls_comment-info = gs_bb_def-allow_cr.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.

  ls_comment-typ  = 'S'.
  ls_comment-key  = text-h03.
  ls_comment-info = gs_bb_def-bb_index.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.

  ls_comment-typ  = 'S'.
  ls_comment-key  = text-h04.
  ls_comment-info = gs_bb_def-bbprc.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary       = lt_comment
*     I_LOGO                   =
*     I_END_OF_LIST_GRID       =
            .

ENDFORM.                    " top_of_page
