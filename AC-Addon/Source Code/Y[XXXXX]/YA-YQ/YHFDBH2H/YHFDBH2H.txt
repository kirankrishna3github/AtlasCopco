************************************************************************
**             Copyright(c) 2004 Deutsche Bank AG
* All rights reserved. This Software is proprietary to Deutsche Bank AG
* and is protected by copyright law and international treaties. Under no
* circumstances are you permitted to make any attempt to alter, decrypt
* or reverse engineer this software, and any unauthorised reproduction
* of this software or any portion thereof may result in severe civil and
* criminal penalties, and will be prosecuted to the maximum extent
* possible under the law.
************************************************************************
REPORT YHFDBH2H NO STANDARD PAGE HEADING
                MESSAGE-ID 00.
************************************************************************
*  Author       :  Deutsche Bank AG
*  Date         :  Dec/2004
*  Description  :  This program transfers payment file to DB Host.
************************* Data Declaration *****************************
DATA: OUTPARAM(255),
      STATUS LIKE BTCXP3-EXITSTAT,
      R_CNT     TYPE I,
      checkfile(100),
      filelen(5) type p,
      WS_CHKSUM(1) TYPE C.
TABLES: RFPDO1.
DATA: BEGIN OF EXEC_PROTOCOL OCCURS 100.  "protocol table for call func.
        INCLUDE STRUCTURE BTCXPM.
DATA: END OF EXEC_PROTOCOL.
DATA: EXITPARAM LIKE EXTCMDEXEX-EXITCODE.
DATA: FFNAME(270) TYPE C.
************************* User Selection ******************************

SELECTION-SCREEN BEGIN OF BLOCK CRITERIA.
PARAMETERS:
   filepath LIKE YHFHELP-YHDBDPY,
   payfile(45),
   parm1(25),
   parm2(25),
   parm3(25),
   vpayfile like rfpdo1-f170xcre.

SELECTION-SCREEN END OF BLOCK CRITERIA.

AT SELECTION-SCREEN.
  CONCATENATE FILEPATH PAYFILE INTO FFNAME.
  IF vpayfile ne space.
    PERFORM PAYFILE_ERR.
  ENDIF.
************************* Begin Program *******************************
START-OF-SELECTION.
  WRITE: /1 'REF: ', SY-REPID, 50 'DEUTSCHE BANK AG'
         , 107 SY-DATUM, SY-TIMLO.
  WRITE: /1 SY-UNAME,   50 'HOST TO HOST FTP'
         , 107 'PAGE: ', SY-PAGNO.
  ULINE.

  COMPUTE filelen = STRLEN( payfile ).
  COMPUTE filelen = filelen - 4.
  COMPUTE checkfile = payfile+0(filelen).
  CONCATENATE checkfile '.CHK' INTO checkfile.
  CONCATENATE: filepath PAYFILE CHECKFILE parm1 parm2 parm3
               INTO OUTPARAM SEPARATED BY SPACE.
  WRITE:/ 'File Path  : ', 20 filepath.
  WRITE:/ 'Payment File  : ', 20 payfile.

  WRITE:/ 'Checksum File  : ', 20 checkfile.
  WRITE:/ 'Parameter1  : ', 20 parm1.
  WRITE:/ 'Parameter2  : ', 20 parm2.
  WRITE:/ 'Parameter3  : ', 20 parm3.
  REFRESH: EXEC_PROTOCOL.

  SELECT PARM_VAL INTO WS_CHKSUM FROM YHFPARMI
                  WHERE BUKRS = SPACE
                  AND   PARM1 = 'COM'
                  AND   PARM2 = 'FUN'.
  ENDSELECT.

  IF WS_CHKSUM = 'Y'.
    CALL FUNCTION 'SXPG_COMMAND_EXECUTE'
      EXPORTING
        COMMANDNAME                = 'YDBPOSTPROC'
        ADDITIONAL_PARAMETERS      = OUTPARAM
      IMPORTING
        STATUS                     = STATUS
        EXITCODE                   = EXITPARAM
      TABLES
        EXEC_PROTOCOL              = EXEC_PROTOCOL
      EXCEPTIONS
        NO_PERMISSION              = 1
        COMMAND_NOT_FOUND          = 2
        PARAMETERS_TOO_LONG        = 3
        SECURITY_RISK              = 4
        WRONG_CHECK_CALL_INTERFACE = 5
        PROGRAM_START_ERROR        = 6
        PROGRAM_TERMINATION_ERROR  = 7
        X_ERROR                    = 8
        PARAMETER_EXPECTED         = 9
        TOO_MANY_PARAMETERS        = 10
        ILLEGAL_COMMAND            = 11
        OTHERS                     = 12.
  ELSE.
    CALL FUNCTION 'SXPG_CALL_SYSTEM'
      EXPORTING
        COMMANDNAME                = 'YDBPOSTPROC'
        ADDITIONAL_PARAMETERS      = OUTPARAM
      IMPORTING
        STATUS                     = STATUS
        EXITCODE                   = EXITPARAM
      TABLES
        EXEC_PROTOCOL              = EXEC_PROTOCOL
      EXCEPTIONS
        NO_PERMISSION              = 1
        COMMAND_NOT_FOUND          = 2
        PARAMETERS_TOO_LONG        = 3
        SECURITY_RISK              = 4
        WRONG_CHECK_CALL_INTERFACE = 5
        PROGRAM_START_ERROR        = 6
        PROGRAM_TERMINATION_ERROR  = 7
        X_ERROR                    = 8
        PARAMETER_EXPECTED         = 9
        TOO_MANY_PARAMETERS        = 10
        ILLEGAL_COMMAND            = 11
        OTHERS                     = 12.
  ENDIF.
  PERFORM PAYFILE_STATUS.
*  SKIP 2.
*  WRITE:/ 'STATUS OF H2H TRANSFER'.
*  ULINE.
*  DESCRIBE TABLE EXEC_PROTOCOL LINES R_CNT.
*  IF R_CNT > 0.
*    LOOP AT EXEC_PROTOCOL.
*      WRITE:/ EXEC_PROTOCOL.
*    ENDLOOP.
*  ELSE.
*    WRITE:/ 'Completed Successfully.'.
*  ENDIF.
*  ULINE.
*  SKIP 2.
*  WRITE: /50 'End of Report'.
*  CASE EXITPARAM.
*      WHEN 0.
*      WRITE:/  'SUCCESS'.
*
*    when others.
*     MESSAGE E368 WITH
*      EXITPARAM.
*  ENDCASE.

*&---------------------------------------------------------------------*
*&      Form  PAYFILE_ERR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM PAYFILE_ERR.
*OPEN DATASET FFNAME.
  OPEN DATASET FFNAME for input IN TEXT MODE encoding default.

  IF SY-SUBRC NE 0.
    MESSAGE E368 WITH 'Payment file does not exist.'.
  ENDIF.
  CLOSE DATASET FFNAME.
ENDFORM.                    " PAYFILE_ERR

*&---------------------------------------------------------------------*
*&      Form  PAYFILE_STATUS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM PAYFILE_STATUS.
  CASE SY-SUBRC.
    WHEN 0.
      SKIP 2.
      WRITE:/ 'STATUS OF H2H TRANSFER'.
      ULINE.
      DESCRIBE TABLE EXEC_PROTOCOL LINES R_CNT.
      IF R_CNT > 0.
        LOOP AT EXEC_PROTOCOL.
          WRITE:/ EXEC_PROTOCOL.
        ENDLOOP.
      ELSE.
        WRITE:/ 'Completed Successfully.'.
      ENDIF.
      ULINE.
      SKIP 2.
      WRITE: /50 'End of Report'.
    WHEN 1.
      MESSAGE E368 WITH
       'ERROR IN FM SXPG_CALL_SYSTEM OR SXPG_COMMAND_EXECUTE'
                     '- NO PERMISSION'.
    WHEN 2.
      MESSAGE E368 WITH
       'ERROR IN FM SXPG_CALL_SYSTEM OR SXPG_COMMAND_EXECUTE'
                     '- COMMAND NOT FOUND'.
    WHEN 3.
      MESSAGE E368 WITH
       'ERROR IN FM SXPG_CALL_SYSTEM OR SXPG_COMMAND_EXECUTE'
                     '- PARAMETERS TOO LONG'.
    WHEN 4.
      MESSAGE E368 WITH
       'ERROR IN FM SXPG_CALL_SYSTEM OR SXPG_COMMAND_EXECUTE'
                     '- SECURITY RISK'.
    WHEN 5.
      MESSAGE E368 WITH
       'ERROR IN FM SXPG_CALL_SYSTEM OR SXPG_COMMAND_EXECUTE'
                     '- WRONG_CHECK_CALL_IF'.
    WHEN 6.
      MESSAGE E368 WITH
       'ERROR IN FM SXPG_CALL_SYSTEM OR SXPG_COMMAND_EXECUTE'
                     '- PROGRAM_START_ERROR'.
    WHEN 7.
      MESSAGE E368 WITH
       'ERROR IN FM SXPG_CALL_SYSTEM OR SXPG_COMMAND_EXECUTE'
                     '- PROGRAM_TERMINATION_ERROR'.
    WHEN 8.
      MESSAGE E368 WITH
       'ERROR IN FM SXPG_CALL_SYSTEM OR SXPG_COMMAND_EXECUTE'
                     '- X_ERROR'.
    WHEN 9.
      MESSAGE E368 WITH
       'ERROR IN FM SXPG_CALL_SYSTEM OR SXPG_COMMAND_EXECUTE'
                     '- PARAMETER_EXPECTED'.
    WHEN 10.
      MESSAGE E368 WITH
       'ERROR IN FM SXPG_CALL_SYSTEM OR SXPG_COMMAND_EXECUTE'
                     '- TOO_MANY_PARAMETERS'.
    WHEN 11.
      MESSAGE E368 WITH
       'ERROR IN FM SXPG_CALL_SYSTEM OR SXPG_COMMAND_EXECUTE'
                     '- ILLEGAL_COMMAND'.
    WHEN 12.
      MESSAGE E368 WITH
       'ERROR IN FM SXPG_CALL_SYSTEM OR SXPG_COMMAND_EXECUTE'
                     '- OTHERS'.
    WHEN OTHERS.
      MESSAGE E368 WITH
                     ' OHTER ERRORS'.
  ENDCASE.
  CASE EXITPARAM.
    WHEN 0.
*       WRITE:/  'SUCCESS'.
    WHEN OTHERS.
      MESSAGE E368 WITH ' EXECUTION OF SCRIPT FAILED'.
  ENDCASE.
ENDFORM.                    " PAYFILE_STATUS

*Text symbol text£º

*001:
*Selection text£º
*FILEPATH:        File Path
*PARM1:        Parameter 1
*PARM2:        Parameter 2
*PARM3:        Parameter 3
*PAYFILE:        Payment File Name
*VPAYFILE:        Validate Payment File
