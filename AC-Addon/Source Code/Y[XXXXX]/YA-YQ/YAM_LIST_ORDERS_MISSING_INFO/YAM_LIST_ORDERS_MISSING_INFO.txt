*----------------------------------------------------------------------
* PROGRAM ID           : YAM_LIST_ORDERS_MISSING_INFO                  *
* PROGRAM TITLE        : List of service orders with missing info      *
* AUTHOR               : Luc Mertens                                   *
* DATE                 : 02/08/2005                                    *
* DEVELOPMENT ID       :                                               *
* CHANGE REQUEST NUMBER: CD1K902906                                    *
* PROGRAM DESCRIPTION  : List all service orders which have a return-  *
*                        code filled after executing                   *
*                        FM 'BAPI_ALM_ORDER_GET_DETAIL'                *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG
*
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE #
*----------------------------------------------------------------------*
* MOD-001 |2005.09.23|L. Mertens   |CD1K903328
* MOD-002 |2005.10.17|L. Mertens   |CD1K903597
* MOD-003 |2006.01.25|L. Mertens   |CD1K904545
* MOD-004 |2006.06.09|L. Mertens   |CD1K905749
* MOD-005 |2006.07.11|L. Mertens   |CD1K906156
*----------------------------------------------------------------------*

REPORT YAM_LIST_ORDERS_MISSING_INFO no standard page heading
                                line-size 120.

TABLES: aufk.                                 " Order Master data

SELECT-OPTIONS: s_aufnr  for aufk-aufnr,
                s_werks  for aufk-werks.

DATA: g_aufnr like aufk-aufnr.

DATA: BEGIN OF i_partner OCCURS 100.
        INCLUDE STRUCTURE bapi_alm_order_partner.
DATA: END OF i_partner.

DATA: BEGIN OF i_operations OCCURS 100.
        INCLUDE STRUCTURE bapi_alm_order_operation_e.
DATA: END OF i_operations.

DATA: BEGIN OF i_components OCCURS 100.
        INCLUDE STRUCTURE bapi_alm_order_component_e.
DATA: END OF i_components.

DATA: BEGIN OF i_relations OCCURS 100.
        INCLUDE STRUCTURE bapi_alm_order_relation_export.
DATA: END OF i_relations.

DATA: BEGIN OF i_texts OCCURS 100.
        INCLUDE STRUCTURE bapi_alm_text.
DATA: END OF i_texts.

DATA: BEGIN OF i_text_lines OCCURS 100.
        INCLUDE STRUCTURE bapi_alm_text_lines.
DATA: END OF i_text_lines.

DATA: BEGIN OF i_prts OCCURS 100.
        INCLUDE STRUCTURE bapi_alm_order_prt_e.
DATA: END OF i_prts.

DATA: BEGIN OF i_costs_sum OCCURS 100.
        INCLUDE STRUCTURE bapi_alm_order_costs_sum_e.
DATA: END OF i_costs_sum.

DATA: BEGIN OF i_costs_detail OCCURS 100.
        INCLUDE STRUCTURE bapi_alm_order_costs_detail_e.
DATA: END OF i_costs_detail.

DATA: BEGIN OF i_return OCCURS 100.
        INCLUDE STRUCTURE bapiret2.
DATA: END OF i_return.

* begin of insert MOD-001
data: begin of gt_aufk occurs 0,
        aufnr like aufk-aufnr,
      end of gt_aufk.
* end of insert MOD-001

* begin of insert MOD-002
data: g_prdat like sy-datum.
* end of insert MOD-002

* begin of insert MOD-004
data: g_err(1) type c.
* end of insert MOD-004

*-----------------------------------------------------------------------
START-OF-SELECTION.

* begin of insert MOD-002
  g_prdat = sy-datum - 1.
* end of insert MOD-002

* begin of insert MOD-004
  clear g_err.
* end of insert MOD-004

* begin of change MOD-001
* select aufnr into g_aufnr
  select aufnr into corresponding fields of table gt_aufk
* end of change MOD-001
     from AUFK
     where aufnr in s_aufnr
* begin of insert MOD-002
       and aedat between g_prdat and sy-datum
* end of insert MOD-002
       and werks in s_werks.

* begin of insert MOD-001
  clear gt_aufk.
  loop at gt_aufk.
* end of insert MOD-001

    refresh: i_partner,
             i_operations,
             i_components,
             i_relations,
             i_texts,
             i_text_lines,
             i_prts,
             i_costs_detail,
             i_return.

    CALL FUNCTION 'BAPI_ALM_ORDER_GET_DETAIL'
       EXPORTING
* begin of change MOD-001
*        number           = g_aufnr
         number           = gt_aufk-aufnr
* end of change
       TABLES
         et_partner       = i_partner
         et_operations    = i_operations
         et_components    = i_components
         et_relations     = i_relations
         et_texts         = i_texts[]
         et_text_lines    = i_text_lines[]
         et_prts          = i_prts[]
         et_costs_sum     = i_costs_sum[]
         et_costs_details = i_costs_detail[]
         return           = i_return[].

    IF NOT i_return[] IS INITIAL.
      read table i_return index 1.
* begin of insert MOD-002
      if i_return-message_v1+3(12) = gt_aufk-aufnr.
* end of insert MOD-002
* begin of change MOD-001
*       write: /   'Error for :'(e01), g_aufnr,
        write: /   'Error for :'(e01), gt_aufk-aufnr,
* end of change MOD-001
               /10 i_return-type,
                   i_return-id,
                   i_return-number,
                   i_return-message(70).
* begin of insert MOD-005
        message I001(00) with 'Ordernr. ' gt_aufk-aufnr.
* end of insert MOD-005
* begin of insert MOD-004
        g_err = 'X'.
* end of insert MOD-004
* begin of insert MOD-002
      endif.
* end of insert MOD-002
    ENDIF.

* begin of change MOD-001
* endselect.
  endloop.
* end of change MOD-001

* begin of insert MOD-004
  if g_err = 'X'.
    message a001(00) with 'Missing info'.
  endif.
* end of insert MOD-004
*-----------------------------------------------------------------------
END-OF-SELECTION.

TOP-OF-PAGE.

  write: sy-title, 85 sy-datum, 100 sy-uzeit, 115 sy-pagno.
  uline.
  skip.

*Text symbol text£º

*E01:Error for :
*Selection text£º
*S_AUFNR:D       Order
*S_WERKS:D       Plant
