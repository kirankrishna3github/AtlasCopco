*&---------------------------------------------------------------------*
*& Report  YCS_1B_UPDATE_SEO_ZFIELDS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT  ycs_1b_update_seo_zfields.

DATA: nodata_character VALUE '/'.
DATA: bdc_options TYPE ctu_params.
DATA: it_messtab TYPE TABLE OF bdcmsgcoll.
DATA: bdcdata LIKE bdcdata OCCURS 0 WITH HEADER LINE.
DATA: lt_enq TYPE STANDARD TABLE OF seqg3,
      lv_gname TYPE eqegraname VALUE 'AUFK',
      lv_garg TYPE eqegraarg,
      lv_count TYPE sytabix.

PARAMETERS: p_aufnr TYPE aufnr,
            p_action TYPE char04,
            p_zzcom TYPE zzcom,
            p_zzrem TYPE zzrem,
            p_zzsdc TYPE zzsdc,
            p_zzcon TYPE zzcon,
            p_zzapc TYPE zzapc,
            p_zzpsf TYPE zzpsf,
            p_zztrc TYPE zztrc.

*
DEFINE bdc_dynpro.
  clear bdcdata.
  bdcdata-program  = &1.
  bdcdata-dynpro   = &2.
  bdcdata-dynbegin = 'X'.
  append bdcdata.
END-OF-DEFINITION.

DEFINE bdc_field.
  if &2 <> nodata_character.
    clear bdcdata.
    bdcdata-fnam = &1.
    bdcdata-fval = &2.
    append bdcdata.
  endif.
END-OF-DEFINITION.


FREE bdcdata.

*
bdc_dynpro      'SAPLCOIH' '0101'.
bdc_field       'BDC_OKCODE' '/00'.
bdc_field       'CAUFVD-AUFNR' p_aufnr.

*
bdc_dynpro      'SAPLCOIH' '3000'.
bdc_field       'BDC_OKCODE' '=+CUK'.

*
bdc_dynpro      'SAPLCOIH' '3000'.
bdc_field       'BDC_OKCODE' '/00'.
if p_action = 'SAVE'.
  bdc_field       'YAM_CI_AUFK-ZZCOM' p_zzcom.
  bdc_field       'YAM_CI_AUFK-ZZREM' p_zzrem.
else.
  bdc_field       'YAM_CI_AUFK-ZZSDC' p_zzsdc.
  bdc_field       'YAM_CI_AUFK-ZZCON' p_zzcon.
  bdc_field       'YAM_CI_AUFK-ZZAPC' p_zzapc.
  bdc_field       'YAM_CI_AUFK-ZZPSF' p_zzpsf.
  bdc_field       'YAM_CI_AUFK-ZZTRC' p_zztrc.
endif.

*
bdc_dynpro      'SAPLCOIH' '3000'.
bdc_field       'BDC_OKCODE' '=BU'.

*
bdc_options-dismode = 'N'.
bdc_options-updmode = 'S'.

* First check if SEO is still locked due to previous update
DO 10 TIMES.
  CALL FUNCTION 'ENQUEUE_READ'
    EXPORTING
      gclient = sy-mandt
      gname   = lv_gname
      garg    = lv_garg
    IMPORTING
      number  = lv_count
    TABLES
      enq     = lt_enq.

  IF lv_count = 0.
    EXIT.
  ELSE.
    WAIT UP TO 1 SECONDS.
  ENDIF.
ENDDO.

*Call change service order transaction
CALL TRANSACTION 'IW32' USING bdcdata
                        OPTIONS FROM bdc_options
                        MESSAGES INTO it_messtab.

*Selection text£º
*P_ACTION:        Action
*P_AUFNR:D       .
*P_ZZAPC:D       .
*P_ZZCOM:D       .
*P_ZZCON:D       .
*P_ZZPSF:D       .
*P_ZZREM:D       .
*P_ZZSDC:D       .
*P_ZZTRC:D       .
