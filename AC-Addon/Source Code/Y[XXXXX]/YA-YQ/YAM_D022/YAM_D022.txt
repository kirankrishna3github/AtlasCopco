REPORT  YAM_D022 NO STANDARD PAGE HEADING MESSAGE-ID YAM_DC .

*----------------------------------------------------------------------*
* PROGRAM ID           : YAM_DO22                                      *
* PROGRAM TITLE        : DATA UPLOAD PROGRAM FOR MAINTENANCE STRATEGY  *
* AUTHOR               : Amit Mahajan                                  *
* DATE                 : 6/09/2004                                     *
* DEVELOPMENT ID       : XXXX                                          *
*
* CHANGE REQUEST NUMBER:                                               *
* PROGRAM DESCRIPTION  : THIS IS A DATA UPLOAD PROGRAM FOR MAINTENANCE *
*                        STRATEGY.                                     *
*                                                                      *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*
* MOD-001 | xxxx.xx.xx | xxxxxxxxxxxxxxxxx |xxxxxxxxxx |xxxxxxxxxxxxx| *
************************************************************************


************************************************************************
*                  D A T A B A S E   T A B L E S                       *
************************************************************************
TABLES : V_T351P, "Maintenance Strategies
         T351,    "Maintenance strategy
         RMIPM,   "Preventive Maintenance I/O Table
       /sapdmc/lsmemory. "Default Values for Project, Subproject, Object

************************************************************************
*                  I N T E R N A L   T A B L E S                       *
************************************************************************
************************************************************************
*INTERNAL TABLE TO READ THE FILE FOR MAINTENANCE STRATEGY AND PACKAGES *
************************************************************************
DATA : BEGIN OF I_MAINT_PACK OCCURS 0,
       STRAT LIKE T351-STRAT,
       KTEXT LIKE T351T-KTEXT,
       TERMK LIKE T351-TERMK,
       ZEIEH LIKE T351-ZEIEH,
       HORIZ LIKE T351-HORIZ,
       VERS1 LIKE T351-VERS1,
       TOLE1 LIKE T351-TOLE1,
       VERS2 LIKE T351-VERS2,
       TOLE2 LIKE T351-TOLE2,
       FABKL LIKE T351-FABKL,
       ZAEHL LIKE V_T351P-ZAEHL,
       ZYKL1 LIKE RMIPM-ZYKL1,
       KTEX1 LIKE V_T351P-KTEX1,
       KZYK1 LIKE RMIPM-KZYK1,
       HIERA LIKE V_T351P-HIERA,
       KTXHI LIKE V_T351P-KTXHI,
      END OF I_MAINT_PACK.
************************************************************************
* INTERNAL TABLE FOR STORING PACKAGES                                  *
************************************************************************

DATA : BEGIN OF I_ITEM_PACK OCCURS 0,
       STRAT LIKE T351-STRAT,
       ZAEHL LIKE V_T351P-ZAEHL,
       ZYKL1 LIKE RMIPM-ZYKL1,
       KTEX1 LIKE V_T351P-KTEX1,
       KZYK1 LIKE RMIPM-KZYK1,
       HIERA LIKE V_T351P-HIERA,
       KTXHI LIKE V_T351P-KTXHI,
       END OF I_ITEM_PACK.

TYPES: BEGIN OF TY_UPLOAD,
       V_TEXT(168) TYPE C,
       END OF TY_UPLOAD.


************************************************************************
*    Internal Table and Work area                                      *
************************************************************************
DATA : I_BDCDATA LIKE BDCDATA OCCURS 0 WITH HEADER LINE,
       I_UPLOAD TYPE STANDARD TABLE OF TY_UPLOAD INITIAL SIZE 0
       WITH HEADER LINE.

************************************************************************
*   CONSTANTS AND VARIABLES                                            *
************************************************************************

CONSTANTS : C_FILETYPE(10) VALUE 'ASC',
            C_SEPERATOR(1) VALUE 'X',
            C_FILE TYPE C VALUE 'X',
            C_0 TYPE C VALUE '0',
            C_7(2) TYPE C VALUE '07',
            C_2(2) TYPE C VALUE '02',
            C_1(2) TYPE C VALUE '01',
            C_X TYPE C VALUE 'X',
            C_TRANS LIKE TSTC-TCODE VALUE  'IP11',
            C_MODE(1) TYPE C VALUE 'N' ,
            C_UPDATE(1) TYPE C VALUE 'S',
            C_GROUP LIKE APQI-GROUPID VALUE 'Y_IP11'.


DATA : V_COUNT(2),
       V_COUNT1(2),
       V_FNAME LIKE V_T351-KTEXT,
       V_FNAME1 LIKE V_T351-KTEXT,
       V_FNAME2 LIKE V_T351-KTEXT,
       V_FNAME3 LIKE V_T351-KTEXT,
       V_FNAME4 LIKE V_T351-KTEXT,
       V_FNAME5 LIKE V_T351-KTEXT,
       P_INFILE like /SAPDMC/LSOINP-FILENAME,
       RB_PRE TYPE C VALUE ' ',
       RB_APP TYPE C VALUE 'X',
       V_STRAT LIKE V_T351-STRAT.

************************************************************************
* START OF SELECTION                                                   *
************************************************************************
  IMPORT /SAPDMC/LSMEMORY FROM MEMORY ID '/SAPDMC/LSMW'.

CALL FUNCTION '/SAPDMC/LSM_FILE_INFO_GET'
  EXPORTING
    PROJECT                 = /SAPDMC/LSMEMORY-PROJECT
    SUBPROJ                 = /SAPDMC/LSMEMORY-SUBPROJ
    OBJECT                  = /SAPDMC/LSMEMORY-OBJECT
   X_ONLY_USED_FILES        = C_X
 IMPORTING
   FILE_CONV                = P_INFILE.
IF SY-SUBRC <> 0.
MESSAGE E009.
ENDIF.

************************************************************************
* READ INPUT FILE FROM PRESENTATION OR APPLICATION SERVER              *
************************************************************************
PERFORM FILE_INPUT_GET.
************************************************************************
* SPLIT THE INPUT FILE INTO INTERNAL TABLE I_MAINT_PACK
* PASS THE DATA TO THE INTERNAL TABLE I_BDCDATA FOR FURTHER PROCESSING *
************************************************************************
 PERFORM SPLIT_INPUT_FILE.
************************************************************************
* BUILD MAINTENANCE HEADER AND PACKAGE ITEM TABLE                      *
************************************************************************
************************************************************************
* OPEN SESSION                                                         *
************************************************************************
PERFORM OPEN_GROUP.
LOOP AT I_MAINT_PACK WHERE STRAT NE SPACE..
************************************************************************
*PASS THE CONTROL TO GENERATE THE I_BDCDATA TABLE                      *
************************************************************************
PERFORM BATCH_DATA .
ENDLOOP.
************************************************************************
* CLOSE SESSION
************************************************************************
PERFORM CLOSE_GORUP.
************************************************************************
*      Form  FILE_INPUT_GET                                            *
************************************************************************
FORM FILE_INPUT_GET .
IF RB_PRE = C_FILE.                    "READ FROM PRESENTATION SERVER
    PERFORM GET_FROM_PRES TABLES I_UPLOAD USING P_INFILE.
  ELSE.                                  "READ FROM APPLICATION SERVER
    PERFORM GET_FROM_APPL TABLES I_UPLOAD USING P_INFILE.
  ENDIF.
ENDFORM.                    " FILE_INPUT_GET
************************************************************************
*      Form  GET_FROM_PRES                                             *
************************************************************************
FORM GET_FROM_PRES  TABLES I_INFILE USING P_INFILE.

 CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      FILENAME            = P_INFILE
      FILETYPE            = C_FILETYPE
      HAS_FIELD_SEPARATOR = 'X'
    TABLES
      DATA_TAB            = I_INFILE
    EXCEPTIONS
      OTHERS              = 17.
  IF SY-SUBRC <> 0.
    MESSAGE E010.        "DATA UPLOAD FAILED
  ENDIF.
ENDFORM.                    " GET_FROM_PRES

************************************************************************
* FORM  GET_FROM_APPL                                                  *
* UPLOAD INPUT FILES FROM APPLICATION SERVER INTO INTERNAL TABLE       *
************************************************************************
FORM GET_FROM_APPL TABLES I_INFILE STRUCTURE I_UPLOAD USING P_INFILE.
OPEN DATASET P_INFILE FOR INPUT IN TEXT MODE ENCODING DEFAULT.
IF SY-SUBRC <> 0.
    MESSAGE E011.        "OPEN DATASET FAILED
  ENDIF.
  DO.
    READ DATASET P_INFILE INTO I_INFILE-V_TEXT.
    IF SY-SUBRC <> 0.
      EXIT.
    ENDIF..
    APPEND I_INFILE.
  ENDDO.
  CLOSE DATASET P_INFILE.
ENDFORM.                    " GET_FROM_APPL

************************************************************************
*      FORM SPLIT_INPUT_FILE                                           *
************************************************************************
FORM SPLIT_INPUT_FILE .
CLEAR V_STRAT.
LOOP AT I_UPLOAD.
************************************************************************
* PASS THE DATA TO THE INTERNAL TABLE I_BDCDATA FOR FURTHER PROCESSING *
************************************************************************
MOVE I_UPLOAD-V_TEXT+51(6) TO  I_MAINT_PACK-STRAT .
IF V_STRAT NE I_MAINT_PACK-STRAT .
MOVE I_UPLOAD-V_TEXT+57(30) TO  I_MAINT_PACK-KTEXT .
MOVE I_UPLOAD-V_TEXT+87(1)  TO  I_MAINT_PACK-TERMK .
MOVE I_UPLOAD-V_TEXT+88(3)  TO  I_MAINT_PACK-ZEIEH.
MOVE I_UPLOAD-V_TEXT+91(3)  TO  I_MAINT_PACK-HORIZ.
MOVE I_UPLOAD-V_TEXT+94(3)  TO  I_MAINT_PACK-VERS1.
MOVE I_UPLOAD-V_TEXT+97(3)  TO  I_MAINT_PACK-TOLE1.
MOVE I_UPLOAD-V_TEXT+100(3) TO  I_MAINT_PACK-VERS2.
MOVE I_UPLOAD-V_TEXT+103(3) TO  I_MAINT_PACK-TOLE2.
MOVE I_UPLOAD-V_TEXT+106(2) TO  I_MAINT_PACK-FABKL.
V_STRAT = I_MAINT_PACK-STRAT .
APPEND I_MAINT_PACK.
CLEAR I_MAINT_PACK.
ENDIF.
MOVE I_UPLOAD-V_TEXT+51(6)   TO   I_ITEM_PACK-STRAT .
MOVE I_UPLOAD-V_TEXT+108(2)  TO   I_ITEM_PACK-ZAEHL.
MOVE I_UPLOAD-V_TEXT+110(22) TO   I_ITEM_PACK-ZYKL1.
MOVE I_UPLOAD-V_TEXT+132(30) TO   I_ITEM_PACK-KTEX1.
MOVE I_UPLOAD-V_TEXT+162(2)  TO   I_ITEM_PACK-KZYK1.
MOVE I_UPLOAD-V_TEXT+164(2)  TO   I_ITEM_PACK-HIERA.
MOVE I_UPLOAD-V_TEXT+166(2)  TO   I_ITEM_PACK-KTXHI.
APPEND I_ITEM_PACK.
CLEAR I_ITEM_PACK.

ENDLOOP.
ENDFORM.                    " SPLIT_INPUT_FILE
************************************************************************
*  FORM  BATCH_DATA                                                    *
************************************************************************
FORM BATCH_DATA .
   PERFORM POPULATE_BDCTAB  USING: '1'  'SAPL0IP2' '0100',
                                    ' ' 'BDC_OKCODE' '=NEWL'.
    PERFORM POPULATE_BDCTAB  USING: '1' 'SAPL0IP2' '0101',
                                ' ' 'V_T351-STRAT' I_MAINT_PACK-STRAT,
                                ' ' 'V_T351-KTEXT' I_MAINT_PACK-KTEXT,
                                ' ' 'V_T351-TERMK' I_MAINT_PACK-TERMK,
                                ' ' 'V_T351-ZEIEH' I_MAINT_PACK-ZEIEH,
                                ' ' 'V_T351-HORIZ' I_MAINT_PACK-HORIZ,
                                ' ' 'V_T351-VERS1' I_MAINT_PACK-VERS1,
                                ' ' 'V_T351-TOLE1' I_MAINT_PACK-TOLE1,
                                ' ' 'V_T351-FABKL' I_MAINT_PACK-FABKL,
                                ' ' 'BDC_OKCODE'   '=UEBE'.
   PERFORM POPULATE_BDCTAB  USING:  '1' 'SAPL0IP2' '0100',
                            ' ' 'V_T351-KTEXT(01)' I_MAINT_PACK-KTEXT,
                            ' ' 'BDC_OKCODE' '=DET2'.

    PERFORM POPULATE_BDCTAB  USING: '1' 'SAPL0IP2' '0110',
                                    ' ' 'BDC_OKCODE' '=NEWL'.


************************************************************************
*INITIALIZE V_COUNT FIELD                                              *
************************************************************************
    V_COUNT = C_1.
************************************************************************

LOOP AT I_ITEM_PACK WHERE STRAT EQ I_MAINT_PACK-STRAT AND
                          STRAT NE SPACE.
     PERFORM POPULATE_COUNT.
      V_COUNT = V_COUNT + 1.
      IF V_COUNT LT 10.
      CONCATENATE C_0 V_COUNT INTO V_COUNT.
      CLEAR V_COUNT1.
      ENDIF.
    IF V_COUNT GT C_7 .
     PERFORM POPULATE_BDCTAB  USING: '1' 'SAPL0IP2' '0110',
                                 ' ' 'BDC_OKCODE' '=P+'.

     PERFORM POPULATE_BDCTAB  USING: '1' 'SAPL0IP2' '0110',
                                     ' ' 'BDC_OKCODE' '=ENTER'.
     V_COUNT = C_2.
    ENDIF.
ENDLOOP.
    PERFORM POPULATE_BDCTAB  USING: '1' 'SAPL0IP2' '0110',
                                   ' ' 'BDC_OKCODE' '=SAVE',
                                   ' ' 'BDC_OKCODE' '=BACK'.
    PERFORM POPULATE_BDCTAB  USING: '1' 'SAPL0IP2' '0110',
                                    ' ' 'BDC_OKCODE' '=BACK'.
    PERFORM POPULATE_BDCTAB  USING: '1'  'SAPL0IP2' '0100',
                                    ' ' 'BDC_OKCODE' '=SAVE'.
    PERFORM POPULATE_BDCTAB  USING: '1'  'SAPL0IP2' '0100',
                                    ' ' 'BDC_OKCODE' '=BACK'.
 PERFORM BDC_TRANSACTION USING C_TRANS.
REFRESH I_BDCDATA.
ENDFORM.                    " BATCH_DATA
************************************************************************
*FORM  POPULATE_BDCTAB                                                 *
************************************************************************
FORM POPULATE_BDCTAB  USING    FLAG TYPE ANY
                               VAR1 TYPE ANY
                              VAR2 TYPE ANY.
  IF FLAG = '1'.
    I_BDCDATA-PROGRAM =  VAR1.
    I_BDCDATA-DYNPRO = VAR2.
    I_BDCDATA-DYNBEGIN = 'X'.
  ELSE.
    I_BDCDATA-FNAM = VAR1.
    I_BDCDATA-FVAL = VAR2.
  ENDIF.
  APPEND I_BDCDATA.
  CLEAR I_BDCDATA.
ENDFORM.                    "POPULATE_BDCTAB

************************************************************************
*FORM  POPULATE_COUNT                                                  *
************************************************************************
FORM POPULATE_COUNT.
  CONCATENATE 'V_T351P-ZAEHL(' V_COUNT')'  INTO V_FNAME.
  CONCATENATE 'RMIPM-ZYKL1(' V_COUNT')'    INTO V_FNAME1.
  CONCATENATE 'V_T351P-KTEX1(' V_COUNT')'  INTO V_FNAME2.
  CONCATENATE 'V_T351P-KZYK1(' V_COUNT')'  INTO V_FNAME3.
  CONCATENATE 'V_T351P-HIERA(' V_COUNT')'  INTO V_FNAME4.
  CONCATENATE 'V_T351P-KTXHI(' V_COUNT')'  INTO V_FNAME5.

  PERFORM POPULATE_BDCTAB  USING:'1' 'SAPL0IP2' '0110',
                             '' V_FNAME   I_ITEM_PACK-ZAEHL,
                             '' V_FNAME1  I_ITEM_PACK-ZYKL1,
                             '' V_FNAME2  I_ITEM_PACK-KTEX1,
                             '' V_FNAME3  I_ITEM_PACK-KZYK1,
                             '' V_FNAME4  I_ITEM_PACK-HIERA,
                             '' V_FNAME5  I_ITEM_PACK-KTXHI,
                             '' 'BDC_OKCODE' '=ENTER'.
ENDFORM.                    "POPULATE_COUNT
***********************************************************************
*      FORM  OPEN_GROUP                                               *
***********************************************************************
FORM OPEN_GROUP .
 CALL FUNCTION 'BDC_OPEN_GROUP'
         EXPORTING  CLIENT   = SY-MANDT
                    GROUP    = C_GROUP
                    USER     = SY-UNAME
                    KEEP     = ' '.
IF SY-SUBRC NE 0.
MESSAGE E013.
ENDIF.
ENDFORM.                    " OPEN_GROUP
***********************************************************************
*      FORM  CLOSE_GORUP
***********************************************************************
FORM CLOSE_GORUP .
   CALL FUNCTION 'BDC_CLOSE_GROUP'.

ENDFORM.                    " CLOSE_GORUP
************************************************************************
*      FORM  BDC_TRANSACTION
***********************************************************************F
FORM BDC_TRANSACTION  USING    P_C_TRANS.
CALL FUNCTION 'BDC_INSERT'
 EXPORTING
   TCODE                  = P_C_TRANS
  TABLES
    DYNPROTAB             =  I_BDCDATA
 EXCEPTIONS
   INTERNAL_ERROR         = 1
   NOT_OPEN               = 2
   QUEUE_ERROR            = 3
   TCODE_INVALID          = 4
   PRINTING_INVALID       = 5
   POSTING_INVALID        = 6
   OTHERS                 = 7
          .
IF SY-SUBRC NE 0.
MESSAGE E014.
ENDIF.
ENDFORM.                    " BDC_TRANSACTION
