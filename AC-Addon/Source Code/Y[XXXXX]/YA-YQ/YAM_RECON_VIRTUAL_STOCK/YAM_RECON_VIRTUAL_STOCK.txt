*----------------------------------------------------------------------*
* PROGRAM ID           : YAM_RECON_VIRTUAL_STOCK                           *
* PROGRAM TITLE        : AM: Reconciliation VIRTUAL Stock                  *
* AUTHOR               : Thomas Dombrowski                                 *
* DATE                 : 17/08/2010                                    *
* DEVELOPMENT ID       :                                        *
*                                                                      *
* CHANGE REQUEST NUMBER:                                   *
*                                                                      *
* Program Description:  Create file with different stock qties for     *
*                       reconciliation purposes                        *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*
*
* MOD-001 |2010.08.17 |Thomas Dombrowski| adapt program to fit to needs*
*           - of ASAP accounting Team                               *
************************************************************************
REPORT YAM_RECON_VIRTUAL_STOCK MESSAGE-ID yam_inf
                        no standard page heading
                        line-size 120.

************************************************************************
*                   T A B L E S                                        *
************************************************************************
TABLES:
        CRHD.                  "Work centers


************************************************************************
*                   C O N S T A N T S                                  *
************************************************************************
CONSTANTS: c_x(1)       type c     value 'X',
           c_a(1)       type c     value 'A',
           c_fse(3)     type c     value 'FSE',
           c_zsm5       type auart value 'ZSM5',
           c_teco(1)    type c     value '3',
           c_clsd(1)    type c     value '6',
           c_501(3)     type c     value '501',
           c_502(3)     type c     value '502',
           c_261(3)     type c     value '261',
           c_262(3)     type c     value '262',
           c_311(3)     type c     value '311',
           c_vans(14)   type c     value 'YAM_RECVIRSTCK'.


************************************************************************
*                   V A R I A B L E S                                  *
************************************************************************
DATA:  g_ofile  like      /sapdmc/lsoinp-filename,
       g_directory(25) type c value '/var/load/xxx/UK/read/',
       g_aufnr         type aufnr,
       g_vanst         type labst,
       p_logsys LIKE tbdlst-logsys.


************************************************************************
*                  I N T E R N A L   T A B L E S                       *
************************************************************************
DATA : BEGIN OF i_mard OCCURS 0,
          werks LIKE mard-werks,
          lgort LIKE mard-lgort,
          matnr LIKE mard-matnr,
          labst LIKE mard-labst,
       END OF i_mard.

DATA : BEGIN OF i_final OCCURS 0,
          werks LIKE mard-werks,
          lgort LIKE mard-lgort,
          matnr LIKE mard-matnr,
          labst(17) type c,
          menge(17) type c,
          unconfqty(17) type c,
          vanst(17) type c,
          aufnr(15) type c,
          dmbtr(15) type c,
       END OF i_final.

DATA : BEGIN OF i_mseg OCCURS 0,
          werks LIKE mseg-werks,
          lgort LIKE mseg-lgort,
          matnr LIKE mseg-matnr,
          bwart LIKE mseg-bwart,
          menge type labst,
          shkzg type shkzg,
          aufnr like mseg-aufnr,
          dmbtr like mseg-dmbtr,
       END OF i_mseg.

DATA : BEGIN OF gt_aufm OCCURS 0,
          mblnr like aufm-mblnr,
          zeile like aufm-zeile,
          aufnr like aufm-aufnr,
          werks LIKE aufm-werks,
          lgort LIKE aufm-lgort,
          matnr LIKE aufm-matnr,
          bwart LIKE aufm-bwart,
          menge type menge_d,
          shkzg type shkzg,
          dmbtr like aufm-dmbtr,
       END OF gt_aufm.

DATA : begin of i_afih occurs 0,
          aufnr like afih-aufnr,
       end of i_afih.

DATA: BEGIN OF i_returns OCCURS 0,
        werks       like yam_i017_teco-werks,
        lgort       like yam_i017_teco-lgort,
        matnr       like yam_i017_teco-matnr,
        unconfqty   like yam_i017_teco-unconfqty,
      END OF i_returns.


data: begin of i_van_sloc occurs 0,
        arbpl    type gewrk,
        werks    type werks_d,
        lgort    type lgort_d,
      end of i_van_sloc.

data: begin of i_yam_i017_teco occurs 0.
        include structure yam_i017_teco.
data: end of i_yam_i017_teco.

************************************************************************
*       S E L E C T - O P T I O N S / P A R A M E T E R S              *
************************************************************************

SELECTION-SCREEN : BEGIN OF BLOCK b1 WITH FRAME TITLE text-i01.

SELECT-OPTIONS: s_werks for crhd-werks NO INTERVALS.
PARAMETERS:     p_list as checkbox.

SELECTION-SCREEN: END OF BLOCK b1.


************************************************************************
INITIALIZATION.

  CALL FUNCTION 'OWN_LOGICAL_SYSTEM_GET'
    IMPORTING
      own_logical_system             = p_logsys
    EXCEPTIONS
      own_logical_system_not_defined = 1
      OTHERS                         = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
         WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.


************************************************************************
*       S T A R T - O F - S E L E C T I O N    E V E N T               *
************************************************************************
START-OF-SELECTION.

  perform get_virtual_stock.

  perform create_file.

  perform write_outputfiles.

  if p_list = 'X'.
    perform write_outputlist.
  endif.


************************************************************************
*       E N D - O F - S E L E C T I O N    E V E N T                   *
************************************************************************
END-OF-SELECTION .

  skip.
  write: / 'End of List'(i02).


*--- S U B R O U T I N E S --------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  Get_virtual_stock
*&---------------------------------------------------------------------*
FORM get_virtual_stock .

* Select orders which are NOT TECO/CLOSED

  select aufnr
       into table i_afih
       from AFIH
       where iphas not in (c_clsd, c_teco)
         and iwerk     in s_werks.

  select mblnr werks lgort matnr bwart menge shkzg aufnr dmbtr
    zeile
    into corresponding fields of table gt_aufm
    from AUFM
    for all entries in i_afih
    where aufnr eq i_afih-aufnr
      and bwart in (c_501, c_502, c_261, c_262, c_311).


* Get quantity via movements 501-502-261-262
  loop at gt_aufm.

      move-corresponding gt_aufm to i_mseg.
      if i_mseg-bwart = '261' or
         i_mseg-bwart = '502'.
        i_mseg-menge = i_mseg-menge * -1.
      elseif i_mseg-bwart = '311' and
             i_mseg-shkzg = 'H'.              "Credit
        i_mseg-menge = i_mseg-menge * -1.
      endif.
      clear i_mseg-bwart.
      clear i_mseg-shkzg.
      collect i_mseg.

      endloop.

  sort i_mseg by werks aufnr matnr lgort.

ENDFORM.                    " get_virtual_stock


*&---------------------------------------------------------------------*
*&      Form  Create file
*&---------------------------------------------------------------------*
FORM create_file .

*  create final outputfile


LOOP AT i_mseg WHERE werks in s_werks.
    if  i_mseg-dmbtr > 0.
      move-corresponding i_mseg to i_final.
      clear i_mseg-menge.
      append i_final.
    clear i_final.
    endif.
      endloop.



ENDFORM.                    " Create file

*&---------------------------------------------------------------------*
*&      Form  Write_outputfiles
*&---------------------------------------------------------------------*
*       Write outputfiles per plant
*----------------------------------------------------------------------*
FORM write_outputfiles.

  REPLACE 'xxx' IN g_directory WITH p_logsys(3).

  clear i_final.

  loop at i_final.

    at new werks.
      CONCATENATE g_directory c_vans '_' i_final-werks INTO g_ofile.

      open dataset g_ofile for output in text mode encoding default.
      if sy-subrc <> 0.
        write: / text-e03, g_ofile.
        exit.
      endif.
    endat.

    transfer i_final to g_ofile.

    at end of werks.
      close dataset g_ofile.
    endat.

  endloop.

ENDFORM.                    " Write_outputfiles

*&---------------------------------------------------------------------*
*&      Form  Write_outputlist
*&---------------------------------------------------------------------*
FORM write_outputlist .

  clear i_final.

  loop at i_final WHERE menge NE 0.

    at new werks.
      new-page.
    endat.

    write: /001 i_final-werks,
            007 i_final-aufnr,
            030 i_final-matnr,
            050 i_final-dmbtr,
            070 i_final-menge.


  endloop.

ENDFORM.                    " write_outputlist

*-----------------------------------------------------------------------
TOP-OF-PAGE.

  write: sy-title, 85 sy-datum, 100 sy-uzeit, 115 sy-pagno.
  uline.

  write: 001 'Plant'(001),
         007 'Order Number'(008),
         030 'Item number'(003),
         050 'Total Value'(002),
         078 'Quantity'(005).


  uline.
  skip.

*Text symbol text£º
*001:Plant
*002:Total Value
*003:Item number
*004:
*005:Quantity
*006:
*007:
*008:Order Number
*E01:No FSE stor.location available for the Selection
*E03:Open dataset failed for :
*I01:Selection Screen Input

*I02:End of List
*Selection text£º
*P_LIST:        Outputlist
*S_WERKS:D       .
