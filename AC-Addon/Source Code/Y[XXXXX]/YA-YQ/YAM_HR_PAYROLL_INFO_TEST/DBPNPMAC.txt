***INCLUDE DBPNPMAC .

* ==================================================================== *
*     RP_PROVIDE_FROM_FRST                                             *
*     PNNNN SUBTY BEGDA ENDDA
* ==================================================================== *
DEFINE rp_provide_from_frst.
*  $PNNNN$ = &1.
*  $SUBTY$ = &2.
*  $BEGDA$ = &3.
*  $ENDDA$ = &4.
  pnp-sw-found = '0'.
  loop at &1.
    if &2 <> space.
       check &1-subty = &2.
    endif.
    if &1-begda <= &4 and &1-endda >= &3.
      pnp-sw-found = '1'.
      exit.
    endif.
  endloop.
  if pnp-sw-found = '0'.
  clear &1.
  endif.
END-OF-DEFINITION.
* ==================================================================== *

* ==================================================================== *
*     RP_PROVIDE_FROM_LAST                                             *
*     PNNNN SUBTY BEGDA ENDDA
* ==================================================================== *
DEFINE rp_provide_from_last.
*  $PNNNN$ = &1.
*  $SUBTY$ = &2.
*  $BEGDA$ = &3.
*  $ENDDA$ = &4.
  pnp-sw-found = '0'.
  clear pnp-sy-tabix.
  loop at &1.
    if &2 <> space.
      check &1-subty = &2.
    endif.
    if &1-begda <= &4 and &1-endda >= &4.
      pnp-sw-found = '1'.
      exit.
    endif.
    if &1-begda <= &4 and &1-endda >= &3.
      pnp-sy-tabix = sy-tabix.
    endif.
  endloop.
  if pnp-sw-found = '0'.
    if pnp-sy-tabix <> 0.
      pnp-sw-found = '1'.
      read table &1 index pnp-sy-tabix.
    else.
      clear &1.
    endif.
  endif.
END-OF-DEFINITION.
* ==================================================================== *

* ==================================================================== *
*     RP_READ_INFOTYPE                                                 *
* Parameters:                                                          *
*    PERNR        Requested Personalnumber                             *
*    INFTY        Requested Infotypnumber                              *
*    INFTY-TABLE  Output Table Like PNNNN                              *
*    BEGDA        Requested Interval-Begin                             *
*    ENDDA        Requested Interval-End                               *
* ==================================================================== *
DEFINE rp_read_infotype.
*  $PERNR$ = &1.                          "Personalnummer
*  $INFTY$ = &2.                          "Infotypnummer
*  $INFTY-TABLE$ = &3.                    "Infotyptabelle
*  $BEGDA$ = &4.                          "Beginndatum
*  $ENDDA$ = &5.                          "Endedatum
  perform read-infotype in program sapdbpnp
          tables &3
          using &1 '&2' &4 &5.
END-OF-DEFINITION.
* ==================================================================== *

* ==================================================================== *
*     RP_SET_DATA_INTERVAL                                             *
* Parameters:                                                          *
*    NAME         Infotypename                                         *
*    BEGDA        Requested Interval-Begin                             *
*    ENDDA        Requested Interval-End                               *
* ==================================================================== *
DEFINE rp_set_data_interval.
*  $NAME$   = &1.
*  $BEGDA$  = &2.
*  $ENDDA$  = &3.
  check &2 <= &3.
  if &1 = 'ALL'.
    loop at $rinfo$.
      $rinfo$-begda = &2.
      $rinfo$-endda = &3.
      modify $rinfo$ index sy-tabix.
    endloop.
  else.
    read table $rinfo$ with key name = &1.
    if sy-subrc = 0.
      $rinfo$-begda = &2.
      $rinfo$-endda = &3.
      modify $rinfo$ index sy-tabix.
    endif.
  endif.
END-OF-DEFINITION.
* ==================================================================== *

* ==================================================================== *
*     RP_READ_ALL_TIME_ITY                                             *
* Read all Infotypes between 2000 and 2999 into the                    *
* corresponding infotypetables                                         *
* only allowed after get PERNR !
* Parameters:                                                          *
*    BEGDA        Requested Interval-Begin                             *
*    ENDDA        Requested Interval-End                               *
* * * * * *
*    PERNR-PERNR is given                                              *
* ==================================================================== *
DEFINE rp_read_all_time_ity.
  perform fill-all-time-infotype-tables in program sapdbpnp
          using &1 &2.
END-OF-DEFINITION.
* ==================================================================== *

* ==================================================================== *
*     RP_UPDATE                                                        *
* Interface between reports that maintain infotype records and update  *
* program. Records may only be maintained, not added to or deleted     *
* Parameters:                                                          *
*    old_table  Internal table with records before maintenance         *
*    new_table  Internal table with records after maintenance          *
*    tclas      'A' - Master data
*               'B' - Applicant data
* ==================================================================== *
DEFINE rp_update.
  perform set_tclas(rpupdctl) using &3.
  perform update(rpupdctl) tables &1 &2 using 'X' 'X' 'X'.
END-OF-DEFINITION.
* ==================================================================== *
