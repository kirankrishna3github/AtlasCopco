REPORT riqmel20 MESSAGE-ID ih
                NO STANDARD PAGE HEADING.

*-----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                    *
*-----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE #  *
*-----------------------------------------------------------------------*
* MOD-001 |2008.03.13|L. Mertens       |CD2K940262| Upgrade ECC6        *
*-----------------------------------------------------------------------*
* MOD-002 |2011.09.20|Nanda Sreenivasan|CD1K967959| fix for recording   *
*-----------------------------------------------------------------------*


*####################################################################*
* Datenteil                                                          *
*####################################################################*

*-------------------------------------------------------------------*
* Interne Tabellen                                                  *
*-------------------------------------------------------------------*
DATA: BEGIN OF object_tab OCCURS 0.
        INCLUDE STRUCTURE rihqmel_list.
DATA    arbpl_i    LIKE viqmelst-arbpl.
DATA    adrnr_iloa LIKE viqmelst-adrnr_iloa.
DATA    kzmla      LIKE viqmelst-kzmla.
DATA    tplnr_int  LIKE viqmelst-tplnr.
DATA    qmkat      LIKE viqmelst-qmkat.
DATA    phase      LIKE qmel-phase.
DATA    selected.
DATA    lights.
DATA    pm_selected TYPE pm_selected.
DATA    pster      LIKE viqmsml-pster.                      "493424
DATA    pstur      LIKE viqmsml-pstur.                      "493424
DATA    peter      LIKE viqmsml-peter.                      "497622
DATA    petur      LIKE viqmsml-petur.                      "497622
DATA  END OF object_tab.

DATA: sel_tab LIKE rihqmel_list OCCURS 0 WITH HEADER LINE.

DATA: BEGIN OF g_ihpa_tab OCCURS 0,
        objnr LIKE ihpa-objnr,
        parvw LIKE ihpa-parvw,
        parnr LIKE ihpa-parnr,
      END OF g_ihpa_tab.

* global data
data: gv_cnt_ok(3)   type n,
      gv_msg(119)    type c,
      gv_mestx       like t100-text.

DATA: begin of i_logtab occurs 0,
        code(1)    type c,
        msg(119)   type c,
      end of i_logtab.

DATA : i_bdcdata LIKE bdcdata OCCURS 0 WITH HEADER LINE,
       struct_bdcdata TYPE bdcdata,
       gt_err    LIKE BDCMSGCOLL occurs 0 with header line.

*-------------------------------------------------------------------*
* Datenfelder f¨¹r Einheitenkonvertierung                            *
*-------------------------------------------------------------------*
DATA: g_emaueh     LIKE viqmelst-maueh.
DATA: g_imaueh     LIKE viqmelst-maueh.
DATA: g_answer.
* begin of insert MOD-001
DATA: gv_no_partners type xfeld.
* end of insert MOD-001

*-------------------------------------------------------------------*
* Flags Sonderverarbeitungen                                        *
*-------------------------------------------------------------------*
DATA: g_parnr_flag.
DATA: g_parnr_vera_flag.
DATA: g_errorcode LIKE sy-subrc.
DATA: g_variant_flag.
*eject
*-------------------------------------------------------------------*
* INCLUDES                                                          *
*-------------------------------------------------------------------*
INCLUDE miolxtop.
INCLUDE miolxt30.
*eject
*####################################################################*
* Selektionsbild                                                     *
*####################################################################*
*
SELECTION-SCREEN BEGIN OF BLOCK miolqsl1_1 WITH FRAME TITLE text-f01.
SELECT-OPTIONS:
qmtxt      FOR   viqmelst-qmtxt                                      ,
ernam      FOR   viqmelst-ernam      MATCHCODE OBJECT user_addr      ,
erdat      FOR   viqmelst-erdat                                      ,
mzeit      FOR   viqmelst-mzeit                                      ,
bezdt      FOR   viqmelst-bezdt                                      ,
qmgrp      FOR   viqmelst-qmgrp                                      ,
qmcod      FOR   viqmelst-qmcod                                      ,
priok      FOR   viqmelst-priok                                      ,
qmnam      FOR   viqmelst-qmnam      MATCHCODE OBJECT user_addr      ,
aenam      FOR   viqmelst-aenam      MATCHCODE OBJECT user_addr      ,
aedat      FOR   viqmelst-aedat                                      ,
stai1      FOR      rihea-i_qstatin  MATCHCODE OBJECT i_status       ,
stae1      FOR      rihea-i_qstatex  MATCHCODE OBJECT i_status       .
SELECTION-SCREEN BEGIN OF BLOCK arbpl.
SELECT-OPTIONS:
arbpl      FOR    rihqmel_list-arbpl                                 ,
vawrk      FOR    rihqmel_list-vawrk                                 .
SELECTION-SCREEN END OF BLOCK arbpl.
SELECT-OPTIONS:
iwerk      FOR   viqmelst-iwerk                                      ,
ingrp      FOR   viqmelst-ingrp                                      ,
inspk      FOR   viqmelst-inspk      MATCHCODE OBJECT user_addr      ,
datan      FOR   viqmelst-datan                                      ,
strmn      FOR   viqmelst-strmn                                      ,
ltrmn      FOR   viqmelst-ltrmn                                      ,
qmdab      FOR   viqmelst-qmdab                                      ,
rbnr       FOR   viqmelst-rbnr                                       ,
bautl      FOR   viqmelst-bautl      MATCHCODE OBJECT mat1           ,
kunum      FOR   viqmelst-kunum      MATCHCODE OBJECT debi           ,
vbeln      FOR   viqmelst-vbeln      MATCHCODE OBJECT vmva,
kdauf      FOR   viqmelst-kdauf      MATCHCODE OBJECT vmva,
kdpos      FOR   viqmelst-kdpos                           ,
bstnk      FOR   viqmelst-bstnk                           ,
bstdk      FOR   viqmelst-bstdk                           ,
vkorg      FOR   viqmelst-vkorg                           ,
vtweg      FOR   viqmelst-vtweg                           ,
spart      FOR   viqmelst-spart                           ,
warpl      FOR   viqmelst-warpl      MATCHCODE OBJECT mpla,
wapos      FOR   viqmelst-wapos                           .
SELECTION-SCREEN END OF BLOCK miolqsl1_1.

SELECTION-SCREEN BEGIN OF BLOCK miolqsl1_2 WITH FRAME TITLE text-f02.
SELECT-OPTIONS:
ausvn      FOR   viqmelst-ausvn                                      ,
ausbs      FOR   viqmelst-ausbs                                      ,
auztv      FOR   viqmelst-auztv                                      ,
auztb      FOR   viqmelst-auztb                                      ,
btpln      FOR   viqmelst-btpln      MATCHCODE OBJECT iflm           ,
bequi      FOR   viqmelst-bequi      MATCHCODE OBJECT equi           ,
auswk      FOR   viqmelst-auswk                                      ,
msaus      FOR   viqmelst-msaus                                      ,
eauszt     FOR    rihqmel-eauszt                                     ,
verfv      FOR   viqmelst-verfv                                      ,
verfn      FOR   viqmelst-verfn                                      ,
verfm      FOR   viqmelst-verfm                                      ,
anlzv      FOR   viqmelst-anlzv                                      ,
anlzn      FOR   viqmelst-anlzn                                      ,
anlze      FOR   viqmelst-anlze                                      .
SELECTION-SCREEN END OF BLOCK miolqsl1_2.

SELECTION-SCREEN BEGIN OF BLOCK miolqsl1_3 WITH FRAME TITLE text-f03.
SELECT-OPTIONS:
swerk      FOR   viqmelst-swerk                                      ,
stort      FOR   viqmelst-stort                                      ,
msgrp      FOR   viqmelst-msgrp                                      ,
eqfnr      FOR   viqmelst-eqfnr                                      ,
beber      FOR   viqmelst-beber                                      ,
abckz      FOR   viqmelst-abckz                                      ,
kostl      FOR   viqmelst-kostl      MATCHCODE OBJECT kost           ,
bukrs      FOR   viqmelst-bukrs                                      ,
gsber      FOR   viqmelst-gsber                                      ,
anlnr      FOR   viqmelst-anlnr      MATCHCODE OBJECT aanl           .
SELECTION-SCREEN END OF BLOCK miolqsl1_3.

SELECTION-SCREEN BEGIN OF BLOCK miolqsl1_4 WITH FRAME TITLE text-son.
SELECT-OPTIONS: pagestat FOR rihqmel_list-pagestat MODIF ID pag.
PARAMETERS: variant LIKE disvariant-variant.
PARAMETERS: monitor LIKE rihea-pm_selfield.
SELECTION-SCREEN END OF BLOCK miolqsl1_4.

PARAMETERS:
  dy_selm DEFAULT '0' NO-DISPLAY,
  dy_tcode LIKE sy-tcode NO-DISPLAY,
  dy_msgty LIKE sy-msgty DEFAULT 'I' NO-DISPLAY.

RANGES:
  stat     FOR viqmelst-stat,
  gr_date  FOR sy-datum,
  gr_phase FOR qmel-phase.

*eject
*---------------------------------------------------------------------
* Initialization
*---------------------------------------------------------------------
INITIALIZATION.
*--- SAPPHONE aktiv -------------------------------------------------
  PERFORM check_sapphone_aktive_f14.
*--- Aktivit#tstyp bestimmen -----------------------------------------
  PERFORM determine_acttype_qmel_l.
*--- preselect notification types for catalog F4-help
  PERFORM use_correct_qmart_f30.
  PERFORM pre_read_catalog_f30.
*--- Einstiegsvariante Selektionsbild ermitteln ----------------------
  PERFORM variant_start_f16.
*--- Auswahltabelle f¨¹r Monitorfunktion -----------------------------
  PERFORM create_monitor_tab_f30.
*--- Paging aktiv?
  PERFORM prepare_selection_paging_f19.

*--- BADI IWOC_LIST_TUNING active?
  PERFORM is_badi_active_f69 USING g_badi_list_tuning_ref
                                   g_badi_list_tuning_act
                                   g_badi_list_tuning_ini
                                   'IWOC_LIST_TUNING'.

  g_second_value = 'EAUSZT'.
  g_port_title1 = 'Hohe Anzahl, hohe Ausfalldauer'(po1).
  g_port_title2 = 'Niedrige Anzahl, hohe Ausfalldauer'(po2).
  g_port_title3 = 'Hohe Anzahl, niedrige Ausfalldauer'(po3).
  g_port_title4 = 'Niedrige Anzahl, niedrige Ausfalldauer'(po4).
  g_port_value_text = 'Ausfalldauer (h)'(p05).
  g_key = 'QMNUM'.
  g_text = 'QMTXT'.

  CALL METHOD YCL_STATISTICS=>RECORD_TRANSACTION
  .

*---------------------------------------------------------------------
*--- F4 Eingabehilfe f¨¹r Codierung Meldungskopf
*---------------------------------------------------------------------
AT SELECTION-SCREEN ON VALUE-REQUEST FOR qmgrp-low.
  PERFORM help_f4_group_f30 USING g_cat_c qmgrp-low 'QM'.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR qmgrp-high.
  PERFORM help_f4_group_f30 USING g_cat_c qmgrp-high 'QM'.
*---------------------------------------------------------------------
*--- F4 Eingabehilfe f¨¹r code
*---------------------------------------------------------------------
AT SELECTION-SCREEN ON VALUE-REQUEST FOR qmcod-low.
  PERFORM help_f4_code_f30
          USING g_cat_c qmgrp-low qmcod-low 'QMGRP-LOW'.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR qmcod-high.
  PERFORM help_f4_code_f30
          USING g_cat_c qmgrp-high qmcod-high 'QMGRP-HIGH'.
*---------------------------------------------------------------------
*--- F4 Eingabehilfe f¨¹r Listvariante
*---------------------------------------------------------------------
AT SELECTION-SCREEN ON VALUE-REQUEST FOR variant.
  PERFORM variant_inputhelp_f14 USING variant.

*---------------------------------------------------------------------
*--- F4 Eingabehilfe f¨¹r Monitorfunktion (Bezugsgr##e f¨¹r Ampel)
*---------------------------------------------------------------------
AT SELECTION-SCREEN ON VALUE-REQUEST FOR monitor.
  PERFORM monitor_inputhelp_f30 USING monitor.

*eject
*---------------------------------------------------------------------
* AT SELECTION-SCREEN OUTPUT
*---------------------------------------------------------------------
AT SELECTION-SCREEN OUTPUT.

*--- Paging aktiv/inaktiv Screen modifzieren ------------------------
  PERFORM check_screen_paging_f19.
*--- Titlebar Selektionsbild setzten --------------------------------
  PERFORM init_selection_screen_f16.
*--- Aktivit#tstyp bestimmen -----------------------------------------
  PERFORM determine_acttype_qmel_l.
*--- Listvariante initialisieren ------------------------------------
  PERFORM variant_init_l.
*--- defaultvariante f¨¹rs Selektionsbild ermitteln ------------------
*--- Wegen Parameter¨¹bergabe im PBO, aber nur einmal ausf¨¹hren ------
  IF variant IS INITIAL AND
    g_variant_flag IS INITIAL.
    PERFORM get_default_variant_f14 USING variant.
    g_variant_flag = g_x.
  ENDIF.

*---------------------------------------------------------------------
* AT SELECTION_SCREEN checks for work center & plant
*---------------------------------------------------------------------
AT SELECTION-SCREEN ON BLOCK arbpl.
*--- If work center plant is filled - work center must be filled too
  IF arbpl[] IS INITIAL AND NOT vawrk[] IS INITIAL.
    SET CURSOR FIELD 'ARBPL-LOW'.
    MESSAGE e133(ih).
  ENDIF.

*---------------------------------------------------------------------
* AT SELECTION_SCREEN
*---------------------------------------------------------------------
AT SELECTION-SCREEN.
*--- Check FROM-TO date                                    "note 843861
  IF datuv > datub.                                        "note 843861
    MESSAGE E884(IH) WITH datuv datub.                    "note 843861
  ENDIF.                                                   "note 843861
*--- immer Defaultvariante nehmen, da ALV-GRID diese immer nimmt
  IF variant IS INITIAL.
    PERFORM get_default_variant_f14 USING variant.
  ENDIF.
*--- Korrekte Listvariante ausgew#hlt ? -----------------------------*
  PERFORM variant_existence_f14 USING variant.

*--- if no code-group is entered clear catalog-type for code F4-help
  IF qmgrp[] IS INITIAL.
    CLEAR g_cat_c.
  ENDIF.

*--- Mindestens ein Bearbeitungsstatus markiert ? -------------------*
  IF dy_ofn IS INITIAL AND
     dy_rst IS INITIAL AND
     dy_iar IS INITIAL AND
     dy_mab IS INITIAL.
    SET CURSOR FIELD dy_ofn.
    MESSAGE e041.
  ENDIF.

  IF sy-ucomm = 'ICLS'.
    CLEAR sy-ucomm.

    CALL FUNCTION 'CLSC_SELECT_OBJECTS_FROM_CLASS'
      EXPORTING
        klart   = tcla-klart
        table   = 'QMFE'
      TABLES
        OBJECTS = clobj_tab
      EXCEPTIONS
        pf03    = 01
        pf12    = 02
        pf15    = 03.
    LOOP AT clobj_tab.
      CLEAR qmnum.
      qmnum-option = 'EQ'.
      qmnum-sign   = 'I'.
      qmnum-low    = clobj_tab-obj.
      COLLECT qmnum.
    ENDLOOP.
  ENDIF.
*eject
*---------------------------------------------------------------------
* START-OF-SELECTION
*---------------------------------------------------------------------
START-OF-SELECTION.
*--- Datumsrange aufbauen
  PERFORM create_date_range_f67 TABLES gr_date
                                USING  datuv datub.
*--- Feldkatalog aufbauen -------------------------------------------
  PERFORM create_fieldcat_f14 USING 'RIHQMEL_LIST'.
  PERFORM create_fieldgroups_f30.
*--- Vorselektion Meldungsart jetzt mit Ber¨¹cksichtigung Feldeingabe -
  PERFORM use_correct_qmart_f30.

  REFRESH sel_tab.
  PERFORM export_seltab_mem_f16.
*--- Allgem. Einstellungen f¨¹r Listviewer ----------------------------
  PERFORM prepare_display_list_f14.
*--- zus#tzliche Einstelltung wenn Monitor aktiv ---------------------
  PERFORM check_monitor_input_f30.
  g_layout-info_fieldname = 'COLOR'.
*--- ausgew#hlte Listfelder ermitteln f¨¹r dynamischen select ---------
  PERFORM update_fieldcat_variant_f14.
*--- bei submit kann Feldcatalog auch importiert werden --------------
  IF NOT sy-calld IS INITIAL.
    PERFORM import_fieldcat_f14.
  ENDIF.
  PERFORM check_fieldcat_variant_l.
*--- Datenbankselektion ----------------------------------------------
  PERFORM selection_l.

*eject
*---------------------------------------------------------------------
* END-OF-SELECTION
*---------------------------------------------------------------------
END-OF-SELECTION.

  clear gv_cnt_ok.
  g_ucomm = 'MELD'.
*--- Da Monitor m#glich kein ALV A Puffer !!!
  CLEAR g_alv_buffer.
*--- Liste ausgeben --------------------------------------------------*
  PERFORM display_list_f14 USING g_ucomm.

*---------------------------------------------------------------------*
*       FORM USER_COMMAND_L                                           *
*---------------------------------------------------------------------*
*       will be called out of listviewer                              *
*---------------------------------------------------------------------*
*  -->  P_UCOMM                                                       *
*  -->  P_SELFIELD                                                    *
*---------------------------------------------------------------------*
FORM user_command_l USING p_ucomm LIKE sy-ucomm
                          p_selfield TYPE slis_selfield.

  p_selfield-refresh = g_s.
  g_index = p_selfield-tabindex.

  PERFORM set_p_selfield_general_f16 USING p_selfield.

*--- pf2 umbiegen je nach modus (Ausw#hlen/Anzeigen) ---------------
  PERFORM check_pf2_with_object_f16 USING p_ucomm.

*--- Fcode umbiegen bei Doppelcklick auf Meldungsnummer oder text --
  PERFORM check_object_display_f16 USING p_ucomm
                                         p_selfield
                                         'OBJECT_TAB-QMNUM'
                                         'MELD'.
  PERFORM check_object_display_f16 USING p_ucomm
                                         p_selfield
                                         'OBJECT_TAB-QMTXT'
                                         'MELD'.
*--- Fcode umbiegen bei Doppelcklick auf Auftragsnummer
  PERFORM check_object_display_f16 USING p_ucomm
                                         p_selfield
                                         'OBJECT_TAB-AUFNR'
                                         'AUFK'.

  CASE p_ucomm.
    WHEN g_ol0.
*--- Aktuelle Feldauswahl #ndern -------------------------------------
      PERFORM refresh_l USING p_selfield.
    WHEN g_olx.
*--- Feldauswahl #ndern ---------------------------------------------
      PERFORM refresh_l USING p_selfield.
    WHEN g_oad.
*--- Feldauswahl ausw#hlen ------------------------------------------
      PERFORM refresh_l USING p_selfield.
    WHEN g_lis.
*--- Grundliste aufbauen --------------------------------------------
      PERFORM refresh_l USING p_selfield.
    WHEN 'AKTU'.
*--- Auffrischen ----------------------------------------------------
      p_selfield-refresh = g_x.
      PERFORM selection_l.
    WHEN 'IOBJ'.
*--- Objektstammsatz anzeigen ---------------------------------------
      PERFORM check_object_tab_marked_f14 USING p_ucomm
                                                p_selfield.
      MOVE-CORRESPONDING object_tab TO rihqmel.
      MOVE-CORRESPONDING object_tab TO rihqmel_list.
      PERFORM master_data_f16 USING p_ucomm
                                    p_selfield.
*--- Wegen doppelclick sicherstellen das F-Code nicht zweimal -------
      CLEAR p_ucomm.
    WHEN 'LIDO'.
*--- Download Meldung plus Umfeld -----------------------------------
      PERFORM prepare_download_f16.
      PERFORM fcodes_with_mark_f16 USING p_ucomm p_selfield.
      PERFORM finish_download_f16 USING 'N'.
    WHEN 'ORDE'.
*--- Change notification to Service Order
      PERFORM fcodes_with_mark_f16 USING p_ucomm p_selfield.
      if not i_logtab[] is initial.
        perform list_logtab.
      endif.
    WHEN OTHERS.
*--- zentrale F-codes f¨¹r alle Meldungslisten -----------------------
      PERFORM user_command_f30 USING p_ucomm p_selfield.
  ENDCASE.

*--- If list is empty now - leave ALV
  IF object_tab[] IS INITIAL AND g_variant_save NE g_x.
    p_selfield-exit = g_x.
    MESSAGE s047(ih).
  ENDIF.

ENDFORM.                    "user_command_l
*eject
*---------------------------------------------------------------------*
*       FORM SELECTION_L                                              *
*---------------------------------------------------------------------*
*       Meldungen selektieren                                         *
*---------------------------------------------------------------------*
FORM selection_l.

  RANGES: lr_qmnum_save FOR qmel-qmnum.

  CLEAR g_parnr_flag.
  CLEAR g_parnr_vera_flag.

  PERFORM clear_flags_f30.

  REFRESH object_tab.
  REFRESH g_equnr_tab.
  REFRESH g_tplnr_tab.
  REFRESH g_ihpap_tab.
  REFRESH g_adrnr_sel_tab.

  CLEAR   object_tab.

*--- Save original selection criteria
  lr_qmnum_save[] = qmnum[].

*--- Welche Sonderverarbeitungen sind erforderlich ? ---------------
*--- puffer status initialisieren ------------------------------------
  CALL FUNCTION 'STATUS_BUFFER_REFRESH'.
*    Ausfalldauer
  g_eauszt_flag = yes.
  PERFORM dimension_unit_f30.
*--- Konvertierungsexit T.P. ber¨¹cksichtigen ------------------------*
*  perform check_tplnr_f16 tables strno
*                                 tplnr
*                          using  g_x.

*--- Bei Suche nach TPLNR=SPACE Originalview benutzen
  PERFORM use_iflos_view_f65 USING strno[]
                                   g_altern_act
                                   g_use_alt.

*--- fill status or phase in table for selection
  PERFORM fill_stat_phase_l.

*--- mu# ¨¹ber Adresse vorselektiert werden? ------------------------
  IF NOT dy_adrfl IS INITIAL.
    PERFORM use_correct_qmart_l(sapdbqmi).
    PERFORM fill_stat_phase_l(sapdbqmi).
    PERFORM read_qmnum_via_adrnr(sapdbqmi).
  ENDIF.
*--- mu# u.a. ¨¹ber Arbeitsplatz selektiert werden ------------------
  PERFORM check_sel_workcenter_f66 TABLES arbpl vawrk i_arbpl
                                   USING  g_crhd_flag 'ARBPL'.

*--- Soll ¨¹ber zus#tzliche Statuseingrenzung selektiert werden -----
  PERFORM check_sel_stati_f30 TABLES stat
                              USING  'QM' g_answer.
  IF g_answer = no.
    EXIT.
  ENDIF.

  REFRESH l_jsto_pre_tab.
*--- Gro# und Kleinschreibung bei Kurztext ignorieren --------------
  SET LOCALE LANGUAGE sy-langu.
  LOOP AT qmtxt.
    TRANSLATE qmtxt-low TO UPPER CASE.                   "#EC TRANSLANG
    TRANSLATE qmtxt-high TO UPPER CASE.                  "#EC TRANSLANG
    MODIFY qmtxt.
  ENDLOOP.
  IF g_selmod <> selmod_d.
    CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
      EXPORTING
        percentage = 20
        text       = 'Meldungsselektion'(207).
  ENDIF.

  IF NOT dy_parnr IS INITIAL.
*--- IH-Meldungen lesen ¨¹ber Partner ---------------------------------
* begin of change MOD-001
*   PERFORM get_qmnum_from_ihpa_f30.
    PERFORM get_qmnum_from_ihpa_f30 changing gv_no_partners.
* start 1034462
*   IF qmnum[] IS INITIAL.
    if gv_no_partners = 'X'.
*--- es wurde nicht selektiert
* end of change MOD-001
      EXIT.
    ENDIF.
* end 1034462
  ENDIF.

  PERFORM fill_qmdab_l.
*--- Owner f¨¹r Selektion ¨¹ber ILOA setzten
  PERFORM set_owner_l.

*--- IH-Meldungen lesen Standardversion-----------------------------
  PERFORM sel_meld_stand.

  IF NOT dy_parnr IS INITIAL AND g_par_dbcnt IS INITIAL.
*--- Keine Vorselektion - Nachlesen der Partner
    PERFORM post_read_parnr_f30.
  ENDIF.

  IF object_tab[] IS INITIAL. EXIT. ENDIF.
*--- If alternativ labeling is activ/deactiv delete duplicate entries
*--- object_tab.
  IF g_use_alt = g_x.
    SORT object_tab BY qmnum.
    DELETE ADJACENT DUPLICATES FROM object_tab
                                    COMPARING qmnum tplnr_int.
  ENDIF.
*--- Status ¨¹ber Selektionschema pr¨¹fen
  PERFORM status_check_f16 USING selschem.
*--- Status pr¨¹fen
  PERFORM status_check_l.
  PERFORM status_check_f30.
  IF object_tab[] IS INITIAL. EXIT. ENDIF.
*--- Berechtigungspr¨¹fung
  PERFORM authority_check_f30.
*--- Zusatzdaten nachlesen
  PERFORM fill_object_tab_l.
*--- Defaultsortiertung wenn nichts ¨¹ber SALV eingestellt -----------
  IF g_sortfields_tab[] IS INITIAL.
    SORT object_tab BY qmnum.
  ENDIF.

*--- Restore original selection criteria
  qmnum[] = lr_qmnum_save[].

ENDFORM.                    "selection_l

*eject
*---------------------------------------------------------------------*
*       FORM FILL_OBJECT_TAB_L                                        *
*---------------------------------------------------------------------*
*       Statustexte und Arbeitspl#tze nachlesen                       *
*---------------------------------------------------------------------*
FORM fill_object_tab_l.

  TABLES: diadr.

* begin of insert MOD-001
  FIELD-SYMBOLS: <ls_object_tab> LIKE LINE OF object_tab.
* end of insert MOD-001

*--- nur weiter wenn object_tab gef¨¹llt ----------------------------*
  CHECK NOT object_tab[] IS INITIAL.
*--- Sortieren wegen binary search ---------------------------------*
  SORT g_fieldcat_tab BY fieldname.
*--- Welche Felder m¨¹ssen nachgelesen werden?-----------------------*
  PERFORM check_pre_read_f30.
*--- pre-read partner data? ----------------------------------------*
  PERFORM check_field_display_f14 USING 'PARNR_INT' g_parnr_flag.
  IF g_parnr_flag <> yes.
    PERFORM check_field_display_f14 USING 'PARNAM_INT' g_parnr_flag.
  ENDIF.
  PERFORM check_field_display_f14 USING 'PARNR_VERA'
                                         g_parnr_vera_flag.
  IF g_parnr_vera_flag <> yes.
    PERFORM check_field_display_f14 USING 'PARNAM_VERA'
                                         g_parnr_vera_flag.
  ENDIF.
*--- Wird nach Pagestatus selektiert -> Flag setzten
  IF NOT pagestat[] IS INITIAL. g_page_flag = yes. ENDIF.
*--- wird report dunkel aufgerufen -> alle Flags setzten -----------*
  IF g_selmod = selmod_d.
    PERFORM check_flags_with_selmod_l.
  ENDIF.
*--- prefetch Tabellen aus Object_tab aufbauen
  PERFORM fill_prefetch_tabs_f30.
*--- prefetch f¨¹r Arbeitsplatz, Bezugsobjekt, Material -----*
  PERFORM start_prefetch_f30.
*--- prefetch f¨¹r Partner Daten
  IF g_parnr_flag = yes OR g_parnr_vera_flag = yes.
    IF NOT object_tab[] IS INITIAL.
      SELECT objnr
           parvw
           parnr
             FROM ihpa INTO CORRESPONDING FIELDS OF TABLE g_ihpa_tab
             FOR ALL ENTRIES IN object_tab
             WHERE objnr = object_tab-objnr
             AND   parvw IN i_parvw
             AND   kzloesch = space.
      SORT g_ihpa_tab BY objnr parvw.
      SORT t_tq80 BY qmart.
    ENDIF.
  ENDIF.

  LOOP AT object_tab.
*--- Externe Arbeitsplatznummer bestimmen ----------------------------*
    IF g_arbpl_flag = yes.
      PERFORM read_workcenter_f30 USING    object_tab-arbpl_i
                                  CHANGING object_tab-arbpl
                                           object_tab-vawrk.

*--- falls selektion durch prefetch nicht m#glich -> check

      IF NOT ARBPL[] IS INITIAL                             " P9CK396184
      AND VAWRK[] IS INITIAL.                               " P9CK396184
*       Case 1: ARBPL[]-list valid, VAWERK[]-list invalid   " P9CK396184
        if not object_tab-arbpl in arbpl.
          delete object_tab. continue.
        endif.
      endif.

      IF ARBPL[] IS INITIAL                                 " P9CK396184
      AND NOT VAWRK[] IS INITIAL.                           " P9CK396184
*       Case 2: ARBPL[]-list invalid, VAWRK[]-list valid    " P9CK396184
        IF NOT OBJECT_TAB-VAWRK IN VAWRK.                   " P9CK396184
          DELETE OBJECT_TAB.                                " P9CK396184
          CONTINUE.                                         " P9CK396184
        ENDIF.                                              " P9CK396184
      ENDIF.                                                " P9CK396184

      IF NOT ARBPL[] IS INITIAL                             " P9CK396184
      AND NOT VAWRK[] IS INITIAL.                           " P9CK396184
*       Case 3 ARBPL[]-list valid, VAWRK[]-list valid       " P9CK396184
        IF NOT OBJECT_TAB-ARBPL IN ARBPL                    " P9CK396184
        OR NOT OBJECT_TAB-VAWRK IN VAWRK.                   " P9CK396184
          DELETE OBJECT_TAB.                                " P9CK396184
          CONTINUE.                                         " P9CK396184
        ENDIF.                                              " P9CK396184
      ENDIF.                                                " P9CK396184

    ENDIF.
*--- Statusleiste f¨¹llen ---------------------------------------------*
    IF g_sttxt_flag = yes.
      CALL FUNCTION 'STATUS_TEXT_EDIT'
        EXPORTING
          objnr            = object_tab-objnr
          spras            = sy-langu
          flg_user_stat    = 'X'
        IMPORTING
          line             = object_tab-sttxt
          user_line        = object_tab-ustxt
        EXCEPTIONS
          object_not_found = 01.
      IF NOT sy-subrc IS INITIAL.
        CLEAR object_tab-sttxt.
        CLEAR object_tab-ustxt.
      ENDIF.
    ENDIF.
*--- Equipmentbezeichnung bestimmen ----------------------------------*
    IF g_eqktx_flag = yes.
      IF NOT object_tab-equnr IS INITIAL.
        CALL FUNCTION 'IREP1_EQUIPMENT_TEXT_READ'
          EXPORTING
            i_equnr       = object_tab-equnr
          IMPORTING
            e_eqktx       = object_tab-eqktx
          EXCEPTIONS
            no_text_found = 1
            OTHERS        = 2.
      ENDIF.
    ENDIF.
*--- Platzbezeichnung bestimmen -------------------------------------*
    IF g_pltxt_flag = yes.
      IF NOT object_tab-tplnr_int IS INITIAL.
        CALL FUNCTION 'IREP1_LOCATION_TEXT_READ'
          EXPORTING
            i_tplnr       = object_tab-tplnr_int
          IMPORTING
            e_pltxt       = object_tab-pltxt
          EXCEPTIONS
            no_text_found = 1
            OTHERS        = 2.
      ENDIF.
    ENDIF.
*--- Materialbezeichung bestimmen -----------------------------------*
    IF g_maktx_flag = yes.
      IF NOT object_tab-matnr IS INITIAL.
        CALL FUNCTION 'IREP1_MATERIAL_TEXT_READ'
          EXPORTING
            i_matnr       = object_tab-matnr
          IMPORTING
            e_maktx       = object_tab-maktx
          EXCEPTIONS
            no_text_found = 1
            OTHERS        = 2.
      ENDIF.
      IF NOT object_tab-bautl IS INITIAL.
        CALL FUNCTION 'IREP1_MATERIAL_TEXT_READ'
          EXPORTING
            i_matnr       = object_tab-bautl
          IMPORTING
            e_maktx       = object_tab-bautlx
          EXCEPTIONS
            no_text_found = 1
            OTHERS        = 2.
      ENDIF.
    ENDIF.
*--- Adresse bestimmen -----------------------------------------------*
    IF g_adres_flag = yes OR g_adres_flag = ok.
      PERFORM get_adress_f30 USING object_tab-objnr
                                   object_tab-adrnr
                                   object_tab-adrnr_iloa
                                   object_tab-kunum
                                   object_tab-name_list
                                   object_tab-post_code1
                                   object_tab-city1
                                   object_tab-city2
                                   object_tab-country
                                   object_tab-region
                                   object_tab-street
                                   object_tab-tel_number.
    ENDIF.
*---- interner Partner zuordnen (PARVW_INT) und Bezeichnung nachlesen
    IF g_parnr_flag = yes.
      IF NOT t_tq80-qmart = object_tab-qmart.
        READ TABLE t_tq80 WITH KEY mandt = sy-mandt
                                   qmart = object_tab-qmart
                                   BINARY SEARCH.
      ENDIF.
      READ TABLE g_ihpa_tab WITH KEY objnr = object_tab-objnr
                                     parvw = t_tq80-parvw_int
                                     BINARY SEARCH.
      IF sy-subrc IS INITIAL.
        object_tab-parnr_int = g_ihpa_tab-parnr.
        CLEAR diadr.
        CALL FUNCTION 'PM_PARTNER_READ'
          EXPORTING
            parvw                  = t_tq80-parvw_int
            parnr                  = object_tab-parnr_int
            check_debitor          = space
          IMPORTING
            diadr_wa               = diadr
          EXCEPTIONS
            no_valid_parnr         = 1
            no_valid_parnr_today   = 2
            no_authority           = 3
            parvw_and_nrart_inital = 4
            OTHERS                 = 5.
        IF sy-subrc = 0 OR sy-subrc = 2 OR sy-subrc = 3.
          object_tab-parnam_int = diadr-name_list.
        ENDIF.
      ENDIF.
    ENDIF.
*---- interner Partner zuordnen (PARVW_VERA) und Bezeichnung nachlesen
    IF g_parnr_vera_flag = yes.
      IF NOT t_tq80-qmart = object_tab-qmart.
        READ TABLE t_tq80 WITH KEY mandt = sy-mandt
                                   qmart = object_tab-qmart
                                   BINARY SEARCH.
      ENDIF.
      READ TABLE g_ihpa_tab WITH KEY objnr = object_tab-objnr
                                     parvw = t_tq80-parvw_vera
                                     BINARY SEARCH.
      IF sy-subrc IS INITIAL.
        object_tab-parnr_vera = g_ihpa_tab-parnr.
        CLEAR diadr.
        CALL FUNCTION 'PM_PARTNER_READ'
          EXPORTING
            parvw                  = t_tq80-parvw_vera
            parnr                  = object_tab-parnr_vera
            check_debitor          = space
          IMPORTING
            diadr_wa               = diadr
          EXCEPTIONS
            no_valid_parnr         = 1
            no_valid_parnr_today   = 2
            no_authority           = 3
            parvw_and_nrart_inital = 4
            OTHERS                 = 5.
        IF sy-subrc = 0 OR sy-subrc = 2 OR sy-subrc = 3.
          object_tab-parnam_vera = diadr-name_list.
        ENDIF.
      ENDIF.
    ENDIF.
*--- Pagingstatus nachlesen
    IF g_page_flag = yes.
      PERFORM read_pagestat_f19 USING object_tab-qmnum
                                      object_tab-pagestat.
      IF NOT object_tab-pagestat IN pagestat.
        DELETE object_tab. CONTINUE.
      ENDIF.
    ENDIF.
*--- Escalationsmonitor nachlesen
    IF NOT g_monitor_field IS INITIAL.
* begin of change MOD-001
*     PERFORM set_object_tab_lights_f30.
      PERFORM set_object_tab_lights_f30 CHANGING <ls_object_tab>.
* end of change MOD-001
    ENDIF.
*--- Text zur Priorit#t nachlesen
    IF g_priokx_flag = yes.
      PERFORM get_priokx_f23 USING object_tab-artpr
                                   object_tab-priok
                                   object_tab-priokx.
    ENDIF.
*--- Text Codierung nachlesen.
    IF g_qmcod_flag = yes.
      PERFORM get_qmcodtxt_f23 USING object_tab-qmkat
                                     object_tab-qmgrp
                                     object_tab-qmcod
                                     object_tab-ktxtgr
                                     object_tab-ktxtcd.
    ENDIF.
    MODIFY object_tab.
  ENDLOOP.

  PERFORM set_flags_ok_f30.

  IF g_parnr_flag = yes.
    g_parnr_flag = ok.
  ENDIF.

  IF g_parnr_vera_flag = yes.
    g_parnr_vera_flag = ok.
  ENDIF.

ENDFORM.                    "fill_object_tab_l

*---------------------------------------------------------------------*
*       FORM FILL_OBJECT_TAB_LATE_L                                   *
*---------------------------------------------------------------------*
*       Sonderbehandlung Felder nach Ausflug                          *
*---------------------------------------------------------------------*
FORM fill_object_tab_late_l.

  DATA h_vtcom LIKE vtcom.
  DATA h_kupav LIKE kupav.
  DATA idiqmel LIKE diqmel OCCURS 0 WITH HEADER LINE.

  IMPORT idiqmel return_code FROM MEMORY ID 'QMOB'.
  IF sy-subrc      = 0 AND
     return_code   = 0 .
    FREE MEMORY ID 'QMOB'.
    FREE MEMORY ID 'PM'.
    FREE MEMORY ID 'WF'.
  ENDIF.

  LOOP AT idiqmel WHERE qmnum = object_tab-qmnum.
    MOVE-CORRESPONDING idiqmel TO object_tab.
    object_tab-arbpl_i = idiqmel-arbpl.
*--- #bernahme Techn. Platz
    MOVE  idiqmel-tplnr        TO object_tab-tplnr_int.
    WRITE idiqmel-tplnr        TO object_tab-tplnr.
    PERFORM extern_auszt_ermitteln_f30 USING
                                     idiqmel-auszt
                                     object_tab-eauszt
                                     object_tab-maueh.
*--- Externe Arbeitsplatznummer bestimmen ----------------------------*
    IF g_arbpl_flag = yes OR g_arbpl_flag = ok.
      CLEAR object_tab-arbpl.
      IF NOT object_tab-arbpl_i  IS INITIAL.
        CALL FUNCTION 'CR_WORKSTATION_READ'
          EXPORTING
            id        = object_tab-arbpl_i
            msgty     = 'S'
          IMPORTING
            arbpl     = object_tab-arbpl
            werks     = object_tab-vawrk
          EXCEPTIONS
            not_found = 01.
        IF sy-subrc <> 0.
          CLEAR object_tab-arbpl.
          CLEAR object_tab-vawrk.
        ENDIF.
      ELSE.
        CLEAR object_tab-arbpl.
        CLEAR object_tab-vawrk.
      ENDIF.
    ENDIF.
*--- Equibezeichnung bestimmen -------------------------------------*
    IF g_eqktx_flag = yes OR g_eqktx_flag = ok.
      CLEAR object_tab-eqktx.
      IF NOT object_tab-equnr IS INITIAL.
        CALL FUNCTION 'IREP1_EQUIPMENT_TEXT_READ'
          EXPORTING
            i_equnr       = object_tab-equnr
          IMPORTING
            e_eqktx       = object_tab-eqktx
          EXCEPTIONS
            no_text_found = 1
            OTHERS        = 2.
      ENDIF.
    ENDIF.
*--- Platzbezeichnung bestimmen -------------------------------------*
    IF g_pltxt_flag = yes OR g_pltxt_flag = ok.
      CLEAR object_tab-pltxt.
      IF NOT object_tab-tplnr_int IS INITIAL.
        CALL FUNCTION 'IREP1_LOCATION_TEXT_READ'
          EXPORTING
            i_tplnr       = object_tab-tplnr_int
          IMPORTING
            e_pltxt       = object_tab-pltxt
          EXCEPTIONS
            no_text_found = 1
            OTHERS        = 2.
      ENDIF.
    ENDIF.
*--- Materialbezeichung bestimmen -----------------------------------*
    IF g_maktx_flag = yes OR g_maktx_flag = ok.
      IF NOT object_tab-matnr IS INITIAL.
        CALL FUNCTION 'IREP1_MATERIAL_TEXT_READ'
          EXPORTING
            i_matnr       = object_tab-matnr
          IMPORTING
            e_maktx       = object_tab-maktx
          EXCEPTIONS
            no_text_found = 1
            OTHERS        = 2.
      ENDIF.
      IF NOT object_tab-bautl IS INITIAL.
        CALL FUNCTION 'IREP1_MATERIAL_TEXT_READ'
          EXPORTING
            i_matnr       = object_tab-bautl
          IMPORTING
            e_maktx       = object_tab-bautlx
          EXCEPTIONS
            no_text_found = 1
            OTHERS        = 2.
      ENDIF.
    ENDIF.
*--- Adresse bestimmen -----------------------------------------------*
    IF g_adres_flag = yes OR g_adres_flag = ok.
      PERFORM get_adress_f30 USING object_tab-objnr
                                   object_tab-adrnr
                                   object_tab-adrnr_iloa
                                   object_tab-kunum
                                   object_tab-name_list
                                   object_tab-post_code1
                                   object_tab-city1
                                   object_tab-city2
                                   object_tab-country
                                   object_tab-region
                                   object_tab-street
                                   object_tab-tel_number.
    ENDIF.
    IF NOT g_monitor_field IS INITIAL.
* begin of change MOD-001
*     PERFORM set_object_tab_lights_f30.
      PERFORM set_object_tab_lights_f30 CHANGING object_tab.
* end of change MOD-001
    ENDIF.
*--- Text zur Priorit#t nachlesen
    IF g_priokx_flag = yes OR g_priokx_flag = ok.
      PERFORM get_priokx_f23 USING object_tab-artpr
                                   object_tab-priok
                                   object_tab-priokx.
    ENDIF.
*--- Text Codierung nachlesen.
    IF g_qmcod_flag = yes OR g_qmcod_flag = ok.
      PERFORM get_qmcodtxt_f23 USING object_tab-qmkat
                                     object_tab-qmgrp
                                     object_tab-qmcod
                                     object_tab-ktxtgr
                                     object_tab-ktxtcd.
    ENDIF.
    MODIFY object_tab.
  ENDLOOP.
  REFRESH idiqmel.

ENDFORM.                    "fill_object_tab_late_l
*eject
*---------------------------------------------------------------------*
*       FORM STATUS_PROOF_L                                           *
*---------------------------------------------------------------------*
*       Statusbedingungen ¨¹berpr¨¹fen                                  *
*---------------------------------------------------------------------*
*  -->  F_ANSWER                                                      *
*---------------------------------------------------------------------*
FORM status_proof_l USING f_answer TYPE char01.

  DATA: BEGIN OF h_status_tab OCCURS 20.
          INCLUDE STRUCTURE jstat.
  DATA: END OF h_status_tab.

  DATA: BEGIN OF h_status_text_tab OCCURS 20,
          txt04 LIKE tj02t-txt04.
  DATA: END OF h_status_text_tab.
  DATA: h_stat_flag.
  DATA: h_stsma LIKE tq8t-stsma.

  REFRESH: h_status_tab,
           h_status_text_tab.

  PERFORM find_status_scheme_l USING object_tab-qmart
                                     h_stsma.

  CALL FUNCTION 'STATUS_READ'
    EXPORTING
      objnr            = object_tab-objnr
      only_active      = 'X'
    TABLES
      status           = h_status_tab
    EXCEPTIONS
      object_not_found = 01.

  CHECK sy-subrc = 0.

  f_answer = no.

*--- Status abchecken (Phase nicht benutzt)
  IF NOT stat[] IS INITIAL.
    h_stat_flag = ' '.
    LOOP AT h_status_tab.
      CHECK h_status_tab-stat IN stat.
      h_stat_flag = 'X'.
      EXIT.
    ENDLOOP.
    IF h_stat_flag = ' '.
      EXIT.
    ENDIF.
  ENDIF.

*--- Texte zur Tabelle besorgen -------------------------------------
  LOOP AT h_status_tab.
    CALL FUNCTION 'STATUS_NUMBER_CONVERSION'
      EXPORTING
        language      = sy-langu
        objnr         = object_tab-objnr
        status_number = h_status_tab-stat
      IMPORTING
        txt04         = h_status_text_tab-txt04
      EXCEPTIONS
        OTHERS        = 01.
    IF sy-subrc = 0.
      APPEND h_status_text_tab.
    ENDIF.
  ENDLOOP.

*--- 1. Status inclusiv ---------------------------------------------
  IF NOT g_stai1_lines IS INITIAL.
    h_stat_flag = ' '.
    LOOP AT h_status_text_tab.
      CHECK h_status_text_tab-txt04 IN stai1.
      h_stat_flag = 'X'.
      EXIT.
    ENDLOOP.
    IF h_stat_flag = ' '.
      EXIT.
    ENDIF.
  ENDIF.

*--- 1. Status exclusiv ---------------------------------------------
  IF NOT g_stae1_lines IS INITIAL.
    h_stat_flag = ' '.
    LOOP AT h_status_text_tab.
      CHECK h_status_text_tab-txt04 IN stae1.
      h_stat_flag = 'X'.
      EXIT.
    ENDLOOP.
    IF h_stat_flag = 'X'.
      EXIT.
    ENDIF.
  ENDIF.

  f_answer = yes.

ENDFORM.                    "status_proof_l

*eject
*---------------------------------------------------------------------*
*       FORM FCODES_WITH_MARK_L                                       *
*---------------------------------------------------------------------*
*       FCodes, die auch im Loop verarbeitet werden k#nnen            *
*---------------------------------------------------------------------*
FORM fcodes_with_mark_l USING f_ucomm LIKE sy-ucomm
                              f_selfield TYPE slis_selfield.

*--- aus checkbox wird Haken auf Liste
  PERFORM mark_selected_f16 CHANGING object_tab-selected
                                     object_tab-pm_selected.
*--- Bei PF2 -> in Meldungskopf Springen -----------------------------*
  IF g_ucomm = 'ISEL' OR
     g_ucomm = 'IOBJ' OR
     g_ucomm = 'IPF2'.
    g_ucomm = 'MELD'.
  ENDIF.

  MOVE-CORRESPONDING object_tab TO rihqmel.
  MOVE-CORRESPONDING object_tab TO rihqmel_list.
  CASE f_ucomm.
    WHEN 'LGTX'.
      PERFORM display_longtext_l.
    WHEN 'PHON'.
      PERFORM phon_f70 USING f_selfield.
    when 'ORDE'.
      perform create_service_order using object_tab-qmnum
           object_tab-strmn object_tab-equnr object_tab-arbpl.
    WHEN OTHERS.
      PERFORM call_meldung_l USING f_ucomm f_selfield.
  ENDCASE.

ENDFORM.                    "fcodes_with_mark_l

*&---------------------------------------------------------------------*
*&      Form  SEL_MELD_STAND
*&---------------------------------------------------------------------*
*       Standardselektion Meldungen                                   *
*----------------------------------------------------------------------*
FORM sel_meld_stand.

  DATA: h_qmtxt     LIKE viqmel-qmtxt.
  DATA: l_lines     LIKE sy-tabix,
        l_use_qmnum TYPE flag VALUE 'X',
        l_use_fae   TYPE flag.

  DATA: lt_viqmel_iflos TYPE TABLE OF viqmel_iflos.

  RANGES: lr_qmnum FOR qmel-qmnum.

  FIELD-SYMBOLS: <l_viqmel_iflos> LIKE viqmel_iflos.

  DESCRIBE TABLE qmnum LINES l_lines.

*--- if IFLOS-view is used
  IF g_use_alt = g_x.
    g_viewname = 'VIQMEL_IFLOS'.
    PERFORM add_to_g_selfields_tab_f14 USING 'TPLNR_INT'.
  ELSE.
    g_viewname = 'VIQMEL'.
  ENDIF.
*--- zu selektierende Felder pr¨¹fen
  PERFORM check_g_selfields_tab_f16 TABLES g_selfields_tab
                                    USING g_viewname.
*--- Wenn Prim#rrangetab zu gro# -> select #ndern -------------------*
  IF l_lines > 50.
    l_use_fae = 'X'.
*--- keine generische selektion bei FOR ALL ENTRIES erlaubt
    LOOP AT qmnum TRANSPORTING NO FIELDS
                  WHERE sign <> 'I' OR option <> 'EQ'.
      CLEAR l_use_fae.
      EXIT.
    ENDLOOP.
  ENDIF.
*--- call BADI IWOC_LIST_TUNING
  PERFORM call_badi_f69 USING g_badi_list_tuning_ref
                              g_badi_list_tuning_act
                              g_viewname
                              l_lines
                              l_use_qmnum.
*--- Do not use QMNUM for selection. Filter out later.
  IF l_use_qmnum <> 'X'.
    lr_qmnum[] = qmnum[].
    CLEAR qmnum. REFRESH qmnum.
    CLEAR l_use_fae.
  ENDIF.
*--- mit FOR ALL ENTRIES selektieren
  IF l_use_fae = 'X'.
    SELECT (g_selfields_tab) FROM (g_viewname)
            INTO CORRESPONDING FIELDS OF TABLE lt_viqmel_iflos
                          FOR ALL ENTRIES IN qmnum
                          WHERE qmnum = qmnum-low
                          AND   iwerk IN iwerk
                          AND   tplnr IN strno
                          AND   swerk IN swerk
                          AND   kostl IN kostl
                          AND   abckz IN abckz
                          AND   gsber IN gsber
                          AND   anlnr IN anlnr
                          AND   stort IN stort
                          AND   msgrp IN msgrp
                          AND   eqfnr IN eqfnr
                          AND   beber IN beber
                          AND   ingrp IN ingrp
                          AND   equnr IN equnr
                          AND   matnr IN matnr
                          AND   serialnr IN serialnr
                          AND   deviceid IN deviceid
                          AND   bautl IN bautl
                          AND   msaus IN msaus
                          AND   ausvn IN ausvn
                          AND   ausbs IN ausbs
                          AND   auztv IN auztv
                          AND   auztb IN auztb
                          AND   btpln IN btpln
                          AND   bequi IN bequi
                          AND   auswk IN auswk
                          AND   verfv IN verfv
                          AND   verfn IN verfn
                          AND   verfm IN verfm
                          AND   anlzv IN anlzv
                          AND   anlzn IN anlzn
                          AND   anlze IN anlze
                          AND   inspk IN inspk
                          AND   datan IN datan
                          AND   qmart IN qmart
                          AND   bukrs IN bukrs
                          AND   priok IN priok
                          AND   ernam IN ernam
                          AND   erdat IN erdat
                          AND   aenam IN aenam
                          AND   aedat IN aedat
                          AND   mzeit IN mzeit
                          AND   qmnam IN qmnam
                          AND   strmn IN strmn
                          AND   ltrmn IN ltrmn
                          AND   aufnr IN aufnr
                          AND   kunum IN kunum
                          AND   vbeln IN vbeln
                          AND   kdauf IN kdauf
                          AND   kdpos IN kdpos
                          AND   bstnk IN bstnk
                          AND   bstdk IN bstdk
                          AND   qmdab IN qmdab
                          AND   bezdt IN bezdt
                          AND   rbnr  IN rbnr
                          AND   qmdat IN gr_date
                          AND ( kzloesch = space OR
                                kzloesch IS null )
                          AND   qmart IN i_qmart
                          AND   vkorg IN vkorg
                          AND   vtweg IN vtweg
                          AND   spart IN spart
                          AND   auszt IN i_auszt
                          AND   arbpl IN i_arbpl
                          AND   qmgrp IN qmgrp
                          AND   qmcod IN qmcod
                          AND   warpl IN warpl
                          AND   wapos IN wapos
                          AND   owner IN i_owner
                          AND   phase IN gr_phase.
  ELSE.
*--- normale selektion ¨¹ber view ohne status ------------------------*
    SELECT (g_selfields_tab) FROM (g_viewname)
            INTO CORRESPONDING FIELDS OF TABLE lt_viqmel_iflos
                          WHERE qmnum IN qmnum
                          AND   iwerk IN iwerk
                          AND   tplnr IN strno
                          AND   swerk IN swerk
                          AND   kostl IN kostl
                          AND   abckz IN abckz
                          AND   gsber IN gsber
                          AND   anlnr IN anlnr
                          AND   stort IN stort
                          AND   msgrp IN msgrp
                          AND   eqfnr IN eqfnr
                          AND   beber IN beber
                          AND   ingrp IN ingrp
                          AND   equnr IN equnr
                          AND   matnr IN matnr
                          AND   serialnr IN serialnr
                          AND   deviceid IN deviceid
                          AND   bautl IN bautl
                          AND   msaus IN msaus
                          AND   ausvn IN ausvn
                          AND   ausbs IN ausbs
                          AND   auztv IN auztv
                          AND   auztb IN auztb
                          AND   btpln IN btpln
                          AND   bequi IN bequi
                          AND   auswk IN auswk
                          AND   verfv IN verfv
                          AND   verfn IN verfn
                          AND   verfm IN verfm
                          AND   anlzv IN anlzv
                          AND   anlzn IN anlzn
                          AND   anlze IN anlze
                          AND   inspk IN inspk
                          AND   datan IN datan
                          AND   qmart IN qmart
                          AND   bukrs IN bukrs
                          AND   priok IN priok
                          AND   ernam IN ernam
                          AND   erdat IN erdat
                          AND   aenam IN aenam
                          AND   aedat IN aedat
                          AND   mzeit IN mzeit
                          AND   qmnam IN qmnam
                          AND   strmn IN strmn
                          AND   ltrmn IN ltrmn
                          AND   aufnr IN aufnr
                          AND   kunum IN kunum
                          AND   vbeln IN vbeln
                          AND   kdauf IN kdauf
                          AND   kdpos IN kdpos
                          AND   bstnk IN bstnk
                          AND   bstdk IN bstdk
                          AND   qmdab IN qmdab
                          AND   bezdt IN bezdt
                          AND   rbnr  IN rbnr
                          AND   qmdat IN gr_date
                          AND ( kzloesch = space OR
                                kzloesch IS null )
                          AND   qmart IN i_qmart
                          AND   vkorg IN vkorg
                          AND   vtweg IN vtweg
                          AND   spart IN spart
                          AND   auszt IN i_auszt
                          AND   arbpl IN i_arbpl
                          AND   qmgrp IN qmgrp
                          AND   qmcod IN qmcod
                          AND   warpl IN warpl
                          AND   wapos IN wapos
                          AND   owner IN i_owner
                          AND   phase IN gr_phase.
  ENDIF.
*--- object_tab f¨¹llen
  LOOP AT lt_viqmel_iflos ASSIGNING <l_viqmel_iflos>.
*--- If not used QMNUM for selection, filter out now.
    IF l_use_qmnum <> 'X'.
      CHECK <l_viqmel_iflos>-qmnum IN lr_qmnum.
    ENDIF.
    MOVE-CORRESPONDING <l_viqmel_iflos> TO viqmelst.
    IF g_use_alt = g_x.
      viqmelst-tplnr = <l_viqmel_iflos>-tplnr_int.
    ENDIF.
    h_qmtxt = viqmelst-qmtxt.
    TRANSLATE h_qmtxt TO UPPER CASE.                     "#EC TRANSLANG
    CHECK h_qmtxt IN qmtxt.
    PERFORM move_viqmelst_to_object_tab_l.
    APPEND object_tab.
  ENDLOOP.

*--- Restore QMNUM if cleared.
  IF l_use_qmnum <> 'X'.
    qmnum[] = lr_qmnum[].
  ENDIF.

ENDFORM.                               " SEL_MELD_STAND

*&---------------------------------------------------------------------*
*&      Form  DETERMINE_ACTTYPE_QMEL_L
*&---------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM determine_acttype_qmel_l.

  SELECT SINGLE * FROM t370a WHERE tcode = g_tcode.
  IF sy-subrc <> 0.
    SELECT SINGLE * FROM t370a WHERE tcode = 'IW29'.
    IF sy-subrc <> 0.
      MESSAGE x160 WITH 'IW29'.
    ENDIF.
  ENDIF.
  g_aktyp = t370a-aktyp.

ENDFORM.                               " DETERMINE_ACTTYPE_QMEL_L

*---------------------------------------------------------------------*
*       FORM DISPLAY_LONGTEXT_L                                       *
*---------------------------------------------------------------------*
*       Langtextanzeige aus liste                                     *
*---------------------------------------------------------------------*
FORM display_longtext_l.

  DATA h_object LIKE  ttxob-tdobject.
  DATA h_object_nr LIKE  rm63t-objnr.
  DATA h_spras     LIKE  sy-langu.
  DATA h_txtid LIKE  ttxid-tdid.
  DATA h_count_inline.
  DATA h_save_mode.
  DATA h_text_history.
  DATA h_text_property.

  h_object    = 'QMEL'.
  h_object_nr = object_tab-qmnum.
  h_spras     = object_tab-kzmla.
  h_txtid     = 'LTXT'.

  IF object_tab-qmart <> t_tq80-qmart.
    READ TABLE t_tq80 WITH KEY mandt = sy-mandt
                               qmart = object_tab-qmart.
  ENDIF.

  h_text_history  = t_tq80-qmltxt01.
  h_text_property = t_tq80-qmltxt02.

  PERFORM display_longtext_f16 USING h_object
                                     h_object_nr
                                     h_spras
                                     h_txtid
                                     h_count_inline
                                     h_save_mode
                                     h_text_history
                                     h_text_property.

ENDFORM.                    "display_longtext_l

*&---------------------------------------------------------------------*
*&      Form  CHECK_FLAGS_WITH_SELMOD_L
*&---------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM check_flags_with_selmod_l.

*--- wurde Feldcatalog importiert, Flags nicht automatisch setzen
  CHECK g_fieldcat_imp IS INITIAL.

  g_parnr_flag = yes.
  g_parnr_vera_flag = yes.

  PERFORM set_all_flags_f30.

ENDFORM.                               " CHECK_FLAGS_WITH_SELMOD_L

*&---------------------------------------------------------------------*
*&      Form  VARIANT_INIT_L
*&---------------------------------------------------------------------*
*       Unterschiedliche Einstellungen PM/SM
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM variant_init_l.

  CASE g_tcode.
    WHEN 'IW28'.
      PERFORM variant_init_f14 USING 'INST'
                                     'INST'
                                     'INST'.
    WHEN 'IW29'.
      PERFORM variant_init_f14 USING 'INST'
                                     'INST'
                                     'INST'.
    WHEN 'IW58'.
      PERFORM variant_init_f14 USING 'SERV'
                                     'INST'
                                     'INST'.
    WHEN 'IW59'.
      PERFORM variant_init_f14 USING 'SERV'
                                     'INST'
                                     'INST'.
    WHEN OTHERS.
      PERFORM variant_init_f14 USING 'INST'
                                     'INST'
                                     'INST'.
  ENDCASE.

ENDFORM.                               " VARIANT_INIT_L

*&---------------------------------------------------------------------*
*&      Form  CREATE_MONITOR_TAB_L
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_monitor_tab_l.
*--- not used curretly see miolxf30 ----------------------------------
ENDFORM.                               " CREATE_MONITOR_TAB_L
*&---------------------------------------------------------------------*
*&      Form  CHECK_FIELDCAT_VARIANT_L
*&---------------------------------------------------------------------*
*       No input of List-Variant -> ouput of some fields (hardcoded)
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM check_fieldcat_variant_l.

  DATA h_fieldcat_wa TYPE slis_fieldcat_alv.

  DESCRIBE TABLE g_selfields_tab LINES sy-tabix.
  IF sy-tabix IS INITIAL.
    LOOP AT g_fieldcat_tab INTO h_fieldcat_wa.
      CASE h_fieldcat_wa-fieldname.
        WHEN 'PM_SELECTED'.
          h_fieldcat_wa-no_out  = space.
          h_fieldcat_wa-col_pos = 1.
        WHEN 'QMNUM'.
          h_fieldcat_wa-no_out  = space.
          h_fieldcat_wa-col_pos = 2.
        WHEN 'QMDAT'.
          h_fieldcat_wa-no_out = space.
          h_fieldcat_wa-col_pos = 3.
        WHEN 'QMTXT'.
          h_fieldcat_wa-no_out = space.
          h_fieldcat_wa-col_pos = 4.
        WHEN OTHERS.
          h_fieldcat_wa-no_out = g_x.
      ENDCASE.
      MODIFY g_fieldcat_tab FROM h_fieldcat_wa.
    ENDLOOP.
  ENDIF.

  PERFORM create_g_selfields_tab_f14.
*--- bestimmte Felder m¨¹ssen immer selektiert werden ----------------*
*--- wegen Detailanzeige, Ausflugfunktion sowie Berechtigung --------*
  PERFORM add_to_g_selfields_tab_f14 USING 'MANDT'.
  PERFORM add_to_g_selfields_tab_f14 USING 'EQUNR'.
  PERFORM add_to_g_selfields_tab_f14 USING 'TPLNR'.
  PERFORM add_to_g_selfields_tab_f14 USING 'BAUTL'.
  PERFORM add_to_g_selfields_tab_f14 USING 'QMNUM'.
  PERFORM add_to_g_selfields_tab_f14 USING 'QMTXT'.
  PERFORM add_to_g_selfields_tab_f14 USING 'OBJNR'.
  PERFORM add_to_g_selfields_tab_f14 USING 'AUFNR'.
  PERFORM add_to_g_selfields_tab_f14 USING 'QMART'.
  PERFORM add_to_g_selfields_tab_f14 USING 'IWERK'.
  PERFORM add_to_g_selfields_tab_f14 USING 'SWERK'.
  PERFORM add_to_g_selfields_tab_f14 USING 'INGRP'.
  PERFORM add_to_g_selfields_tab_f14 USING 'ADRNR'.
  PERFORM add_to_g_selfields_tab_f14 USING 'ADRNR_ILOA'.
  PERFORM add_to_g_selfields_tab_f14 USING 'KUNUM'.
  PERFORM add_to_g_selfields_tab_f14 USING 'MAUEH'.
  PERFORM add_to_g_selfields_tab_f14 USING 'AUSZT'.
  PERFORM add_to_g_selfields_tab_f14 USING 'KZMLA'.
  PERFORM add_to_g_selfields_tab_f14 USING 'PHASE'.
  PERFORM add_to_g_selfields_tab_f14 USING 'ARBPLWERK'.   " note 582420
  PERFORM add_to_g_selfields_tab_f14 USING 'WARPL'.
* ARTPR and PRIOK must be selected always because of            "942650
* possible order creation via notification list                 "942650
  PERFORM add_to_g_selfields_tab_f14 USING 'PRIOK'.         "942650
  PERFORM add_to_g_selfields_tab_f14 USING 'ARTPR'.         "942650

*--- bestimmte Felder nur selektieren wenn f¨¹r Monitor n#tig    -----*
  CASE g_monitor_field.
    WHEN 'PRIOK'.                      "Priorit#t
      PERFORM add_to_g_selfields_tab_f14 USING 'QMDAB'.
* ARTPR and PRIOK must be selected always because of            "942650
* possible order creation via notification list                 "942650
*     PERFORM add_to_g_selfields_tab_f14 USING 'PRIOK'.         "942650
*     PERFORM add_to_g_selfields_tab_f14 USING 'ARTPR'.         "942650
    WHEN 'STRMN'.                      "gew. Start
      PERFORM add_to_g_selfields_tab_f14 USING 'STRMN'.
      PERFORM add_to_g_selfields_tab_f14 USING 'STRUR'.
      PERFORM add_to_g_selfields_tab_f14 USING 'LTRMN'.
      PERFORM add_to_g_selfields_tab_f14 USING 'LTRUR'.
      PERFORM add_to_g_selfields_tab_f14 USING 'QMDAB'.
  ENDCASE.
*--- bestimmte Felder m¨¹ssen selektiert werden wenn f¨¹r         -----*
*--- Nachselektion ausgw#hlter Felder n#tig                     -----*
*--- sortieren wegen binary search                              -----*
  SORT g_fieldcat_tab BY fieldname.
  PERFORM check_field_for_selection_f14 USING 'MAKTX' 'MATNR'.
  PERFORM check_field_for_selection_f14 USING 'PRIOKX' 'PRIOK'.
  PERFORM check_field_for_selection_f14 USING 'PRIOKX' 'ARTPR'.
  PERFORM check_field_for_selection_f14 USING 'VAWRK' 'ARBPL'.
  PERFORM check_qmcod_for_selection_f30.
*--- bestimmte Felder m¨¹ssen aus g_selfield_tab entfernt werden ------*
  DELETE g_selfields_tab WHERE field = 'EQKTX'       OR
                               field = 'PLTXT'       OR
                               field = 'STTXT'       OR
                               field = 'USTXT'       OR
                               field = 'EAUSZT'      OR
                               field = 'NAME_LIST'   OR
                               field = 'TEL_NUMBER'  OR
                               field = 'POST_CODE1'  OR
                               field = 'CITY1'       OR
                               field = 'CITY2'       OR
                               field = 'COUNTRY'     OR
                               field = 'REGION'      OR
                               field = 'STREET'      OR
                               field = 'PARNR_INT'   OR
                               field = 'PARNAM_INT'  OR
                               field = 'PARNR_VERA'  OR
                               field = 'PARNAM_VERA' OR
                               field = 'MAKTX'       OR
                               field = 'BAUTLX'      OR
                               field = 'PAGESTAT'    OR
                               field = 'PRIOKX'      OR
                               field = 'VAWRK'.
*--- Sortieren f¨¹r gleiche Feldfolge in dyn. Select
  SORT g_selfields_tab BY field.

ENDFORM.                               " CHECK_FIELDCAT_VARIANT_L

*&---------------------------------------------------------------------*
*&      Form  fill_stat_phase_l
*&---------------------------------------------------------------------*
*       fill staus or phase for selection
*----------------------------------------------------------------------*
FORM fill_stat_phase_l.

  DATA: l_use_phase TYPE flag.

*--- could QMEL-PHASE used for selection?
  SELECT SINGLE flag03 FROM pmflags INTO l_use_phase.

  CLEAR stat.     REFRESH stat.
  CLEAR gr_phase. REFRESH gr_phase.
  stat-option     = 'EQ'.
  stat-sign       = 'I'.
  gr_phase-option = 'EQ'.
  gr_phase-sign   = 'I'.

*--- open
  IF NOT dy_ofn IS INITIAL.
    IF l_use_phase IS INITIAL.
      stat-low     = 'I0068'.
      APPEND stat.
    ELSE.
      gr_phase-low = '1'.
      APPEND gr_phase.
    ENDIF.
  ENDIF.
*--- postponed
  IF NOT dy_rst IS INITIAL.
    IF l_use_phase IS INITIAL.
      stat-low     = 'I0069'.
      APPEND stat.
    ELSE.
      gr_phase-low = '2'.
      APPEND gr_phase.
    ENDIF.
  ENDIF.
*--- in process
  IF NOT dy_iar IS INITIAL.
    IF l_use_phase IS INITIAL.
      stat-low     = 'I0070'.
      APPEND stat.
    ELSE.
      gr_phase-low = '3'.
      APPEND gr_phase.
    ENDIF.
  ENDIF.
*--- completed (PHASE=5 are completed too)
  IF NOT dy_mab IS INITIAL.
    IF l_use_phase IS INITIAL.
      stat-low     = 'I0072'.
      APPEND stat.
    ELSE.
      gr_phase-low = '4'.
      APPEND gr_phase.
      gr_phase-low = '5'.
      APPEND gr_phase.
    ENDIF.
  ENDIF.

ENDFORM.                    " fill_stat_phase_l

*&---------------------------------------------------------------------*
*&      Form  ASSIGN_FIELD_TO_FIELDGROUP_L
*&---------------------------------------------------------------------*
*       Assign fields from fieldcatalog to fieldgroups (locally)
*----------------------------------------------------------------------*
*      -->H_FIELDCAT_WA  text                                          *
*----------------------------------------------------------------------*
FORM assign_field_to_fieldgroup_l
                          USING h_fieldcat_wa TYPE slis_fieldcat_alv.

  CASE h_fieldcat_wa-fieldname.
    WHEN 'PARNR_INT'.
      h_fieldcat_wa-sp_group = 'A'.
    WHEN 'PARNAM_INT'.
      h_fieldcat_wa-sp_group = 'A'.
    WHEN 'PARNR_VERA'.
      h_fieldcat_wa-sp_group = 'A'.
    WHEN 'PARNAM_VERA'.
      h_fieldcat_wa-sp_group = 'A'.
    WHEN 'KOKRS'.
      h_fieldcat_wa-sp_group = 'C'.
    WHEN 'EQFNR'.
      h_fieldcat_wa-sp_group = 'C'.
    WHEN 'WARPL'.
      h_fieldcat_wa-sp_group = 'A'.
    WHEN 'WAPOS'.
      h_fieldcat_wa-sp_group = 'A'.

  ENDCASE.

ENDFORM.                               " ASSIGN_FIELD_TO_FIELDGROUP_L
*&---------------------------------------------------------------------*
*&      Form  REFRESH_L
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM refresh_l USING p_selfield TYPE slis_selfield.

  DATA h_change        LIKE sy-ucomm.
  DATA h_selfields_tab LIKE g_selfields_tab OCCURS 0 WITH HEADER LINE.

*--- letzte itab f¨¹r dynn. select merken
  h_selfields_tab[] = g_selfields_tab[].
  PERFORM get_fieldcat_actual_f14 USING h_change.
*--- Nachselektion nur wenn Feldkatalog ver#ndert ------------------*
  IF h_change = yes.
    p_selfield-refresh = g_x.
    PERFORM check_fieldcat_variant_l.
*--- Neuselektion nur wenn sich itab f¨¹r select ge#ndert hat
    IF h_selfields_tab[] <> g_selfields_tab[].
      PERFORM selection_l.
    ELSE.
*--- es wurden nur weitere Zusatzinfos ausgew#hlt (z.B. EQKTX)
      PERFORM fill_object_tab_l.
    ENDIF.
  ENDIF.

ENDFORM.                               " REFRESH_L
*&---------------------------------------------------------------------*
*&      Form  SELECT_FOR_QUICKINFO_L
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_SELFIELD  text                                           *
*----------------------------------------------------------------------*
FORM select_for_quickinfo_l USING f_selfield TYPE slis_selfield.

  IF NOT object_tab-qmnum IS INITIAL.
    SELECT SINGLE * FROM viqmel WHERE qmnum = object_tab-qmnum.
    MOVE-CORRESPONDING viqmel TO viqmelst.
    PERFORM move_viqmelst_to_object_tab_l.
    IF NOT object_tab-arbpl_i IS INITIAL.
*--- Arbeitsplatz nachlesen -----------------------------------------*
      CALL FUNCTION 'CR_WORKSTATION_READ'
        EXPORTING
          id        = object_tab-arbpl_i
          msgty     = 'S'
        IMPORTING
          arbpl     = object_tab-arbpl
        EXCEPTIONS
          not_found = 01.
      IF NOT sy-subrc IS INITIAL.
        CLEAR object_tab-arbpl.
      ENDIF.
    ENDIF.
    IF object_tab-sttxt IS INITIAL.
*--- Statuszeile nachlesen -------------------------------------------*
      CALL FUNCTION 'STATUS_TEXT_EDIT'
           EXPORTING
                objnr           = object_tab-objnr
                spras           = sy-langu
                flg_user_stat   = 'X'
           IMPORTING
                line            = object_tab-sttxt
                user_line       = object_tab-ustxt
           EXCEPTIONS
                object_not_found.
      IF NOT sy-subrc IS INITIAL.
        CLEAR object_tab-sttxt.
        CLEAR object_tab-ustxt.
      ENDIF.
    ENDIF.
*--- Equipmentbezeichnung bestimmen ----------------------------------*
    IF object_tab-eqktx IS INITIAL.
      IF NOT object_tab-equnr IS INITIAL.
        CALL FUNCTION 'IREP1_EQUIPMENT_TEXT_READ'
          EXPORTING
            i_equnr       = object_tab-equnr
          IMPORTING
            e_eqktx       = object_tab-eqktx
          EXCEPTIONS
            no_text_found = 1
            OTHERS        = 2.
      ENDIF.
    ENDIF.
*--- Platzbezeichnung bestimmen -------------------------------------*
    IF object_tab-pltxt IS INITIAL.
      IF NOT object_tab-tplnr_int IS INITIAL.
        CALL FUNCTION 'IREP1_LOCATION_TEXT_READ'
          EXPORTING
            i_tplnr       = object_tab-tplnr_int
          IMPORTING
            e_pltxt       = object_tab-pltxt
          EXCEPTIONS
            no_text_found = 1
            OTHERS        = 2.
      ENDIF.
    ENDIF.
*--- Materialbezeichung bestimmen -----------------------------------*
    IF NOT object_tab-matnr IS INITIAL.
      CALL FUNCTION 'IREP1_MATERIAL_TEXT_READ'
        EXPORTING
          i_matnr       = object_tab-matnr
        IMPORTING
          e_maktx       = object_tab-maktx
        EXCEPTIONS
          no_text_found = 1
          OTHERS        = 2.
    ENDIF.
    IF NOT object_tab-bautl IS INITIAL.
      CALL FUNCTION 'IREP1_MATERIAL_TEXT_READ'
        EXPORTING
          i_matnr       = object_tab-bautl
        IMPORTING
          e_maktx       = object_tab-bautlx
        EXCEPTIONS
          no_text_found = 1
          OTHERS        = 2.
    ENDIF.
*--- Adresse bestimmen -----------------------------------------------*
    IF object_tab-name_list IS INITIAL.
      PERFORM get_adress_f30 USING object_tab-objnr
                                   object_tab-adrnr
                                   object_tab-adrnr_iloa
                                   object_tab-kunum
                                   object_tab-name_list
                                   object_tab-post_code1
                                   object_tab-city1
                                   object_tab-city2
                                   object_tab-country
                                   object_tab-region
                                   object_tab-street
                                   object_tab-tel_number.
    ENDIF.
*--- Text zur Priorit#t nachlesen
    IF NOT object_tab-priok IS INITIAL.
      PERFORM get_priokx_f23 USING object_tab-artpr
                                   object_tab-priok
                                   object_tab-priokx.
    ENDIF.
*--- Text Codierung nachlesen.
    IF NOT object_tab-qmcod IS INITIAL.
      PERFORM get_qmcodtxt_f23 USING object_tab-qmkat
                                     object_tab-qmgrp
                                     object_tab-qmcod
                                     object_tab-ktxtgr
                                     object_tab-ktxtcd.
    ENDIF.
    MODIFY object_tab.
  ENDIF.

ENDFORM.                               " SELECT_FOR_QUICKINFO_L
*&---------------------------------------------------------------------*
*&      Form  SET_OBJECT_TAB_LIGHTS_L
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
* begin of change MOD-001
*FORM set_object_tab_lights_l.
FORM set_object_tab_lights_l
                       CHANGING cs_object_tab LIKE LINE OF object_tab.
* end of change MOD-001
*--- not used currently in this programm see miolxf30 ---------------
ENDFORM.                               " SET_OBJECT_TAB_LIGHTS_L
*&--------------------------------------------------------------------
*&      Form  CREATE_FIELDGROUPS_L
*&--------------------------------------------------------------------
*       text
*---------------------------------------------------------------------
*  -->  p1        text
*  <--  p2        text
*---------------------------------------------------------------------
FORM create_fieldgroups_l.
*--- not used in this programm currently see miolxf30 --------------*

ENDFORM.                               " CREATE_FIELDGROUPS_L
*---------------------------------------------------------------------*
*       FORM GET_PHONE_DATA_L                                         *
*---------------------------------------------------------------------*
*       Supply Phone number for outgoing call                         *
*---------------------------------------------------------------------*
*  -->  P_SELFIELD                                                    *
*---------------------------------------------------------------------*
FORM get_phone_data_l USING p_selfield TYPE slis_selfield.

  CASE p_selfield-sel_tab_field.
    WHEN trans_struc-qmnam.
      PERFORM get_user_f16 USING object_tab-qmnam.
    WHEN trans_struc-ernam.
      PERFORM get_user_f16 USING object_tab-ernam.
    WHEN trans_struc-aenam.
      PERFORM get_user_f16 USING object_tab-aenam.
    WHEN trans_struc-kunum.
      PERFORM get_customer_data_f16 USING object_tab-kunum.
    WHEN trans_struc-parnr_int.
      PERFORM get_partner_data_l USING 'I'.
    WHEN trans_struc-parnam_int.
      PERFORM get_partner_data_l USING 'I'.
    WHEN trans_struc-parnr_vera.
      PERFORM get_partner_data_l USING 'V'.
    WHEN trans_struc-parnam_vera.
      PERFORM get_partner_data_l USING 'V'.
  ENDCASE.

ENDFORM.                    "get_phone_data_l
*---------------------------------------------------------------------*
*       FORM GET_PARTNER_DATA_L                                       *
*---------------------------------------------------------------------*
*       get partner info for sapphone                                 *
*---------------------------------------------------------------------*
*
*---------------------------------------------------------------------*
FORM get_partner_data_l USING parvw_type TYPE c.

  CASE parvw_type.
    WHEN 'I'.
*--- tq80-parvw_int
      IF NOT object_tab-parnr_int IS INITIAL.
        READ TABLE t_tq80 WITH KEY mandt = sy-mandt
                                  qmart = object_tab-qmart.
        IF sy-subrc IS INITIAL.
          PERFORM get_partner_data_f16 USING object_tab-parnr_int
                                            t_tq80-parvw_int.
        ENDIF.
      ENDIF.
    WHEN 'V'.
*--- tq80-parvw_vera
      IF NOT object_tab-parnr_vera IS INITIAL.
        READ TABLE t_tq80 WITH KEY mandt = sy-mandt
                                  qmart = object_tab-qmart.
        IF sy-subrc IS INITIAL.
          PERFORM get_partner_data_f16 USING object_tab-parnr_vera
                                            t_tq80-parvw_vera.
        ENDIF.
      ENDIF.
  ENDCASE.

ENDFORM.                    "get_partner_data_l

*&---------------------------------------------------------------------*
*&      Form  SET_OWNER_L
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM set_owner_l.

  CLEAR i_owner. REFRESH i_owner.
*--- nur f¨¹llen wenn nach Iloa-Feldern eingegrenzt --------
  IF strno[] IS INITIAL AND
     kostl[] IS INITIAL AND
     eqfnr[] IS INITIAL AND
     beber[] IS INITIAL AND
     swerk[] IS INITIAL.
    EXIT.
  ENDIF.
  i_owner-sign = 'I'.
  i_owner-option = 'EQ'.
*--- Meldungen aus Release 2.2, mit Equi als Bezugsobjekt
  i_owner-low    = space.
  APPEND i_owner.
*--- Meldung mit Platz als Bezugsobject
  i_owner-low    = '2'.
  APPEND i_owner.
*--- Meldung ohne Bezugsobject
  i_owner-low    = '4'.
  APPEND i_owner.
*--- Meldung Historsch
  i_owner-low    = '5'.
  APPEND i_owner.
*--- owner f¨¹r Selektion ¨¹ber ILOA lt. Statuseinschr#nkung #ndern
  IF dy_mab IS INITIAL.
    DELETE i_owner WHERE low = '5'.
  ENDIF.
  IF dy_ofn IS INITIAL AND
     dy_rst IS INITIAL AND
     dy_iar IS INITIAL.
    DELETE i_owner WHERE low <> '5'.
  ENDIF.

ENDFORM.                               " SET_OWNER_L
*&---------------------------------------------------------------------*
*&      Form  status_check_l
*&---------------------------------------------------------------------*
*       If phase is not used - status must be read.
*----------------------------------------------------------------------*
FORM status_check_l.

  DATA: l_lines LIKE sy-tfill.

*--- Statusselekion ohne Phase (und nicht alle Status)-> sp#ter checken
  DESCRIBE TABLE stat LINES l_lines.
  IF NOT ( l_lines = 0 OR l_lines = 4 ).
    g_stasl_flag = yes.
  ENDIF.

ENDFORM.                               " status_check_l

*&---------------------------------------------------------------------*
*&      Form  fill_qmdab_l
*&---------------------------------------------------------------------*
*   Bei abgeschlossenen Meldungen ist QMDAB nie initial, sonst immer
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM fill_qmdab_l.

  CHECK qmdab[] IS INITIAL.

*--- nur Meldung mit Abschlu#datum initial
  IF dy_mab IS INITIAL.
    qmdab-sign   = 'I'.
    qmdab-option = 'EQ'.
    qmdab-low    = '00000000'.
    APPEND qmdab.
*--- nur Meldungen mit Abschlu#datum nicht initial
  ELSEIF dy_ofn IS INITIAL AND
         dy_rst IS INITIAL AND
         dy_iar IS INITIAL.
    qmdab-sign   = 'I'.
    qmdab-option = 'NE'.
    qmdab-low    = '00000000'.
    APPEND qmdab.
  ENDIF.

ENDFORM.                    " fill_qmdab_l

*&---------------------------------------------------------------------*
*&      Form  fill_graphic_text_line_l
*&---------------------------------------------------------------------*
*       Fill Texz line for graphic window.
*----------------------------------------------------------------------*
*      -->  PS_OBJECT_TAB  Line of OBJECT_TAB
*      <--  P_TEXT         Text in graphic
*----------------------------------------------------------------------*
FORM fill_graphic_text_line_l  USING    ps_object_tab LIKE object_tab
                                        p_text        LIKE ggait-itext.

  WRITE ps_object_tab-qmnum TO p_text.
  WRITE ps_object_tab-qmtxt TO p_text+13.

ENDFORM.                    " fill_graphic_text_line_l

*eject
*-------------------------------------------------------------------*
* INCLUDES                                                          *
*-------------------------------------------------------------------*
INCLUDE miolxf14.
INCLUDE miolxf16.
INCLUDE miolxf17.
INCLUDE miolxf30.
INCLUDE miolxf65.
INCLUDE miolxf66.
INCLUDE miolxf67.
INCLUDE miolxf69.
INCLUDE miolxf70.                      "f¨¹r telefon in meldungsliste
*&---------------------------------------------------------------------*
*&      Form  create_service_order
*&---------------------------------------------------------------------*
*       If conditions are fulfilled create service order
*----------------------------------------------------------------------*
*  -->  P_QMNUM : notification number
*  -->  P_STRMN : required start date notification
*  -->  P_EQUNR : equipment number
*  -->  P_ARBPL : main work center
*----------------------------------------------------------------------*
FORM create_service_order using p_qmnum type qmnum
                                p_strmn type strmn
                                p_equnr type equnr
                                p_arbpl type gewrk.

  data: lv_diff(3)        type p,
        lv_len(2)         type n,
        lv_name           type TDOBNAME,
        lv_header         type thead,
        lt_tline_base     type standard table of tline,
        lt_afih like afih OCCURS 0 WITH HEADER LINE.

* Begin of Mod-002
DATA : LV_MODE(1) TYPE C VALUE 'N'.
* End of Mod-002

  refresh lt_afih.

* check if requested start date is 4 weeks ahead
  lv_diff = p_strmn - sy-datum.
  if lv_diff < 28.                                          " 4 weeks
*.. &1 : Requested start date &2 must be 4 weeks ahead
    MESSAGE i252(yam_re) WITH p_qmnum p_strmn INTO gv_msg.
    PERFORM add_message_to_tab using gv_msg 'A'.
    return.
  endif.


* No open order on the equipment
  select * into table lt_afih
      from afih
      where equnr eq p_equnr
        and iphas ne '6'.

  if not lt_afih[] is initial.
*.. &1 : Open order(s) on the equipment &2
    MESSAGE i253(yam_re) WITH p_qmnum p_equnr INTO gv_msg.
    PERFORM add_message_to_tab using gv_msg 'A'.
    return.
  endif.


* Work center must have 8 characters, ending on 2 numerics
  lv_len = strlen( p_arbpl ).
  IF lv_len ne 8 or
    p_arbpl+6(2) cn '0123456789'.
*.. &1 : Work center &2 is not a FSE
    MESSAGE i254(yam_re) WITH p_qmnum p_arbpl INTO gv_msg.
    PERFORM add_message_to_tab using gv_msg 'A'.
    return.
  ENDIF.


* No internal comment on equipment
  refresh lt_tline_base.
  lv_name = p_equnr.
  CALL FUNCTION 'READ_TEXT'
    EXPORTING
      ID                      = 'INTV'
      LANGUAGE                = sy-langu
      NAME                    = lv_name
      OBJECT                  = 'EQUI'
    IMPORTING
      HEADER                  = lv_header
    TABLES
      LINES                   = lt_tline_base
    EXCEPTIONS
      ID                      = 1
      LANGUAGE                = 2
      NAME                    = 3
      NOT_FOUND               = 4
      OBJECT                  = 5
      REFERENCE_CHECK         = 6
      WRONG_ACCESS_TO_ARCHIVE = 7
      OTHERS                  = 8.

  IF SY-SUBRC = 0 and
    not lt_tline_base[] is initial.
*.. &1 : Existance of internal comment !
    MESSAGE i255(yam_re) WITH p_qmnum INTO gv_msg.
    PERFORM add_message_to_tab using gv_msg 'A'.
    return.
  ENDIF.


* Finally, create service order
  refresh: i_bdcdata,
           gt_err.

  perform fill_bdcdata using p_qmnum.
* Begin of Mod-002
*  call transaction 'IW52' using i_bdcdata
*          mode 'N' update 'S' messages into gt_err.
 CALL TRANSACTION 'IW52' USING I_BDCDATA
          MODE LV_MODE UPDATE 'S' MESSAGES INTO GT_ERR.


* Check if it works or it needs the variant screen to be populated.
IF SY-SUBRC <> 0.
PERFORM FILL_BDCDATA_NEW USING P_QMNUM.

* Call the transaction again
 CALL TRANSACTION 'IW52' USING I_BDCDATA
          MODE LV_MODE UPDATE 'S' MESSAGES INTO GT_ERR.
ENDIF.
* End of Mod-002

  if sy-subrc <> 0.
*.. &1 : Creation of service order failed !
    MESSAGE i256(yam_re) WITH p_qmnum INTO gv_msg.
    PERFORM add_message_to_tab using gv_msg 'A'.
    perform get_trans_messages tables gt_err.
    return.
  endif.

  add 1 to gv_cnt_ok.

ENDFORM.                    " create_service_order

*&---------------------------------------------------------------------*
*&      Form  add_message_to_tab
*&---------------------------------------------------------------------*
*       Add messages to log
*----------------------------------------------------------------------*
FORM add_message_to_tab using p_msg p_code.

  i_logtab-msg  = p_msg.
  i_logtab-code = p_code.
  append i_logtab.
  clear i_logtab.

ENDFORM.                    " add_message_to_tab

*&---------------------------------------------------------------------*
*&      Form  list_logtab
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM list_logtab .

  data: lv_cnt_nok(3) type n.

  leave to list-processing.

  clear lv_cnt_nok.
  loop at i_logtab.
    if i_logtab-code = 'A'.
      write: / i_logtab-msg.
      add 1 to lv_cnt_nok.
    else.
      format color col_negative.
      write: /13 i_logtab-msg.
      format reset.
    endif.
  endloop.

  refresh i_logtab.
  clear i_logtab.

* Write totals
  skip 2.
  write: / text-100, gv_cnt_ok,                 " orders created
         / text-101, lv_cnt_nok.                " notifs not converted

ENDFORM.                    " list_logtab

*&---------------------------------------------------------------------*
*&      Form  get_trans_messages
*&---------------------------------------------------------------------*
*       Get the errormessages from the performed transaction
*----------------------------------------------------------------------*
*  -->  p_errtab    Table with errormessages
*----------------------------------------------------------------------*
FORM get_trans_messages tables p_errtab structure gt_err.

  loop at p_errtab where msgtyp = 'E' or
                         msgtyp = 'A'.

    CALL FUNCTION 'RH_MESSAGE_GET'
      EXPORTING
*         SPRSL                   = SY-LANGU
        arbgb                   = p_errtab-msgid
        msgnr                   = p_errtab-msgnr
        msgv1                   = p_errtab-msgv1
        msgv2                   = p_errtab-msgv2
        msgv3                   = p_errtab-msgv3
        msgv4                   = p_errtab-msgv4
      IMPORTING
        msgtext                 = gv_mestx
      EXCEPTIONS
        message_not_found       = 1
        OTHERS                  = 2.

    IF sy-subrc = 0.
      perform add_message_to_tab using gv_mestx 'M'.
    endif.

  endloop.

ENDFORM.                    " get_trans_messages

*&---------------------------------------------------------------------*
*&      Form  fill_bdcdata
*&---------------------------------------------------------------------*
*       Fill internal table with bdcdata
*----------------------------------------------------------------------*
*  -->  p_notifnr   Notification number
*----------------------------------------------------------------------*
FORM fill_bdcdata using p_notifnr.

*
  perform fill_bdcdata in program yam_common_routines
           using    'SAPLIQS0'  '0100'  'X'  ''  ''
           changing struct_bdcdata.
  append struct_bdcdata  to i_bdcdata.
  clear  struct_bdcdata.

  perform fill_bdcdata in program yam_common_routines
           using    ''  ''  ''  'RIWO00-QMNUM'  p_notifnr
           changing struct_bdcdata.
  append struct_bdcdata  to i_bdcdata.
  clear  struct_bdcdata.

  perform fill_bdcdata in program yam_common_routines
           using    ''  ''  ''  'BDC_OKCODE'  '/00'
           changing struct_bdcdata.
  append struct_bdcdata  to i_bdcdata.
  clear  struct_bdcdata.

*
  perform fill_bdcdata in program yam_common_routines
           using    'SAPLIQS0'  '7200'  'X'  ''  ''
           changing struct_bdcdata.
  append struct_bdcdata  to i_bdcdata.
  clear  struct_bdcdata.

  perform fill_bdcdata in program yam_common_routines
           using    ''  ''  ''  'BDC_OKCODE'  '=COAE'
           changing struct_bdcdata.
  append struct_bdcdata  to i_bdcdata.
  clear  struct_bdcdata.

*
  perform fill_bdcdata in program yam_common_routines
           using    'SAPLIQS0'  '8030'  'X'  ''  ''
           changing struct_bdcdata.
  append struct_bdcdata  to i_bdcdata.
  clear  struct_bdcdata.

  perform fill_bdcdata in program yam_common_routines
           using    ''  ''  ''  'RIWO00-AUART'  'ZSM3'
           changing struct_bdcdata.
  append struct_bdcdata  to i_bdcdata.
  clear  struct_bdcdata.

  perform fill_bdcdata in program yam_common_routines
           using    ''  ''  ''  'BDC_OKCODE'  '=WEIT'
           changing struct_bdcdata.
  append struct_bdcdata  to i_bdcdata.
  clear  struct_bdcdata.

*
  perform fill_bdcdata in program yam_common_routines
           using    'SAPLCOIH'  '3000'  'X'  ''  ''
           changing struct_bdcdata.
  append struct_bdcdata  to i_bdcdata.
  clear  struct_bdcdata.

  perform fill_bdcdata in program yam_common_routines
           using    ''  ''  ''  'CAUFVD-BEMOT'  'SP'
           changing struct_bdcdata.
  append struct_bdcdata  to i_bdcdata.
  clear  struct_bdcdata.

  perform fill_bdcdata in program yam_common_routines
           using    ''  ''  ''  'BDC_OKCODE'  '=BU'
           changing struct_bdcdata.
  append struct_bdcdata  to i_bdcdata.
  clear  struct_bdcdata.

ENDFORM.                    " fill_bdcdata



* Begin of Mod-002

*&---------------------------------------------------------------------*
*&      Form  FILL_BDCDATA_NEW
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p_notifnr   Notification number
*----------------------------------------------------------------------*
FORM FILL_BDCDATA_NEW  USING    P_NOTIFNR.

REFRESH : I_BDCDATA,
          GT_ERR.


  PERFORM FILL_BDCDATA IN PROGRAM YAM_COMMON_ROUTINES
           USING    'SAPLIQS0'  '0100'  'X'  ''  ''
           CHANGING STRUCT_BDCDATA.
  APPEND STRUCT_BDCDATA  TO I_BDCDATA.
  CLEAR  STRUCT_BDCDATA.

  PERFORM FILL_BDCDATA IN PROGRAM YAM_COMMON_ROUTINES
           USING    ''  ''  ''  'RIWO00-QMNUM'  P_NOTIFNR
           CHANGING STRUCT_BDCDATA.
  APPEND STRUCT_BDCDATA  TO I_BDCDATA.
  CLEAR  STRUCT_BDCDATA.

  PERFORM FILL_BDCDATA IN PROGRAM YAM_COMMON_ROUTINES
           USING    ''  ''  ''  'BDC_OKCODE'  '/00'
           CHANGING STRUCT_BDCDATA.
  APPEND STRUCT_BDCDATA  TO I_BDCDATA.
  CLEAR  STRUCT_BDCDATA.

*
  PERFORM FILL_BDCDATA IN PROGRAM YAM_COMMON_ROUTINES
           USING    'SAPLIQS0'  '7200'  'X'  ''  ''
           CHANGING STRUCT_BDCDATA.
  APPEND STRUCT_BDCDATA  TO I_BDCDATA.
  CLEAR  STRUCT_BDCDATA.

  PERFORM FILL_BDCDATA IN PROGRAM YAM_COMMON_ROUTINES
           USING    ''  ''  ''  'BDC_OKCODE'  '=COAE'
           CHANGING STRUCT_BDCDATA.
  APPEND STRUCT_BDCDATA  TO I_BDCDATA.
  CLEAR  STRUCT_BDCDATA.

*
  PERFORM FILL_BDCDATA IN PROGRAM YAM_COMMON_ROUTINES
           USING    'SAPLIQS0'  '8030'  'X'  ''  ''
           CHANGING STRUCT_BDCDATA.
  APPEND STRUCT_BDCDATA  TO I_BDCDATA.
  CLEAR  STRUCT_BDCDATA.

  PERFORM FILL_BDCDATA IN PROGRAM YAM_COMMON_ROUTINES
           USING    ''  ''  ''  'RIWO00-AUART'  'ZSM3'
           CHANGING STRUCT_BDCDATA.
  APPEND STRUCT_BDCDATA  TO I_BDCDATA.
  CLEAR  STRUCT_BDCDATA.

  PERFORM FILL_BDCDATA IN PROGRAM YAM_COMMON_ROUTINES
           USING    ''  ''  ''  'BDC_OKCODE'  '=WEIT'
           CHANGING STRUCT_BDCDATA.
  APPEND STRUCT_BDCDATA  TO I_BDCDATA.
  CLEAR  STRUCT_BDCDATA.

* Fill the data for the variant config. screen

 PERFORM FILL_BDCDATA IN PROGRAM YAM_COMMON_ROUTINES
           USING    'SAPLCEI0'  '0109'  'X'  ''  ''
           CHANGING STRUCT_BDCDATA.
  APPEND STRUCT_BDCDATA  TO I_BDCDATA.
  CLEAR  STRUCT_BDCDATA.

 PERFORM FILL_BDCDATA IN PROGRAM YAM_COMMON_ROUTINES
           USING    ''  ''  ''  'BDC_CURSOR'  'RCTMS-MNAME(01)'
           CHANGING STRUCT_BDCDATA.
  APPEND STRUCT_BDCDATA  TO I_BDCDATA.
  CLEAR  STRUCT_BDCDATA.

 PERFORM FILL_BDCDATA IN PROGRAM YAM_COMMON_ROUTINES
           USING    ''  ''  ''  'BDC_OKCODE'  '=BACK'
           CHANGING STRUCT_BDCDATA.
  APPEND STRUCT_BDCDATA  TO I_BDCDATA.
  CLEAR  STRUCT_BDCDATA.


*
  PERFORM FILL_BDCDATA IN PROGRAM YAM_COMMON_ROUTINES
           USING    'SAPLCOIH'  '3000'  'X'  ''  ''
           CHANGING STRUCT_BDCDATA.
  APPEND STRUCT_BDCDATA  TO I_BDCDATA.
  CLEAR  STRUCT_BDCDATA.

  PERFORM FILL_BDCDATA IN PROGRAM YAM_COMMON_ROUTINES
           USING    ''  ''  ''  'CAUFVD-BEMOT'  'SP'
           CHANGING STRUCT_BDCDATA.
  APPEND STRUCT_BDCDATA  TO I_BDCDATA.
  CLEAR  STRUCT_BDCDATA.

  PERFORM FILL_BDCDATA IN PROGRAM YAM_COMMON_ROUTINES
           USING    ''  ''  ''  'BDC_OKCODE'  '=BU'
           CHANGING STRUCT_BDCDATA.
  APPEND STRUCT_BDCDATA  TO I_BDCDATA.
  CLEAR  STRUCT_BDCDATA.


ENDFORM.                    " FILL_BDCDATA_NEW


* End of Mod-002
*Text symbol text£º
*100:Number of orders created              :
*101:Number of notifications not converted :
*201:Required Time Period
*202:Downtime Period
*203:Time between creation and completion
*204:Schedule Overview
*205:Notifications
*206:Legend
*207:Notification Selection
*302:Notification Monitor
*303:F16=Refresh
*304:Measure Planning
*700:**** LINES 701, 702, 703 are one sentence.
*701:Do you want to cancel processing
*702:for all the objects selected that
*703:have not yet been processed?
*704:List Editing Canceled
*705:No
*706:Yes
*800:Unprocessed        objects
*801:Processed          objects
*802:Last Objects Processed
*ANZ:Number
*F01:General Data/Administrative Data
*F02:Malfunction Data/System Availability
*F03:Location Data/Acc.Assignment/Maint. Plan
*F05:Monitor
*FG1:General Data
*FG2:Malfunction/Breakdown
*FG3:Location/AcctAssignment
*FG5:Address
*MO1:Priority
*MO2:Malfunction Start/End
*MO3:Notification Date
*MO4:Required Start/End
*P05:Downtime (H)
*PO1:Large Number, Long Downtime
*PO2:Small Number, Long Downtime
*PO3:Large Number, Short Downtime
*PO4:Small Number, Short Downtime

*SON:Others
*Selection text£º
*ABCKZ:D       ABC indicator
*AEDAT:D       Changed on
*AENAM:D       Changed by
*ANLNR:D       Asset
*ANLZE:D       Cond.after task
*ANLZN:D       Cond.aft.malfunctn
*ANLZV:D       Cond.bef.malfunctn
*ARBPL:D       Main work center
*AUSBS:D       Malfunction end
*AUSVN:D       Malfunction start
*AUSWK:D       Effect
*AUZTB:D       Malfunctn end (time)
*AUZTV:D       Strt malfunctn (T)
*BAUTL:D       Assembly
*BEBER:D       Plant section
*BEQUI:D       Equipment affected
*BEZDT:D       Reference date
*BSTDK:D       Purchase order date
*BSTNK:D       PO number
*BTPLN:D       Funct. loc. affected
*BUKRS:D       Company Code
*DATAN:D       TechInspection on
*EAUSZT:D       Breakdown duration
*EQFNR:D       Sort field
*ERDAT:D       Created on
*ERNAM:D       Created by
*GSBER:D       Business Area
*INGRP:D       Planner group
*INSPK:D       TechInspection by
*IWERK:D       Planning plant
*KDAUF:D       Sales document
*KDPOS:D       Sales Document Item
*KOSTL:D       Cost Center
*KUNUM:D       Customer
*LTRMN:D       Required End
*MONITOR:D       Ref. field monitor
*MSAUS:D       Breakdown
*MSGRP:D       Room
*MZEIT:D       Notification time
*PAGESTAT:D       Paging status
*PRIOK:D       Priority
*QMCOD:D       Coding Code
*QMDAB:D       Completion by date
*QMGRP:D       Coding
*QMNAM:D       Reported by
*QMTXT:D       Description
*RBNR:D       Catalog profile
*SPART:D       Division
*STAE1:D       Status excluded
*STAI1:D       Status included
*STORT:D       Location
*STRMN:D       Required start date
*SWERK:D       Maintenance plant
*VARIANT:D       Layout
*VAWRK:D       Plant for WorkCenter
*VBELN:D       Sales Order
*VERFM:D       Avail.after task
*VERFN:D       Avail.aft.malfunctn
*VERFV:D       Avail.bef.malfunctn
*VKORG:D       Sales Organization
*VTWEG:D       Distribution Channel
*WAPOS:D       Maintenance item
*WARPL:D       Maintenance plan
