*----------------------------------------------------------------------*
* PROGRAM ID           : YAM_CORR_AFVC_GBAA                            *
* PROGRAM TITLE        : Correction of AFVC-ARBID                      *
* AUTHOR               : Geert Rutten                                  *
* DATE                 : 05/11/2010                                    *
* DEVELOPMENT ID       :                                               *
* CHANGE REQUEST NUMBER: CD1K960816                                    *
* PROGRAM DESCRIPTION  : Update field workcenters for GBAA             *
*                                                                      *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG
*
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE   *
*                                                                      *
*----------------------------------------------------------------------*
REPORT YAM_CORR_AFVC_GBAA.

TABLES: AFVC, AUFK.

TYPES: BEGIN OF TP_DATA,
         AUFPL(10) TYPE C,
         APLZL(8) TYPE C,
         WERKS TYPE WERKS_D,
         ARBID TYPE CR_OBJID,
         AUFNR TYPE AUFNR,
         RSPOS(4) TYPE C,
         STEUS TYPE STEUS,
         TEXT(25) TYPE C,
       END OF TP_DATA.

TYPES: BEGIN OF ty_upload,
         v_text(250)  TYPE c,            " FILE UPLOAD TEXT
       END OF ty_upload.

DATA: gt_upload TYPE STANDARD TABLE OF ty_upload
                INITIAL SIZE 0 WITH HEADER LINE.

  DATA:
    BEGIN OF GT_AUFK OCCURS 0,
      AUFNR LIKE aufk-aufnr,
      AUFPL  LIKE VIAUFK_AFVC-aufpl,
      APLZL LIKE VIAUFK_AFVC-aplzl,
      STEUS LIKE VIAUFK_AFVC-steus,
      VAPLZ LIKE aufk-vaplz,
      ARBID LIKE afvc-arbid,
      LARNT LIKE VIAUFK_AFVC-larnt,
      ARBEH LIKE VIAUFK_AFVC-arbeh,
    END OF GT_AUFK.

CONSTANTS:  GC_CHAR_FS     TYPE C          VALUE ';'.

DATA: gt_afvc TYPE STANDARD TABLE OF afvgdget with header line,
      lv_arbpl TYPE arbpl,
      lv_arbid TYPE CR_OBJID,
      lv_aufpl TYPE CO_AUFPL,
      lv_aplzl TYPE CO_APLZL.

DATA: S_FILE TYPE STRING.

DATA: I_DATA1 TYPE TABLE OF TP_DATA with header line,
      wa_string  TYPE string.


PARAMETERS: P_FILE TYPE RLGRAP-FILENAME DEFAULT 'C:\SAP\AFVC_GBAA.TXT'.
SELECT-OPTIONS: s_aufnr  FOR aufk-aufnr.


*-----------------------------------------------------------------------
START-OF-SELECTION.
*

SELECT AUFNR AUFPL APLZL STEUS VAPLZ ARBID LARNT ARBEH FROM VIAUFK_AFVC INTO CORRESPONDING FIELDS OF TABLE gt_aufk
     where aufnr in s_aufnr.







*-----------------------------------------------------------------------
END-OF-SELECTION.


MOVE P_FILE TO S_FILE.
CALL FUNCTION 'GUI_UPLOAD'
      EXPORTING
        filename                = S_FILE
        filetype                = 'ASC'
        has_field_separator     = 'X'
      TABLES
        data_tab                = gt_upload
      EXCEPTIONS
        file_open_error         = 1
        file_read_error         = 2
        no_batch                = 3
        gui_refuse_filetransfer = 4
        invalid_type            = 5
        no_authority            = 6
        unknown_error           = 7
        bad_data_format         = 8
        header_not_allowed      = 9
        separator_not_allowed   = 10
        header_too_long         = 11
        unknown_dp_error        = 12
        access_denied           = 13
        dp_out_of_memory        = 14
        disk_full               = 15
        dp_timeout              = 16
        OTHERS                  = 17.
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.


LOOP AT gt_upload into wa_string.

    SPLIT    wa_string
        AT GC_CHAR_FS
        INTO  I_DATA1-AUFPL
              I_DATA1-APLZL
              I_DATA1-WERKS
              I_DATA1-ARBID
              I_DATA1-AUFNR
              I_DATA1-RSPOS
              I_DATA1-STEUS.

     APPEND i_data1.
     CLEAR i_data1.
ENDLOOP.




LOOP AT gt_aufk.

clear lv_aplzl.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
      EXPORTING
        input  = gt_aufk-aplzl
      IMPORTING
        output = lv_aplzl.

READ TABLE i_DATA1 with key AUFPL = gt_aufk-AUFPL
                            APLZL = lv_APLZL.

if sy-subrc = 0.

 clear lv_arbid.
 clear lv_arbpl.

 SELECT SINGLE arbpl into lv_arbpl
                 FROM crhd
                 WHERE objid = i_data1-arbid.

 SELECT SINGLE objid
                 INTO lv_arbid
                 FROM crhd
                 WHERE arbpl = lv_arbpl
                   AND werks = 'GBAA'.

 UPDATE AFVC set arbid = lv_arbid
     where aufpl = gt_aufk-aufpl and
           aplzl = gt_aufk-aplzl.


else.



if  ( gt_aufk-steus = 'ZCO3' or  gt_aufk-steus = 'ZCO1' )  and gt_aufk-larnt = 'ZAM001' and gt_aufk-arbeh = 'STD'.

  clear lv_arbid.

  SELECT SINGLE objid
                 INTO lv_arbid
                 FROM crhd
                 WHERE arbpl = gt_aufk-vaplz and
                       werks = 'GBAA'.

 if not lv_arbid is initial.
  UPDATE AFVC set arbid = lv_arbid
     where aufpl = gt_aufk-aufpl and
           aplzl = gt_aufk-aplzl.

 endif.
endif.


if gt_aufk-steus = 'ZCO4' and gt_aufk-larnt = 'ZAM010' and gt_aufk-arbeh = 'MIL'.
* MIL

  clear lv_arbid.
  clear lv_arbpl.


 concatenate gt_aufk-vaplz(4) '_MIL' into lv_arbpl.

 SELECT SINGLE objid
                 INTO lv_arbid
                 FROM crhd
                 WHERE arbpl = lv_arbpl and
                       werks = 'GBAA'.

 if not lv_arbid is initial.
  UPDATE AFVC set arbid = lv_arbid
     where aufpl = gt_aufk-aufpl and
           aplzl = gt_aufk-aplzl.
 endif.
endif.


if gt_aufk-steus = 'ZCO4' and gt_aufk-larnt = 'ZAM019' and gt_aufk-arbeh = 'GBP'.
*AEX

 clear lv_arbid.
 clear lv_arbpl.


 concatenate gt_aufk-vaplz(4) '_AEX' into lv_arbpl.

 SELECT SINGLE objid
                 INTO lv_arbid
                 FROM crhd
                 WHERE arbpl = lv_arbpl and
                   WERKS = 'GBAA'.

 if not lv_arbid is initial.
  UPDATE AFVC set arbid = lv_arbid
     where aufpl = gt_aufk-aufpl and
           aplzl = gt_aufk-aplzl.
 endif.
endif.


if gt_aufk-steus = 'ZCO4' and gt_aufk-larnt = 'ZAM020' and gt_aufk-arbeh = 'GBP'.
*SUB

 clear lv_arbid.
 clear lv_arbpl.

 concatenate gt_aufk-vaplz(4) '_SUB' into lv_arbpl.

 SELECT SINGLE objid
                 INTO lv_arbid
                 FROM crhd
                 WHERE arbpl = lv_arbpl and
                       werks = 'GBAA'.

 if not lv_arbid is initial.
  UPDATE AFVC set arbid = lv_arbid
     where aufpl = gt_aufk-aufpl and
           aplzl = gt_aufk-aplzl.
 endif.
endif.

endif.

ENDLOOP.

*Selection text£º
*P_FILE:        Text File
*S_AUFNR:        Order Number
