*----------------------------------------------------------------------*
***INCLUDE YAM_CREATE_ECB_NOTIFICATIONF01 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  FILL_NOTI_TYPE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM fill_noti_type .
  DATA: lv_bukrs TYPE bukrs,
        lv_field TYPE zvalue_field,
        lv_qmart TYPE qmart.

  SORT gt_equi BY bukrs.

  LOOP AT gt_equi.
    IF lv_bukrs IS INITIAL OR gt_equi-bukrs NE lv_bukrs.
      CLEAR lv_field.
      MOVE gt_equi-bukrs TO lv_field.
* Check development matrix based on the documents salesorg
      MOVE gt_equi-bukrs TO lv_field.
      CALL FUNCTION 'YSE_CHECK_DEV_MATRIX'
        EXPORTING
          object      = 'YAM_CREATE_ECB_NOTIFICATIONS'
          checkfield  = ct_field_bukrs
          value_field = lv_field
          counter     = 1
        EXCEPTIONS
          active      = 1
          passive     = 2
          not_found   = 3
          OTHERS      = 4.
* when object found in dev. matrix and active
*      take not. type => c_qmart_seed
* else take not. type => c_qmart (After Market)

      IF sy-subrc EQ 1.
        lv_qmart = c_qmart_seed.
      ELSE.
        lv_qmart = c_qmart.
      ENDIF.
    ENDIF.
    gt_equi-qmart = lv_qmart.
    MODIFY gt_equi.
    MOVE gt_equi TO lv_bukrs.
  ENDLOOP.

ENDFORM.                    " FILL_NOTI_TYPE
*&---------------------------------------------------------------------*
*&      Form  EXTRA_CHECKS_EQUIP
*&---------------------------------------------------------------------*
*       Extra checks in order to clarify not created notification
*----------------------------------------------------------------------*
*      <--P_GV_RETCD  text
*----------------------------------------------------------------------*
FORM extra_checks_equip  CHANGING p_gv_retcd.

  TABLES: ihpa, iflot.

  DATA: lv_arbpl    TYPE arbpl,
        lv_lng(2)   TYPE n,
        lt_config   TYPE TABLE OF conf_out,
        wa_config   TYPE conf_out,
        lc_atnam    TYPE cabn-atnam  VALUE 'CH_EQUIPMENT_COUNTRY',
        lv_atwrt    TYPE atwrt,
        lv_objnr    TYPE jest-objnr,
        lv_kkber    TYPE tvta-kkber,
        lv_crblb    LIKE knkk-crblb.

  MOVE gt_equi-sernr TO gt_messtab-sernr.
  MOVE gt_equi-equnr TO gt_messtab-equnr.
  MOVE gt_equi-bukrs TO gt_messtab-bukrs.        "MOD-005

* Check deletion flag
  CONCATENATE 'IE' gt_equi-equnr INTO lv_objnr.
  CALL FUNCTION 'STATUS_CHECK'
    EXPORTING
      objnr             = lv_objnr
      status            = 'I0076'
    EXCEPTIONS
      object_not_found  = 1
      status_not_active = 2
      OTHERS            = 3.

  IF sy-subrc EQ 0.
    MOVE text-e90 TO gt_messtab-msgv1.
    APPEND gt_messtab.
    p_gv_retcd = 4.
    RETURN.
  ENDIF.

* Check work center
  IF gt_equi-gewrk IS INITIAL.
    MOVE text-e77 TO gt_messtab-msgv1.
    APPEND gt_messtab.
    p_gv_retcd = 4.
    RETURN.
  ENDIF.

  IF gt_equi-qmart = 'X6'.             " SEED
    SELECT SINGLE arbpl INTO lv_arbpl
      FROM crhd WHERE objty = 'A'
                  AND objid = gt_equi-gewrk.

    IF sy-subrc = 0.
      lv_lng = STRLEN( lv_arbpl ).
      IF lv_lng < 6.
        MOVE text-e77 TO gt_messtab-msgv1.
        APPEND gt_messtab.
        p_gv_retcd = 4.
        RETURN.
      ENDIF.
    ENDIF.
  ENDIF.

* Check functional location
  IF gt_equi-tplnr IS INITIAL.
    MOVE text-e78 TO gt_messtab-msgv1.
    APPEND gt_messtab.
    p_gv_retcd = 4.
    RETURN.
  ENDIF.

  lv_lng = STRLEN( gt_equi-tplnr ).
  IF lv_lng <> 18.
    MOVE text-e78 TO gt_messtab-msgv1.
    APPEND gt_messtab.
    p_gv_retcd = 4.
    RETURN.
  ENDIF.

* Check partners
  CLEAR lv_kkber.
  SELECT SINGLE kkber INTO lv_kkber
    FROM tvta WHERE vkorg = gt_equi-vkorg
                AND vtweg = gt_equi-vtweg
                AND spart = gt_equi-spart.

  SELECT SINGLE parnr INTO ihpa-parnr
    FROM ihpa WHERE objnr    = lv_objnr
                AND parvw    = 'AG'
                AND kzloesch = ' '
                AND obtyp    = 'IEQ'.

  IF sy-subrc <> 0.
    MOVE text-e79 TO gt_messtab-msgv1.
    APPEND gt_messtab.
    p_gv_retcd = 4.
    RETURN.
  ENDIF.

  SELECT SINGLE crblb INTO lv_crblb
    FROM knkk WHERE kunnr = ihpa-parnr
                AND kkber = lv_kkber.

  IF sy-subrc = 0 AND lv_crblb = 'X'.
    MOVE text-e81 TO gt_messtab-msgv1.
    APPEND gt_messtab.
    p_gv_retcd = 4.
    RETURN.
  ENDIF.

  IF gt_equi-qmart = 'Z6'.               " CT-AM
    SELECT SINGLE objnr INTO iflot-objnr
      FROM iflot WHERE tplnr = gt_equi-tplnr.

    IF sy-subrc = 0.
      SELECT SINGLE parnr INTO ihpa-parnr
        FROM ihpa WHERE objnr    = iflot-objnr
                    AND parvw    = 'WE'
                    AND kzloesch = ' '.

      IF sy-subrc <> 0.
        MOVE text-e82 TO gt_messtab-msgv1.
        APPEND gt_messtab.
        p_gv_retcd = 4.
        RETURN.
      ENDIF.
    ENDIF.
  ELSE.
    SELECT SINGLE parnr INTO ihpa-parnr
      FROM ihpa WHERE objnr    = lv_objnr
                  AND parvw    = 'WE'
                  AND kzloesch = ' '
                  AND obtyp    = 'IEQ'.

    IF sy-subrc <> 0.
      MOVE text-e82 TO gt_messtab-msgv1.
      APPEND gt_messtab.
      p_gv_retcd = 4.
      RETURN.
    ENDIF.
  ENDIF.

* Check country in configuration data
  CLEAR lt_config[].
  CALL FUNCTION 'VC_I_GET_CONFIGURATION'
    EXPORTING
      instance            = gt_equi-cuobj
    TABLES
      configuration       = lt_config
    EXCEPTIONS
      instance_not_found  = 1
      internal_error      = 2
      no_class_allocation = 3
      instance_not_valid  = 4
      OTHERS              = 5.

  IF sy-subrc <> 0.
    MOVE text-e80 TO gt_messtab-msgv1.
    APPEND gt_messtab.
    p_gv_retcd = 4.
    RETURN.
  ENDIF.

  CLEAR lv_atwrt.
  READ TABLE lt_config INTO wa_config
             WITH KEY atnam = lc_atnam.

  IF sy-subrc = 0.
    lv_atwrt = wa_config-atwrt.
    IF lv_atwrt <> gt_equi-bukrs.
      MOVE text-e80 TO gt_messtab-msgv1.
      APPEND gt_messtab.
      p_gv_retcd = 4.
      RETURN.
    ENDIF.
  ELSE.
    MOVE text-e80 TO gt_messtab-msgv1.
    APPEND gt_messtab.
    p_gv_retcd = 4.
    RETURN.
  ENDIF.

ENDFORM.                    " EXTRA_CHECKS_EQUIP
