*&---------------------------------------------------------------------*
*&  Include           YAM_CS_UPD_SERVICE_CUST_FRM
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  UPLOAD_FILE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM UPLOAD_FILE .
  CALL FUNCTION 'WS_UPLOAD'
   EXPORTING
*     CODEPAGE                      = ' '
     FILENAME                      = P_FILE
     FILETYPE                      = P_FTYPE
*     HEADLEN                       = ' '
*     LINE_EXIT                     = ' '
*     TRUNCLEN                      = ' '
*     USER_FORM                     = ' '
*     USER_PROG                     = ' '
*     DAT_D_FORMAT                  = ' '
*   IMPORTING
*     FILELENGTH                    =
    TABLES
      DATA_TAB                      =  GT_UPLOAD
   EXCEPTIONS
     CONVERSION_ERROR              = 1
     FILE_OPEN_ERROR               = 2
     FILE_READ_ERROR               = 3
     INVALID_TYPE                  = 4
     NO_BATCH                      = 5
     UNKNOWN_ERROR                 = 6
     INVALID_TABLE_WIDTH           = 7
     GUI_REFUSE_FILETRANSFER       = 8
     CUSTOMER_ERROR                = 9
     NO_AUTHORITY                  = 10
     OTHERS                        = 11
            .
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.




ENDFORM.                    " UPLOAD_FILE


*&---------------------------------------------------------------------*
*&      Form  GET_EQUIPMENTS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_EQUIPMENTS.
  IF NOT GT_UPLOAD[] IS INITIAL.
* Add the leading zero's toservice orders just incase the user does not add them
LOOP AT GT_UPLOAD.
CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
  EXPORTING
    INPUT         = GT_UPLOAD-AUFNR
 IMPORTING
   OUTPUT        =  GT_UPLOAD-AUFNR
          .
MODIFY GT_UPLOAD.
ENDLOOP.

* Check if the service orders are not closed and can be changed
    SELECT AUFNR
           IDAT3
           FROM CAUFV
           INTO TABLE GT_CAUFV
           FOR ALL ENTRIES IN GT_UPLOAD
           WHERE AUFNR = GT_UPLOAD-AUFNR.

* Remove closed records
  DELETE GT_CAUFV WHERE IDAT3 IS NOT INITIAL.
  DELETE ADJACENT DUPLICATES FROM GT_CAUFV COMPARING AUFNR.

      IF NOT GT_CAUFV[] IS INITIAL.
*     Get the equipment numbers for the service orders to update.
        SELECT AUFNR
               EQUNR
               FROM AFIH
               INTO TABLE GT_AFIH
               FOR ALL ENTRIES IN GT_CAUFV
               WHERE AUFNR = GT_CAUFV-AUFNR.

     DELETE ADJACENT DUPLICATES FROM GT_CAUFV COMPARING AUFNR.
      ENDIF.
  ENDIF.
ENDFORM.                    " GET_EQUIPMENTS


*&---------------------------------------------------------------------*
*&      Form  UPLOAD_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM UPLOAD_DATA .

  LOOP AT GT_AFIH INTO WA_AFIH.

    PERFORM BDC_DYNPRO      USING 'SAPLCOIH'      '0101'.

    PERFORM BDC_FIELD       USING 'BDC_CURSOR'    'CAUFVD-AUFNR'.

    PERFORM BDC_FIELD       USING 'BDC_OKCODE'    '/00'.

    PERFORM BDC_FIELD       USING 'CAUFVD-AUFNR'  WA_AFIH-AUFNR.

    PERFORM BDC_DYNPRO      USING 'SAPLCOIH'      '3000'.

    PERFORM BDC_FIELD       USING 'BDC_OKCODE'    '/00'.

    PERFORM BDC_FIELD       USING 'BDC_CURSOR'    'CAUFVD-EQUNR'.

    PERFORM BDC_FIELD       USING 'CAUFVD-TPLNR'  ''.

    PERFORM BDC_FIELD       USING 'CAUFVD-EQUNR'  WA_AFIH-EQUNR.

    PERFORM BDC_DYNPRO      USING 'SAPLCOIH'      '3000'.

    PERFORM BDC_FIELD       USING 'BDC_OKCODE'    '=BU'.


    CALL TRANSACTION C_IW32 USING GT_BDCDATA
                            MODE GV_MODE
                            UPDATE GV_UPTMODE
                            MESSAGES INTO GT_BDCMSGCOLL.

*    IF SY-SUBRC = 0.
*      ADD 1 TO GV_SUCC.
*    ELSE.
*      ADD 1 TO GV_FAIL.
*    ENDIF.

* If the update was not successful then update the reason why into message
    LOOP AT GT_BDCMSGCOLL WHERE MSGTYP = 'E' OR  MSGTYP = 'A'.
      CALL FUNCTION 'RH_MESSAGE_GET'
     EXPORTING
*           SPRSL                   = SY-LANGU
       ARBGB                   = GT_BDCMSGCOLL-MSGID
       MSGNR                   = GT_BDCMSGCOLL-MSGNR
       MSGV1                   = GT_BDCMSGCOLL-MSGV1
       MSGV2                   = GT_BDCMSGCOLL-MSGV2
       MSGV3                   = GT_BDCMSGCOLL-MSGV3
       MSGV4                   = GT_BDCMSGCOLL-MSGV4
     IMPORTING
       MSGTEXT                 = WA_MESSAGE-MESSAGE
     EXCEPTIONS
       MESSAGE_NOT_FOUND       = 1
       OTHERS                  = 2.

     ENDLOOP.

* Update the service order numbers into message for success or fail
    WA_MESSAGE-AUFNR = WA_AFIH-AUFNR.
    APPEND WA_MESSAGE TO GT_MESSAGE.
    CLEAR WA_MESSAGE.


    REFRESH GT_BDCDATA.
    REFRESH GT_BDCMSGCOLL.
  ENDLOOP.

ENDFORM.                    " UPLOAD_DATA



*&---------------------------------------------------------------------*
*&      Form  bdc_dynpro
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->PROGRAM    text
*      -->DYNPRO     text
*----------------------------------------------------------------------*
FORM BDC_DYNPRO USING PROGRAM DYNPRO.

  CLEAR WA_BDCDATA.
  WA_BDCDATA-PROGRAM  = PROGRAM.
  WA_BDCDATA-DYNPRO   = DYNPRO.
  WA_BDCDATA-DYNBEGIN = 'X'.
  APPEND WA_BDCDATA TO GT_BDCDATA.

ENDFORM.                    "BDC_DYNPRO

*----------------------------------------------------------------------*
*        Insert field                                                  *
*----------------------------------------------------------------------*
FORM BDC_FIELD USING FNAM FVAL.

  CLEAR WA_BDCDATA.
  WA_BDCDATA-FNAM = FNAM.
  WA_BDCDATA-FVAL = FVAL.
  APPEND WA_BDCDATA TO GT_BDCDATA.

ENDFORM.                    "bdc_field





*&---------------------------------------------------------------------*
*&      Form  DISP_STATUS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISP_STATUS .
  DESCRIBE TABLE GT_UPLOAD LINES GV_TOTAL.
  DESCRIBE TABLE GT_CAUFV  LINES GV_OPEN.

  WRITE : /'**********************************************************************'.
  WRITE : /'Total Number of records                                :  ',  GV_TOTAL.
  WRITE : /'Total Number of service orders that can be changed     :  ',  GV_OPEN.
  WRITE : /'**********************************************************************'.

  SKIP 2.
  WRITE : /'**********************************************************************'.
  WRITE : /'The Service orders successfully updated are :  '.
    LOOP AT GT_MESSAGE INTO WA_MESSAGE WHERE MESSAGE IS INITIAL.
    WRITE /: WA_MESSAGE-AUFNR.
    ADD 1 TO GV_SUCC.
  ENDLOOP.
  WRITE : /'**********************************************************************'.

  SKIP 2.
  WRITE : /'**********************************************************************'.
  WRITE : /'The Service orders not updated are :  '.
  LOOP AT GT_MESSAGE INTO WA_MESSAGE WHERE MESSAGE IS NOT INITIAL.
    WRITE /: WA_MESSAGE-AUFNR, '  ' , WA_MESSAGE-MESSAGE.
    ADD 1 TO GV_FAIL.
  ENDLOOP.
  WRITE : /'**********************************************************************'.

  SKIP 2.
  WRITE : /'**********************************************************************'.
  WRITE : /'Number of records updated successfully                 :  ',  GV_SUCC.
  WRITE : /'Total Number of records not updated                    :  ',  GV_FAIL.
  WRITE : /'**********************************************************************'.

ENDFORM.                    " DISP_STATUS
