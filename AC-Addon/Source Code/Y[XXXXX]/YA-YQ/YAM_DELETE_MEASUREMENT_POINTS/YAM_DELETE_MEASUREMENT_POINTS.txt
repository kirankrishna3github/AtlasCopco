report YAM_DELETE_MEASUREMENT_POINTS.
*----------------------------------------------------------------------*
* PROGRAM ID           : YAM_DELETE_MEASUREMENT_POINTS                 *
* PROGRAM TITLE        : AM: Delete measurement points                 *
* AUTHOR               : Luc Mertens                                   *
* DATE                 : 10/05/2005                                    *
* DEVELOPMENT ID       :                                               *
*                                                                      *
* CHANGE REQUEST NUMBER: DE-CR008                                      *
*                                                                      *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*
* MOD-001 | xxxx.xx.xx | xxxxxxxxxxxxxxxxx |xxxxxxxxxx |xxxxxxxxxxxxx| *
************************************************************************
* Program Description:  Delete all measurement points in the equipment *
*                       for which no measurement document exist        *
************************************************************************

include bdcrecx1.

*---------------------------------------------------------------------*
* TABLES                                                              *
*---------------------------------------------------------------------*
Tables: V_EQUI.           " PM technical objects (EQUI, func.location)

*---------------------------------------------------------------------*
* CONSTANTS                                                           *
*---------------------------------------------------------------------*
Constants: c_99991231 type d     value '99991231',
           c_equip    type eqart value 'EQUIPMENT',
           c_010      type IMRC_PSORT value '010                 '.

*---------------------------------------------------------------------*
* INTERNAL TABLES                                                     *
*---------------------------------------------------------------------*
Data: begin of gt_equi occurs 0,
         equnr type equnr,
         objnr type IMRC_MPOBJ,
      end of gt_equi.

*---------------------------------------------------------------------*
* VARIABLES                                                           *
*---------------------------------------------------------------------*
Data: g_point like imptt-point.

*---------------------------------------------------------------------*
* SELECT-OPTIONS/PARAMETERS                                           *
*---------------------------------------------------------------------*
Select-options: s_equnr for v_equi-equnr.

Parameters: p_bukrs type v_equi-bukrs obligatory.


*- START_OF_SELECTION   -----------------------------------------------*
Start-of-selection.

  SELECT equnr objnr
    into corresponding fields of table gt_equi
    FROM v_equi where equnr in s_equnr
                  and eqart eq c_equip
                  and bukrs eq p_bukrs
                  and datbi eq c_99991231.

  loop at gt_equi.
    select point into g_point
       from imptt up to 1 rows
       where mpobj eq gt_equi-objnr
         and psort ne c_010.
    endselect.

    if sy-subrc <> 0.
      delete gt_equi.
    endif.
  endloop.

  perform open_group.

  loop at gt_equi.

*   first screen
    perform bdc_dynpro      using 'SAPMIEQ0' '0100'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '/00'.
    perform bdc_field       using 'RM63E-EQUNR'
                                  gt_equi-EQUNR.

*   general data
    perform bdc_dynpro      using 'SAPMIEQ0' '0101'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=MEPO'.

*   measurement points - select all
    perform bdc_dynpro      using 'SAPLIMR0' '4110'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=ALLM'.

*   measurement points - delete all entries
    perform bdc_dynpro      using 'SAPLIMR0' '4110'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '/EDELP'.

*   measurement points - confirm delete
    perform bdc_dynpro      using 'SAPLSPO1' '0100'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=YES'.

*   measurement points - go 1 screen back
    perform bdc_dynpro      using 'SAPLIMR0' '4110'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '/ERW'.

*   save changes
    perform bdc_dynpro      using 'SAPMIEQ0' '0101'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=BU'.

    perform bdc_transaction using 'IE02'.

  endloop.

  perform close_group.

*Text symbol text£º
*E00:Error opening dataset, return code:
*I01:Session name
*I02:Open session
*I03:Insert transaction
*I04:Close Session
*I05:Return code =
*I06:Error session created
*S01:Session name
*S02:User
*S03:Keep session
*S04:Lock date
*S05:Processing Mode
*S06:Update Mode
*S07:Generate session
*S08:Call transaction
*S09:Error sessn

*S10:Nodata indicator
*Selection text£º
*P_BUKRS:D       Company Code
*S_EQUNR:D       Equipment
