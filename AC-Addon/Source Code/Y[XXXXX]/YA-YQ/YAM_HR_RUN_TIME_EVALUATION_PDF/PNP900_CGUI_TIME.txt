* 4.6C
* XRRL9CK055566  050601 Making PNP900 SLIN comnpliant

TYPES: T_TIME_ALL LIKE T599C_PY.
TYPES: TY_C TYPE C.

* anderes Konzept als org:
* Bei org gibt es Tabelle mit Liste aller darzustellenden Felder (max,
*report und aktuell). Bei time sind die Felder bzw.
*Darstellungsoptiinen* hart in t599c_py aufgez#hlt und werden mit Flag
*ein/ausgeschaltet.


*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CLASS CGUI_TIME DEFINITION INHERITING FROM CGUI .
*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
* handles the display of organisational sel-options on the
* ldb screen (in contrast to time selections).
  PUBLIC SECTION.
    CLASS-METHODS: CLASS_CONSTRUCTOR.


* customizing
    METHODS: IS_ON_TIMESCREEN IMPORTING FIELD TYPE C
                         RETURNING VALUE(IS_ON) TYPE TY_C,

             IS_INTERVALL IMPORTING FIELD TYPE C
                         RETURNING VALUE(IS_INTERVALL) TYPE TY_C,

          GET_PERIOD_TIMESCREEN RETURNING VALUE(PERIOD) TYPE TY_C,

             SET_PERIOD_TIMESCREEN IMPORTING SWITCH TYPE TY_C.

*   METHODS: GET_TIME_FIELDS EXPORTING ITAB_TIME TYPE TABLE. "XRRK055566
    METHODS: GET_TIME_FIELDS EXPORTING ITAB_TIME TYPE STANDARD TABLE.
*   METHODS: SET_TIME_FIELDS IMPORTING ITAB_TIME TYPE TABLE. "XRRK055566
    METHODS: SET_TIME_FIELDS IMPORTING ITAB_TIME TYPE STANDARD TABLE.


  PRIVATE SECTION.
    CLASS-DATA:  WA_TIME_ALL TYPE T_TIME_ALL.
    "persistence of wa_time_all-B_PERIODSCREEN with pyct_per !

    CONSTANTS: TRUE VALUE 'X',FALSE VALUE ' '.

* all fields possilbe as listed in pytimescreen
    CLASS-DATA:  TIME_MOD    TYPE TABLE OF PYORGFIELDS.
    CLASS-DATA:  WA_TIME_MOD LIKE LINE OF TIME_MOD.

ENDCLASS.

*---------------------------------------------------------------------*
CLASS CGUI_TIME IMPLEMENTATION.
*---------------------------------------------------------------------*

*-----------------------------------*
  METHOD CLASS_CONSTRUCTOR.
*-----------------------------------*

    DATA:LC_REPCL TYPE T599C_PY-REPCL.

    DATA: WA_DFIES TYPE DFIES.
    DATA: IT_DFIES TYPE TABLE OF DFIES.
    DATA: WA_RSEL_INFO TYPE RSEL_INFO.
    DATA: IT_RSEL_INFO TYPE TABLE OF RSEL_INFO.
    DATA: WA_TIME_FIELDS TYPE PYORGFIELDS.


    CALL METHOD GET_REPORTCLASS IMPORTING GET_REPORTCLASS = LC_REPCL.

    SELECT SINGLE * FROM T599C_PY INTO WA_TIME_ALL
    WHERE REPCL = LC_REPCL.     "fest zur Zeit !
*sp#ter wird rpklasse auf der neuen dir tabelle mit reportnamen gelesen!
    IF SY-SUBRC > 0.
      SELECT SINGLE * FROM T599C_PY INTO WA_TIME_ALL
      WHERE REPCL = 'PY_DEF'.          "use default rep. class
* if sy-subrc = 0. "error handling !
    ENDIF.

* Achtung,  wa_time_all-B_PERIODSCREEN wird auch bei PBO / PAI
* manipuliert.

*extern manipulierbare Felder aus PYTIMESCREEN lesen
    CALL FUNCTION 'DDIF_FIELDINFO_GET'
         EXPORTING
              TABNAME        = 'PYTIMESCREEN'
         TABLES
              DFIES_TAB      = IT_DFIES
         EXCEPTIONS
              NOT_FOUND      = 1
              INTERNAL_ERROR = 2
              OTHERS         = 3.
    IF SY-SUBRC <> 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    LOOP AT IT_DFIES INTO WA_DFIES.
      MOVE WA_DFIES-FIELDTEXT  TO WA_TIME_MOD-TEXT.
      MOVE WA_DFIES-TABNAME    TO WA_TIME_MOD-DDIC_TABLE.
      MOVE WA_DFIES-ROLLNAME   TO WA_TIME_MOD-DDIC_COM_TYPE.
      MOVE WA_DFIES-FIELDNAME  TO WA_TIME_MOD-DDIC_COM.
      APPEND WA_TIME_MOD TO TIME_MOD.
    ENDLOOP.

*Read selections to get screen name
    CALL FUNCTION 'RS_REPORTSELECTIONS_INFO'
         EXPORTING
              REPORT              = 'SAPDBPNP'
              DEFAULT_VALUES      = ' '
         TABLES
              FIELD_INFO          = IT_RSEL_INFO
         EXCEPTIONS
              NO_SELECTIONS       = 1
              REPORT_NOT_EXISTENT = 2
              SUBROUTINE_POOL     = 3
              OTHERS              = 4.
    IF SY-SUBRC <> 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
        WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

*FILTER the ones we need (PY* without PY0) and add SCREENNAME
    LOOP AT IT_RSEL_INFO INTO  WA_RSEL_INFO.
      IF WA_RSEL_INFO+0(2) = 'PY' .
       SPLIT WA_RSEL_INFO-DBFIELD AT '-' INTO WA_TIME_FIELDS-DDIC_TABLE
                                                WA_TIME_FIELDS-DDIC_COM.
        IF WA_TIME_FIELDS-DDIC_TABLE = 'PYTIMESCREEN'.
          READ TABLE TIME_MOD
            WITH KEY DDIC_COM = WA_TIME_FIELDS-DDIC_COM
            INTO WA_TIME_MOD.
          IF SY-SUBRC = 0.
            WA_TIME_MOD-SCREENNAME = WA_RSEL_INFO-NAME.
            MODIFY TIME_MOD
            FROM WA_TIME_MOD
            TRANSPORTING SCREENNAME
            WHERE DDIC_COM = WA_TIME_FIELDS-DDIC_COM.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDLOOP.

  ENDMETHOD.


*-----------------------------------*
  METHOD: IS_ON_TIMESCREEN.
*-----------------------------------*
    FIELD-SYMBOLS: <F1> TYPE ANY.
    DATA S TYPE STRING.
    DATA DATE_SCREEN TYPE TY_C.

*quick and dirty:....... (only tmp !)
*    IF field = 'ETIME_INTERVAL' OR
*    field = 'EKEYDATE_PAYDATE' OR
*    field = 'EAS_OF_DATE'.
*      date_screen = 1.
*    ENDIF.

    IS_ON = FALSE.
*welcher screen ist gerade in:
*startscreen muss periodscreen heissen !!! <.> datescreen
*    IF wa_time_all-start_screen = 'X' AND date_screen = false.
    CONCATENATE 'WA_TIME_ALL-' FIELD INTO S.
    ASSIGN (S) TO <F1>.
    IF SY-SUBRC = 0.
      IF <F1> <> ' '.
        IS_ON = 'X'.
      ENDIF.
    ENDIF.                             "sy-subrc
*    ENDIF.                             "is_date

  ENDMETHOD.

*-----------------------------------*
  METHOD: IS_INTERVALL.
*-----------------------------------*
*Purpose: Reads the approbriate column in the wa_time_all line and
*returns TRUE or FALSE.
    FIELD-SYMBOLS: <F1> TYPE ANY.
    DATA S TYPE STRING.
    CONCATENATE 'WA_TIME_ALL-' FIELD INTO S.
    ASSIGN (S) TO <F1>.
    IF SY-SUBRC = 0.
      IF <F1> = 'I'.                   "I like (I)ntervall
        IS_INTERVALL = 'X'.
      ENDIF.
    ENDIF.                             "sy-subrc

  ENDMETHOD.

*-----------------------------------*
  METHOD: SET_PERIOD_TIMESCREEN.
*-----------------------------------*
    IF SWITCH = TRUE.
      WA_TIME_ALL-B_PERIODSCREEN = TRUE.
    ELSE.
      WA_TIME_ALL-B_PERIODSCREEN = FALSE.
    ENDIF.
  ENDMETHOD.

*-----------------------------------*
  METHOD: GET_PERIOD_TIMESCREEN.
*-----------------------------------*
    IF WA_TIME_ALL-B_PERIODSCREEN = 'X'.
      PERIOD = TRUE.
    ELSE.
      PERIOD = FALSE.
    ENDIF.
  ENDMETHOD.

*-----------------------------------*
  METHOD: GET_TIME_FIELDS.
*-----------------------------------*
    ITAB_TIME[] = TIME_MOD[] .
  ENDMETHOD.

*-----------------------------------*
  METHOD: SET_TIME_FIELDS.
*-----------------------------------*
    FIELD-SYMBOLS: <FS> TYPE ANY.
    DATA: STRG TYPE STRING.
    DATA: L_ITAB_TIME TYPE TABLE OF PYORGFIELDS.

    L_ITAB_TIME[] = ITAB_TIME[].
    LOOP AT TIME_MOD INTO WA_TIME_MOD.
      CONCATENATE 'WA_TIME_ALL-B_' WA_TIME_MOD-DDIC_COM INTO STRG.
      ASSIGN (STRG) TO <FS>.
      IF SY-SUBRC = 0.
        READ TABLE L_ITAB_TIME
          WITH KEY DDIC_COM = WA_TIME_MOD-DDIC_COM
          TRANSPORTING NO FIELDS.
        IF SY-SUBRC = 0.
          <FS> = 'X'.
        ELSE.
          <FS> = SPACE.
        ENDIF.
      ELSE.
* Error, should never occur
      ENDIF.
    ENDLOOP.
  ENDMETHOD.

ENDCLASS.
