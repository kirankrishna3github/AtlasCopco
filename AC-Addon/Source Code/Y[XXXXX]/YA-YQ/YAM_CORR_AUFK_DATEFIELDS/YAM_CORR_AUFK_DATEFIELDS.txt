*----------------------------------------------------------------------
* PROGRAM ID           : YAM_CORR_AUFK_DATEFIELDS                      *
* PROGRAM TITLE        : Correction of AUFK-IDAT2 and IDAT3            *
* AUTHOR               : Luc Mertens                                   *
* DATE                 : 22/03/2006                                    *
* DEVELOPMENT ID       :                                               *
* CHANGE REQUEST NUMBER: CD1K905068                                    *
* PROGRAM DESCRIPTION  : Update datefields IDAT2 and IDAT3 in table    *
*   AUFK after implementation of newest version of OSS note 838264     *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG
*
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE   *
*                                                                      *
*----------------------------------------------------------------------*
REPORT YAM_CORR_AUFK_DATEFIELDS.

TABLES: AUFK, JCDS.

DATA: gt_jcds  type jcds occurs 0 with header line,
      lt_jcds  like line of gt_jcds,
      gt_aufk  type aufk occurs 0 with header line,
      g_upd(1) type c.

DATA: begin of gt_afih occurs 0,
        aufnr  like afih-aufnr,
        iphas  like afih-iphas,
      end of gt_afih.

Select-options: s_aufnr for aufk-aufnr,
                s_bukrs for aufk-bukrs.
PARAMETERS:     p_test(1)   type c default 'X',
                p_list(1)   type c default ' '.

*-----------------------------------------------------------------------
START-OF-SELECTION.

  SELECT * FROM aufk INTO TABLE gt_aufk
     where aufnr in s_aufnr
       and bukrs in s_bukrs.

  select * from jcds
     into table gt_jcds
     for all entries in gt_aufk
     where objnr = gt_aufk-objnr
       and stat  in   ('I0045', 'I0046')
       and inact ne   'X'.

  sort gt_jcds by objnr stat udate descending utime descending.

  select aufnr iphas
     into corresponding fields of table gt_afih
     from afih
     for all entries in gt_aufk
     where aufnr = gt_aufk-aufnr.

  sort gt_afih by aufnr.

*-----------------------------------------------------------------------
END-OF-SELECTION.

  loop at gt_aufk.

    clear g_upd.

    loop at gt_jcds where objnr = gt_aufk-objnr.

      move gt_jcds to lt_jcds.

      at new stat.
        if lt_jcds-stat = 'I0045'.
          if gt_aufk-idat2 ne lt_jcds-udate.
            move lt_jcds-udate to gt_aufk-idat2.

            read table gt_afih with key aufnr = gt_aufk-aufnr
                                  binary search.
            if sy-subrc = 0 and
               gt_afih-iphas < '3'.
              clear gt_aufk-idat2.
            endif.
            if not gt_aufk-idat2 is initial.
              g_upd = 'X'.
            endif.
          endif.
        else.
          if gt_aufk-idat3 ne lt_jcds-udate.
            move lt_jcds-udate to gt_aufk-idat3.

            read table gt_afih with key aufnr = gt_aufk-aufnr
                                  binary search.
            if sy-subrc = 0 and
               gt_afih-iphas ne '6'.
              clear gt_aufk-idat3.
            endif.
            if not gt_aufk-idat3 is initial.
              g_upd = 'X'.
            endif.
          endif.
        endif.
      endat.

    endloop.

    if not ( gt_aufk-idat2 is initial and
             gt_aufk-idat3 is initial ).
      if not gt_aufk-idat3 is initial.
        if gt_aufk-phas3 ne 'X'.
          move 'X' to gt_aufk-phas3.
          g_upd = 'X'.
        endif.
      else.
        if gt_aufk-phas2 ne 'X'.
          move 'X' to gt_aufk-phas2.
          g_upd = 'X'.
        endif.
      endif.
    endif.

    if g_upd eq 'X'.
      modify gt_aufk.
    else.
      delete gt_aufk.
    endif.

  endloop.

  clear gt_aufk.
  LOOP AT gt_aufk.

*   write modified entries to outputlist
    if p_list = 'X'.
      write: / gt_aufk-aufnr, gt_aufk-phas2, gt_aufk-phas3,
               gt_aufk-idat2, gt_aufk-idat3.
    endif.

    if p_test ne 'X'.
*     update AUFK with new datefield(s)
      UPDATE aufk SET phas2 = gt_aufk-phas2
                      phas3 = gt_aufk-phas3
                      idat2 = gt_aufk-idat2
                      idat3 = gt_aufk-idat3
      WHERE aufnr = gt_aufk-aufnr.
    endif.

  ENDLOOP.

  skip.
  uline.
  skip.
  if p_test eq 'X'.
    write: 'Test - Not updated'.
  else.
    write: 'Updated'.
  endif.

*Selection text£º
*P_LIST:        Overview on list
*P_TEST:        Test - NO update
*S_AUFNR:D       Order
*S_BUKRS:D       Company Code
