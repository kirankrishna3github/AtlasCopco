*&---------------------------------------------------------------------*
*& Report  YAM_LIST_CREDIT_CHECK                                       *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  yam_list_credit_check NO STANDARD PAGE HEADING LINE-SIZE 132.
*----------------------------------------------------------------------*
* PROGRAM ID           : YAM_LIST_CREDIT_CHECK                         *
* PROGRAM TITLE        : AM: List Credit Check                         *
* AUTHOR               : Marc Jacobs                                   *
* DATE                 : 12/01/2005                                    *
* DEVELOPMENT ID       : I007                                          *
*                                                                      *
* CHANGE REQUEST NUMBER: CD1K901321                                    *
*                                                                      *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*
* MOD-001 | 2005.01.13 | Output change     |CD1K901329 |             | *
* MOD-002 | 2005.06.28 | CR050 : Credit limit new approach           | *
* MOD-003 | 2006.03.15 | check logsys      |CD1K905011 |             | *
* MOD-004 | 2008.04.16 | other default logsys to access knkkf1       | *
************************************************************************
* Program Description:  List differences of credit check between       *
*                       BPCS and SAP (check on customer interface)     *
************************************************************************
*---------------------------------------------------------------------*
* PARAMETERS                                                          *
*---------------------------------------------------------------------*
PARAMETERS: p_infile LIKE /sapdmc/lsoinp-filename
                OBLIGATORY,                         "file
* begin of insertion mod-003
            p_logsys LIKE knkkf1-logsys default
* begin of change MOD-004
*                    'CP1WBI100',
                     'SP0500PI',
* end of change MOD-004
* end of insertion mod-003
            p_kkber LIKE knkk-kkber OBLIGATORY.     " control area

*---------------------------------------------------------------------*
* CONSTANTS                                                           *
*---------------------------------------------------------------------*
CONSTANTS: c_filetype(10)   TYPE c VALUE 'ASC',     " FILE TYPE
           c_value          LIKE knkk-klimk VALUE '9999999999999.99' ,
           c_blank          TYPE c VALUE ' '.       " no separator
*---------------------------------------------------------------------*
* TYPES                                                               *
*---------------------------------------------------------------------*
TYPES: BEGIN OF ty_upload,
* begin of deletion MOD-002
*        v_text(9)   TYPE c,            " FILE UPLOAD TEXT
* end of deletion MOD-002
* begin of insertion MOD-002
      v_text(25)   TYPE c,            " FILE UPLOAD TEXT
* end of insrtion MOD-002
       END OF ty_upload.
*---------------------------------------------------------------------*
*TABLES                                                               *
*---------------------------------------------------------------------*
TABLES : kna1 ,                           " Customer master
         knkkf1.                          " credit management
*---------------------------------------------------------------------*
* INTERNAL TABLES                                                     *
*---------------------------------------------------------------------*
DATA: gt_upload TYPE STANDARD TABLE OF ty_upload
                INITIAL SIZE 0 WITH HEADER LINE.

DATA: BEGIN OF gt_irec OCCURS 0,
          sortl(9)   TYPE c,
* begin of insertion mod-002
          credl(15)   TYPE c,
          block(1)   TYPE c,
* end of insertion mod-002
      END OF gt_irec.

DATA: BEGIN OF gt_sel OCCURS 0,
          kunnr LIKE knkkf1-kunnr,          " customer number
          klimk LIKE knkkf1-klimk,          " credit limit
          crblb LIKE knkkf1-crblb,          " blocking flag
      END OF gt_sel.
*---------------------------------------------------------------------*
* VARIABLES                                                           *
*---------------------------------------------------------------------*
DATA: g_filename TYPE string,
      g_kunnr LIKE kna1-kunnr,
      g_klimk LIKE knkkf1-klimk,
      g_klimkval LIKE knkkf1-klimk,
      g_sortl LIKE kna1-sortl,
      g_crblb LIKE knkkf1-crblb.
*
*  at selection-screen
*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_infile.

  CALL FUNCTION 'WS_FILENAME_GET'
    EXPORTING
      def_path = 'C:\SAP\'
      mask     = ',*,*.txt.'
    IMPORTING
      filename = p_infile
    EXCEPTIONS
      OTHERS   = 5.
*
*  START_OF_SELECTION
*
START-OF-SELECTION.
*
* READ FILE FROM PRESENTATION SERVER
*
  MOVE p_infile TO g_filename.
  PERFORM get_from_pres IN PROGRAM yam_common_routines
                                  TABLES  gt_upload
                                  USING   g_filename
                                          c_filetype
                                          c_blank.

  LOOP AT gt_upload.
    MOVE gt_upload TO gt_irec.
    APPEND gt_irec.
    CLEAR gt_irec.
  ENDLOOP.

*
* check for each entry in internal table if same situation in KNKK
*
* begin of deletion mod-002
*  WRITE :  text-003 , 100 sy-datum , sy-uzeit.
*  ULINE.

*  LOOP AT gt_irec.

*    CLEAR g_kunnr.
*    CLEAR g_klimk.
*    SELECT SINGLE kunnr FROM kna1 INTO g_kunnr
*                 WHERE sortl = gt_irec-sortl.
*    IF sy-subrc = 0.
*      SELECT single klimk FROM knkk INTO g_klimk WHERE kunnr = g_kunnr
*                   and kkber = p_kkber.
*        IF sy-subrc = 0.
*          IF NOT g_klimk = c_value.
* begin of deletion MOD-001
*           WRITE : / g_kunnr , g_klimk.
* end of deletion MOD-001
* begin of insertion MOD-001
*            write : / g_kunnr , gt_irec-sortl , g_klimk.
* end of insertion MOD-001
*          ENDIF.
*        ELSE.
*          WRITE : / text-001 , g_kunnr.
*        ENDIF.
*    ELSE.
*      WRITE : / text-002 , gt_irec-sortl.

*    ENDIF.

*  ENDLOOP.
*
* check for each record in KNKK with value 999999999999,99
* if entry exist in internal table gt_irec
*
*  NEW-PAGE.
*  WRITE :  text-004, 100 sy-datum , sy-uzeit.
*  ULINE.

*  SELECT kunnr INTO CORRESPONDING FIELDS OF TABLE gt_sel
*     FROM knkk WHERE klimk = c_value AND
*                     kkber = p_kkber.

*  LOOP AT gt_sel.
*   CLEAR g_sortl.
*    SELECT sortl FROM kna1 INTO g_sortl
*                 WHERE kunnr = gt_sel-kunnr.
*    endselect.
*    IF sy-subrc = 0.
*      READ TABLE gt_irec WITH KEY sortl = g_sortl BINARY SEARCH
*                      transporting no fields.
*      IF NOT sy-subrc = 0.
*        WRITE : /  text-005 ,
*                   gt_sel-kunnr ,
*                  ' ' ,
*                   g_sortl.
*      ENDIF.
*    ENDIF.

*  ENDLOOP.
* end of deletion mod-002
*
* begin of insertion mod-002
* Check if customer exists in KNA1 and KNKKF1
*
  NEW-PAGE.
  WRITE :  text-001, 100 sy-datum , sy-uzeit.
  ULINE.
  LOOP AT gt_irec.

    CLEAR : g_kunnr,
            g_klimk,
            g_crblb,
            g_klimkval,
            gt_sel.
    REFRESH gt_sel.
    SELECT SINGLE kunnr FROM kna1 INTO g_kunnr
                WHERE sortl = gt_irec-sortl.
* Customer does not exist in KNA1
    IF sy-subrc <> 0.
      WRITE : /  text-002 , gt_irec-sortl.
    ELSE.
* Check if customer exists in KNKKF1

     SELECT kunnr klimk crblb INTO CORRESPONDING FIELDS OF TABLE gt_sel
* begin of deletion mod-003
*   FROM knkkf1 WHERE kunnr = g_kunnr.
* end of deletion mod-003
* begin of insertion mod-003
       FROM knkkf1 WHERE kunnr = g_kunnr and logsys = p_logsys.
* end of insertion mod-003
    IF sy-subrc <> 0.
        WRITE : / text-003 , gt_irec-sortl , ' ' , g_kunnr.
      ELSE.
        LOOP AT gt_sel.
          g_klimkval = gt_irec-credl / 100.
* Check Credit limit value
          IF g_klimkval <> gt_sel-klimk.
            WRITE : / text-004 , gt_irec-sortl , ' ' , g_kunnr ,
                      g_klimkval , ' ' , gt_sel-klimk.
          ENDIF.
* Check Blocking Flag
          IF gt_irec-block <> ' ' AND gt_sel-crblb = ' ' OR
               gt_irec-block = ' ' AND gt_sel-crblb <> ' '.
            WRITE : / text-005 , gt_irec-sortl , ' ' , g_kunnr ,
                      gt_irec-block , ' ' , gt_sel-crblb.
          ENDIF.
        ENDLOOP.
      ENDIF.
    ENDIF.
  ENDLOOP.
*


* end of insertion mod-002
*Text symbol text£º
*001:Credit Limit Check BPCS - SAP
*002:No record found in file KNA1 for customer
*003:No record found in file KNKKF1 for customer
*004:Credit Limit Difference BPCS - SAP
*005:Blocking Flag Difference BPCS - SAP
