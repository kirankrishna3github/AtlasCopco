*----------------------------------------------------------------------*
* PROGRAM ID           : YAM_CORR_AFVC_WC                              *
* PROGRAM TITLE        : Overview incorrect Workcenters                *
* AUTHOR               : Geert Rutten                                  *
* DATE                 : 26/11/2012                                    *
* DEVELOPMENT ID       :                                               *
* CHANGE REQUEST NUMBER: CD1K974038                                    *
* PROGRAM DESCRIPTION  : Replace workcenters ZC03 with first 4 char.   *
*                        = branch WC                                  *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG
*
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE   *
*                                                                      *
*----------------------------------------------------------------------*
REPORT yam_corr_afvc_wc.

TABLES: afvc, aufk, crhd.

TYPES: BEGIN OF tp_data,
         aufpl(10) TYPE c,
         aplzl(8) TYPE c,
         werks TYPE werks_d,
         arbid TYPE cr_objid,
         aufnr TYPE aufnr,
         rspos(4) TYPE c,
         steus TYPE steus,
         text(25) TYPE c,
       END OF tp_data.

TYPES: BEGIN OF ty_upload,
        aufnr  TYPE aufnr,
       END OF ty_upload.

TYPES: BEGIN OF ty_afvc,
        aufpl  TYPE co_aufpl,
        aplzl  TYPE co_aplzl,
        arbid  TYPE cr_objid,
        steus  TYPE steus,
       END OF ty_afvc.

DATA: gt_upload TYPE STANDARD TABLE OF ty_upload
                INITIAL SIZE 0 WITH HEADER LINE.
DATA : lt_msg TYPE bal_t_msg .
DATA:
  BEGIN OF gt_aufk OCCURS 0,
    aufnr LIKE aufk-aufnr,
    aufpl  LIKE viaufk_afvc-aufpl,
  END OF gt_aufk.

CONSTANTS:  gc_char_fs     TYPE c          VALUE ';'.

DATA: lv_arbpl TYPE arbpl,
      lv_arbid TYPE cr_objid,
      lv_aufpl TYPE co_aufpl,
      lv_aplzl TYPE co_aplzl.

DATA: s_file TYPE string,
      gv_aufnr TYPE aufnr.

DATA: i_data1 TYPE TABLE OF tp_data WITH HEADER LINE,
      gs_upload  TYPE aufnr,
      g_aufnr TYPE aufnr.

DATA: gt_afvc TYPE STANDARD TABLE OF ty_afvc
                INITIAL SIZE 0 WITH HEADER LINE.

DATA: lv_count         TYPE sy-tabix,
      lv_update(1)     TYPE c,
      lv_aufnr_s       TYPE aufnr,
      lv_workc_old_s   TYPE arbpl,
      lv_workc_new_s   TYPE arbpl,
      lv_act_s         TYPE vornr.

DATA: lt_methods   LIKE bapi_alm_order_method OCCURS 0 WITH HEADER LINE,
      lt_component LIKE bapi_alm_order_component OCCURS 0 WITH HEADER
LINE,
      lt_operation LIKE bapi_alm_order_operation OCCURS 0 WITH HEADER
LINE,
      lt_operation_up LIKE bapi_alm_order_operation_up OCCURS 0 WITH
HEADER LINE.
DATA: lt_return TYPE STANDARD TABLE OF bapiret2,
      et_return TYPE STANDARD TABLE OF bapiret2,
      ls_return LIKE bapiret2.

DATA: BEGIN OF i_operations OCCURS 100.
        INCLUDE STRUCTURE bapi_alm_order_operation_e.
DATA: END OF i_operations.

*PARAMETERS: P_FILE TYPE RLGRAP-FILENAME DEFAULT 'C:\SAP\operations.TXT'.
SELECT-OPTIONS: s_aufnr  FOR aufk-aufnr.




*IF s_aufnr IS INITIAL.

*  MOVE p_file TO s_file.
*
*  CALL FUNCTION 'GUI_UPLOAD'
*    EXPORTING
*      filename                = s_file
*      filetype                = 'ASC'
*      has_field_separator     = 'X'
*    TABLES
*      data_tab                = gt_upload
*    EXCEPTIONS
*      file_open_error         = 1
*      file_read_error         = 2
*      no_batch                = 3
*      gui_refuse_filetransfer = 4
*      invalid_type            = 5
*      no_authority            = 6
*      unknown_error           = 7
*      bad_data_format         = 8
*      header_not_allowed      = 9
*      separator_not_allowed   = 10
*      header_too_long         = 11
*      unknown_dp_error        = 12
*      access_denied           = 13
*      dp_out_of_memory        = 14
*      disk_full               = 15
*      dp_timeout              = 16
*      OTHERS                  = 17.
*  IF sy-subrc <> 0.
*    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*          WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*  ENDIF.
*
*
*  LOOP AT gt_upload .
*
*    CALL FUNCTION 'CONVERSION_EXIT_AUFNR_INPUT'
*      EXPORTING
*        input  = gt_upload-aufnr
*      IMPORTING
*        output = g_aufnr.
*
*    SELECT aufnr aufpl
*       APPENDING CORRESPONDING FIELDS OF TABLE gt_aufk
*       FROM viaufkst
*       WHERE aufnr EQ g_aufnr
*         AND iphas NE '3' AND iphas NE '6' AND iphas NE '0'.
*
*  ENDLOOP.

*ELSE.

  SELECT aufnr aufpl
   INTO CORRESPONDING FIELDS OF TABLE gt_aufk
   FROM viaufkst
   WHERE aufnr IN s_aufnr
     AND iphas NE '3' AND iphas NE '6' AND iphas NE '0'.

*ENDIF.



LOOP AT gt_aufk.
  CLEAR: lv_aufnr_s, lv_workc_new_s, lv_workc_old_s, lv_act_s.

  CALL FUNCTION 'IBAPI_PROC_INIT_REQUEST'
    .

  REFRESH: lt_methods,
          lt_operation,
          lt_operation_up,
          lt_return,
          et_return.
  CLEAR:  lt_methods,
          lt_operation,
          lt_operation_up,
          lt_return.
  CLEAR: lv_count, lv_arbpl.
  CLEAR lv_update.

  gv_aufnr = gt_aufk-aufnr.
  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
    EXPORTING
      input  = gv_aufnr
    IMPORTING
      output = gv_aufnr.


  DATA: et_operations   TYPE bapi_alm_order_operation_et,
        wa_operations   TYPE LINE OF bapi_alm_order_operation_et.


  CALL FUNCTION 'BAPI_ALM_ORDER_GET_DETAIL'
    EXPORTING
      number        = gv_aufnr
    TABLES
      et_operations = et_operations
*       et_components = et_components
*       et_texts      = lt_texts
*       et_text_lines = et_longtext_seo
*       et_costs_sum  = lt_total_costs
      return        = et_return.


  LOOP AT et_operations INTO wa_operations.

    PERFORM update_operation.


  ENDLOOP.

  IF lv_update = 'X'.
* Add the save method only once at the end
    CLEAR lt_methods.
    lt_methods-method = 'SAVE'.
    APPEND lt_methods.

    CALL FUNCTION 'BAPI_ALM_ORDER_MAINTAIN'
      TABLES
        it_methods      = lt_methods[]
        it_operation    = lt_operation[]
        it_operation_up = lt_operation_up[]
        return          = lt_return[].

    LOOP AT lt_return INTO ls_return WHERE type = 'E' OR type = 'A'.
      EXIT.
    ENDLOOP.
    IF sy-subrc = 0.
      ROLLBACK WORK.
      WRITE: / lv_aufnr_s, lv_act_s, text-001.
    ELSE.
*.. commit the change
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = 'X'.

    ENDIF.
  ENDIF.

ENDLOOP.

*&---------------------------------------------------------------------*
*&      Form  update_operation
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM update_operation.


  lt_methods-objecttype = 'OPERATION'.
  lt_methods-method     = 'CHANGE'.




  IF wa_operations-control_key = 'ZCO3' AND
     wa_operations-work_cntr+5(3) <> 'AEX' AND
     wa_operations-work_cntr+5(3) <> 'SUB' AND
     wa_operations-work_cntr+5(3) <> 'DST' AND
     wa_operations-work_cntr+5(3) <> 'TRT' AND
     wa_operations-work_cntr+5(3) <> 'TRV'.
    MOVE-CORRESPONDING wa_operations TO i_operations.

    lv_arbpl = wa_operations-work_cntr+0(4).
    SELECT SINGLE * FROM crhd
      WHERE arbpl = lv_arbpl.
    IF sy-subrc = 0.
      i_operations-work_cntr = lv_arbpl.
      APPEND i_operations.
    ENDIF.

    CONCATENATE gt_aufk-aufnr i_operations-activity INTO
    lt_methods-objectkey.
    lv_count = lv_count + 1.
    lt_methods-refnumber  = lv_count.
    APPEND lt_methods.
    CLEAR lt_operation.




    MOVE-CORRESPONDING i_operations TO lt_operation.
    APPEND lt_operation.

    MOVE 'X' TO lt_operation_up-work_cntr.
    APPEND lt_operation_up.
    lv_update = 'X'.
    lv_aufnr_s = gt_aufk-aufnr.
    lv_act_s = i_operations-activity.
    lv_workc_new_s = i_operations-work_cntr.
    lv_workc_old_s = wa_operations-work_cntr.
    WRITE: / gt_aufk-aufnr, i_operations-activity, 'Old WC= ',
     wa_operations-work_cntr, '  New WC= ',i_operations-work_cntr.

  ENDIF.

ENDFORM.                    "update_operation

*Text symbol text£º

*001:ORDER IN ERROR
*Selection text£º
*P_FILE:        Text File
*S_AUFNR:        Order Number
