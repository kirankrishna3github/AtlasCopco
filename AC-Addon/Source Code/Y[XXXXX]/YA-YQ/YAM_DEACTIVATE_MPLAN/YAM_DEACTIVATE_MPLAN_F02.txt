*&---------------------------------------------------------------------*
*&  Include           YAM_DEACTIVATE_MPLAN_F02                         *
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  user_command_mpla
*&---------------------------------------------------------------------*
*       text: User Command callback routine for ALV
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM user_command_mpla USING r_ucomm LIKE sy-ucomm
                        rs_selfield TYPE slis_selfield.

  CASE r_ucomm.
* display maintenance plan
    WHEN 'MPLA'.
      READ TABLE gt_mpla INDEX rs_selfield-tabindex.
      IF sy-subrc = 0.
        gt_mpla-selkz = gc_charx.
        MODIFY gt_mpla INDEX rs_selfield-tabindex.
      ENDIF.
      PERFORM display_maintenance_plan.
* display open orders
    WHEN 'ORDE'.
      READ TABLE gt_mpla INDEX rs_selfield-tabindex.
      IF sy-subrc = 0.
        gt_mpla-selkz = gc_charx.
        MODIFY gt_mpla INDEX rs_selfield-tabindex.
      ENDIF.
      REFRESH gt_orde.
      LOOP AT gt_mpla WHERE selkz EQ gc_charx.
        PERFORM select_orders.
      ENDLOOP.
      SORT gt_orde BY aufnr.
      PERFORM output_list_orde.
      rs_selfield-refresh = gc_charx.
* display open notifications
    WHEN 'NOTI'.
      READ TABLE gt_mpla INDEX rs_selfield-tabindex.
      IF sy-subrc = 0.
        gt_mpla-selkz = gc_charx.
        MODIFY gt_mpla INDEX rs_selfield-tabindex.
      ENDIF.
      REFRESH gt_noti.
      LOOP AT gt_mpla WHERE selkz EQ gc_charx.
        PERFORM select_notifications.
      ENDLOOP.
      SORT gt_noti BY qmnum.
      PERFORM output_list_noti.
      rs_selfield-refresh = gc_charx.
* deactivate selected maintenance plans
    WHEN 'DEAC'.

      CALL FUNCTION 'POPUP_TO_CONFIRM'
        EXPORTING
          titlebar              = text-p01
          text_question         = text-p02
          icon_button_1         = 'ICON_OKAY'
          icon_button_2         = 'ICON_CANCEL'
          default_button        = '2'
          display_cancel_button = space
        IMPORTING
          answer                = gv_answer
        EXCEPTIONS
          text_not_found        = 1
          OTHERS                = 2.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.

      IF gv_answer = '1'.
        LOOP AT gt_mpla WHERE selkz EQ gc_charx.
          PERFORM deactivate_maintplan.
        ENDLOOP.
      ENDIF.
      PERFORM select_maintplans.
      rs_selfield-refresh = gc_charx.
* display log
    WHEN 'LOG'.
      PERFORM display_log.

  ENDCASE.

ENDFORM.                    " user_command_mpla

*eject
*&---------------------------------------------------------------------*
*&      Form  PF_STATUS_SET_MPLA
*&---------------------------------------------------------------------*
*       text: PF-status callback routine for ALV
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM pf_status_set_mpla USING rt_extab TYPE slis_t_extab.

  SET PF-STATUS 'YAM_MPLA'.

ENDFORM.                    " PF_STATUS_SET_MPLA

*eject
*&---------------------------------------------------------------------*
*&      Form  top_of_page_mpla
*&---------------------------------------------------------------------*
*       Top of page callback routine for ALV
*----------------------------------------------------------------------*
FORM top_of_page_mpla.

*.. Local variables
  DATA: lt_comment TYPE slis_t_listheader,
        ls_comment TYPE slis_listheader.

*.. Header
  ls_comment-typ  = 'H'.
  ls_comment-info = text-h00.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.

*.. Selection
  ls_comment-typ  = 'S'.
  ls_comment-key  = text-h01.
  ls_comment-info = p_vkorg.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.

  ls_comment-typ  = 'S'.
  ls_comment-key  = text-h02.
  ls_comment-info = p_kunnr.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.

  ls_comment-typ  = 'S'.
  ls_comment-key  = text-h03.
  ls_comment-info = p_vbeln.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.

  ls_comment-typ  = 'S'.
  ls_comment-key  = text-h04.
  CONCATENATE s_vendda-low s_vendda-high INTO ls_comment-info
    SEPARATED BY space.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.

*>>> MOD-003 begin insert
  ls_comment-typ  = 'S'.
  ls_comment-key  = text-h05.
  CONCATENATE s_vuntda-low s_vuntda-high INTO ls_comment-info
    SEPARATED BY space.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.
*<<< MOD-003 end insert

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = lt_comment.

ENDFORM.                    " top_of_page_mpla

*eject
*&---------------------------------------------------------------------*
*&      Form  user_command_orde
*&---------------------------------------------------------------------*
*       text: User Command callback routine for ALV
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM user_command_orde USING r_ucomm LIKE sy-ucomm
                        rs_selfield TYPE slis_selfield.

  CASE r_ucomm.
    WHEN 'ORDD'.
      READ TABLE gt_orde INDEX rs_selfield-tabindex.
      IF sy-subrc = 0.
        gt_orde-selkz = gc_charx.
        MODIFY gt_orde INDEX rs_selfield-tabindex.
      ENDIF.
      PERFORM display_order.
  ENDCASE.

ENDFORM.                    " user_command_orde
*eject
*&---------------------------------------------------------------------*
*&      Form  PF_STATUS_SET_orde
*&---------------------------------------------------------------------*
*       text: PF-status callback routine for ALV
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM pf_status_set_orde USING rt_extab TYPE slis_t_extab.

  SET PF-STATUS 'YAM_ORDE'.

ENDFORM.                    " PF_STATUS_SET_ORDE

*eject
*&---------------------------------------------------------------------*
*&      Form  top_of_page_orde
*&---------------------------------------------------------------------*
*       Top of page callback routine for ALV
*----------------------------------------------------------------------*
FORM top_of_page_orde.

*.. Local variables
  DATA: lt_comment TYPE slis_t_listheader,
        ls_comment TYPE slis_listheader.

*.. Header
  ls_comment-typ  = 'H'.
  ls_comment-info = text-h11.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = lt_comment.

ENDFORM.                    " top_of_page_orde

*eject
*&---------------------------------------------------------------------*
*&      Form  user_command_noti
*&---------------------------------------------------------------------*
*       text: User Command callback routine for ALV
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM user_command_noti USING r_ucomm LIKE sy-ucomm
                        rs_selfield TYPE slis_selfield.

  CASE r_ucomm.

* display notification

    WHEN 'NOTD'.
      READ TABLE gt_noti INDEX rs_selfield-tabindex.
      IF sy-subrc = 0.
        gt_noti-selkz = gc_charx.
        MODIFY gt_noti INDEX rs_selfield-tabindex.
      ENDIF.
      PERFORM display_notification.
* Complete notifications
    WHEN 'COMP'.
      CALL FUNCTION 'POPUP_TO_CONFIRM'
        EXPORTING
          titlebar              = text-p03
          text_question         = text-p04
          icon_button_1         = 'ICON_OKAY'
          icon_button_2         = 'ICON_CANCEL'
          default_button        = '2'
          display_cancel_button = space
        IMPORTING
          answer                = gv_answer
        EXCEPTIONS
          text_not_found        = 1
          OTHERS                = 2.
      IF sy-subrc <> 0.
        MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.
      IF gv_answer = '1'.
        LOOP AT gt_noti WHERE selkz EQ gc_charx.
          PERFORM complete_notification.
        ENDLOOP.
      ENDIF.
      REFRESH gt_noti.
      PERFORM select_notifications.
      SORT gt_noti BY qmnum.
      rs_selfield-refresh = gc_charx.
  ENDCASE.

ENDFORM.                    " user_command_noti
*eject
*&---------------------------------------------------------------------*
*&      Form  PF_STATUS_SET_noti
*&---------------------------------------------------------------------*
*       text: PF-status callback routine for ALV
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM pf_status_set_noti USING rt_extab TYPE slis_t_extab.

  SET PF-STATUS 'YAM_NOTI'.

ENDFORM.                    " PF_STATUS_SET_NOTI

*eject
*&---------------------------------------------------------------------*
*&      Form  top_of_page_noti
*&---------------------------------------------------------------------*
*       Top of page callback routine for ALV
*----------------------------------------------------------------------*
FORM top_of_page_noti.

*.. Local variables
  DATA: lt_comment TYPE slis_t_listheader,
        ls_comment TYPE slis_listheader.

*.. Header
  ls_comment-typ  = 'H'.
  ls_comment-info = text-h21.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = lt_comment.

ENDFORM.                    " top_of_page_noti
