*&---------------------------------------------------------------------*
*&  Include        YAM_CUSTOMER_SATISFACTION_F02                       *
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  user_command_orde
*&---------------------------------------------------------------------*
*       text: User Command callback routine for ALV
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM user_command_orde USING r_ucomm LIKE sy-ucomm
                        rs_selfield TYPE slis_selfield.

  CASE r_ucomm.
    WHEN 'ORDD'.
      READ TABLE gt_orde INDEX rs_selfield-tabindex.
      IF sy-subrc = 0.
        gt_orde-selkz = c_charx.
        MODIFY gt_orde INDEX rs_selfield-tabindex.
      ENDIF.
      PERFORM display_order.
  ENDCASE.

ENDFORM.                    "user_command_orde

*eject
*&---------------------------------------------------------------------*
*&      Form  PF_STATUS_SET_ORDE
*&---------------------------------------------------------------------*
*       text: PF-status callback routine for ALV
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM pf_status_set_orde USING rt_extab TYPE slis_t_extab.

  SET PF-STATUS 'YAM_ORDE'.

ENDFORM.                    "pf_status_set_orde

*eject
*&---------------------------------------------------------------------*
*&      Form  top_of_page_orde
*&---------------------------------------------------------------------*
*       Top of page callback routine for ALV
*----------------------------------------------------------------------*
FORM top_of_page_orde.

*.. Local variables
  DATA: lt_comment TYPE slis_t_listheader,
        ls_comment TYPE slis_listheader.

*.. Header
  ls_comment-typ  = 'H'.
  ls_comment-info = text-h00.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.

*.. Selection
  ls_comment-typ  = 'S'.
  ls_comment-key  = text-h01.
  CONCATENATE s_tecoda-low s_tecoda-high INTO ls_comment-info
   SEPARATED BY space.
  APPEND ls_comment TO lt_comment.
  CLEAR ls_comment.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = lt_comment.

ENDFORM.                    "top_of_page_orde
*eject
*&---------------------------------------------------------------------*
*&      Form  display_order
*&---------------------------------------------------------------------*
*       Display the order using transaction IW33
*       for the selected order
*----------------------------------------------------------------------*
FORM display_order.

  LOOP AT gt_orde WHERE selkz EQ c_charx.
    SET PARAMETER ID 'ANR' FIELD gt_orde-aufnr.
    CALL TRANSACTION 'IW33' AND SKIP FIRST SCREEN.
    CLEAR gt_orde-selkz.
    MODIFY gt_orde TRANSPORTING selkz.
    EXIT.
  ENDLOOP.

ENDFORM.                    " display_order
*&---------------------------------------------------------------------*
*&      Form  delete_old_files
*&---------------------------------------------------------------------*
*       delete files older then a week
*----------------------------------------------------------------------*
FORM delete_old_files.

  g_date = sy-datum - 7.
* get directory
  g_subrc = 0.
  REFRESH file_list.
  REFRESH searchpoints.

  searchpoints-dirname = g_directory.
  searchpoints-sp_name = c_all.
  searchpoints-sp_cs   = '*Atla0702a*'.
  APPEND searchpoints.

  LOOP AT searchpoints.
    PERFORM fill_file_list USING searchpoints-dirname
                                 searchpoints-sp_name
                                 searchpoints-sp_cs.
    g_subrc = sy-subrc.
  ENDLOOP.

  IF g_subrc <> 0 OR
     file_list[] IS INITIAL.
    WRITE: / text-e03.                "No files were selected
    EXIT.
  ENDIF.
* file must be older then 1 week.
  LOOP AT file_list.

    IF file_list-name+0(8) CO '0123456789'.      "MOD-001 * insert
      IF file_list-name+0(8) < g_date.
        CONCATENATE file_list-dirname '/' file_list-name INTO g_delfile.
        DELETE DATASET g_delfile.
      ENDIF.
*** MOD-001 * begin insert ***
    ELSE.
*     New filename (with FAM code)
      IF file_list-name+4(8) CO '0123456789'.
        IF file_list-name+4(8) < g_date.
          CONCATENATE file_list-dirname '/' file_list-name INTO g_delfile.
          DELETE DATASET g_delfile.
        ENDIF.
      ENDIF.
    ENDIF.
*** MOD-001 * end insert ***

  ENDLOOP.


ENDFORM.                    "delete_old_files
*&---------------------------------------------------------------------*
*&      Form  fill_file_list
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->A_DIR_NAME      text
*      -->A_GENERIC_NAME  text
*      -->A_MUST_CS       text
*----------------------------------------------------------------------*
FORM fill_file_list USING a_dir_name a_generic_name a_must_cs.

  CALL 'C_DIR_READ_FINISH'             " just to be sure
      ID 'ERRNO'  FIELD file_list-errno
      ID 'ERRMSG' FIELD file_list-errmsg.

  CALL 'C_DIR_READ_START' ID 'DIR'    FIELD a_dir_name
                          ID 'FILE'   FIELD a_generic_name
                          ID 'ERRNO'  FIELD file-errno
                          ID 'ERRMSG' FIELD file-errmsg.
  IF sy-subrc <> 0.
    sy-subrc = 4.
    EXIT.
  ENDIF.

  DO.
    CLEAR file.
    CALL 'C_DIR_READ_NEXT'
      ID 'NAME'   FIELD file-name
      ID 'ERRNO'  FIELD file-errno
      ID 'ERRMSG' FIELD file-errmsg.
    file-dirname = a_dir_name.

    IF sy-subrc <> 0.
      EXIT.
    ENDIF.

*   Does the filename contains the requested pattern?
*   Then store it, else forget it.
    IF a_must_cs CS '*'.
      IF file-name CP a_must_cs.
        MOVE-CORRESPONDING file TO file_list.
        APPEND file_list.
      ENDIF.
    ELSE.
      IF file-name EQ a_must_cs.
        MOVE-CORRESPONDING file TO file_list.
        APPEND file_list.
      ENDIF.
    ENDIF.
  ENDDO.

  CALL 'C_DIR_READ_FINISH'
      ID 'ERRNO'  FIELD file_list-errno
      ID 'ERRMSG' FIELD file_list-errmsg.
  IF sy-subrc <> 0.
    WRITE: / 'C_DIR_READ_FINISH', 'SUBRC', sy-subrc.
  ENDIF.

  sy-subrc = 0.

ENDFORM.                    "fill_file_list
