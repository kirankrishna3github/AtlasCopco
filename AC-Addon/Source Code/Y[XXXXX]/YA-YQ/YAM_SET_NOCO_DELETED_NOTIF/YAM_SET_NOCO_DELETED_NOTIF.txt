*----------------------------------------------------------------------
* PROGRAM ID           : YAM_SET_NOCO_DELETED_NOTIF                    *
* PROGRAM TITLE        : Set NOCO for deleted notifications            *
* AUTHOR               : Geert Rutten                                  *
* DATE                 : 1/01/2013                                    *
* DEVELOPMENT ID       :                                               *
* CHANGE REQUEST NUMBER:                                               *
* PROGRAM DESCRIPTION  : Set NOCO for deleted notifications            *
*                                                                      *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
REPORT  yam_set_noco_deleted_notif  MESSAGE-ID yam_re  .
*.................. Tables............................................ *
TABLES: equi, qmel, viqmel.

CONSTANTS: c_i0076        TYPE j_istat     VALUE 'I0076', "Deletion flag
           c_i0072        TYPE j_istat     VALUE 'I0072'. "NOCO flag

DATA: BEGIN OF stat_tab OCCURS 0.    " Internal status setting table
        INCLUDE STRUCTURE jstat.
DATA: END   OF stat_tab.

*.................. Global variables.................................. *
*.................. Variables
DATA: BEGIN OF gt_viqmel OCCURS 0,
        qmnum     LIKE qmel-qmnum,
        objnr     LIKE qmel-objnr,
      END OF gt_viqmel.

TYPES: BEGIN OF ty_jcds,
        objnr     LIKE jcds-objnr,
        stat     LIKE jcds-stat,
      END OF ty_jcds.

DATA: BEGIN OF i_logtab OCCURS 0,
        cod(1)     TYPE c,
        msg(119)   TYPE c,
      END OF i_logtab.

DATA: g_directory(25) TYPE c VALUE '/var/load/xxx/UK/read/',
      g_ofile         LIKE /sapdmc/lsoinp-filename,
      p_logsys        LIKE tbdlst-logsys.

DATA: gt_jcds TYPE TABLE OF ty_JCDS WITH HEADER LINE,
      gs_jcds TYPE ty_jcds,
      gt_jcds_sav TYPE TABLE OF JCDS,
      gs_jcds_sav TYPE jcds,
      gt_jcds_err TYPE TABLE OF JCDS WITH HEADER LINE,
      gs_jcds_err TYPE jcds,
      gt_jcds_err_tot TYPE TABLE OF JCDS WITH HEADER LINE,
      gt_jest TYPE TABLE OF jest,
      gs_jest TYPE jest,
      gt_upload TYPE TABLE OF ty_JCDS WITH HEADER LINE.


DATA: lv_sav_stat TYPE jcds-stat,
      g_objnr          LIKE  jest-objnr,
      g_msg(120)       TYPE c,
      t_tj30t          TYPE tj30t,
      lv_index         TYPE sy-tabix.



CONSTANTS c_obj(2)        TYPE c           VALUE 'IE'.
*.................. Field symbols

*.................. Constants......................................... *
CONSTANTS : c_rec_l(14)     TYPE c        VALUE 'equi_jcds_stat_list'.
*.................. Selection screen.................................. *
SELECTION-SCREEN BEGIN OF BLOCK b01.
SELECT-OPTIONS  s_qmnum  FOR  qmel-qmnum.
SELECT-OPTIONS  s_iwerk   FOR  viqmel-iwerk.
SELECTION-SCREEN END   OF BLOCK b01.


DATA: s_filenm TYPE string.
*.................. Events............................................ *

*.................. Main program...................................... *
START-OF-SELECTION.

  CALL FUNCTION 'OWN_LOGICAL_SYSTEM_GET'
    IMPORTING
      own_logical_system             = p_logsys
    EXCEPTIONS
      own_logical_system_not_defined = 1
      OTHERS                         = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
         WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

SELECT * FROM VIQMEL INTO CORRESPONDING FIELDS OF TABLE gt_viqmel
  WHERE qmnum IN s_qmnum AND iwerk IN s_iwerk.

LOOP AT gt_viqmel.
SELECT * FROM JEST APPENDING CORRESPONDING FIELDS OF TABLE gt_upload
  WHERE objnr EQ gt_viqmel-objnr AND stat = c_I0076 AND INACT = ' '.
ENDLOOP.

LOOP AT gt_upload.
  lv_index = sy-tabix.
  SELECT SINGLE * FROM JEST INTO gs_jest
  WHERE objnr EQ gt_upload-objnr AND stat = c_I0072 AND INACT = ' '.
  IF SY-SUBRC = 0.
    DELETE GT_UPLOAD INDEX lv_index.
  ENDIF.
ENDLOOP.

LOOP AT gt_upload.


 PERFORM reset_status using gt_upload-stat . " inactivate deletion flag

 PERFORM set_status using c_I0072. " set NOCO flag

 PERFORM set_status using gt_upload-stat. " set deletion flag

ENDLOOP.

PERFORM write_results.
*&---------------------------------------------------------------------*
*&      Form  reset_status
*&---------------------------------------------------------------------*
*       Deactivate equipment status
*----------------------------------------------------------------------*
*      -->P_STATUS : Equipment status
*----------------------------------------------------------------------*
FORM reset_status USING p_status.



  REFRESH stat_tab.
  MOVE p_status TO stat_tab-stat.
  MOVE 'X' TO stat_tab-inact.
  APPEND stat_tab.

  CALL FUNCTION 'STATUS_CHANGE_INTERN'
       EXPORTING
          objnr       =  gt_upload-objnr
       TABLES
          status      = stat_tab
       EXCEPTIONS
          object_not_found
          status_inconsistent
          status_not_allowed.
  IF sy-subrc = 0.
    COMMIT WORK AND WAIT.
    g_msg = text-i01.
  ELSE.
    g_msg = text-e01.
  ENDIF.


  REPLACE '&1' WITH p_status INTO g_msg.
  REPLACE '&2' WITH gt_upload-objnr INTO g_msg.
  PERFORM add_message_to_tab USING g_msg ' '.

ENDFORM.                    "reset_status

*&---------------------------------------------------------------------*
*&      Form  set_status
*&---------------------------------------------------------------------*
*       Activate equipment status
*----------------------------------------------------------------------*
*      -->P_STATUS : Equipment status
*----------------------------------------------------------------------*
FORM set_status USING p_status.

  REFRESH stat_tab.
  MOVE p_status TO stat_tab-stat.
  MOVE ' ' TO stat_tab-inact.
  APPEND stat_tab.

  CALL FUNCTION 'STATUS_CHANGE_INTERN'
       EXPORTING
          objnr       =  gt_upload-objnr
       TABLES
          status      = stat_tab
       EXCEPTIONS
          object_not_found
          status_inconsistent
          status_not_allowed.

  IF sy-subrc = 0.
    COMMIT WORK AND WAIT.
    g_msg = text-i02.
  ELSE.
    g_msg = text-e02.
  ENDIF.


  REPLACE '&1' WITH p_status INTO g_msg.
  REPLACE '&2' WITH gt_upload-objnr INTO g_msg.
  PERFORM add_message_to_tab USING g_msg ' '.


ENDFORM.                    "set_status

*&---------------------------------------------------------------------*
*&      Form  add_message_to_tab
*&---------------------------------------------------------------------*
*       Add modification message to log table
*----------------------------------------------------------------------*
*      -->P_MSG : Message
*      -->P_COD : Processing code
*----------------------------------------------------------------------*
FORM add_message_to_tab USING p_msg p_cod.

  i_logtab-msg = p_msg.
  i_logtab-cod = p_cod.
  APPEND i_logtab.
  CLEAR i_logtab.

ENDFORM.                    "add_message_to_tab

*&---------------------------------------------------------------------*
*&      Form  write_results
*&---------------------------------------------------------------------*
*       Modification log
*----------------------------------------------------------------------*
FORM write_results.

  LEAVE TO LIST-PROCESSING.

  LOOP AT i_logtab.
    IF i_logtab-cod = ' '.
      WRITE: / i_logtab-msg.
    ELSE.
      FORMAT COLOR COL_NEGATIVE.
      WRITE: /13 i_logtab-msg.
      FORMAT RESET.
    ENDIF.
  ENDLOOP.

ENDFORM.

*Text symbol text£º
*E01:Reset Status &1 for object &2 failed!
*E02:Set Status &1 for object &2 failed!
*I01:Reset Status &1 for object &2

*I02:Set Status &1 for object &2
*Selection text£º
*S_IWERK:        Plant
*S_QMNUM:        Notification
