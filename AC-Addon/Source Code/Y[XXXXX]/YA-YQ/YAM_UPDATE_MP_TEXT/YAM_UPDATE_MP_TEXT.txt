*----------------------------------------------------------------------*
* PROGRAM ID           : YAM_UPDATE_MP_TEXT                            *
* PROGRAM TITLE        : Update MP's in local language                 *
* AUTHOR               : Anda Wu                                       *
* DATE                 : 29/06/2014                                    *
* DEVELOPMENT ID       : CR3290                                        *
*                                                                      *
* CHANGE REQUEST NUMBER:                                               *
*                                                                      *
************************************************************************
* Program Description:                                                 *
*  The program to update MP's YAM_P025_WARRANTY_MEAS_POINT will not    *
*  allow to update MP's in local language. This is needed for FSE's    *
*  to be able to understand MP's meaning                               *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*
REPORT  yam_update_mp_text NO STANDARD PAGE HEADING
                          LINE-SIZE 165
                          LINE-COUNT 80
                          MESSAGE-ID yse_sales_log.

TYPES:  BEGIN OF ty_equipment,
          equnr     TYPE equi-equnr,
          prdha     TYPE mara-prdha,
          zcolnr    TYPE yam_p025_mp_pgc-zcolnr,
        END OF ty_equipment,

        BEGIN OF ty_mara,
          matnr     TYPE mara-matnr,
          prdha     TYPE mara-prdha,
          zprodh3   TYPE yam_p025_mp_pgc-zprodh3,
        END OF ty_mara,

        BEGIN OF ty_yam_p025_mp_char ,
           zcolnr   TYPE yam_p025_mp_char-zcolnr, " AM: Column number
           zvalue   TYPE yam_p025_mp_char-zvalue, " Position
           atnam    TYPE yam_p025_mp_char-atnam,  " Characteristic Name
           indct    TYPE yam_p025_mp_char-indct,  " Indicator
           atbez    TYPE cabnt-atbez,             " Char. description
           atinn    TYPE ausp-atinn,              " Internal characterist.
        END OF ty_yam_p025_mp_char.

DATA: gv_equnr      TYPE equi-equnr,
      gt_yam_pgc    TYPE STANDARD TABLE OF yam_p025_mp_pgc,
      gt_char       TYPE STANDARD TABLE OF ty_yam_p025_mp_char,
      gt_mara       TYPE STANDARD TABLE OF ty_mara,
      gt_imptt      TYPE STANDARD TABLE OF imptt,
      gt_message    TYPE STANDARD TABLE OF string,
      gt_mp_char    TYPE STANDARD TABLE OF yam_p025_mp_char,
      gt_equi       TYPE STANDARD TABLE OF equi.

CONSTANTS : c_indicator(1) TYPE c VALUE 'X' ,
            c_langu        TYPE sylangu VALUE 'E'.

SELECTION-SCREEN : BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.
SELECT-OPTIONS: s_equnr FOR gv_equnr .           "Equipment Number
PARAMETERS:     p_langu TYPE sylangu   OBLIGATORY DEFAULT c_langu .
SELECTION-SCREEN: END OF BLOCK b1.

************************************************************************
*    Selection Screen Validations                                      *
************************************************************************
AT SELECTION-SCREEN ON s_equnr.
  IF NOT s_equnr[] IS INITIAL .
    SELECT equnr
      INTO gv_equnr
      UP TO 1 ROWS
      FROM equi
      WHERE equnr IN s_equnr .
    ENDSELECT .
    IF sy-subrc NE 0.
      MESSAGE e000 WITH text-003.
    ENDIF.
  ENDIF .

************************************************************************
*       S T A R T - O F - S E L E C T I O N    E V E N T               *
************************************************************************
START-OF-SELECTION.
** Fetch Equipment Numbers based on the Selection Criteria
  PERFORM get_equipment_info .

* Update TEXT
  PERFORM update_mp_text.

END-OF-SELECTION.
* Display the process log
  PERFORM show_log.

*&---------------------------------------------------------------------*
*&      Form  GET_EQUIPMENT_INFO
*&---------------------------------------------------------------------*
*       Fetch Equipment Numbers based on the Selection Criteria
*----------------------------------------------------------------------*
FORM get_equipment_info .

  FIELD-SYMBOLS: <lfs_mara> TYPE ty_mara.
  DATA: ls_mp_char TYPE yam_p025_mp_char,
        ls_char    TYPE ty_yam_p025_mp_char .

* Get the equipment master data
  SELECT *
    FROM equi
    INTO TABLE gt_equi
    WHERE equnr IN s_equnr.

* Get the characteric information
  IF gt_equi IS NOT INITIAL.
    SELECT  matnr
            prdha
     INTO TABLE gt_mara
     FROM mara
     FOR ALL ENTRIES IN gt_equi
     WHERE matnr = gt_equi-matnr.
    IF sy-subrc = 0.
      LOOP AT gt_mara ASSIGNING <lfs_mara>.
        <lfs_mara>-zprodh3 = <lfs_mara>-prdha+4(4).
      ENDLOOP.
    ENDIF.
    CHECK gt_mara IS NOT INITIAL.
*  Get the derive measuring points of PGC
    SELECT  *
      INTO TABLE gt_yam_pgc
      FROM yam_p025_mp_pgc
      FOR ALL ENTRIES IN gt_mara
      WHERE zprodh3 = gt_mara-zprodh3.
  ENDIF.

  CHECK  gt_yam_pgc IS NOT INITIAL.
* Get the Measuring points - characteristics
  SELECT *
    FROM yam_p025_mp_char
    INTO TABLE gt_mp_char
    FOR ALL ENTRIES IN gt_yam_pgc
    WHERE zcolnr = gt_yam_pgc-zcolnr.

* Get the Measuring Point Description
  CHECK gt_mp_char IS NOT INITIAL.
  LOOP AT gt_mp_char INTO ls_mp_char .
    CALL FUNCTION 'CONVERSION_EXIT_ATINN_INPUT'
      EXPORTING
        input  = ls_mp_char-atnam
      IMPORTING
        output = ls_char-atinn.
    ls_char-zcolnr  = ls_mp_char-zcolnr. " AM: Column number
    ls_char-zvalue  = ls_mp_char-zvalue. " Position
    ls_char-atnam   = ls_mp_char-atnam.  " Characteristic Name
    ls_char-indct   = ls_mp_char-indct.  " Indicator
    SELECT  atbez
      FROM cabnt
      INTO ls_char-atbez
      UP TO 1 ROWS
      WHERE atinn = ls_char-atinn
        AND spras EQ p_langu
        AND lkenz NE c_indicator .
    ENDSELECT .
    APPEND ls_char TO gt_char.
  ENDLOOP.

* Get the Measuring Points
  SELECT *
    FROM imptt
    INTO TABLE gt_imptt
    FOR ALL ENTRIES IN gt_equi
   WHERE mpobj = gt_equi-objnr.

ENDFORM.                    " GET_EQUIPMENT_INFO
*&---------------------------------------------------------------------*
*&      Form  UPDATE_MP_TEXT
*&---------------------------------------------------------------------*
*       Update TEXT
*----------------------------------------------------------------------*
FORM update_mp_text .

  DATA: ls_equi     TYPE equi,
        ls_mara     TYPE ty_mara,
        lv_message  TYPE string,
        lt_imptt    TYPE STANDARD TABLE OF imptt,
        ls_yam_pgc  TYPE yam_p025_mp_pgc,
        ls_char     TYPE ty_yam_p025_mp_char,
        ls_imptt    TYPE imptt.

* Change the description
  LOOP AT gt_equi INTO ls_equi.
    REFRESH: lt_imptt.
    READ TABLE gt_mara INTO ls_mara WITH KEY matnr = ls_equi-matnr.
    IF sy-subrc = 0.
      READ TABLE gt_yam_pgc INTO ls_yam_pgc
        WITH KEY zprodh3 = ls_mara-zprodh3.
      IF sy-subrc = 0.
        LOOP AT gt_imptt INTO ls_imptt
          WHERE mpobj = ls_equi-objnr.
          READ TABLE gt_char INTO ls_char
            WITH KEY atinn = ls_imptt-atinn.
          IF sy-subrc = 0.
            ls_imptt-pttxt = ls_char-atbez.
            IF ls_imptt-indct IS NOT INITIAL.
              ls_imptt-aedat = sy-datum.
              ls_imptt-aenam = sy-uname.
            ENDIF.
            APPEND ls_imptt TO lt_imptt.
          ENDIF.
        ENDLOOP.
        IF lt_imptt IS NOT INITIAL.
          MODIFY imptt FROM TABLE lt_imptt.
          IF sy-subrc = 0.
            CLEAR: lv_message.
            CONCATENATE text-010
                        ls_equi-equnr
                   INTO lv_message
                   SEPARATED BY space.
            CONCATENATE lv_message
                        'in'(016)
                        p_langu
                 INTO lv_message
                 SEPARATED BY space.
            APPEND lv_message TO gt_message.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " UPDATE_MP_TEXT
*&---------------------------------------------------------------------*
*&      Form  SHOW_LOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM show_log .

  DATA: lv_message TYPE string.
* Write process log of update
  IF gt_message IS NOT INITIAL.
    WRITE: 'Process log:'(020), /.
    LOOP AT gt_message INTO lv_message .
      WRITE: lv_message, /.
    ENDLOOP.
  ENDIF.

ENDFORM.                    " SHOW_LOG

*Text symbol text£º
*001:Selection
*003:Enter a Valid Equipment Number
*010:Update the MP description of Equipment
*016:in

*020:Process log:
*Selection text£º
*P_LANGU:        Language Key
*S_EQUNR:D       .
