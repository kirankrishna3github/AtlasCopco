*&---------------------------------------------------------------------*
*& Report  ZLME_TEST_GETDETAIL
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  yse_order_set_teco.

PARAMETERS: p_aufnr TYPE aufnr.

DATA: it_methods LIKE bapi_alm_order_method OCCURS 0 WITH HEADER LINE,
      it_header  LIKE bapi_alm_order_headers_i OCCURS 0 WITH HEADER LINE,
      gt_return  TYPE bapiret2_t,
      gs_return  LIKE bapiret2,
      lv_vkorg   TYPE vkorg.

it_methods-refnumber = '000001'.
it_methods-method = 'TECHNICALCOMPLETE'.
it_methods-objectkey = p_aufnr.
it_methods-objecttype = 'HEADER'.
APPEND it_methods.

CLEAR it_methods.
it_methods-method = 'SAVE'.
APPEND it_methods.

it_header-orderid = p_aufnr.
APPEND it_header.

REFRESH gt_return.
CALL FUNCTION 'BAPI_ALM_ORDER_MAINTAIN'
  TABLES
    it_methods = it_methods
    it_header  = it_header
    return     = gt_return.

READ TABLE gt_return INTO gs_return WITH KEY type = 'E'.
IF sy-subrc = 0.
  ROLLBACK WORK.
*  WRITE: / 'Service order ', p_aufnr,
*     ' TECO has NOT been set'.
ELSE.
  COMMIT WORK AND WAIT.
*  WRITE: / 'Service order ', p_aufnr,
*     ' TECO has been set'.

* Put notification to complete ('NOCO')
  CLEAR lv_vkorg.
  SELECT SINGLE vkorg FROM qmel INTO lv_vkorg
  WHERE aufnr = p_aufnr.

  WAIT UP TO 3 SECONDS.

  SUBMIT yam_close_notifs_for_order
    WITH s_aufnr = p_aufnr
    WITH p_vkorg = lv_vkorg
    WITH p_test = ' '
     AND RETURN.
ENDIF.
