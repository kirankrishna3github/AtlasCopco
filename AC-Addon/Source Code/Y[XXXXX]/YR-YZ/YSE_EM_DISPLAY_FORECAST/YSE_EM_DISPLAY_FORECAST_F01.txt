*----------------------------------------------------------------------*
***INCLUDE YSE_EM_EVALUATION_EXCEPT_F01 .
*----------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      FORM  CHECK_AUTHORIZATION
*&---------------------------------------------------------------------*
FORM CHECK_AUTHORIZATION .

*  AUTHORITY-CHECK OBJECT 'M_MATE_WRK'
*           ID 'ACTVT' DUMMY
*           ID 'WERKS' FIELD P_WERKS.
*
*  IF SY-SUBRC = 4.
**   No authorisation to display data
*    MESSAGE ID 'YSE_GENERAL' TYPE 'E' NUMBER '008' WITH P_WERKS.
*  ELSEIF SY-SUBRC <> 0.
**   Error checking authorization
*    MESSAGE ID 'YSE_GENERAL' TYPE 'E' NUMBER '004'.
*  ENDIF.

ENDFORM.                    " CHECK_AUTHORIZATION

*&---------------------------------------------------------------------*
*&      FORM  PREPARE_ALV_600
*&---------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
FORM PREPARE_ALV_600 .

  CLEAR:
    IT_FCMSG,
    IT_FCMSG[].

  SELECT      *
         FROM YSE_EM_FCMSG
         INTO TABLE IT_FCMSG
        WHERE MATNR = P_MATNR
          AND WERKS = P_WERKS.

  IF OBJ_CUST_CONT_600 IS INITIAL.
    IF CL_GUI_ALV_GRID=>OFFLINE( ) IS INITIAL.
      CREATE OBJECT OBJ_CUST_CONT_600
        EXPORTING
           CONTAINER_NAME              = 'CONTAINER_600'.
    ENDIF.

    CREATE OBJECT OBJ_ALV_GRID_600
      EXPORTING
        I_PARENT          = OBJ_CUST_CONT_600.

    PERFORM BUILD_FIELDCATALOG_600.

*   No toolbar for ALV grid
    WA_LAYOUT-NO_TOOLBAR = 'X'.
    WA_LAYOUT-CWIDTH_OPT = 'X'.

    CALL METHOD OBJ_ALV_GRID_600->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        IS_LAYOUT                     = WA_LAYOUT
      CHANGING
        IT_OUTTAB                     = IT_FCMSG[]
        IT_FIELDCATALOG               = IT_FIELDCAT
      EXCEPTIONS
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        OTHERS                        = 4.
  ELSE.

    WA_STABLE-ROW = 'X'.
    WA_STABLE-COL = 'X'.

    CALL METHOD OBJ_ALV_GRID_600->REFRESH_TABLE_DISPLAY
      EXPORTING
        IS_STABLE      = WA_STABLE
        I_SOFT_REFRESH = 'X'.
  ENDIF.

ENDFORM.                    " PREPARE_ALV_600

*&---------------------------------------------------------------------*
*&      FORM  BUILD_FIELDCATALOG_600
*&---------------------------------------------------------------------*
FORM BUILD_FIELDCATALOG_600 .

  FIELD-SYMBOLS:
    <FIELDCAT> TYPE LVC_S_FCAT.

  REFRESH IT_FIELDCAT.

  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
   EXPORTING
*   I_BUFFER_ACTIVE              = 'X'
    I_STRUCTURE_NAME             = 'YSE_EM_FCMSG'
*   I_CLIENT_NEVER_DISPLAY       = 'X'
*   I_BYPASSING_BUFFER           =
    CHANGING
      CT_FIELDCAT                  = IT_FIELDCAT.

  LOOP AT IT_FIELDCAT ASSIGNING <FIELDCAT>.

    CASE <FIELDCAT>-FIELDNAME.
      WHEN  'MANDT' OR 'MATNR' OR 'WERKS' OR 'POSN2'.
        <FIELDCAT>-NO_OUT = 'X'.

    ENDCASE.

  ENDLOOP.

ENDFORM.                    " BUILD_FIELDCATALOG_600

*&---------------------------------------------------------------------*
*&      Form  PREPARE_FLD_500
*&---------------------------------------------------------------------*
FORM PREPARE_FLD_500 .

  FIELD-SYMBOLS:
    <FIELD>.

  DATA:
    LV_FIELDNAME TYPE STRING,
    LV_ROWNR     TYPE NUMC2,
    LV_TOTAL     TYPE I,
    LV_VALUE     TYPE I.

* Clear target structures
  CLEAR:
    YSE_EM_FCHDR,
    IT_FCVAL,
    IT_FCVAL[].

* Get material description
  SV_MATNR = P_MATNR.
  SELECT SINGLE MAKTX INTO SV_MAKTX
         FROM MAKT
        WHERE MATNR EQ P_MATNR
          AND SPRAS EQ 'EN'.

* Get forecast header values
  SELECT SINGLE *
           FROM YSE_EM_FCHDR
          WHERE MATNR EQ P_MATNR
            AND WERKS EQ P_WERKS.

* Get forecast detail values
  SELECT      *
         FROM YSE_EM_FCVAL
         INTO TABLE IT_FCVAL
        WHERE MATNR EQ P_MATNR
          AND WERKS EQ P_WERKS.

* Move forecast header values to screen variables
  SV_GWERT = YSE_EM_FCHDR-GWERT.
* SV_TWERT = YSE_EM_FCHDR-TWERT.
  SV_PRMAD = YSE_EM_FCHDR-PRMAD.
* SV_FSUMM = YSE_EM_FCHDR-FSUMM.

* Move forecast detail values to screen variables
  CLEAR LV_TOTAL.
  LOOP AT IT_FCVAL.

*   There are only 12 output lines, so exit when exceeding that number of lines
    IF SY-TABIX GT 12.
      EXIT.
    ENDIF.

*   Build fieldname of period field to be filled
    LV_ROWNR = SY-TABIX.
    CONCATENATE 'SV_PER' LV_ROWNR INTO LV_FIELDNAME.
    ASSIGN (LV_FIELDNAME) TO <FIELD>.
    IF SY-SUBRC NE 0. EXIT. ENDIF.
    <FIELD> = IT_FCVAL-PERNA.

*   Build fieldname of period field to be filled
    CONCATENATE 'SV_FCV' LV_ROWNR INTO LV_FIELDNAME.
    ASSIGN (LV_FIELDNAME) TO <FIELD>.
    IF SY-SUBRC NE 0. EXIT. ENDIF.
    LV_VALUE = IT_FCVAL-OWERT.

    <FIELD> = LV_VALUE.

*   Update total
    LV_TOTAL = LV_TOTAL + IT_FCVAL-OWERT.

  ENDLOOP.

  SV_FCV_SUM = LV_TOTAL.

ENDFORM.                    " PREPARE_FLD_500
