*&---------------------------------------------------------------------*
*& Report  YRD_TABLE_MT_YSE_ATP_CONFIG
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  YRD_TABLE_MT_YSE_ATP_CONFIG.
*----------------------------------------------------------------------*
*                          VARIABLE                                    *
*----------------------------------------------------------------------*
TYPES: BEGIN OF TY_UPLOAD,
         V_TEXT(250)  TYPE C,            " FILE UPLOAD TEXT
       END OF TY_UPLOAD.
DATA:TY_RECORD TYPE YSE_ATP_CONFIG.
DATA: GT_UPLOAD TYPE TABLE OF TY_UPLOAD.
DATA: GT_ACC_CUST TYPE TABLE OF YSE_ATP_CONFIG.

CONSTANTS: C_FILETYPE(10)   TYPE C VALUE 'ASC',     " FILE TYPE
           C_BLANC          TYPE C VALUE ' ',
           C_TAB  TYPE C VALUE CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.

*----------------------------------------------------------------------*
*                          SELECTION SCREEN VARIABLES                  *
*----------------------------------------------------------------------*

PARAMETERS: P_FILE(1024) TYPE C.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
  PERFORM SELECT_FILE.

START-OF-SELECTION.
*  perform set_bdc_para.
*  perform open_group.

  PERFORM READ_FILE.
  PERFORM UPDATE_ACC_CUST.
*  perform update_delivery_date.


*&---------------------------------------------------------------------*
*&      Form  read_file
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM READ_FILE.
  DATA: LV_FILENAME TYPE STRING,
        LV_STRING TYPE STRING,
        LS_ACC_CUST TYPE YSE_ATP_CONFIG,
        LS_RECORD TYPE YSE_ATP_CONFIG.


  LV_FILENAME = P_FILE.
  CLEAR: GT_UPLOAD[].

  PERFORM GET_FROM_PRES IN PROGRAM YAM_COMMON_ROUTINES
                                    TABLES  GT_UPLOAD
                                    USING   LV_FILENAME
                                            C_FILETYPE
                                            C_BLANC.
  IF GT_UPLOAD IS NOT INITIAL.
    DELETE GT_UPLOAD INDEX 1.
  ENDIF.

  IF GT_UPLOAD IS INITIAL.
    MESSAGE W000(YSE_SALES_LOG) WITH 'No input Data'.
  ENDIF.

  LOOP AT GT_UPLOAD INTO LV_STRING.
    CLEAR: LS_RECORD.
    SPLIT LV_STRING AT C_TAB
    INTO LS_RECORD-MANDT LS_RECORD-VKORG LS_RECORD-VTWEG LS_RECORD-MTPOS LS_RECORD-MATKL LS_RECORD-LIFNR
         LS_RECORD-DISMM LS_RECORD-ZZURGCODE LS_RECORD-SOURCE1 LS_RECORD-SOURCE2
         LS_RECORD-SOURCE3 LS_RECORD-SOURCE4.

    IF LS_RECORD-VKORG IS INITIAL.
      CONTINUE.
    ENDIF.

    MOVE-CORRESPONDING LS_RECORD TO LS_ACC_CUST.
*      into lv_ebeln lv_ebelp ls_record-eeind.
    APPEND LS_ACC_CUST TO GT_ACC_CUST.
  ENDLOOP.
ENDFORM.                    "read_file
*&---------------------------------------------------------------------*
*&      Form  select_file
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM SELECT_FILE .
  DATA: LV_TITLE  TYPE STRING,
          LT_FILE   TYPE FILETABLE,    " Internal table of filenames for dialog
          LS_FILE   TYPE FILE_TABLE,   " Working area for IT_FILE,
          LV_RC     TYPE I.

  LV_TITLE = TEXT-001.
  CLEAR: LT_FILE[], LS_FILE.

  CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG
    EXPORTING
      WINDOW_TITLE            = LV_TITLE
    CHANGING
      FILE_TABLE              = LT_FILE
      RC                      = LV_RC
*     USER_ACTION             =
*     FILE_ENCODING           =
    EXCEPTIONS
      FILE_OPEN_DIALOG_FAILED = 1
      CNTL_ERROR              = 2
      ERROR_NO_GUI            = 3
      NOT_SUPPORTED_BY_GUI    = 4
      OTHERS                  = 5.
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
  IF LV_RC = 1.
    READ TABLE LT_FILE INDEX 1 INTO LS_FILE.
    IF SY-SUBRC EQ 0.
      P_FILE = LS_FILE-FILENAME.
    ENDIF.
  ENDIF.
ENDFORM.                    " select_file
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ACC_CUST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM UPDATE_ACC_CUST .
  DATA: LS_ACC_CUST TYPE YSE_ATP_CONFIG,
        LS_ACC_CUST1 TYPE YSE_ATP_CONFIG.

  LOOP AT GT_ACC_CUST INTO LS_ACC_CUST.
    CHECK LS_ACC_CUST IS NOT INITIAL.
    SELECT SINGLE * INTO LS_ACC_CUST1
             FROM YSE_ATP_CONFIG WHERE  VKORG = LS_ACC_CUST-VKORG
                                    AND VTWEG = LS_ACC_CUST-VTWEG
                                    AND MTPOS = LS_ACC_CUST-MTPOS
                                    AND MATKL = LS_ACC_CUST-MATKL
                                    AND LIFNR = LS_ACC_CUST-LIFNR
                                    AND DISMM = LS_ACC_CUST-DISMM
                                    AND ZZURGCODE = LS_ACC_CUST-ZZURGCODE.

    IF SY-SUBRC = 0. "update
      UPDATE YSE_ATP_CONFIG FROM LS_ACC_CUST.
      WRITE: /1 'UPDATED:', 10 LS_ACC_CUST-VKORG, 21 LS_ACC_CUST-VTWEG, 26 LS_ACC_CUST-MTPOS,  29 LS_ACC_CUST-MATKL.
    ELSE."Insert
      INSERT YSE_ATP_CONFIG FROM LS_ACC_CUST.
      WRITE: /1 'INSERT: ', 10 LS_ACC_CUST-VKORG, 21 LS_ACC_CUST-VTWEG, 26 LS_ACC_CUST-MTPOS,  29 LS_ACC_CUST-MATKL.
    ENDIF.
  ENDLOOP.
ENDFORM.                    " UPDATE_ACC_CUST
