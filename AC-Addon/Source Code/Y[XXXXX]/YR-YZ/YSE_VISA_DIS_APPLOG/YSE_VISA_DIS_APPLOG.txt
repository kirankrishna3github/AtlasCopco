*&---------------------------------------------------------------------*
*& Report  YSE_VISA_DIS_APPLOG
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

report  yse_visa_dis_applog.
*call function 'APPL_LOG_READ_DB'
*SET EXTENDED CHECK OFF.
type-pools: szal, slis.
*INCLUDE:
*  sbal_boolean.
*SET EXTENDED CHECK ON.

tables: edids.
types: begin of ty_app_log,
    docnum    type edids-docnum,
    lognumber type balm-lognumber,
    msgnumber type balm-msgnumber,
    msgty     type balm-msgty,
    msgid     type balm-msgid,
    msgno     type balm-msgno,
    msgv1     type balm-msgv1,
    msgv2     type balm-msgv2,
    msgv3     type balm-msgv3,
    msgv4     type balm-msgv4,
    text(250) type c,
    selected,
  end of ty_app_log.

data: gt_app_log  type table of ty_app_log,
      gs_layout   type slis_layout_alv,
      gt_fieldcat type slis_t_fieldcat_alv.

select-options:
s_docnum for edids-docnum obligatory.

start-of-selection.

  perform get_app_log.

end-of-selection.
  perform display_app_log.

*&---------------------------------------------------------------------*
*&      Form  GET_APP_LOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form get_app_log .
  data: lt_docnum type table of edids-docnum,
        lv_docnum type edids-docnum.

  data: lt_edids_tmp type table of edids,
        lt_edids type table of edids,
        ls_edids_tmp type edids,
        ls_edids type edids.

  data: lt_lognum type table of szal_lognumber,
        ls_lognum type szal_lognumber.

  data: lt_message type table of balm,
        ls_message type balm,
        ls_app_log type ty_app_log.

  select * from edids into table lt_edids_tmp where docnum in s_docnum.

  sort lt_edids_tmp by   docnum ascending countr descending.

  loop at lt_edids_tmp into ls_edids_tmp.
    ls_edids = ls_edids_tmp.
    at new docnum.
      append ls_edids to lt_edids.
    endat.
  endloop.

  loop at lt_edids into ls_edids.
    ls_lognum-item = ls_edids-appl_log.
    append ls_lognum to lt_lognum.
  endloop.

  call function 'APPL_LOG_READ_DB_WITH_LOGNO'
* EXPORTING
*   PUT_INTO_MEMORY          = ' '
* IMPORTING
*   NUMBER_OF_LOGS           =
      tables
        lognumbers               = lt_lognum
*   HEADER_DATA              =
*   HEADER_PARAMETERS        =
   messages                 = lt_message
*   MESSAGE_PARAMETERS       =
*   CONTEXTS                 =
*   T_EXCEPTIONS             =
              .

  loop at lt_message into ls_message.
    move-corresponding ls_message to ls_app_log.
    read table lt_edids into ls_edids
          with key appl_log = ls_message-lognumber.
    ls_app_log-docnum = ls_edids-docnum.
    message id ls_message-msgid type ls_message-msgty number ls_message-msgno
               into ls_app_log-text
               with ls_message-msgv1 ls_message-msgv2 ls_message-msgv3 ls_message-msgv4.

    append ls_app_log to gt_app_log.
  endloop.
endform.                    " GET_APP_LOG
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_APP_LOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form display_app_log .

  perform alv_layout.
  perform alv_fcatlog.
  perform alv_display.

endform.                    " DISPLAY_APP_LOG
*&---------------------------------------------------------------------*
*&      Form  ALV_LAYOUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form alv_layout .

endform.                    " ALV_LAYOUT
*&---------------------------------------------------------------------*
*&      Form  ALV_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form alv_display .
* Show alv
  call function 'REUSE_ALV_GRID_DISPLAY'
    exporting
      i_callback_program = sy-cprog
      is_layout          = gs_layout
      it_fieldcat        = gt_fieldcat
    tables
      t_outtab           = gt_app_log
    exceptions
      program_error      = 1
      others             = 2.
  if sy-subrc <> 0.
    message id sy-msgid type sy-msgty number sy-msgno
            with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  endif.
endform.                    " ALV_DISPLAY
*&---------------------------------------------------------------------*
*&      Form  ALV_FCATLOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form alv_fcatlog .
  data : ls_fcat type slis_fieldcat_alv,
        lv_index type sy-tabix.

*  docnum    type edids-docnum,
  clear: ls_fcat.
  lv_index = lv_index + 1.
  ls_fcat-col_pos = lv_index.
  ls_fcat-fieldname = 'DOCNUM'.
  ls_fcat-seltext_s = 'IDOC Number'.
  ls_fcat-seltext_m = 'IDOC Number'.
  ls_fcat-seltext_l = 'IDOC Number'.
  append ls_fcat to gt_fieldcat.

*    lognumber type balm-lognumber,
  clear: ls_fcat.
  lv_index = lv_index + 1.
  ls_fcat-col_pos = lv_index.
  ls_fcat-fieldname = 'LOGNUMBER'.
  ls_fcat-seltext_s = 'Log ID'.
  ls_fcat-seltext_m = 'Log Number'.
  ls_fcat-seltext_l = 'Log Number'.
  append ls_fcat to gt_fieldcat.

*    msgnumber type balm-msgnumber,
  clear: ls_fcat.
  lv_index = lv_index + 1.
  ls_fcat-col_pos = lv_index.
  ls_fcat-fieldname = 'MSGNUMBER'.
  ls_fcat-seltext_s = 'MsgNO.'.
  ls_fcat-seltext_m = 'MessageNo.'.
  ls_fcat-seltext_l = 'MessageNo.'.
  append ls_fcat to gt_fieldcat.

*    msgty     type balm-msgty,
  clear: ls_fcat.
  lv_index = lv_index + 1.
  ls_fcat-col_pos = lv_index.
  ls_fcat-fieldname = 'MSGTY'.
  ls_fcat-seltext_s = 'MsgType'.
  ls_fcat-seltext_m = 'MessageType'.
  ls_fcat-seltext_l = 'Message type'.
  append ls_fcat to gt_fieldcat.

*    msgid     type balm-msgid,
  clear: ls_fcat.
  lv_index = lv_index + 1.
  ls_fcat-col_pos = lv_index.
  ls_fcat-fieldname = 'MSGID'.
  ls_fcat-seltext_s = 'MsgID'.
  ls_fcat-seltext_m = 'MessageID'.
  ls_fcat-seltext_l = 'Message ID'.
  append ls_fcat to gt_fieldcat.

*    msgno     type balm-msgno,
  clear: ls_fcat.
  lv_index = lv_index + 1.
  ls_fcat-col_pos = lv_index.
  ls_fcat-fieldname = 'MSGNO'.
  ls_fcat-seltext_s = 'MsgNumber'.
  ls_fcat-seltext_m = 'MessageNumber'.
  ls_fcat-seltext_l = 'Message Number'.
  append ls_fcat to gt_fieldcat.

*    msgv1     type balm-msgv1,
  clear: ls_fcat.
  lv_index = lv_index + 1.
  ls_fcat-col_pos = lv_index.
  ls_fcat-fieldname = 'MSGV1'.
  ls_fcat-seltext_s = 'MsgVar1'.
  ls_fcat-seltext_m = 'Message Variable1'.
  ls_fcat-seltext_l = 'Message Variable1'.
  append ls_fcat to gt_fieldcat.

*    msgv2     type balm-msgv2,
  clear: ls_fcat.
  lv_index = lv_index + 1.
  ls_fcat-col_pos = lv_index.
  ls_fcat-fieldname = 'MSGV2'.
  ls_fcat-seltext_s = 'MsgVar2'.
  ls_fcat-seltext_m = 'Message Variable2'.
  ls_fcat-seltext_l = 'Message Variable2'.
  append ls_fcat to gt_fieldcat.

*    msgv3     type balm-msgv3,
  clear: ls_fcat.
  lv_index = lv_index + 1.
  ls_fcat-col_pos = lv_index.
  ls_fcat-fieldname = 'MSGV3'.
  ls_fcat-seltext_s = 'MsgVar3'.
  ls_fcat-seltext_m = 'Message Variable3'.
  ls_fcat-seltext_l = 'Message Variable3'.
  append ls_fcat to gt_fieldcat.

*    msgv4     type balm-msgv4,
  clear: ls_fcat.
  lv_index = lv_index + 1.
  ls_fcat-col_pos = lv_index.
  ls_fcat-fieldname = 'MSGV4'.
  ls_fcat-seltext_s = 'MsgVar4'.
  ls_fcat-seltext_m = 'Message Variable4'.
  ls_fcat-seltext_l = 'Message Variable4'.
  append ls_fcat to gt_fieldcat.

*   text(250) type c,
  clear: ls_fcat.
  lv_index = lv_index + 1.
  ls_fcat-col_pos = lv_index.
  ls_fcat-fieldname = 'TEXT'.
  ls_fcat-seltext_s = 'Message'.
  ls_fcat-seltext_m = 'Message'.
  ls_fcat-seltext_l = 'Message'.
  append ls_fcat to gt_fieldcat.

*    selected,
endform.                    " ALV_FCATLOG

*Selection text£º
*S_DOCNUM:D       .
