*&---------------------------------------------------------------------*
*& Report  YSE_FICO_AGEING_BALANCE_BUS_AR                              *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  yse_fico_ageing_bal_backup1339  MESSAGE-ID yse_fico .

********************************************************************
*Program ID           : YSE_FICO_AGEING_BALANCE_BUS_AR
*Program Title        : Ageing balance by business area
*Author               : Andr¨¦ Blommaert
*Date                 : 06.2.2007

*Change Request Number: CD1K910170-06022007-SE_REP-D129-Ageing balance
*                        by business area
*Description         : The purpose of this program is to show an open
*                      item list per division and to store them into an
*                       external table for BW processing
*==================================================================*
* Copied From         : (Cloned Program)
* Title               : (Program Title)
* Other Related obj   : (Object names)

*==================================================================*
* Change History Log

*------------------------------------------------------------------*
*Mod. no.|  Date    | Name           | Correction Number  | Change
*Reference #  *
*------------------------------------------------------------------*
*MOD-001 |11/05/2009| M.Jacobs | CD1K948170       | NEWGL
*------------------------------------------------------------------*
*MOD-002 |17/06/2009| Uzzawal  | CD1K948779       | CR0874
*                                CD1K948783,CD1K948787,CD1K948789
*                                CD1K948791
*------------------------------------------------------------------*
*MOD-003 |24/06/2009| Uzzawal  | CD1K948900      | CR0874-Extension
*  Duplication in line items display to be corrected.
*------------------------------------------------------------------*
*MOD-004 |26/06/2009| Uzzawal  | CD1K948955     | CR0874-Extension
*------------------------------------------------------------------*
*MOD-005 |27/05/2010| Uzzawal  | CD1K956897     | CR1339
*------------------------------------------------------------------*


INCLUDE yse_fico_ageing_top.
*
*****************************
* SELECTION SCREEN
****************************


SELECTION-SCREEN BEGIN OF BLOCK 1 WITH FRAME TITLE text-001.
" General selection
SELECT-OPTIONS:
s_kunnr FOR kna1-kunnr ,        " Customer number
*{Insert Raskin Kevin
s_ktokd FOR kna1-ktokd,                        "Customer Account Group
*End insert Raskin Kevin}
s_umskz FOR bsid-umskz ,        " Special G/L indicator
s_rstgr FOR bsid-rstgr.                         " Reason Code
* begin of insertion MOD-001
SELECT-OPTIONS: ssegment FOR faglflexa-segment.
* end of insertion MOD-001
PARAMETERS:
p_bukrs LIKE bsid-bukrs OBLIGATORY,   " Company code
*P_gjahr LIKE bsid-gjahr OBLIGATORY,    " Fiscal year
*p_monat LIKE bsid-monat OBLIGATORY.    " Fiscal period
p_keydat LIKE bsid-budat OBLIGATORY.
SELECTION-SCREEN END OF BLOCK 1.

SELECTION-SCREEN BEGIN OF BLOCK 2 WITH FRAME TITLE text-002.
" Further selection
PARAMETER: p_extr AS CHECKBOX.      " Extract for BW
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 01(30) text-003.	" Due date sorted list
SELECTION-SCREEN POSITION POS_LOW.
PARAMETERS: rastbis1(1) DEFAULT '0'  .
PARAMETERS: rastbis2(5) DEFAULT '1-30'.
PARAMETERS: rastbis3(8) DEFAULT '31-60'.
PARAMETERS: rastbis4(8) DEFAULT '61-90'..
PARAMETERS: rastbis5(8) DEFAULT '91-720'.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK 2.



SELECTION-SCREEN BEGIN OF BLOCK 3 WITH FRAME TITLE text-004.
" Delete old data
PARAMETERS: p_del AS CHECKBOX,      " Delete old data
p_date LIKE bsid-budat  .     " Prior to

SELECTION-SCREEN END OF BLOCK 3.

*==========================================
* begin of deletion MOD-001
*SELECTION-SCREEN BEGIN OF BLOCK 4 WITH FRAME TITLE TEXT-008.
*          " Read Allocation Data
*
*PARAMETERS: P_PCA AS CHECKBOX.      " Read allocated data
*SELECT-OPTIONS:
*S_RRCTY FOR GLPCA-RRCTY.        " Record Type
*PARAMETERS:
*P_RVERS LIKE GLPCA-RVERS DEFAULT '0' OBLIGATORY,
*P_KOKRS LIKE GLPCA-KOKRS DEFAULT '1000' OBLIGATORY,
*P_RYEAR LIKE GLPCA-RYEAR.
*
*SELECT-OPTIONS:
*S_POPER FOR GLPCA-POPER,
*S_RPRCTR FOR GLPCA-RPRCTR,
*S_RACCT FOR GLPCA-RACCT.
*
*PARAMETERS:
*P_ACTIV LIKE GLPCA-ACTIV DEFAULT 'PCAD' OBLIGATORY.
*  .
*
*SELECTION-SCREEN END OF BLOCK 4.
* end of deletion MOD-001

*****************************
* AT SELECTION SCREEN
****************************
AT SELECTION-SCREEN.

  PERFORM check_authorization.

  IF NOT p_extr IS INITIAL.
*Issue 2 warnings to start with
*Check transaction F.5D split breakdown has been executed

*    MESSAGE w002(yse_fico).              "MOD-004 29.06.2009

*Data in table YSE_ACCREC_AGING (BW reporing) has been overwritten
    MESSAGE w003(yse_fico).
  ENDIF.

  IF p_del = 'X'.
    IF p_date IS INITIAL.
      MESSAGE e008(yse_fico).
    ENDIF.
  ENDIF.

* begin of deletion MOD-001
*  IF NOT P_PCA IS INITIAL.
**Check some mandatory fields
**Profit center
*    IF S_RPRCTR[] IS INITIAL.
*      MESSAGE E020(YSE_FICO).
*    ENDIF.
*
*    IF P_RYEAR IS INITIAL.
*      MESSAGE E021(YSE_FICO).
*      SET CURSOR FIELD P_RYEAR.
*    ENDIF.
*
*  ENDIF.
* end of deletion MOD-001

*****************************
* START-OF-SELECTION
****************************

START-OF-SELECTION.

* Don't execute when in background
*  IF NOT SY-BATCH IS INITIAL.
*    WRITE TEXT-007.
*    EXIT.
*  ENDIF.

*  PERFORM find_last_day_period  CHANGING P_KEYDAT.

  PERFORM find_period USING p_keydat
                      CHANGING wa_monat
                               wa_gjahr.

  PERFORM find_company_code_currency CHANGING wa_waers.

*{Insert Raskin Kevin
  PERFORM find_customers TABLES it_customers2.
*End insert Raskin Kevin}


  PERFORM find_open_items_at_last_day TABLES it_bsid
                                             it_customers2.


*{Delete Raskin Kevin
*  PERFORM find_customer_names TABLES it_customers
*                                     it_customers2
*                                     it_bsid.
*End delete Raskin Kevin}

*When program F.5D ¡°Calculate Balance Sheet Adjustment¡± has been
*executed the open items of customers split per profit center is stored
*in table BFOD_A.

  PERFORM find_splitted_open_items TABLES it_bsid
                                          it_bfod_a.


  PERFORM adjust_splitted_amounts TABLES it_bfod_a
                                         it_bfod_ab.

  PERFORM adjust_open_items_if_splitted TABLES it_bfod_a
                                               it_bsid
                                               it_bsid2.

  PERFORM get_last_due_dates CHANGING wa_last_2
                                      wa_last_3
                                      wa_last_4
                                      wa_last_5.




  PERFORM calculate_due_ageing TABLES it_bsid2
                                      it_customers2
                                      it_output
                               USING p_keydat
                                     wa_last_2
                                      wa_last_3
                                      wa_last_4
                                      wa_last_5.
*Allocation box
* begin of deletion MOD-001
*  IF P_PCA EQ 'X'.
**  it_output_1[] = it_output[].
**We will add entries to the table
*    PERFORM GET_ALLOCATED TABLES IT_OUTPUT.
*  ENDIF.
* end of deletion MOD-001



******************************
* END-OF-SELECTION
****************************

END-OF-SELECTION.


* 200 FOR OUTPUT ALV
  IF NOT sy-batch IS INITIAL.
*Program has been executed in the background
    PERFORM alv_background.
  ELSE.
*Foreground processing
*P.S. a call screen statement will cause a dump when executing 'in background'
    CALL SCREEN 200.
  ENDIF.



  IF p_extr EQ 'X'.
* refill table for BW upload
    DELETE FROM yse_accrec_aging
*{ Change K Raskin
    WHERE bukrs EQ p_bukrs AND keydate = p_keydat.    "Changed by K Raskin issue 3093, bldat = p_keydat.
*} End change K Raskin
    COMMIT WORK AND WAIT.

    LOOP AT it_output INTO wa_output.

      MOVE-CORRESPONDING wa_output TO it_yse_accrec_aging.
      MOVE wa_monat TO it_yse_accrec_aging-monat.
      MOVE wa_gjahr TO it_yse_accrec_aging-gjahr.
      it_yse_accrec_aging-bukrs = p_bukrs.
*CHANGE CURRENCY TO COMPANY CODE WAERS
      it_yse_accrec_aging-waers = wa_waers.
      it_yse_accrec_aging-keydate = p_keydat.
      COLLECT it_yse_accrec_aging.

    ENDLOOP.

    SORT it_yse_accrec_aging.

    MODIFY yse_accrec_aging FROM TABLE it_yse_accrec_aging.

    COMMIT WORK.


  ENDIF.

  IF p_del = 'X'.

    DELETE FROM yse_accrec_aging
     WHERE bukrs EQ p_bukrs AND keydate < p_date.

    COMMIT WORK AND WAIT.



  ENDIF.

**&---------------------------------------------------------------------
**
**&      Form  find_last_day_period
**&---------------------------------------------------------------------
**
**       text
**----------------------------------------------------------------------
**
**      <--P_P_KEYDAT  text
**----------------------------------------------------------------------
**
*FORM find_last_day_period  CHANGING p_P_KEYDAT.
*
*  DATA: lv_monat(3) TYPE n.
*
** FIND FISCAL YEAR VARIANT
*
*  SELECT SINGLE periv INTO wa_periv
*  FROM t001
*  WHERE bukrs = p_bukrs.
*
*  MOVE p_monat TO lv_monat.
*
*  CALL FUNCTION 'LAST_DAY_IN_PERIOD_GET'
*    EXPORTING
*      i_gjahr              = p_gjahr
**     I_MONMIT             = 00
*      i_periv              = wa_periv
*      i_poper              = lv_monat
*    IMPORTING
*      e_date               = p_P_KEYDAT
*    EXCEPTIONS
*      input_false          = 1
*      t009_notfound        = 2
*      OTHERS               = 4
*            .
*  IF sy-subrc <> 0.
*    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*  ENDIF.
*
*
*ENDFORM.                    " find_last_day_period
*&---------------------------------------------------------------------*
*&      Form  find_open_items_at_last_day
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_BSID  text
*----------------------------------------------------------------------*
FORM find_open_items_at_last_day  TABLES   p_it_bsid STRUCTURE bsid
                                           p_it_customers2 STRUCTURE wa_customers.

  SELECT bukrs gjahr monat kunnr blart belnr
          buzei bldat shkzg dmbtr waers
         zfbdt zbd1t zbd2t zbd3t rebzg rebzt
         INTO CORRESPONDING FIELDS OF TABLE it_bsid
         FROM bsid
         FOR ALL ENTRIES IN p_it_customers2      "Added by Raskin Kevin
         WHERE bukrs = p_bukrs
         AND kunnr = p_it_customers2-kunnr      "Changed by Raskin Kevin
         AND umskz IN s_umskz
         AND rstgr IN s_rstgr
         AND budat <= p_keydat.

* If clearing of an open item has been performed in the new period of an
*item posted into previous periods than this needs to be taken into
*account meaning the item was an open item at the key date.

  SELECT bukrs gjahr monat kunnr blart belnr buzei bldat shkzg dmbtr
         zfbdt zbd1t zbd2t zbd3t rebzg rebzt
         APPENDING CORRESPONDING FIELDS OF TABLE it_bsid
         FROM bsad
         FOR ALL ENTRIES IN p_it_customers2      "Added by Raskin Kevin
         WHERE bukrs = p_bukrs
         AND kunnr = p_it_customers2-kunnr      "Changed by Raskin Kevin
         AND umskz IN s_umskz
         AND rstgr IN s_rstgr
         AND budat <= p_keydat
         AND augdt > p_keydat.

  SORT it_bsid  .

*>>>>>>>>>>> Begin of Insert EXTUVE MOD-002
** begin of insertion MOD-001
*  LOOP AT it_bsid.
*    clear lv_docln.
*    concatenate '000' it_bsid-buzei into lv_docln.
*    SELECT SINGLE segment INTO it_bsid-segment FROM faglflexa
*      WHERE ryear EQ it_bsid-gjahr
*        AND docnr EQ it_bsid-belnr
*        AND rldnr EQ c_rldnr
*        AND rbukrs EQ it_bsid-bukrs
*        AND docln EQ lv_docln.
*    IF sy-subrc = 0.
*      MODIFY it_bsid.
*    ENDIF.
*    IF NOT it_bsid-segment IN ssegment.
*      DELETE it_bsid.
*    ENDIF.
*  ENDLOOP.
** end of insertion MOD-001
*
FIELD-SYMBOLS : <FS-BSID> like IT_BSID.
LOOP AT IT_BSID ASSIGNING <FS-BSID>.
    clear lv_docln.
    concatenate '000' <FS-BSID>-buzei into lv_docln.
    <FS-BSID>-DOCLN = lv_docln.
ENDLOOP.
*
*CHECK NOT IT_BSID[] IS INITIAL.
*SELECT ryear docnr rldnr rbukrs hsl segment buzei bschl
*        into CORRESPONDING FIELDS OF TABLE  it_faglflexa
*            from faglflexa
*              for all entries in it_bsid
*                 where ryear = it_bsid-gjahr
*                   and docnr = it_bsid-belnr
*                   and rldnr = c_rldnr
*                   and rbukrs = it_bsid-bukrs
*                   and bschl = '01'.
*if sy-subrc = 0.
*  sort it_faglflexa by ryear docnr segment.
*endif.
*>>>>>>>>>> Begin of MOD-004
  CHECK NOT IT_BSID[] IS INITIAL.
  SELECT ryear docnr rldnr rbukrs hsl segment buzei bschl
        appending corresponding fields of table it_faglflexa
            from faglflexa
              for all entries in it_bsid
                 where ryear = it_bsid-gjahr
                   and rldnr = c_rldnr
                   and rbukrs = it_bsid-bukrs
                   and belnr = it_bsid-belnr
                   and buzei  = it_bsid-buzei.   "MOD-004
*                   and docln  = it_bsid-docln.  "MOD-004
  if sy-subrc = 0.
  sort it_faglflexa by ryear docnr segment.
  endif.
*>>>>>>>>>> End of MOD-004
*
data : wa_bsid1 like it_bsid,
       v_tabix type sy-tabix.
loop at it_faglflexa into wa_faglflexa.
  clear wa_bsid1.
  read table it_bsid into wa_bsid1 with key bukrs = wa_faglflexa-rbukrs
                                            gjahr = wa_faglflexa-ryear
                                            belnr = wa_faglflexa-docnr
                                            buzei = wa_faglflexa-buzei.
  if sy-subrc = 0.
      if wa_bsid1-dmbtr = wa_faglflexa-hsl.
         wa_bsid1-segment = wa_faglflexa-segment.
       append wa_bsid1 to it_bsid .
         clear wa_bsid1.
      else.
        at end of segment.
        wa_bsid1-segment = wa_faglflexa-segment.
        wa_bsid1-dmbtr   = wa_faglflexa-hsl.
        append wa_bsid1 to it_bsid .
        clear wa_bsid1.
        endat.
      endif.
  endif.
endloop.

delete it_bsid where segment = space.
delete adjacent duplicates from it_bsid comparing all fields. " MOD-004
*>>>>>>>>>>> End of Insert EXTUVE MOD-002


ENDFORM.                    " find_open_items_at_last_day
*&---------------------------------------------------------------------*
*&      Form  FIND_SPLITTED_OPEN_ITEMS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_BSID  text
*      -->P_IT_BFOD_A  text
*----------------------------------------------------------------------*
FORM find_splitted_open_items  TABLES   p_it_bsid STRUCTURE bsid
                                      p_it_bfod_a STRUCTURE bfod_a.

  READ TABLE  p_it_bsid INDEX 1.
  CHECK sy-subrc EQ 0.
  SELECT bukrs belnr buzei auzei gjahr dmbtr shkzg
 INTO CORRESPONDING FIELDS OF  TABLE p_it_bfod_a
 FROM bfod_a
 FOR ALL ENTRIES IN p_it_bsid
 WHERE belnr EQ p_it_bsid-belnr
 AND  buzei EQ p_it_bsid-buzei
 AND gjahr EQ p_it_bsid-gjahr
 AND  bukrs EQ p_bukrs.

  SORT p_it_bfod_a.

ENDFORM.                    " FIND_SPLITTED_OPEN_ITEMS
*&---------------------------------------------------------------------*
*&      Form  ADJUST_SPLITTED_AMOUNTS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_BFOD_A  text
*      -->P_IT_BFOD_AB  text
*----------------------------------------------------------------------*
FORM adjust_splitted_amounts  TABLES   p_it_bfod_a STRUCTURE bfod_a
  p_it_bfod_ab STRUCTURE bfod_ab.

  READ TABLE p_it_bfod_a INDEX 1.
  CHECK sy-subrc EQ 0.

  SELECT bukrs belnr buzei auzei gjahr bdiffx
  INTO CORRESPONDING FIELDS OF TABLE p_it_bfod_ab
  FROM bfod_ab
  FOR ALL ENTRIES IN p_it_bfod_a
  WHERE bukrs EQ p_it_bfod_a-bukrs
  AND belnr EQ p_it_bfod_a-belnr
  AND buzei EQ p_it_bfod_a-buzei
  AND auzei EQ p_it_bfod_a-auzei
  AND gjahr EQ wa_gjahr.


* ADJUST SPLITTED AMOUNTS
  LOOP AT p_it_bfod_a.


    IF  p_it_bfod_a-shkzg = 'H'.
      p_it_bfod_a-dmbtr = p_it_bfod_a-dmbtr * ( -1 ).
    ENDIF.

    READ TABLE p_it_bfod_ab WITH KEY bukrs = p_it_bfod_a-bukrs
                                     belnr = p_it_bfod_a-belnr
                                     gjahr = p_it_bfod_a-gjahr
                                     buzei = p_it_bfod_a-buzei
                                     auzei = p_it_bfod_a-auzei.

    IF sy-subrc EQ 0.

*Added by Christophe Geerts (Quickfix)
*--------------------------------------
      IF  p_it_bfod_a-shkzg = 'H'.
        p_it_bfod_ab-bdiffx = p_it_bfod_ab-bdiffx * ( -1 ).
      ENDIF.
*--------------------------------------

      p_it_bfod_a-dmbtr = p_it_bfod_a-dmbtr + p_it_bfod_ab-bdiffx.

    ENDIF.

    MODIFY p_it_bfod_a.


  ENDLOOP.






ENDFORM.                    " ADJUST_SPLITTED_AMOUNTS
*&---------------------------------------------------------------------*
*&      Form  ADJUST_OPEN_ITEMS_IF_SPLITTED
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_BFOD_A  text
*      -->P_IT_BSID  text
*----------------------------------------------------------------------*
FORM adjust_open_items_if_splitted  TABLES   p_it_bfod_a
                                      STRUCTURE bfod_a
                                             p_it_bsid
                                      STRUCTURE it_bsid
                                             p_it_bsid2
                                      STRUCTURE it_bsid.



  LOOP AT p_it_bsid.

*>>>>> Begin of Changes MOD-004
*    IF  p_it_bsid-shkzg = 'H'.
*      p_it_bsid-dmbtr = p_it_bsid-dmbtr * ( -1 ).
*
*    ENDIF.
*>>>>> End of Changes MOD-004

    READ TABLE p_it_bfod_a  INTO wa_bfod_a
                      WITH KEY bukrs =  p_it_bsid-bukrs
                               belnr =  p_it_bsid-belnr
                               gjahr =  p_it_bsid-gjahr
                               buzei =  p_it_bsid-buzei.

    IF sy-subrc EQ 0.
      MOVE-CORRESPONDING p_it_bsid TO p_it_bsid2.
*      p_it_bsid2-dmbtr = wa_bfod_a-dmbtr.       "MOD-003

      p_it_bsid2-auzei = wa_bfod_a-auzei.
*      SHIFT  wa_bfod_a-prctr LEFT DELETING LEADING '0'.
*      p_it_bsid2-gsber = wa_bfod_a-prctr.
      p_it_bsid2-shkzg = wa_bfod_a-shkzg.

      APPEND p_it_bsid2.
*>>>>>>>>>>> Begin of EXTUVE MOD-003
*      LOOP AT p_it_bfod_a
*      WHERE belnr EQ wa_bfod_a-belnr
*        AND auzei NE wa_bfod_a-auzei
*        AND buzei = wa_bfod_a-buzei
*        AND gjahr = wa_bfod_a-gjahr.
*
*        MOVE-CORRESPONDING p_it_bsid TO p_it_bsid2.
*        p_it_bsid2-dmbtr = p_it_bfod_a-dmbtr.
*        p_it_bsid2-auzei = p_it_bfod_a-auzei.
**        SHIFT p_it_bfod_a-prctr LEFT DELETING LEADING '0'.
**        p_it_bsid2-gsber = p_it_bfod_a-prctr.
*        p_it_bsid2-shkzg = p_it_bfod_a-shkzg.
*
*        APPEND p_it_bsid2.
*
*      ENDLOOP.
*>>>>>>>>>>> End of EXTUVE MOD-003


    ELSE.
      MOVE-CORRESPONDING p_it_bsid TO p_it_bsid2.
      APPEND p_it_bsid2.

    ENDIF.

  ENDLOOP.




ENDFORM.                    " ADJUST_OPEN_ITEMS_IF_SPLITTED
*&---------------------------------------------------------------------*
*&      Form  calculate_due_ageing
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_BSID2  text
*      -->P_P_KEYDAT  text
*----------------------------------------------------------------------*
FORM calculate_due_ageing  TABLES   p_it_bsid2 STRUCTURE  it_bsid2
                                    p_it_customers
                                    STRUCTURE  wa_customers
                                    p_it_output STRUCTURE wa_output
                           USING    p_p_keydat
                                    p_last_2
                                    p_last_3
                                    p_last_4
                                    p_last_5.

  DATA: lv_faede LIKE faede,
  lv_days_overdue TYPE i.



  LOOP AT p_it_bsid2.



    MOVE-CORRESPONDING p_it_bsid2 TO lv_faede.
    lv_faede-koart = 'D'.
    CALL FUNCTION 'DETERMINE_DUE_DATE'
      EXPORTING
        i_faede                          = lv_faede
*     I_GL_FAEDE                       =
      IMPORTING
        e_faede                          = lv_faede
      EXCEPTIONS
       account_type_not_supported       = 1
        OTHERS                           = 2
              .
    IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    p_it_bsid2-netdt = lv_faede-netdt.

    MOVE-CORRESPONDING p_it_bsid2 TO p_it_output.



*   p_it_output-prctr = p_it_bsid2-gsber.

*    IF p_P_KEYDAT <= lv_faede-netdt.


*   ELSE.

    lv_days_overdue = p_p_keydat - p_it_bsid2-netdt.

    IF lv_days_overdue <= 0.
      p_it_output-rast1 = p_it_bsid2-dmbtr.

    ELSEIF lv_days_overdue <= p_last_2.

      p_it_output-rast2 = p_it_bsid2-dmbtr.
    ELSEIF lv_days_overdue <= p_last_3.
      p_it_output-rast3 = p_it_bsid2-dmbtr.
    ELSEIF lv_days_overdue <= p_last_4.
      p_it_output-rast4 = p_it_bsid2-dmbtr.
    ELSEIF lv_days_overdue <= p_last_5.
      p_it_output-rast5 = p_it_bsid2-dmbtr.
    ELSE.
      p_it_output-rast6 = p_it_bsid2-dmbtr.

    ENDIF.



*    ENDIF.

    READ TABLE  p_it_customers WITH KEY kunnr =  p_it_bsid2-kunnr.
    p_it_output-name1 = p_it_customers-name1.
*Put the keydate
    p_it_output-keydate = p_keydat.
    APPEND p_it_output.

    CLEAR p_it_output.



  ENDLOOP.

  SORT p_it_output BY belnr.

*  LOOP AT p_it_output.
*
*    WRITE:/  p_it_output-belnr.
*
*  ENDLOOP.



ENDFORM.                    " calculate_due_ageing
*&---------------------------------------------------------------------*
*&      Form  get_last_due_dates
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_WA_LAST_2  text
*      <--P_WA_LAST_3  text
*      <--P_WA_LAST_4  text
*      <--P_WA_LAST_5  text
*----------------------------------------------------------------------*
FORM get_last_due_dates  CHANGING p_wa_last_2
                                  p_wa_last_3
                                  p_wa_last_4
                                  p_wa_last_5.


  SEARCH rastbis2 FOR '-'.
  MOVE rastbis2+sy-fdpos TO p_wa_last_2.


  SEARCH rastbis3 FOR '-'.
  MOVE rastbis3+sy-fdpos TO p_wa_last_3.


  SEARCH rastbis4 FOR '-'.
  MOVE rastbis4+sy-fdpos TO p_wa_last_4.


  SEARCH rastbis5 FOR '-'.
  MOVE rastbis5+sy-fdpos TO p_wa_last_5.








ENDFORM.                    " get_last_due_dates
*&---------------------------------------------------------------------*
*&      Form  find_customer_names
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_CUSTOMERS  text
*      -->P_IT_CUSTOMERS2  text
*----------------------------------------------------------------------*
FORM find_customer_names  TABLES   p_it_customers STRUCTURE wa_customers
                                  p_it_customers2 STRUCTURE wa_customers
                                  p_it_bsid STRUCTURE it_bsid.

  LOOP AT p_it_bsid.

    p_it_customers-kunnr = p_it_bsid-kunnr.

    APPEND p_it_customers.

  ENDLOOP.

  SORT p_it_customers.

  DELETE ADJACENT DUPLICATES FROM p_it_customers.

  SELECT kunnr name1
  INTO CORRESPONDING FIELDS OF TABLE p_it_customers2
  FROM kna1
  FOR ALL ENTRIES IN p_it_customers
  WHERE kunnr = p_it_customers-kunnr.




ENDFORM.                    " find_customer_names
*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0200 OUTPUT.
  SET PF-STATUS '200'.
  SET TITLEBAR '200'.

ENDMODULE.                 " STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  PREPARE_ALV  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE prepare_alv OUTPUT.

  PERFORM prepare_alv.

ENDMODULE.                 " PREPARE_ALV  OUTPUT
*&---------------------------------------------------------------------*
*&      Form  prepare_alv
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM prepare_alv .

  IF my_container IS INITIAL.
*create the container
    CREATE OBJECT my_container
      EXPORTING
          repid           =  sy-repid
          dynnr           =  sy-dynnr
          lifetime        =  cntl_lifetime_dynpro
*          ratio           =  90.
          extension       =  5000.

*create the ALV control
    CREATE OBJECT my_alv
      EXPORTING
        i_parent = my_container.
*Set parameters regarding layout, etc.
    wa_variant-report = sy-cprog.
    wa_layout-no_toolbar = ' '.
*create the fieldcatalog e.g. which fields to display
    PERFORM create_fieldcat.
*display the data in the ALV control
    my_alv->set_table_for_first_display(
                EXPORTING
                    i_save        =  'A'
                    is_variant    =  wa_variant
                    is_layout     =  wa_layout
                CHANGING
                    it_outtab         =  it_output
                    it_fieldcatalog   =  it_fieldcat ).

**Set thet event handler
**    set handler lcl_event_handler=>on_hotspot_click
**                    for my_alv.

  ELSE.
*If ALV control already exists, refresh data without changing the layout
*-> 'soft'
    my_alv->refresh_table_display(
      EXPORTING
          i_soft_refresh  =  'X' ).
  ENDIF.




ENDFORM.                    " prepare_alv
*&---------------------------------------------------------------------*
*&      Form  create_fieldcat
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_fieldcat .

  DATA: lv_text(30).
*TYPES : BEGIN OF t_output,
*   prctr LIKE bfod_a-prctr,
*   kunnr LIKE bsad-kunnr,
*   name1 LIKE kna1-name1,
*   blart LIKE bsid-blart,
*   belnr LIKE bfod_a-belnr,
*   bldat LIKE bsad-bldat,
*   netdt LIKE bsad-bldat,
*   rast1 LIKE bsid-dmbtr,
*   rast2 LIKE bsid-dmbtr,
*   rast3 LIKE bsid-dmbtr,
*   rast4 LIKE bsid-dmbtr,
*   rast5 LIKE bsid-dmbtr,
*   rast6 LIKE bsid-dmbtr,
*
*
*   END OF t_output.


*  CLEAR: wa_fieldcat.
*  wa_fieldcat-fieldname = 'PRCTR'.
**  WA_FIELDCAT-HOTSPOT = 'X'.
*  wa_fieldcat-outputlen = 10.
*  wa_fieldcat-coltext = text-c01.
**  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
*  wa_fieldcat-fix_column = 'X'.
*  wa_fieldcat-emphasize = 'X'.

*  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'KUNNR'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 10.
  wa_fieldcat-coltext =  text-c02.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.


  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'NAME1'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 20.
  wa_fieldcat-coltext =  text-c03..
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.



  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'BLART'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 2.
  wa_fieldcat-coltext =  text-c04.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.


  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'BELNR'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 10.
  wa_fieldcat-coltext =  text-c05.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.
  .

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'BLDAT'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 10.
  wa_fieldcat-coltext =  text-c06.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.


  .       CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'NETDT'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 10.
  wa_fieldcat-coltext =  text-c07.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.


  .       CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'KEYDATE'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 10.
  wa_fieldcat-coltext =  text-c09.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.


  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'RAST1'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 15.
  wa_fieldcat-coltext =  text-c08.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'RAST2'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 15.

  CONCATENATE text-005 rastbis2 INTO lv_text SEPARATED BY space.
  wa_fieldcat-coltext = lv_text.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.


  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'RAST3'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 15.

  CONCATENATE  text-005 rastbis3 INTO lv_text SEPARATED BY space.
  wa_fieldcat-coltext = lv_text.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.


  APPEND wa_fieldcat TO it_fieldcat.



  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'RAST4'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 15.

  CONCATENATE  text-005 rastbis4 INTO lv_text SEPARATED BY space.
  wa_fieldcat-coltext = lv_text.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.


  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'RAST5'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 15.

  CONCATENATE  text-005 rastbis5 INTO lv_text SEPARATED BY space.
  wa_fieldcat-coltext = lv_text.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.






  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'RAST6'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 15.

  CONCATENATE  text-005 text-006 INTO lv_text SEPARATED BY space.
  wa_fieldcat-coltext = lv_text.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.

* begin of insertion MOD-001
  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'SEGMENT'.
  wa_fieldcat-outputlen = 10.
  wa_fieldcat-coltext =  text-c10.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.
  APPEND wa_fieldcat TO it_fieldcat.
* end of insertion MOD-001

ENDFORM.                    " create_fieldcat
*&---------------------------------------------------------------------*
*&      Module  EXIT_O200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE exit_o200 INPUT.


  CASE ok_code.

    WHEN 'BACK' OR 'CANCEL' OR 'EXIT'.

      LEAVE TO SCREEN 0.

  ENDCASE.




ENDMODULE.                 " EXIT_O200  INPUT
*&---------------------------------------------------------------------*
*&      Form  find_company_code_currency
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      <--P_WA_WAERS  text
*----------------------------------------------------------------------*
FORM find_company_code_currency  CHANGING p_wa_waers.

  SELECT SINGLE waers INTO wa_waers
  FROM t001
  WHERE bukrs EQ p_bukrs.

ENDFORM.                    " find_company_code_currency
*&---------------------------------------------------------------------*
*&      Form  FIND_PERIOD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_KEYDAT  text
*      <--P_WA_PERIOD  text
*      <--P_WA_GJAHR  text
*----------------------------------------------------------------------*
FORM find_period  USING    p_p_keydat
                  CHANGING p_wa_monat
                           p_wa_gjahr.

  SELECT SINGLE periv INTO wa_periv
  FROM t001
  WHERE bukrs = p_bukrs.

  CALL FUNCTION 'G_PERIOD_GET'
    EXPORTING
      company                              = p_bukrs
      date                                 = p_keydat
*   GLOBAL_COMPANY                       = ' '
*   LEDGER                               = ' '
      variant                              = wa_periv
    IMPORTING
*   ANZBP                                =
*   ANZSP                                =
      period                               = wa_period
      year                                 = p_wa_gjahr
*   VARIANT                              =
   EXCEPTIONS
     ledger_not_assigned_to_company       = 1
     period_not_defined                   = 2
     variant_not_defined                  = 3
     OTHERS                               = 4
            .
  IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ELSE.
    p_wa_monat = wa_period.


  ENDIF.





ENDFORM.                    " FIND_PERIOD
*&---------------------------------------------------------------------*
*&      Form  Check_Authorization
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM check_authorization .

  AUTHORITY-CHECK OBJECT 'F_KNA1_BUK'
                      ID 'BUKRS' FIELD p_bukrs
                      ID 'ACTVT' DUMMY.

  IF sy-subrc = 4.
*   No authorisation to display the data
    MESSAGE ID 'YSE_RENTAL' TYPE 'E' NUMBER '040' WITH p_bukrs.
  ELSEIF sy-subrc <> 0.
*   Error checking authorization.
    MESSAGE ID 'YSE_RENTAL' TYPE 'E' NUMBER '046'.
  ENDIF.

ENDFORM.                    " Check_Authorization
*&---------------------------------------------------------------------*
*&      Form  find_customers
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_CUSTOMERS2  text
*----------------------------------------------------------------------*
FORM find_customers  TABLES   p_it_customers2 STRUCTURE wa_customers.


  SELECT kunnr name1
    INTO CORRESPONDING FIELDS OF TABLE p_it_customers2
    FROM kna1
    WHERE kunnr IN s_kunnr
      AND ktokd IN s_ktokd.


ENDFORM.                    " find_customers
*&---------------------------------------------------------------------*
*&      Form  alv_background
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM alv_background .
  wa_variant-report = sy-cprog.
  wa_layout-no_toolbar = ' '.
*create the fieldcatalog e.g. which fields to display
*    PERFORM create_fieldcat.
  PERFORM create_fieldcat_reuse.
*display the data in the ALV control



*    my_alv->set_table_for_first_display(
*                EXPORTING
*                    i_save        =  'A'
*                    is_variant    =  wa_variant
*                    is_layout     =  wa_layout
*                CHANGING
*                    it_outtab         =  it_output
*                    it_fieldcatalog   =  it_fieldcat ).
  w_callback_program    = sy-repid.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
       EXPORTING
*           i_interface_check           = ' '
*           i_bypassing_buffer          =
*           i_buffer_active             = ' '
            i_callback_program          = w_callback_program
*           i_callback_program          = 'YSE_SD_COMMISSION_SALESREP'
*           i_callback_pf_status_set    = ' '
*            i_callback_user_command     = w_callback_subroutine
*           i_callback_top_of_page      = ' '
*           i_callback_html_top_of_page = ' '
*           i_callback_html_end_of_list = ' '
*           i_structure_name            =
*           i_background_id             = ' '
            i_grid_title                = 'Extraction to BW'
*           i_grid_settings             =
*            is_layout                   = gs_layout
            it_fieldcat                 = it_fieldcat_reuse
*           it_excluding                =
*           it_special_groups           =
*            it_sort                     = it_sort
*           it_filter                   =
*           is_sel_hide                 =
            i_default                   = 'X'
            i_save                      = 'A'
            is_variant                  = wa_variant
*           it_events                   =
*           it_event_exit               =
*           is_print                    =
*           is_reprep_id                =
            i_screen_start_column       = 0
            i_screen_start_line         = 0
            i_screen_end_column         = 0
            i_screen_end_line           = 0
*           it_alv_graphics             =
*           it_add_fieldcat             =
*           it_hyperlink                =
*      importing
*           e_exit_caused_by_caller     =
*           es_exit_caused_by_user      =
       TABLES
            t_outtab                    = it_output
       EXCEPTIONS
            program_error               = 1
            OTHERS                      = 2.
  IF sy-subrc NE 0.
*   message id sy-msgid type sy-msgty number sy-msgno
*           with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

ENDFORM.                    " alv_background
*&---------------------------------------------------------------------*
*&      Form  create_fieldcat_reuse
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_fieldcat_reuse .
  DATA: lv_text(30).
*TYPES : BEGIN OF t_output,
*   prctr LIKE bfod_a-prctr,
*   kunnr LIKE bsad-kunnr,
*   name1 LIKE kna1-name1,
*   blart LIKE bsid-blart,
*   belnr LIKE bfod_a-belnr,
*   bldat LIKE bsad-bldat,
*   netdt LIKE bsad-bldat,
*   rast1 LIKE bsid-dmbtr,
*   rast2 LIKE bsid-dmbtr,
*   rast3 LIKE bsid-dmbtr,
*   rast4 LIKE bsid-dmbtr,
*   rast5 LIKE bsid-dmbtr,
*   rast6 LIKE bsid-dmbtr,
*
*
*   END OF t_output.


*  CLEAR: wa_fieldcat.
*  wa_fieldcat-fieldname = 'PRCTR'.
**  WA_FIELDCAT-HOTSPOT = 'X'.
*  wa_fieldcat-outputlen = 10.
*  wa_fieldcat-coltext = text-c01.
**  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
*  wa_fieldcat-fix_column = 'X'.
*  wa_fieldcat-emphasize = 'X'.
*
*  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'KUNNR'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 10.
  wa_fieldcat-coltext =  text-c02.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.


  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'NAME1'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 20.
  wa_fieldcat-coltext =  text-c03..
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.



  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'BLART'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 2.
  wa_fieldcat-coltext =  text-c04.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.


  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'BELNR'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 10.
  wa_fieldcat-coltext =  text-c05.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.
  .

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'BLDAT'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 10.
  wa_fieldcat-coltext =  text-c06.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.

* begin of insertion MOD-001
 CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'SEGMENT'.
  wa_fieldcat-outputlen = 10.
  wa_fieldcat-coltext =  text-c10.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.
  APPEND wa_fieldcat TO it_fieldcat.
* end of insertion MOD-001

  .       CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'NETDT'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 10.
  wa_fieldcat-coltext =  text-c07.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.



  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'RAST1'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 15.
  wa_fieldcat-coltext =  text-c08.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'RAST2'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 15.

  CONCATENATE text-005 rastbis2 INTO lv_text SEPARATED BY space.
  wa_fieldcat-coltext = lv_text.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.


  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'RAST3'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 15.

  CONCATENATE  text-005 rastbis3 INTO lv_text SEPARATED BY space.
  wa_fieldcat-coltext = lv_text.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  MOVE-CORRESPONDING wa_fieldcat TO wa_fieldcat_reuse.
  APPEND wa_fieldcat_reuse TO it_fieldcat_reuse.



  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'RAST4'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 15.

  CONCATENATE  text-005 rastbis4 INTO lv_text SEPARATED BY space.
  wa_fieldcat-coltext = lv_text.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  APPEND wa_fieldcat TO it_fieldcat.


  CLEAR: wa_fieldcat.
  wa_fieldcat-fieldname = 'RAST5'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 15.

  CONCATENATE  text-005 rastbis5 INTO lv_text SEPARATED BY space.
  wa_fieldcat-coltext = lv_text.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  CLEAR wa_fieldcat_reuse.
  MOVE-CORRESPONDING wa_fieldcat TO wa_fieldcat_reuse.
  APPEND wa_fieldcat_reuse TO it_fieldcat_reuse.







  CLEAR: wa_fieldcat.
  wa_fieldcat-fieldname = 'RAST6'.
*  WA_FIELDCAT-HOTSPOT = 'X'.
  wa_fieldcat-outputlen = 15.

  CONCATENATE  text-005 text-006 INTO lv_text SEPARATED BY space.
  wa_fieldcat-coltext = lv_text.
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = 'X'.
  wa_fieldcat-emphasize = 'X'.

  CLEAR wa_fieldcat_reuse.
  MOVE-CORRESPONDING wa_fieldcat TO wa_fieldcat_reuse.
  APPEND wa_fieldcat_reuse TO it_fieldcat_reuse.

ENDFORM.                    " create_fieldcat_reuse
*&---------------------------------------------------------------------*
*&      Form  get_allocated
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_OUTPUT  text
*----------------------------------------------------------------------*
* begin of deletion MOD-001
*FORM GET_ALLOCATED  TABLES   P_IT_OUTPUT STRUCTURE WA_OUTPUT.
*  "Insert correct name for <...>.
*
**Get the allocated data
*  SELECT RPRCTR SPRCTR HSL FROM GLPCA INTO TABLE IT_GLPCA
*                   WHERE rbukrs eq p_bukrs and
*                         RRCTY IN S_RRCTY AND
*                         RVERS EQ P_RVERS AND
*                         KOKRS EQ P_KOKRS AND
*                         RYEAR EQ P_RYEAR AND
*                         POPER IN S_POPER AND
*                         RPRCTR IN S_RPRCTR AND
*                         RACCT IN S_RACCT AND
*                         ACTIV EQ P_ACTIV.
*
*  IT_GLPCA_1[] = IT_GLPCA[].
**Now get totals for both the receiving and sender profit center
*  SORT IT_GLPCA BY RPRCTR.
*  LOOP AT IT_GLPCA.
*    CLEAR WA_GLPCA.
*    WA_GLPCA = IT_GLPCA.
*
*    AT END OF RPRCTR.
*      FREE: IT_RPRCTR, IT_SPRCTR, IT_OUTPUT_COLL.
*      CLEAR WA_STRUC_PERC.
**Sum per Sending profit center
*      LOOP AT IT_GLPCA_1
*                  WHERE RPRCTR EQ WA_GLPCA-RPRCTR.
*        CLEAR IT_RPRCTR.
*        CLEAR LV_PRCTR.
*        WRITE IT_GLPCA_1-RPRCTR TO LV_PRCTR LEFT-JUSTIFIED.
*        SHIFT LV_PRCTR LEFT DELETING LEADING 0.
**Because for numberic there are zeros and when dummy not
*        IT_RPRCTR-RPRCTR = LV_PRCTR(4).
*        IT_RPRCTR-HSL = IT_GLPCA_1-HSL.
*        COLLECT IT_RPRCTR.
**Sum per receiving profit center
*        CLEAR IT_SPRCTR.
*        CLEAR LV_PRCTR.
*        WRITE IT_GLPCA_1-SPRCTR TO LV_PRCTR LEFT-JUSTIFIED.
*        SHIFT LV_PRCTR LEFT DELETING LEADING 0.
**Because for numberic there are zeros and when dummy not
*        IT_SPRCTR-SPRCTR = LV_PRCTR.
*        IT_SPRCTR-HSL = IT_GLPCA_1-HSL.
*        COLLECT IT_SPRCTR.
*      ENDLOOP.
**Now get the percentage that we need to work with
*      CLEAR LV_PRCTR.
*      WRITE IT_GLPCA-RPRCTR TO LV_PRCTR LEFT-JUSTIFIED.
*      SHIFT LV_PRCTR LEFT DELETING LEADING 0.
**Because for numberic there are zeros and when dummy not
*      LOOP AT P_IT_OUTPUT INTO WA_OUTPUT WHERE PRCTR EQ LV_PRCTR(4).
*        IT_OUTPUT_COLL-PRCTR = lv_PRCTR(4).
*        IT_OUTPUT_COLL-RAST1 = WA_OUTPUT-RAST1.
*        IT_OUTPUT_COLL-RAST2 = WA_OUTPUT-RAST2.
*        IT_OUTPUT_COLL-RAST3 = WA_OUTPUT-RAST3.
*        IT_OUTPUT_COLL-RAST4 = WA_OUTPUT-RAST4.
*        IT_OUTPUT_COLL-RAST5 = WA_OUTPUT-RAST5.
*        IT_OUTPUT_COLL-RAST6 = WA_OUTPUT-RAST6.
*        COLLECT IT_OUTPUT_COLL.
*      ENDLOOP.
*      READ TABLE IT_OUTPUT_COLL WITH KEY PRCTR = LV_PRCTR(4).
*      IF SY-SUBRC EQ 0.
**There should only be 1 line
**Calculate the sum of rast 1 tot 6
*        WA_STRUC_PERC-RAST_TOT = IT_OUTPUT_COLL-RAST1 +
*                                IT_OUTPUT_COLL-RAST2 +
*                                IT_OUTPUT_COLL-RAST3 +
*                                IT_OUTPUT_COLL-RAST4 +
*                                IT_OUTPUT_COLL-RAST5 +
*                                IT_OUTPUT_COLL-RAST6.
*      ENDIF.
*      IF NOT WA_STRUC_PERC-RAST_TOT IS INITIAL.
*        WA_STRUC_PERC-RAST1 = IT_OUTPUT_COLL-RAST1 / WA_STRUC_PERC-RAST_TOT * 100.
*        WA_STRUC_PERC-RAST2 = IT_OUTPUT_COLL-RAST2 / WA_STRUC_PERC-RAST_TOT * 100.
*        WA_STRUC_PERC-RAST3 = IT_OUTPUT_COLL-RAST3 / WA_STRUC_PERC-RAST_TOT * 100.
*        WA_STRUC_PERC-RAST4 = IT_OUTPUT_COLL-RAST4 / WA_STRUC_PERC-RAST_TOT * 100.
*        WA_STRUC_PERC-RAST5 = IT_OUTPUT_COLL-RAST5 / WA_STRUC_PERC-RAST_TOT * 100.
*        WA_STRUC_PERC-RAST6 = IT_OUTPUT_COLL-RAST6 / WA_STRUC_PERC-RAST_TOT * 100.
*      ENDIF.
**Add lines to IT_OUTPUT for the sending profit center
*      LOOP AT IT_RPRCTR.
*        CLEAR WA_OUTPUT.
*        CLEAR LV_PRCTR.
*        WRITE IT_RPRCTR-RPRCTR TO LV_PRCTR LEFT-JUSTIFIED.
*        SHIFT LV_PRCTR LEFT DELETING LEADING 0.
**Because for numberic there are zeros and when dummy not
**All the other keys are put in at the end of the program
*        WA_OUTPUT-PRCTR = LV_PRCTR(4).
*        WA_COUNT_BELNR = WA_COUNT_BELNR + 1.
*        CONCATENATE 'AL' WA_COUNT_BELNR INTO WA_OUTPUT-BELNR.
*        WA_OUTPUT-RAST1 = IT_RPRCTR-HSL * WA_STRUC_PERC-RAST1 / 100.
*        WA_OUTPUT-RAST2 = IT_RPRCTR-HSL * WA_STRUC_PERC-RAST2 / 100.
*        WA_OUTPUT-RAST3 = IT_RPRCTR-HSL * WA_STRUC_PERC-RAST3 / 100.
*        WA_OUTPUT-RAST4 = IT_RPRCTR-HSL * WA_STRUC_PERC-RAST4 / 100.
*        WA_OUTPUT-RAST5 = IT_RPRCTR-HSL * WA_STRUC_PERC-RAST5 / 100.
*        WA_OUTPUT-RAST6 = IT_RPRCTR-HSL * WA_STRUC_PERC-RAST6 / 100.
**Put the keydate
*        WA_OUTPUT-KEYDATE = P_KEYDAT.
*        APPEND WA_OUTPUT TO P_IT_OUTPUT.
*      ENDLOOP.
**======================================================
**Add lines to IT_OUTPUT for the receiving profit center
*      LOOP AT IT_SPRCTR.
*        CLEAR WA_OUTPUT.
**All the other keys are put in at the end of the program
*        CLEAR LV_PRCTR.
*        WRITE IT_SPRCTR-SPRCTR TO LV_PRCTR LEFT-JUSTIFIED.
*        SHIFT LV_PRCTR LEFT DELETING LEADING 0.
*        WA_OUTPUT-PRCTR = LV_PRCTR(4).
*        WA_COUNT_BELNR = WA_COUNT_BELNR + 1.
*        CONCATENATE 'AL' WA_COUNT_BELNR INTO WA_OUTPUT-BELNR.
**Reverse the sign of the values of the receiving profit center
*        WA_OUTPUT-RAST1 = - ( IT_SPRCTR-HSL * WA_STRUC_PERC-RAST1 / 100 ).
*        WA_OUTPUT-RAST2 = - ( IT_SPRCTR-HSL * WA_STRUC_PERC-RAST2 / 100 ).
*        WA_OUTPUT-RAST3 = - ( IT_SPRCTR-HSL * WA_STRUC_PERC-RAST3 / 100 ).
*        WA_OUTPUT-RAST4 = - ( IT_SPRCTR-HSL * WA_STRUC_PERC-RAST4 / 100 ).
*        WA_OUTPUT-RAST5 = - ( IT_SPRCTR-HSL * WA_STRUC_PERC-RAST5 / 100 ).
*        WA_OUTPUT-RAST6 = - ( IT_SPRCTR-HSL * WA_STRUC_PERC-RAST6 / 100 ).
**Put the keydate
*        WA_OUTPUT-KEYDATE = P_KEYDAT.
*        APPEND WA_OUTPUT TO P_IT_OUTPUT.
*      ENDLOOP.
**So the lines which we have added here neutralise each other for RAST1 to 6
*
*    ENDAT.
*  ENDLOOP.
*
*ENDFORM.                    " get_allocated

* end of deletion MOD-001
*Text symbol text£º
*001:General selections
*002:Further selections
*003:Overdue time in days
*004:Delete old data
*005:Overdue
*006:> 720
*007:Program cannot be run in background
*008:Read Allocation data
*C01:Profit center
*C02:Customer
*C03:Customer name
*C04:Document type
*C05:Document nr
*C06:Document date
*C07:Due date
*C08:Non due
*C09:Keydate

*C10:Segment
*Selection text£º
*P_ACTIV:D       .
*P_BUKRS:        Company code
*P_DATE:        Prior to
*P_DEL:        Delete old data
*P_EXTR:        Extract for BW
*P_KEYDAT:        Keydate
*P_KOKRS:D       .
*P_PCA:        Read allocated data
*P_RVERS:D       .
*P_RYEAR:D       .
*RASTBIS1:        Overdue time 0
*RASTBIS2:        Overdue time  30
*RASTBIS3:        Overdue time  60
*RASTBIS4:        Overdue time  90
*RASTBIS5:        Overdue time  720
*SSEGMENT:        Segment
*S_KTOKD:        Customer account group
*S_KUNNR:        Customer number
*S_POPER:D       .
*S_RACCT:D       .
*S_RPRCTR:D       .
*S_RRCTY:D       .
*S_RSTGR:D       .
*S_UMSKZ:        Special G/L indicator
