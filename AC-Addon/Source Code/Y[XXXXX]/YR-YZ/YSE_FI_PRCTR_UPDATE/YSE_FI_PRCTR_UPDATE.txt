*&---------------------------------------------------------------------*
* PROGRAM ID           : YSE_FI_PRCTR_UPDATE                           *
* PROGRAM TITLE        :                                               *
* AUTHOR               : Anda Wu                                       *
* DATE                 : 20/10/2016                                    *
* DEVELOPMENT ID       : CD1K989889                                    *
* CHANGE REQUEST NUMBER: CR4052                                        *
* PROGRAM DESCRIPTION  : Profit center company code assignment tool    *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*
REPORT  yse_fi_prctr_update NO STANDARD PAGE HEADING
                             LINE-SIZE 200.
************************************************************************
* TYPE POOLS  DECLARATIONS
************************************************************************
TYPE-POOLS : truxs.

TABLES: cepc ,t001.

TYPES: BEGIN OF ty_profit,
        old_prctr   TYPE prctr,
        new_prctr   TYPE prctr,
       END OF ty_profit,

       BEGIN OF ty_ph,
         prodh_old  TYPE prodh_d,
         prodh_new  TYPE prodh_d,
       END OF ty_ph.

************************************************************************
* TABLES DECLARATIONS
************************************************************************
TABLES : yse_map_prctr,yse_map_gacpgc.

************************************************************************
* VARIABLES DECLARATIONS
************************************************************************
DATA:   gv_tb001    TYPE char10,
        gv_tb004    TYPE char10,
        gv_ucomm    TYPE sy-ucomm,
        gv_total    TYPE char10.
************************************************************************
* CONSTANTS DECLARATIONS
************************************************************************

************************************************************************
* INTERNAL TABLE DECLARATIONS
************************************************************************
DATA: gt_cepc TYPE STANDARD TABLE OF cepc,
      gt_t001 TYPE STANDARD TABLE OF t001,
      gt_cepc_bukrs TYPE STANDARD TABLE OF cepc_bukrs.

************************************************************************
* SELECTION SCREEN
************************************************************************
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.
SELECT-OPTIONS:   s_prctr FOR cepc-prctr,
                  s_datbi FOR cepc-datbi,
                  s_kokrs FOR cepc-kokrs,
                  s_bukrs FOR t001-bukrs.
SELECTION-SCREEN END OF BLOCK b1.

SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE text-002.
PARAMETERS: rb_TICK  RADIOBUTTON GROUP g1
                      DEFAULT 'X' USER-COMMAND fun,
            rb_UTICK  RADIOBUTTON GROUP g1.
SELECTION-SCREEN END OF BLOCK b2.

AT SELECTION-SCREEN OUTPUT.
*  perform frm_screen_set.

AT SELECTION-SCREEN.
  gv_ucomm = sy-ucomm.

************************************************************************
* START-OF-SELECTION
************************************************************************
START-OF-SELECTION.

  DATA: ls_cepc           TYPE cepc,
        ls_cepc_bukrs     TYPE cepc_bukrs,
        LS_RETURN         TYPE BAPIRET2,
        LS_T001           TYPE T001,
        lv_flag           TYPE char1,
        lt_COMPANYCODES   TYPE STANDARD TABLE OF BAPI0015_7,
        lt_COMPANYCODESX  TYPE STANDARD TABLE OF BAPI0015_7X,
        ls_COMPANYCODES   TYPE BAPI0015_7,
        ls_COMPANYCODESX  TYPE BAPI0015_7X.

  SELECT *
    FROM cepc
    into TABLE gt_cepc
    WHERE prctr in s_prctr
      AND datbi in s_datbi
      AND kokrs in s_kokrs.

  SELECT *
    FROM t001
    INTO TABLE gt_t001
    WHERE bukrs in s_bukrs.

  SELECT *
    FROM cepc_bukrs
    INTO TABLE gt_cepc_bukrs
    WHERE bukrs in s_bukrs
      AND prctr in s_prctr.

  LOOP AT  gt_cepc INTO ls_cepc.
    REFRESH: lt_COMPANYCODES, lt_COMPANYCODESX.
    LOOP AT gt_t001 INTO LS_T001.
      CLEAR: ls_COMPANYCODES, ls_COMPANYCODESX.
      READ TABLE gt_cepc_bukrs INTO ls_cepc_bukrs
        WITH KEY prctr = ls_cepc-prctr
                 bukrs = LS_T001-bukrs.
      IF SY-SUBRC = 0.
        IF RB_UTICK IS NOT INITIAL.
          ls_COMPANYCODES-COMP_CODE = LS_T001-bukrs.
          CLEAR ls_COMPANYCODES-ASSIGN_TO_PRCTR.
          APPEND ls_COMPANYCODES TO lt_COMPANYCODES.
          ls_COMPANYCODESX-COMP_CODE = LS_T001-bukrs.
          ls_COMPANYCODESX-ASSIGN_TO_PRCTR = 'X'.
          APPEND ls_COMPANYCODESX TO lt_COMPANYCODESX.
        ENDIF.
      ELSE.
        IF RB_TICK IS NOT INITIAL.
          ls_COMPANYCODES-COMP_CODE = LS_T001-bukrs.
          ls_COMPANYCODES-ASSIGN_TO_PRCTR = 'X'.
          APPEND ls_COMPANYCODES TO lt_COMPANYCODES.
          ls_COMPANYCODESX-COMP_CODE = LS_T001-bukrs.
          ls_COMPANYCODESX-ASSIGN_TO_PRCTR = 'X'.
          APPEND ls_COMPANYCODESX TO lt_COMPANYCODESX.
        ELSE.
          SELECT COUNT(*)
            FROM cepc_bukrs
            WHERE  prctr = ls_cepc-prctr.
          IF sy-subrc <> 0.
            ls_COMPANYCODES-COMP_CODE = LS_T001-bukrs.
            CLEAR ls_COMPANYCODES-ASSIGN_TO_PRCTR.
            APPEND ls_COMPANYCODES TO lt_COMPANYCODES.
            ls_COMPANYCODESX-COMP_CODE = LS_T001-bukrs.
            ls_COMPANYCODESX-ASSIGN_TO_PRCTR = 'X'.
            APPEND ls_COMPANYCODESX TO lt_COMPANYCODESX.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDLOOP.
    IF    lt_COMPANYCODES IS NOT INITIAL
      AND lt_COMPANYCODESX IS NOT INITIAL.
      CALL FUNCTION 'BAPI_PROFITCENTER_CHANGE'
        EXPORTING
          profitcenter          = ls_cepc-prctr
          controllingarea       = ls_cepc-kokrs
          validfrom             = ls_cepc-datab
          validto               = ls_cepc-datbi
*         BASICDATA             =
*         ADDRESS               =
*         COMMUNICATION         =
*         INDICATORS            =
*         TESTRUN               = '  '
*         LANGUAGE              =
*         BASICDATAX            =
*         ADDRESSX              =
*         COMMUNICATIONX        =
*         INDICATORSX           =
       IMPORTING
         RETURN                = LS_RETURN
       TABLES
         COMPANYCODES          =  lt_COMPANYCODES
         COMPANYCODESX         =  lt_COMPANYCODESX
                .
      IF LS_RETURN-TYPE = 'S'.
        CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
          EXPORTING
            WAIT          = 'X'.
      ELSE.
        WRITE: / LS_RETURN-MESSAGE.
        lv_flag = 'X'.
      ENDIF.
    ENDIF.
  ENDLOOP.

  IF lv_flag IS INITIAL.
    MESSAGE S001(00) WITH TEXT-S08.
  ENDIF.

*Text symbol text£º
*001:Selection input
*002:Company assignment tick indicator

*S08:Update successfully!
*Selection text£º
*RB_TICK:        Tick company code
*RB_UTICK:        Untick company code
*S_BUKRS:D       .
*S_DATBI:D       .
*S_KOKRS:D       .
*S_PRCTR:D       .
