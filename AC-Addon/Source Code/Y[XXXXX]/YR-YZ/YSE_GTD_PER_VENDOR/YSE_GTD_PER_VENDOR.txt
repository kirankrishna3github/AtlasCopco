************************************************************************
* Program ID           : YSE_GTD_PER_VENDOR                            *
* Program Title        : Report for GTD Numbers per Vendor             *
* Author               : Lakshmi Reddy                                 *
* Date                 : 28/03/2011                                    *
* Change Request Number: CD1K964014                                    *
* Description          : The report displays GTD numbers per vendor    *
*                        for certain period                            *
*======================================================================*
* Copied From          : N/A                                           *
* Title                : N/A                                           *
* Other Related obj    : N/A                                           *
*======================================================================*
* Change History Log                                                   *
*----------------------------------------------------------------------*
* Mod. no.|Date      |Name        |Correction Number|Change Reference  *
*----------------------------------------------------------------------*
* MOD-001 |28/03/2011|LakshmiReddy|CD1K964014       |CR1875            *
*          Description: Initial Development                            *
*----------------------------------------------------------------------*

REPORT  yse_gtd_per_vendor.

TYPE-POOLS: slis.

*----------------------------------------------------------------------*
*                  T Y P E S  S T R U C T U R E S                      *
*----------------------------------------------------------------------*
TYPES: BEGIN OF ty_mcha,
        werks    TYPE werks_d,
        lifnr    TYPE elifn,
        lwedt    TYPE lwedt,
        cuobj_bm TYPE cuobj_bm,
        objek    TYPE objnum,
       END OF ty_mcha.

TYPES: BEGIN OF ty_ausp,
        objek    TYPE ausp-objek,
        atinn    TYPE ausp-atinn,
        atwrt    TYPE ausp-atwrt,
       END OF ty_ausp.

TYPES: BEGIN OF ty_report,
        lifnr    TYPE elifn,
        atwrt    TYPE ausp-atwrt,
        lwedt    TYPE lwedt,
        werks    TYPE werks_d,
       END OF ty_report.

*----------------------------------------------------------------------*
*                 I N T E R N A L  T A B L E S
*----------------------------------------------------------------------*
DATA: it_mcha        TYPE STANDARD TABLE OF ty_mcha,
      it_ausp        TYPE STANDARD TABLE OF ty_ausp,
      it_report      TYPE STANDARD TABLE OF ty_report,
      i_fieldcatalog TYPE slis_t_fieldcat_alv,
      i_events       TYPE slis_t_event,
      i_header       TYPE slis_t_listheader.

*----------------------------------------------------------------------*
*                 V A R I A B L E S                                    *
*----------------------------------------------------------------------*
DATA: gv_lifnr  TYPE elifn,
      gv_lwedt  TYPE lwedt,
      gv_werks  TYPE werks_d,
      wa_mcha   TYPE ty_mcha,
      wa_ausp   TYPE ty_ausp,
      wa_report TYPE ty_report.

*----------------------------------------------------------------------*
*                 S E L E C T I O N  S C R E E N                       *
*----------------------------------------------------------------------*
SELECTION-SCREEN BEGIN OF BLOCK s1 WITH FRAME TITLE text-001.
SELECT-OPTIONS: s_lifnr FOR gv_lifnr OBLIGATORY,
                s_lwedt FOR gv_lwedt OBLIGATORY,
                s_werks FOR gv_werks.
SELECTION-SCREEN END OF BLOCK s1.

************************************************************************
*                 S T A R T - O F - S E L E C T I O N                  *
************************************************************************
START-OF-SELECTION.

  PERFORM f100_get_data_from_mcha.

  IF NOT it_mcha IS INITIAL.
    PERFORM f200_get_data_from_ausp.
    PERFORM f300_display_report.
  ELSE.
    SKIP.
    WRITE:/ 'No records exist for the selection criteria'(007).
  ENDIF.

*&---------------------------------------------------------------------*
*&      Form  F100_GET_DATA_FROM_MCHA
*&---------------------------------------------------------------------*
*       Get data from table MCHA
*----------------------------------------------------------------------*
FORM f100_get_data_from_mcha .

  REFRESH: it_mcha.
  SELECT werks
         lifnr
         lwedt
         cuobj_bm
  FROM   mcha
  INTO   TABLE it_mcha
  WHERE  werks IN s_werks
  AND    lifnr IN s_lifnr
  AND    lwedt IN s_lwedt.

  LOOP AT it_mcha INTO wa_mcha.
    wa_mcha-objek = wa_mcha-cuobj_bm.
    MODIFY it_mcha
    INDEX sy-tabix
    FROM   wa_mcha
    TRANSPORTING objek.
    CLEAR: wa_mcha.
  ENDLOOP.

ENDFORM.                    " F100_GET_DATA_FROM_MCHA

*&---------------------------------------------------------------------*
*&      Form  F200_GET_DATA_FROM_AUSP
*&---------------------------------------------------------------------*
*       Get data from table AUSP
*----------------------------------------------------------------------*
FORM f200_get_data_from_ausp .

  DATA: lv_atinn TYPE cabn-atinn,
        lv_atnam TYPE cabn-atnam.

  CLEAR: lv_atinn.
  lv_atnam = 'ZRU_GDTNUMBER'.
*Get corresponding Internal characteristic ATINN for Characteristic Name 'ZRU_GDTNUMBER'
*from CABN table
  SELECT SINGLE atinn
  FROM   cabn
  INTO   lv_atinn
  WHERE  atnam EQ lv_atnam.
  IF sy-subrc EQ 0.
    REFRESH: it_ausp.
    IF NOT it_mcha IS INITIAL.
      SELECT objek
             atinn
             atwrt
      FROM   ausp
      INTO   TABLE it_ausp
      FOR    ALL ENTRIES IN it_mcha
      WHERE  objek EQ it_mcha-objek
      AND    atinn EQ lv_atinn.
    ENDIF.
  ENDIF.

ENDFORM.                    " F200_GET_DATA_FROM_AUSP

*&---------------------------------------------------------------------*
*&      Form  F300_DISPLAY_REPORT
*&---------------------------------------------------------------------*
*       Display ALV report
*----------------------------------------------------------------------*
FORM f300_display_report .

  REFRESH: it_report.
  CLEAR: wa_mcha,
         wa_report.
  LOOP AT it_mcha INTO wa_mcha.
    wa_report-lifnr    = wa_mcha-lifnr.
    wa_report-lwedt    = wa_mcha-lwedt.
    wa_report-werks    = wa_mcha-werks.
    CLEAR: wa_ausp.
    READ TABLE it_ausp INTO wa_ausp WITH KEY objek = wa_mcha-objek.
    IF sy-subrc EQ 0.
      wa_report-atwrt = wa_ausp-atwrt.
    ENDIF.
    APPEND wa_report TO it_report.
    CLEAR: wa_mcha,
           wa_report.
  ENDLOOP.

*Delete duplicate records
  SORT it_report BY lifnr
                    lwedt
                    atwrt
                    werks.
  DELETE ADJACENT DUPLICATES FROM it_report COMPARING lifnr
                                                      lwedt
                                                      atwrt
                                                      werks.
  PERFORM f310_build_field_catalog.

  PERFORM f330_display_alv_report.

ENDFORM.                    " F300_DISPLAY_REPORT

*&---------------------------------------------------------------------*
*&      Form  F310_BUILD_FIELD_CATALOG
*&---------------------------------------------------------------------*
*       Build field catalog
*----------------------------------------------------------------------*
FORM f310_build_field_catalog .

  PERFORM f311_field_catalog USING 'LIFNR'
                                   'Vendor'(002).

  PERFORM f311_field_catalog USING 'LWEDT'
                                   'Date of GR'(003).

  PERFORM f311_field_catalog USING 'ATWRT'
                                   'GTD Number'(004).

  PERFORM f311_field_catalog USING 'WERKS'
                                   'Plant'(005).

ENDFORM.                    " F310_BUILD_FIELD_CATALOG

*&---------------------------------------------------------------------*
*&      Form  F311_FIELD_CATALOG
*&---------------------------------------------------------------------*
*       Prepare field catalog with output fields
*----------------------------------------------------------------------*
FORM f311_field_catalog USING p_fname   TYPE any
                              p_seltext TYPE any.

  DATA: wa_fieldcatalog TYPE slis_fieldcat_alv.

*appending parameters of a particular field of a fieldcatalog
  wa_fieldcatalog-tabname   = 'IT_REPORT'.
  wa_fieldcatalog-fieldname = p_fname.
  wa_fieldcatalog-seltext_m = p_seltext.

*appending parameters of a particular field to fieldcatalog
  APPEND wa_fieldcatalog TO i_fieldcatalog.

ENDFORM.                    " f311_field_catalog

*&---------------------------------------------------------------------*
*&      Form  f330_display_alv_report
*&---------------------------------------------------------------------*
*       Display ALV report
*----------------------------------------------------------------------*
FORM f330_display_alv_report .

  DATA: l_repid TYPE sy-repid.

  l_repid = sy-repid.

  SORT it_report BY lifnr
                    lwedt
                    atwrt.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program = l_repid
      it_fieldcat        = i_fieldcatalog
    TABLES
      t_outtab           = it_report
    EXCEPTIONS
      program_error      = 1
      OTHERS             = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

ENDFORM.                    " f330_display_alv_report

*Text symbol text£º
*001:Selection Criteria
*002:Vendor
*003:Date of GR
*004:GTD Number
*005:Plant
*006:Internal Object No

*007:No records exist for the selection criteria
*Selection text£º
*S_LIFNR:        Vendor
*S_LWEDT:        Period
*S_WERKS:        Plant
