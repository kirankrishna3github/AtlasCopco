*&---------------------------------------------------------------------*
*&  Include           YSE_SDMM_INV_SERIAL_DIFF_F01                     *
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  select_equi_data
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_equi_data .

  DATA: lt_v_equi_eqbsiflos TYPE TABLE OF v_equi_eqbsiflos.

  SELECT * FROM  v_equi_eqbs_sml
           INTO CORRESPONDING FIELDS OF TABLE lt_v_equi_eqbsiflos
                  WHERE   matnr    IN s_matnr
                  AND   b_werk     EQ  p_werk
                  AND   b_lager    EQ  p_lager.


* Fill table object_tab
  CLEAR: object_tab[], l_jsto_pre_tab[].
  LOOP AT lt_v_equi_eqbsiflos ASSIGNING <v_equi_eqbsiflos>.
    PERFORM move_eqbs_to_object_tab_l USING <v_equi_eqbsiflos>.
    APPEND  object_tab.
  ENDLOOP.

* Read Status of selected objects
  CALL FUNCTION 'STATUS_PRE_READ'
    TABLES
      jsto_pre_tab = l_jsto_pre_tab.

* Fill extra field in object_tab
  LOOP AT object_tab.
    PERFORM fill_object_tab_late_l.
*    IF g_stasl_flag = yes.
    PERFORM status_proof_f30 USING object_tab-objnr g_answer.
    IF g_answer = no.
      DELETE object_tab. CONTINUE.
    ENDIF.
*    ENDIF.


*--- Statusleiste f¨¹llen ---------------------------------------------*
*    IF g_sttxt_flag = yes AND NOT object_tab-objnr IS INITIAL.
*    IF  NOT object_tab-objnr IS INITIAL.
*      CALL FUNCTION 'STATUS_TEXT_EDIT'
*        EXPORTING
*          objnr            = object_tab-objnr
*          spras            = sy-langu
*          flg_user_stat    = 'X'
*        IMPORTING
*          line             = object_tab-sttxt
*          user_line        = object_tab-ustxt
*        EXCEPTIONS
*          object_not_found = 01.
*      IF sy-subrc IS INITIAL.
*        MODIFY object_tab.
*      ENDIF.
*    ENDIF.
  ENDLOOP .

  LOOP AT object_tab.
    MOVE-CORRESPONDING object_tab TO it_ser_stck.
    MOVE: object_tab-werk  TO  it_ser_stck-werks,
          object_tab-lager TO  it_ser_stck-lgort.
    APPEND it_ser_stck.
  ENDLOOP.

ENDFORM.                    " select_equi_data
*&---------------------------------------------------------------------*
*&      Form  status_proof_f30
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_OBJECT_TAB_OBJNR  text
*      -->P_G_ANSWER  text
*----------------------------------------------------------------------*
FORM status_proof_f30 USING  p_objnr  LIKE jsto-objnr
                             p_answer TYPE char01.

  DATA: BEGIN OF h_status_tab OCCURS 20.
          INCLUDE STRUCTURE jstat.
  DATA: END OF h_status_tab.

  DATA: BEGIN OF h_status_text_tab OCCURS 20,
          txt04 LIKE tj02t-txt04.
  DATA: END OF h_status_text_tab.
  DATA: h_stat_flag.

  IF p_objnr IS INITIAL.
    p_answer = no.
    EXIT.
  ENDIF.

  REFRESH: h_status_tab,
           h_status_text_tab.
  CALL FUNCTION 'STATUS_READ'                               "#EC *
    EXPORTING
      objnr            = p_objnr
      only_active      = 'X'
    TABLES
      status           = h_status_tab
    EXCEPTIONS
      object_not_found = 01.


*--- Texte zur Tabelle besorgen -------------------------------------
  LOOP AT h_status_tab.

    CALL FUNCTION 'STATUS_NUMBER_CONVERSION'
      EXPORTING
        language      = sy-langu
        objnr         = p_objnr
        status_number = h_status_tab-stat
      IMPORTING
        txt04         = h_status_text_tab-txt04
      EXCEPTIONS
        OTHERS        = 01.
    IF sy-subrc = 0.
      APPEND h_status_text_tab.
    ENDIF.
  ENDLOOP.

  p_answer = no.

*--- 1. Status inclusiv ---------------------------------------------
*  IF NOT g_stai1_lines IS INITIAL.
  h_stat_flag = ' '.
  LOOP AT h_status_text_tab.
    CHECK h_status_text_tab-txt04 IN stai1.
    h_stat_flag = 'X'.
    EXIT.
  ENDLOOP.
  IF h_stat_flag = ' '.
    EXIT.
  ENDIF.
*  ENDIF.

*--- 1. Status exclusiv ---------------------------------------------
**  IF NOT g_stae1_lines IS INITIAL.
*    h_stat_flag = ' '.
*    LOOP AT h_status_text_tab.
*      CHECK h_status_text_tab-txt04 IN stae1.
*      h_stat_flag = 'X'.
*      EXIT.
*    ENDLOOP.
*    IF h_stat_flag = 'X'.
*      EXIT.
*    ENDIF.
*  ENDIF.

  p_answer = yes.

ENDFORM.                    "status_proof_f30

*&---------------------------------------------------------------------*
*&      Form  fill_object_tab_late_l
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM fill_object_tab_late_l.


  DATA: BEGIN OF h_vtcom.
          INCLUDE STRUCTURE vtcom.
  DATA: END OF h_vtcom.

  DATA: BEGIN OF h_kupav.
          INCLUDE STRUCTURE kupav.
  DATA: END OF h_kupav.
*--- Puffer zur¨¹cksetzten damit neuester Stand gelesen wird ---------*
*  CALL FUNCTION 'STATUS_BUFFER_REFRESH'.
*--- Statusleiste f¨¹llen ---------------------------------------------*
  IF NOT object_tab-objnr IS INITIAL.
*    IF g_sttxt_flag = yes OR g_sttxt_flag = ok.
    CALL FUNCTION 'STATUS_TEXT_EDIT'
      EXPORTING
        objnr            = object_tab-objnr
        flg_user_stat    = 'X'
        spras            = sy-langu
      IMPORTING
        line             = object_tab-sttxt
        user_line        = object_tab-ustxt
      EXCEPTIONS
        object_not_found = 01.
    IF sy-subrc IS INITIAL.
      MODIFY object_tab.
    ENDIF.
*    ENDIF.
  ENDIF.


  IF NOT object_tab-matnr IS INITIAL.
    CALL FUNCTION 'IREP1_MATERIAL_TEXT_READ'
      EXPORTING
        i_matnr       = object_tab-matnr
      IMPORTING
        e_maktx       = object_tab-maktx
      EXCEPTIONS
        no_text_found = 1
        OTHERS        = 2.
    IF NOT sy-subrc IS INITIAL.
      CLEAR object_tab-maktx.
    ENDIF.
  ENDIF.

  MODIFY object_tab.

ENDFORM.                    "fill_object_tab_late_l

*&---------------------------------------------------------------------*
*&      Form  move_eqbs_to_object_tab_l
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->PS_V_EQUI_EQBSIFLOS  text
*----------------------------------------------------------------------*
FORM move_eqbs_to_object_tab_l
                        USING ps_v_equi_eqbsiflos LIKE v_equi_eqbsiflos.

  MOVE-CORRESPONDING ps_v_equi_eqbsiflos TO object_tab.


*--- Aenderungsdatum/name aus EQUI
  MOVE ps_v_equi_eqbsiflos-aedat   TO object_tab-aedaz.
  MOVE ps_v_equi_eqbsiflos-aenam   TO object_tab-aenaz.

  MOVE ps_v_equi_eqbsiflos-b_werk  TO object_tab-werk.
  MOVE ps_v_equi_eqbsiflos-b_lager TO object_tab-lager.

  WRITE ps_v_equi_eqbsiflos-proid      TO object_tab-proid.
  WRITE ps_v_equi_eqbsiflos-ps_psp_pnr TO object_tab-ps_psp_pnr.

  APPEND ps_v_equi_eqbsiflos-objnr TO l_jsto_pre_tab.

  MOVE ps_v_equi_eqbsiflos-ppsid TO object_tab-ppsid.


ENDFORM.                    "move_eqbs_to_object_tab_l
*&---------------------------------------------------------------------*
*&      Form  display_data
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_data .

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_buffer_active    = ' '
      i_callback_program = sy-repid
      it_fieldcat        = lt_fcat
      it_sort            = it_sort
    TABLES
      t_outtab           = it_mard
    EXCEPTIONS
      program_error      = 1
      OTHERS             = 2.
  IF sy-subrc <> 0.
    MESSAGE ID 'BC' TYPE 'E'
     NUMBER 'E100' WITH text-t09. "#EC
  ENDIF.
  DATA:
    lv_outstruc  TYPE tabname,
    ls_layout    TYPE lvc_s_layo,
    ls_cellcolor TYPE lvc_s_scol.

  lv_outstruc = 'YSD_SERIAL_OUT'.


ENDFORM.                    " display_data
*&---------------------------------------------------------------------*
*&      Form  select_material_data
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_material_data .

  SELECT mard~matnr marc~werks lgort labst maktx
  INTO TABLE it_mard
  FROM  mard
  JOIN  marc  ON mard~matnr EQ marc~matnr AND mard~werks EQ marc~werks
  LEFT JOIN  makt  ON mard~matnr EQ makt~matnr AND makt~spras EQ 'E'
  WHERE mard~matnr IN s_matnr
  AND  marc~werks  EQ p_werk
  AND  lgort  EQ  p_lager
  AND  sernp EQ 'Z001'.

ENDFORM.                    " select_material_data
*&---------------------------------------------------------------------*
*&      Form  fill_rest_it_mard
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM fill_rest_it_mard .
  DATA: l_labst TYPE labst.

  LOOP AT it_mard.
    CLEAR l_labst.
    LOOP AT it_ser_stck
    WHERE matnr = it_mard-matnr
    AND   werks = it_mard-werks
    AND   lgort = it_mard-lgort.
      l_labst = l_labst + 1.
    ENDLOOP.
    it_mard-labst_s = l_labst.
    it_mard-labst_d = it_mard-labst - l_labst.
* set trafic light color
    IF it_mard-labst_d EQ 0.
      it_mard-status = gc_green.
    ELSE.
      it_mard-status = gc_red.
    ENDIF.

    MODIFY it_mard.
  ENDLOOP.

ENDFORM.                    " fill_rest_it_mard

*&---------------------------------------------------------------------*
*&      Form  alv_set_fcat0
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->CT_FCAT    text
*----------------------------------------------------------------------*
FORM alv_set_fcat0 CHANGING ct_fcat TYPE slis_t_fieldcat_alv.

  DATA: fieldcat  TYPE slis_t_fieldcat_alv WITH HEADER LINE.
  DATA: ls_sort TYPE slis_sortinfo_alv.

*  CLEAR it_dd03p.
*  CALL FUNCTION 'DDIF_TABL_GET'
*    EXPORTING
*      name      = 'YSD_REN_ALV_SERIAL_DIFF'
*    TABLES
*      dd03p_tab = it_dd03p.
*
*
*  LOOP AT it_dd03p.
*    CLEAR fieldcat.
*    MOVE-CORRESPONDING it_dd03p TO fieldcat.
*    IF it_dd03p-fieldname EQ 'MATNR'.
*      fieldcat-no_zero = 'X'.
*    ENDIF.
*    APPEND fieldcat TO fieldcat.
*
*  ENDLOOP.
*
*  APPEND LINES OF fieldcat TO ct_fcat.


* Plant
  CLEAR fieldcat.
  fieldcat-fieldname       =  'WERKS'.
  fieldcat-tabname         =  'Plant'(t01).
  fieldcat-seltext_m       =  'Plant'(t01).
  APPEND  fieldcat.

* Storage Location
  CLEAR fieldcat.
  fieldcat-fieldname       =  'LGORT'.
*  fieldcat-tabname         =  'it_mard'.
  fieldcat-seltext_m       =  'Storage Location'(t02).
  APPEND  fieldcat.

* Material
  CLEAR fieldcat.
  fieldcat-fieldname       =  'MATNR'.
*  fieldcat-tabname         =  'it_mard'.
  fieldcat-seltext_m       =  'Material'(t03).
  fieldcat-no_zero         = 'X'.
*  fieldcat-lzero           =  ''.
  APPEND  fieldcat.

* Material Description
  CLEAR fieldcat.
  fieldcat-fieldname       =  'MAKTX'.
*  fieldcat-tabname         =  'it_mard'.
  fieldcat-seltext_m       =  'Material Description'(t07).
  APPEND  fieldcat.

* Quantity Inventory
  CLEAR fieldcat.
  fieldcat-fieldname       =  'LABST'.
*  fieldcat-tabname         =  'it_mard'.
  fieldcat-seltext_m       =  'Inventory'(t04).
  APPEND  fieldcat.

* Quantity Serial Stock
  CLEAR fieldcat.
  fieldcat-fieldname       =  'LABST_S'.
*  fieldcat-tabname         =  'it_mard'.
  fieldcat-seltext_m       =  'Serial Stock'(t05).
  APPEND  fieldcat.

* Difference
  CLEAR fieldcat.
  fieldcat-fieldname       =  'LABST_D'.
*  fieldcat-tabname         =  'it_mard'.
  fieldcat-seltext_m       =  'Difference'(t06).
  APPEND  fieldcat.

** Status
  CLEAR fieldcat.
  fieldcat-fieldname       =  'STATUS'.
  fieldcat-seltext_m       =  'Status'(t08).
  fieldcat-icon            = 'X'.
  APPEND  fieldcat.

  APPEND LINES OF fieldcat TO ct_fcat.

* Sort on Difference
  CLEAR ls_sort.
  ls_sort-fieldname  =  'LABST_D'.
  ls_sort-up       =  'X'.
  APPEND ls_sort TO it_sort.


ENDFORM.                    "alv_set_fcat0
*&---------------------------------------------------------------------*
*&      Form  check_authorization
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM check_authorization .

  AUTHORITY-CHECK OBJECT 'M_MATE_WRK'
           ID 'ACTVT' DUMMY
           ID 'WERKS' FIELD p_werk.

  IF sy-subrc = 4.
*   No authorisation to display data from Sales Organisation p_vkorg
    MESSAGE ID 'YSE_RENTAL' TYPE 'E' NUMBER '043' WITH p_werk.
  ELSEIF sy-subrc <> 0.
*   Error checking authorization.
    MESSAGE ID 'YSE_RENTAL' TYPE 'E' NUMBER '046'.
  ENDIF.

ENDFORM.                    " Check_Authorization
