REPORT  YSE_SL_SCRAP  MESSAGE-ID YSE_SALES_LOG.
*----------------------------------------------------------------------*
* PROGRAM ID           : YSE_ITEMLIST_TO_BE_RETURNED                   *
* PROGRAM TITLE        : List of stocked items to be returned to
*                        Airpower Sevice Center according to the
*                        guideline rules
* AUTHOR               : Andr¨¦ Blommaert
* DATE                 : 26/02/2007                                    *
* DEVELOPMENT ID       : D109 PARTS SCRAP RETURN PROVISION             *
* CHANGE REQUEST NUMBER: CD1K911053                                    *
* Program Description:  ALV list of stock materials  to be returnde to
*                       Airpower Sevice Center according to the
*                       guideline rules
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*
* MOD001  |04/06/2008| UZZAWAL V |   CD1K941024   |  CR122             *
************************************************************************

INCLUDE:
  YSE_CLASS_DEFINITIONS,
  YSE_SL_SCRAP_TOP,
  YSE_SL_SCRAP_SSC,
  YSE_SL_SCRAP_EVT,
  YSE_SL_SCRAP_FRM.

*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
MODULE STATUS_0200 OUTPUT.
  SET PF-STATUS '200'.
  SET TITLEBAR '200'.
ENDMODULE.                 " STATUS_0200  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  PREPARE_ALV  OUTPUT
*&---------------------------------------------------------------------*
MODULE PREPARE_ALV OUTPUT.
  PERFORM PREPARE_ALV.
ENDMODULE.                 " PREPARE_ALV  OUTPUT

*&---------------------------------------------------------------------*
*&      Form  prepare_alv
*&---------------------------------------------------------------------*
FORM PREPARE_ALV .

  IF MY_CONTAINER IS INITIAL.
*create the container
    CREATE OBJECT MY_CONTAINER
      EXPORTING
          REPID           =  SY-REPID
          DYNNR           =  SY-DYNNR
          LIFETIME        =  CNTL_LIFETIME_DYNPRO
*          ratio           =  90.
          EXTENSION       =  5000.

*create the ALV control
    CREATE OBJECT MY_ALV
      EXPORTING
          I_PARENT  =  MY_CONTAINER.
* CREATE THE HANDLER OBJECT
    CREATE OBJECT OBJ_EVENT_HANDLER1.
* SET  HANDLER FOR ALV
    SET HANDLER OBJ_EVENT_HANDLER1->HANDLE_HOTSPOT_CLICK FOR MY_ALV.


*Set parameters regarding layout, etc.
    WA_VARIANT-REPORT = SY-CPROG.
    WA_LAYOUT-NO_TOOLBAR = ' '.
    WA_LAYOUT-CWIDTH_OPT = 'X'.
*create the fieldcatalog e.g. which fields to display
    PERFORM CREATE_FIELDCAT.
*display the data in the ALV control
    MY_ALV->SET_TABLE_FOR_FIRST_DISPLAY(
                EXPORTING
                    I_SAVE        =  'A'
                    IS_VARIANT    =  WA_VARIANT
                    IS_LAYOUT     =  WA_LAYOUT
                CHANGING
                    IT_OUTTAB         =  IT_OUTPUT[]
                    IT_FIELDCATALOG   =  IT_FIELDCAT
                 EXCEPTIONS
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        OTHERS                        = 4 ).

    WRITE:/ 'SUBRC',  SY-SUBRC.

**Set thet event handler
**    set handler lcl_event_handler=>on_hotspot_click
**                    for my_alv.

  ELSE.
*If ALV control already exists, refresh data without changing the layout
*-> 'soft'
    MY_ALV->REFRESH_TABLE_DISPLAY(
      EXPORTING
          I_SOFT_REFRESH  =  'X' ).
  ENDIF.

ENDFORM.                    " prepare_alv

*&---------------------------------------------------------------------*
*&      Form  create_fieldcat
*&---------------------------------------------------------------------*
FORM CREATE_FIELDCAT .

* Fetch the field catalog
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_BUFFER_ACTIVE              = ' '
      I_STRUCTURE_NAME             = 'YSE_SL_SCRAP_OUT'
    CHANGING
      CT_FIELDCAT                  = IT_FIELDCAT.

ENDFORM.                    " create_fieldcat
*&---------------------------------------------------------------------*
*&      Module  EXIT_O200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE EXIT_O200 INPUT.

  MOVE OK_CODE TO SAVE_OK_CODE.
  CLEAR OK_CODE.

  CASE SAVE_OK_CODE.

    WHEN 'BACK' OR 'CANCEL' OR 'EXIT'.

      LEAVE TO SCREEN 0.
  ENDCASE.

ENDMODULE.                 " EXIT_O200  INPUT

*&---------------------------------------------------------------------*
*&      Form  view_material
*&---------------------------------------------------------------------*
FORM VIEW_MATERIAL  USING    P_E_ROW_ID TYPE LVC_S_ROW.

  READ TABLE IT_OUTPUT INTO IT_OUTPUT INDEX P_E_ROW_ID.

  SET PARAMETER ID 'MAT' FIELD IT_OUTPUT-MATNR.
  CALL TRANSACTION 'MM03' AND SKIP FIRST SCREEN.

ENDFORM.                    " view_material

*Text symbol text£º
*001:Selections
*003:ALV
*028:Calculation of allocations
*029:Include Safety Stock in Calculations

*030:Selections
*Selection text£º
*P_EISBE:        Include Safety Stock
*P_VAR:        ALV variant
*P_WERKS:        Plant
*S_MATKL:        Material group
*S_MATNR:        Material
*S_PSTYV:        Item category
