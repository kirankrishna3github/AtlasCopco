*&---------------------------------------------------------------------*
*& Report  YSE_UPLOAD_TRANSFER_PRICES                                  *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  yse_upload_transfer_prices  MESSAGE-ID yse_sales_log .


*----------------------------------------------------------------------*
* PROGRAM ID           : yse_upload_transfer_prices
* PROGRAM TITLE        : Upload transfer prices from text file         *
* AUTHOR               : Andr¨¦ Blommaert                               *
* DATE                 : 13/02/2007                                    *
* DEVELOPMENT ID       : D185-SDMM-Upload of Transfer Price (purchase
*                        info record
*                                                                      *
* CHANGE REQUEST NUMBER: CD1K910502                                    *
*                                                                      *
* Program Description:  Upload program for transfer prices
*                       and update of purchase info records via
*                       batch input-non existing input records are
*                       downloaded to the file set in the selection
*                       screen
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE     | NAME     |CORRECTION NUMBER| CHANGE REFERENCE# *
*----------------------------------------------------------------------*
* MOD001  | 17.06.2008| UZZAWAL |                  | CD1K941370        *
************************************************************************
************************************************************************
*                   T A B L E S                                        *
************************************************************************
************************************************************************
*                   TYPES                                *
************************************************************************
TYPES: BEGIN OF t_input,
   lifnr LIKE eina-lifnr,
   matnr LIKE eina-matnr,
   ekorg LIKE eine-ekorg,
   werks LIKE eine-werks,
   norbm(17),
   netpr(14),
   waers(5),
   peinh(3),
   bprme(3),
    prdat(8),
   END OF t_input.

TYPES: BEGIN OF t_eine,
   lifnr LIKE eina-lifnr,
   matnr LIKE eina-matnr,
   ekorg LIKE eine-ekorg,
   werks LIKE eine-werks,
   netpr LIKE eine-netpr,
   effpr LIKE eine-effpr,
   waers LIKE eine-waers,
   peinh LIKE eine-peinh,
   bprme LIKE eine-bprme,
    prdat LIKE eine-prdat,
   END OF t_eine.

TYPES: BEGIN OF t_nonexist,
   lifnr LIKE eina-lifnr,
   matnr LIKE eina-matnr,
   ekorg LIKE eine-ekorg,
   werks LIKE eine-werks,

   END OF t_nonexist.

************************************************************************
*                   V A R I A B L E S                                  *
************************************************************************
DATA: wa_input TYPE t_input.
DATA: wa_eine TYPE  t_eine.
DATA: wa_non_eine TYPE t_nonexist.
************************************************************************
*                  I N T E R N A L   T A B L E S                       *
************************************************************************
DATA: it_input TYPE TABLE OF t_input WITH HEADER LINE.
DATA: it_existing_inforecs TYPE TABLE OF t_eine WITH HEADER LINE.
DATA: it_non_existing_inforecs TYPE TABLE OF t_nonexist WITH HEADER LINE
.

************************************************************************
*                  FIELD-SYMBOLS                       *
************************************************************************

.
************************************************************************
*       S E L E C T - O P T I O N S / P A R A M E T E R S              *
************************************************************************

SELECTION-SCREEN : BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.


PARAMETERS: p_upfile LIKE rlgrap-filename
        DEFAULT 'c:\temp\transfer_prices.txt' OBLIGATORY.


PARAMETERS: p_downf LIKE rlgrap-filename
        DEFAULT 'c:\temp\non_exist-inforecs.txt' OBLIGATORY.


SELECTION-SCREEN : END OF BLOCK b1.

SELECTION-SCREEN SKIP 2.

INCLUDE bdcrecx1.

***********
*  AT SELECTION SCREEN
*-----------------------------------------------------------------------

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_upfile.
  PERFORM file_lookup USING p_upfile.


************************************************************************
*       S T A R T - O F - S E L E C T I O N                            *
************************************************************************
START-OF-SELECTION.

  PERFORM upload_transfer_prices TABLES it_input
                                 USING p_upfile.

  PERFORM find_existing_purch_inforecs TABLES it_input
                                              it_existing_inforecs.

*  PERFORM update_purch_inforecs TABLES it_input
*                                       it_existing_inforecs .

  PERFORM open_group.
  PERFORM create_batch_input_me12 TABLES it_input
                                       it_existing_inforecs
                                       it_non_existing_inforecs.

  PERFORM download_non_exist_inforecs
         TABLES it_non_existing_inforecs
          USING p_downf.

  PERFORM close_group.



*&---------------------------------------------------------------------*
*&      Form  file_lookup
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_UPFILE  text
*----------------------------------------------------------------------*
FORM file_lookup  USING    p_p_upfile.

  DATA: lv_filesel LIKE ibipparms-path.

  CALL FUNCTION 'F4_FILENAME'
    EXPORTING
      program_name  = syst-repid
      dynpro_number = syst-dynnr
    IMPORTING
      file_name     = lv_filesel
    EXCEPTIONS
      OTHERS        = 1.

  p_p_upfile = lv_filesel.


ENDFORM.                    " file_lookup
*&---------------------------------------------------------------------*
*&      Form  UPLOAD_TRANSFER_PRICES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_INPUT  text
*      -->P_P_UPFILE  text
*----------------------------------------------------------------------*
FORM upload_transfer_prices  TABLES   p_it_input STRUCTURE wa_input
                             USING    p_p_upfile.

  DATA: lv_filename TYPE string.

  MOVE p_p_upfile TO lv_filename.

  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      filename                      = lv_filename
     filetype                      = 'ASC'
      has_field_separator           = 'X'
*     HEADER_LENGTH                 = 0
*     READ_BY_LINE                  = 'X'
*     DAT_MODE                      = ' '
*     CODEPAGE                      = ' '
*     IGNORE_CERR                   = ABAP_TRUE
*     REPLACEMENT                   = '#'
*     CHECK_BOM                     = ' '
*     NO_AUTH_CHECK                 = ' '
*   IMPORTING
*     FILELENGTH                    =
*     HEADER                        =
    TABLES
      data_tab                      =  p_it_input
   EXCEPTIONS
     file_open_error               = 1
     file_read_error               = 2
     no_batch                      = 3
     gui_refuse_filetransfer       = 4
     invalid_type                  = 5
     no_authority                  = 6
     unknown_error                 = 7
     bad_data_format               = 8
     header_not_allowed            = 9
     separator_not_allowed         = 10
     header_too_long               = 11
     unknown_dp_error              = 12
     access_denied                 = 13
     dp_out_of_memory              = 14
     disk_full                     = 15
     dp_timeout                    = 16
     OTHERS                        = 17
            .
  IF sy-subrc <> 0.

* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.




ENDFORM.                    " UPLOAD_TRANSFER_PRICES
*&---------------------------------------------------------------------*
*&      Form  find_existing_purch_inforecs
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_INPUT  text
*      -->P_IT_EXISTING_INFORECS  text
*----------------------------------------------------------------------*
FORM find_existing_purch_inforecs  TABLES p_it_input STRUCTURE wa_input
                              p_it_existing_inforecs STRUCTURE wa_eine.


  READ TABLE p_it_input INDEX 1.

  CHECK sy-subrc EQ 0.

  LOOP AT p_it_input.
    CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
      EXPORTING
        input        = p_it_input-matnr
      IMPORTING
        output       = p_it_input-matnr
      EXCEPTIONS
        length_error = 1
        OTHERS       = 2.

    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT         = P_IT_INPUT-LIFNR
      IMPORTING
        OUTPUT        = P_IT_INPUT-LIFNR.

    MODIFY p_it_input.

  ENDLOOP.






  SELECT a~ekorg a~werks b~lifnr b~matnr
  INTO CORRESPONDING FIELDS OF TABLE p_it_existing_inforecs
  FROM eine AS a
  INNER JOIN eina AS b
  ON a~infnr = b~infnr
  FOR ALL ENTRIES IN  p_it_input
  WHERE a~ekorg EQ p_it_input-ekorg
  AND a~werks EQ p_it_input-werks
  AND b~lifnr EQ p_it_input-lifnr
  AND b~matnr EQ p_it_input-matnr.



ENDFORM.                    " find_existing_purch_inforecs
*&---------------------------------------------------------------------*
*&      Form  update_purch_inforecs
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_INPUT  text
*      -->P_IT_EXISTING_INFORECS  text
*----------------------------------------------------------------------*
FORM update_purch_inforecs  TABLES   p_it_input STRUCTURE wa_input
               p_it_existing_inforecs STRUCTURE wa_eine.





ENDFORM.                    " update_purch_inforecs
*&---------------------------------------------------------------------*
*&      Form  CREATE_BATCH_INPUT_ME12
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_INPUT  text
*      -->P_IT_EXISTING_INFORECS  text
*----------------------------------------------------------------------*
FORM create_batch_input_me12  TABLES  p_it_input STRUCTURE wa_input
               p_it_existing_inforecs STRUCTURE wa_eine
               p_it_non_existing_inforecs STRUCTURE wa_non_eine.






  LOOP AT p_it_input.

    READ TABLE p_it_existing_inforecs WITH KEY lifnr = p_it_input-lifnr
                                               matnr = p_it_input-matnr
                                               ekorg = p_it_input-ekorg
                                               werks = p_it_input-werks.

    IF sy-subrc > 0.

      MOVE-CORRESPONDING p_it_input TO p_it_non_existing_inforecs.
      APPEND p_it_non_existing_inforecs.

    ELSE.

      PERFORM bdc_dynpro      USING 'SAPMM06I' '0100'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'EINA-LIFNR'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '/00'.

      PERFORM bdc_field       USING 'EINA-LIFNR'
                                     p_it_input-lifnr.

      PERFORM bdc_field       USING 'EINA-MATNR'
                                     p_it_existing_inforecs-matnr.



      PERFORM bdc_field     USING 'EINE-EKORG'
                                     p_it_existing_inforecs-ekorg.

      PERFORM bdc_field    USING 'EINE-WERKS'
                                  p_it_existing_inforecs-werks.

      PERFORM bdc_field    USING 'RM06I-NORMB'
                                  'X'.

************

      PERFORM bdc_dynpro      USING 'SAPMM06I' '0101'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'EINA-MAHN1'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=KO'.

************


      PERFORM bdc_dynpro      USING 'SAPLV14A' '0102'.

      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=NEWD'.

************
*>>>>>>>> Start of Change MOD001 >>>>>>>>>>>>>>
      PERFORM bdc_dynpro      USING 'SAPMV13A' '0201'.

      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=SICH'.

      PERFORM bdc_field     USING 'RV13A-DATAB'
                                     p_it_input-prdat.

*      PERFORM bdc_field     USING 'KONP-KSCHL(01)'
*                                    'PB00'.

      PERFORM bdc_field     USING 'KONP-KBETR(01)'
                                    p_it_input-netpr.

      PERFORM bdc_field     USING 'KONP-KONWA(01)'
                                    p_it_input-waers.

      PERFORM bdc_field     USING 'KONP-KPEIN(01)'
                                  p_it_input-peinh.

      PERFORM bdc_field     USING 'KONP-KMEIN(01)'
                              p_it_input-bprme.

*>>>>>>>> End of Change MOD001 >>>>>>>>>>>>>>
      PERFORM bdc_transaction USING 'ME12'.

    ENDIF.

  ENDLOOP.





ENDFORM.                    " CREATE_BATCH_INPUT_ME12
*&---------------------------------------------------------------------*
*&      Form  download_non_exist_inforecs
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_NON_EXISTING_INFORECS  text
*----------------------------------------------------------------------*
FORM download_non_exist_inforecs  TABLES   p_it_non_existing_inforecs
                                    STRUCTURE wa_non_eine
                                    USING downfile.

  READ TABLE  p_it_non_existing_inforecs INDEX 1.

  DATA:lv_filename TYPE string.

  MOVE downfile TO lv_filename.

  CHECK sy-subrc EQ 0.

  CALL FUNCTION 'GUI_DOWNLOAD'
    EXPORTING
*     BIN_FILESIZE                    =
      filename                        = lv_filename
     FILETYPE                        = 'ASC'
*     APPEND                          = ' '
     WRITE_FIELD_SEPARATOR           = 'X'
*     HEADER                          = '00'
*     TRUNC_TRAILING_BLANKS           = ' '
*     WRITE_LF                        = 'X'
*     COL_SELECT                      = ' '
*     COL_SELECT_MASK                 = ' '
*     DAT_MODE                        = ' '
*     CONFIRM_OVERWRITE               = ' '
*     NO_AUTH_CHECK                   = ' '
*     CODEPAGE                        = ' '
*     IGNORE_CERR                     = ABAP_TRUE
*     REPLACEMENT                     = '#'
*     WRITE_BOM                       = ' '
*     TRUNC_TRAILING_BLANKS_EOL       = 'X'
*     WK1_N_FORMAT                    = ' '
*     WK1_N_SIZE                      = ' '
*     WK1_T_FORMAT                    = ' '
*     WK1_T_SIZE                      = ' '
*     WRITE_LF_AFTER_LAST_LINE        = ABAP_TRUE
*   IMPORTING
*     FILELENGTH                      =
    tables
      data_tab                        = p_it_non_existing_inforecs
*     FIELDNAMES                      =
   EXCEPTIONS
     FILE_WRITE_ERROR                = 1
     NO_BATCH                        = 2
     GUI_REFUSE_FILETRANSFER         = 3
     INVALID_TYPE                    = 4
     NO_AUTHORITY                    = 5
     UNKNOWN_ERROR                   = 6
     HEADER_NOT_ALLOWED              = 7
     SEPARATOR_NOT_ALLOWED           = 8
     FILESIZE_NOT_ALLOWED            = 9
     HEADER_TOO_LONG                 = 10
     DP_ERROR_CREATE                 = 11
     DP_ERROR_SEND                   = 12
     DP_ERROR_WRITE                  = 13
     UNKNOWN_DP_ERROR                = 14
     ACCESS_DENIED                   = 15
     DP_OUT_OF_MEMORY                = 16
     DISK_FULL                       = 17
     DP_TIMEOUT                      = 18
     FILE_NOT_FOUND                  = 19
     DATAPROVIDER_EXCEPTION          = 20
     CONTROL_FLUSH_ERROR             = 21
     OTHERS                          = 22
            .
  IF sy-subrc <> 0.
 MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.





ENDFORM.                    " download_non_exist_inforecs

*Text symbol text£º
*001:Selections
*E00:Error opening dataset, return code:
*I01:Session name
*I02:Open session
*I03:Insert transaction
*I04:Close Session
*I05:Return code =
*I06:Error session created
*S01:Session name
*S02:User
*S03:Keep session
*S04:Lock date
*S05:Processing Mode
*S06:Update Mode
*S07:Generate session
*S08:Call transaction
*S09:Error sessn

*S10:Nodata indicator
*Selection text£º
*P_DOWNF:        Downl. file non-exist inforecs
*P_UPFILE:        Upload file
