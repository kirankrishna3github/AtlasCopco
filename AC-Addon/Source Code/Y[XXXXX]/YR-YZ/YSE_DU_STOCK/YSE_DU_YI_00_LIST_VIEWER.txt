*----------------------------------------------------------------------*
*   INCLUDE YSE_DU_YI_00_LIST_VIEWER                                *
*----------------------------------------------------------------------*

*-----------------------------------------------------------------------
* Data declaration and form routines for ABAP Listviewer
*-----------------------------------------------------------------------

*-----------------------------------------------------------------------
* Types
*-----------------------------------------------------------------------
TYPE-POOLS: slis,
            kkblo.


*----------------------------------------------------------------------
* Internal tables
*-----------------------------------------------------------------------
DATA: i_fieldcat    TYPE slis_t_fieldcat_alv WITH HEADER LINE,
      i_fldcat      TYPE slis_t_fieldcat_alv,
      i_excluding   TYPE slis_t_extab,
      i_events      TYPE slis_t_event,
      i_sort        TYPE slis_t_sortinfo_alv,
      i_list_header TYPE kkblo_t_listheader.

DATA: i_bdc     LIKE bdcdata       OCCURS 0 WITH HEADER LINE,
      i_mess    LIKE bdcmsgcoll    OCCURS 0 WITH HEADER LINE,
      i_alv     LIKE yca_alv_list  OCCURS 0 WITH HEADER LINE,
      i_sel_fld LIKE yca_sel_field OCCURS 0 WITH HEADER LINE.


*-----------------------------------------------------------------------
* Structures
*-----------------------------------------------------------------------
DATA: x_keyinfo       TYPE slis_keyinfo_alv,
      x_variant       LIKE disvariant,
      x_events        TYPE slis_alv_event,
      x_layout        TYPE slis_layout_alv,
      x_print         TYPE slis_print_alv,
      x_excluding     TYPE slis_extab,
      x_grid_settings TYPE lvc_s_glay,
      x_sort          TYPE slis_sortinfo_alv,
      x_list_header   TYPE kkblo_listheader.


*-----------------------------------------------------------------------
* Variables
*-----------------------------------------------------------------------
DATA: v_repid      LIKE sy-repid,
      v_topincl    LIKE sy-repid,
      v_command    TYPE slis_formname,
      v_status     TYPE slis_formname,
      v_counter    LIKE sy-cucol,
      v_grid_title TYPE lvc_title,
      v_logo(50),
      v_end_of_listgrid(5).


*-----------------------------------------------------------------------
* Form routines
*-----------------------------------------------------------------------
*&---------------------------------------------------------------------*
*&      Form  initialize_list_data
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
FORM initialize_list_data.

  REFRESH: i_fieldcat,
           i_fldcat,
           i_excluding,
           i_events,
           i_sort,
           i_list_header,
           i_mess,
           i_bdc.


  CLEAR:   i_fieldcat,
           i_fldcat,
           i_excluding,
           i_events,
           i_sort,
           i_list_header,
           i_mess,
           i_bdc,
           x_list_header,
           x_keyinfo,
           x_variant,
           x_events,
           x_layout,
           x_excluding,
           x_print,
           x_sort,
           x_grid_settings,
           v_repid,
           v_command,
           v_status,
           v_counter,
           v_grid_title,
           v_logo,
           v_end_of_listgrid.

  ADD 1 TO v_counter.

ENDFORM.                    " initialize_list_data

*&---------------------------------------------------------------------*
*&      Form  APPEND_FIELDCAT
*&---------------------------------------------------------------------*
*& Text
*&---------------------------------------------------------------------*
FORM append_fieldcat USING    p_fieldname
                              p_tabname
                              p_reffield
                              p_reftab
                              p_hotspot
                              p_color
                              p_lenght
                              p_key.

  i_fieldcat-fieldname     = p_fieldname.
  i_fieldcat-tabname       = p_tabname.
  i_fieldcat-ref_fieldname = p_reffield.
  i_fieldcat-ref_tabname   = p_reftab.
  i_fieldcat-hotspot       = p_hotspot.
  i_fieldcat-emphasize     = p_color.
  i_fieldcat-key           = p_key.
  i_fieldcat-col_pos       = v_counter.

  IF NOT p_lenght IS INITIAL.
    i_fieldcat-outputlen = p_lenght.
  ENDIF.

  APPEND i_fieldcat.

  ADD 1 TO v_counter.

  CLEAR: i_fieldcat.

ENDFORM.                    " APPEND_FIELDCAT

*&---------------------------------------------------------------------*
*&      Form  build_alv_fieldcatalog
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM build_alv_fieldcatalog USING pv_structure LIKE dd02l-tabname.

  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
       EXPORTING
            i_program_name         = v_repid
            i_internal_tabname     = pv_structure
            i_client_never_display = 'X'
            i_inclname             = v_topincl
       CHANGING
            ct_fieldcat            = i_fldcat
       EXCEPTIONS
            inconsistent_interface = 1
            program_error          = 2
            OTHERS                 = 3.

ENDFORM.                    " build_alv_fieldcatalog

*&---------------------------------------------------------------------*
*&      Form  PRINT_LIST
*&---------------------------------------------------------------------*
*& Text
*&---------------------------------------------------------------------*
FORM print_list TABLES pi_outtab
                USING  pv_structure LIKE dd02l-tabname.

* Call SAP list viewer
  CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
       EXPORTING
            i_interface_check        = space
            i_callback_program       = v_repid
            i_callback_pf_status_set = v_status
            i_callback_user_command  = v_command
            i_structure_name         = pv_structure
            is_layout                = x_layout
            it_fieldcat              = i_fldcat
            it_excluding             = i_excluding
            i_save                   = 'A'
            is_variant               = x_variant
            it_events                = i_events
            is_print                 = x_print
       TABLES
            t_outtab                 = pi_outtab
       EXCEPTIONS
            program_error            = 1
            OTHERS                   = 2.

ENDFORM.                    " PRINT_LIST

*&---------------------------------------------------------------------*
*&      Form  PRINT_LIST
*&---------------------------------------------------------------------*
*& Text
*&---------------------------------------------------------------------*
FORM print_grid_list TABLES pi_outtab
                     USING  pv_structure LIKE dd02l-tabname.

* Call SAP list viewer
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
       EXPORTING
            i_interface_check        = space
            i_callback_program       = v_repid
            i_callback_pf_status_set = v_status
            i_callback_user_command  = v_command
            i_structure_name         = pv_structure
            i_grid_title             = v_grid_title
            i_grid_settings          = x_grid_settings
            is_layout                = x_layout
            it_fieldcat              = i_fldcat
            it_excluding             = i_excluding
            it_sort                  = i_sort
            i_save                   = 'A'
            it_events                = i_events
            is_print                 = x_print
       TABLES
            t_outtab                 = pi_outtab
       EXCEPTIONS
            program_error            = 1
            OTHERS                   = 2.

ENDFORM.                    " PRINT_GRID_LIST

*&------------------------º™--------------------------------------------*
*&      Form  PRINT_HIERSEQ_LIST
*&---------------------------------------------------------------------*
*& Text
*&---------------------------------------------------------------------*
FORM print_hierseq_list TABLES pi_header
                               pi_item
                        USING  pv_head_struct LIKE dd02l-tabname
                               pv_item_struct LIKE dd02l-tabname.

* Call SAP list viewer
  CALL FUNCTION 'REUSE_ALV_HIERSEQ_LIST_DISPLAY'
       EXPORTING
            i_interface_check        = space
            i_callback_program       = v_repid
            i_callback_pf_status_set = v_status
            i_callback_user_command  = v_command
            is_layout                = x_layout
            it_fieldcat              = i_fldcat
            it_excluding             = i_excluding
            i_save                   = 'A'
            is_variant               = x_variant
            it_events                = i_events
            i_tabname_header         = pv_head_struct
            i_tabname_item           = pv_item_struct
            is_keyinfo               = x_keyinfo
            is_print                 = x_print
       TABLES
            t_outtab_header          = pi_header
            t_outtab_item            = pi_item
       EXCEPTIONS
            program_error            = 1
            OTHERS                   = 2.

ENDFORM.                    " PRINT_HIERSEQ_LIST

*&---------------------------------------------------------------------*
*&      Form  PRINT_BLOCK_LIST
*&---------------------------------------------------------------------*
*& Text
*&---------------------------------------------------------------------*
FORM print_block_list.

* Call SAP list viewer
  x_print-no_print_listinfos = 'X'.

  CALL FUNCTION 'REUSE_ALV_BLOCK_LIST_DISPLAY'
       EXPORTING
            is_print = x_print.

ENDFORM.                    " PRINT_BLOCK_LISTT

*&---------------------------------------------------------------------*
*&      Form  APPEND_BLOCK_LIST
*&---------------------------------------------------------------------*
*& Text
*&---------------------------------------------------------------------*
FORM append_block_list TABLES pi_outtab
                       USING  pv_structure LIKE dd02l-tabname.

  CALL FUNCTION 'REUSE_ALV_BLOCK_LIST_APPEND'
       EXPORTING
            it_fieldcat                = i_fldcat
            is_layout                  = x_layout
            i_tabname                  = pv_structure
            it_events                  = i_events
            i_text                     = space
       TABLES
            t_outtab                   = pi_outtab
       EXCEPTIONS
            program_error              = 1
            maximum_of_appends_reached = 2
            OTHERS                     = 3.
ENDFORM.                                       " APPEND_BLOCK_LIST


*&---------------------------------------------------------------------*
*&      Form  APPEND_BLOCK_LIST
*&---------------------------------------------------------------------*
*& Text
*&---------------------------------------------------------------------*
FORM append_block_list_hs TABLES pi_header
                                 pi_item
                          USING  pv_head_struct LIKE dd02l-tabname
                                 pv_item_struct LIKE dd02l-tabname.

  CALL FUNCTION 'REUSE_ALV_BLOCK_LIST_HS_APPEND'
       EXPORTING
            is_layout                  = x_layout
            it_fieldcat                = i_fldcat
            is_keyinfo                 = x_keyinfo
            i_header_tabname           = pv_head_struct
            i_item_tabname             = pv_item_struct
            it_events                  = i_events
       TABLES
            t_outtab_header            = pi_header
            t_outtab_item              = pi_item
       EXCEPTIONS
            program_error              = 1
            maximum_of_appends_reached = 2
            OTHERS                     = 3.
  if sy-subrc eq 0.
  endif.


ENDFORM.                                       " APPEND_BLOCK_HS_LIST

*&---------------------------------------------------------------------*
*&      Form  INIT_BLOCK_LIST
*&---------------------------------------------------------------------*
*& Text
*&---------------------------------------------------------------------*
FORM init_block_list.

  CALL FUNCTION 'REUSE_ALV_BLOCK_LIST_INIT'
       EXPORTING
            i_callback_program       = v_repid
            i_callback_user_command  = v_command
            i_callback_pf_status_set = v_status.

ENDFORM.                    " INIT_BLOCK_LISTT

*&---------------------------------------------------------------------*
*&      Form  ALV_COMMENTARY_WRITE
*&---------------------------------------------------------------------*
*& Text
*&---------------------------------------------------------------------*
FORM alv_commentary_write.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
       EXPORTING
            it_list_commentary = i_list_header
            i_logo             = v_logo
            i_end_of_list_grid = v_end_of_listgrid.

ENDFORM.                    " ALV_COMMENTARY_WRITE

*&---------------------------------------------------------------------*
*&      Form  value_request_p_var
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM value_request_p_var CHANGING p_variant TYPE disvariant-variant.

  DATA: ls_variant TYPE disvariant,
        l_exit     TYPE char1.

  ls_variant-report = sy-repid.

  CALL FUNCTION 'REUSE_ALV_VARIANT_F4'
       EXPORTING
            is_variant          = ls_variant
            i_save              = 'A'
*           it_default_fieldcat =
       IMPORTING
            e_exit              = l_exit
            es_variant          = ls_variant
       EXCEPTIONS
            not_found = 2.
  IF sy-subrc = 2.
    MESSAGE ID sy-msgid TYPE 'S' NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ELSE.
    IF l_exit EQ space.
      p_variant = ls_variant-variant.
    ENDIF.
  ENDIF.

ENDFORM.                    " value_request_p_var

*----------------------------------------------------------------------*
*        Start new screen                                              *
*----------------------------------------------------------------------*
FORM bdc_new_screen USING pv_program
                          pv_dynpro.

  CLEAR i_bdc.

  i_bdc-program  = pv_program.
  i_bdc-dynpro   = pv_dynpro.
  i_bdc-dynbegin = 'X'.

  APPEND i_bdc.
ENDFORM.

*----------------------------------------------------------------------*
*        Insert field                                                  *
*----------------------------------------------------------------------*
FORM bdc_new_field USING pv_fnam
                     pv_fval.

  IF NOT pv_fval IS INITIAL.
    CLEAR i_bdc.

    i_bdc-fnam = pv_fnam.
    i_bdc-fval = pv_fval.

    APPEND i_bdc.
  ENDIF.
ENDFORM.

*-----------------------------------------------------------------------
* Extra comment
*-----------------------------------------------------------------------
* Example program list viewer (Transactions: YIOIRN, YERROR, YEOY)
*  DATA: BEGIN OF i_outbound OCCURS 0,
*          docnum   LIKE edidc-docnum,
*          icon(15) TYPE c,
*          color  TYPE slis_t_specialcol_alv,
*        END OF i_outbound.

*  DATA: li_color TYPE slis_t_specialcol_alv WITH HEADER LINE.

*  set pf-status 'NEW_STANDARD'."= Copy from standard list viewer status

*  CASE i_outbound-icon.
*    WHEN '1'.                                 "YELLOW
*      i_outbound-icon = '@09@'.
*    WHEN '2'.                                 "GREEN
*      i_outbound-icon = '@08@'.
*    WHEN '3'.                                 "RED
*      i_outbound-icon = '@0A@'.
*
*      li_color-fieldname = 'DOCNUM'.
*      li_color-color-col = '6'.
*      li_color-color-int = '1'.
*      li_color-color-inv = '0'.
*      li_color-nokeycol  = 'X'.
*
*      APPEND li_color.
*
*      INSERT LINES OF li_color INTO TABLE i_outbound-color.
*  ENDCASE.

*  APPEND i_outbound

*  PERFORM initialize_list_tables.

*  i_fieldcat-icon         = 'X'.
*  i_fieldcat-input        = 'X'.
*  i_fieldcat-seltext_s    = 'Short field description'.
*  i_fieldcat-seltext_m    = 'Medium field description'.
*  i_fieldcat-seltext_l    = 'Long field description'.
*  i_fieldcat-reptext_ddic = 'Field description'.
*  i_fieldcat-no_out       = 'X'.

*  PERFORM append_fieldcat USING 'ICON'         "Field name
*                                'I_OUTBOUND'   "Table name
*                                'ICON'         "Reference field
*                                'I_OUTBOUND'   "Reference tab
*                                'X'            "Hotspot
*                                'C210'         "Color
*                                '4'            "Lenght
*                                'X'.           "Key

* Color:
*  'X'    => column is colored with the default column highlight color.
*  'Cxyz' => column is colored with a coded color:
*
*  -   C: Color (coding must begin with C)
*  -   x: color number
*  -   y: bold
*  -   z: inverse


*  INSERT LINES OF i_fieldcat INTO TABLE i_fldcat.

*  x_keyinfo-header01 = 'DOCNUM'.
*  x_keyinfo-item01   = 'DOCNUM'.
*  x_keyinfo-header02 = 'UNAME'.
*  x_keyinfo-item02   = 'UNAME'.
*  x_keyinfo-header03 = 'DOCNUM'.
*  x_keyinfo-item03   = 'DOCNUM'.

*  x_variant-report   = sy-repid.
*  x_variant-handle   = 'UCRV'.
*  x_variant-username = sy-uname.

*  x_layout-coltab_fieldname  = 'COLOR'.
*  x_layout-colwidth_optimize = 'X'.
*  x_layout-lights_fieldname  = 'ICON'.
*  x_layout-lights_tabname    = 'I_OUTBOUND'.
*  x_layout-box_fieldname     = 'CHECK'.
*  x_layout-box_tabname       = 'I_OUTBOUND'.
*  x_layout-list_append       = 'X' "No call screen

*  x_events-name = 'TOP_OF_PAGE'.
*  x_events-form = 'TOP_OF_PAGE'.

*  APPEND x_events TO i_events.

*  v_status  = 'NEW_STANDARD'.
*  v_repid   = sy-repid.
*  v_command = 'USER_COMMAND'.

*  CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
*       EXPORTING
*            i_interface_check        = space
*            i_callback_program       = v_repid
*            i_callback_pf_status_set = v_status
*            i_callback_user_command  = v_command
*            i_structure_name         = 'I_OUTBOUND'
*            is_layout                = x_layout
*            it_fieldcat              = i_fldcat
*            i_save                   = 'A'
*            it_events                = i_events
*       TABLES
*            t_outtab                 = i_outbound
*       EXCEPTIONS
*            program_error            = 1
*            OTHERS                   = 2.
*
*  SELECT *
*    INTO TABLE i_alv
*    FROM yca_alv_list
*    WHERE programm = sy-repid.
*
*  SORT i_alv BY col_pos.
*
*  SELECT *
*    INTO TABLE i_sel_fld
*    FROM yca_sel_field
*    WHERE programm = sy-repid.

**---------------------------------------------------------------------*
**       FORM USER_COMMAND                                             *
**---------------------------------------------------------------------*
**       ........                                                      *
**---------------------------------------------------------------------*
**  -->  R_UCOMM                                                       *
**  -->  RS_SELFIELD                                                   *
**---------------------------------------------------------------------*
*FORM user_command  USING r_ucomm LIKE sy-ucomm
*                         rs_selfield TYPE slis_selfield.
*
**  check rs_selfield-tabname = 'I_HEADER'.
*
*  CASE r_ucomm.
*    WHEN '&IC1'.
*
*      IF rs_selfield-sel_tab_field = 'I_HEADER-VERIFIED'.
*        PERFORM set_user   USING rs_selfield.
*      ELSEIF rs_selfield-sel_tab_field = 'I_HEADER-STATUS'.
*        PERFORº™ set_status USING rs_selfield.
*      ENDIF.
*
*    WHEN 'DELE'.
*      PERFORM delete_line USING rs_selfield.
*    WHEN 'REFR'.
*      PERFORM start_of_selection.
*      rs_selfield-refresh = 'X'.
*  ENDCASE.
*
*ENDFORM.



*Program header
*-------------
*        Include for list viewer
