*---------------------------------------------------------------------*
*       FORM SORT_TEXT_LESEN                                          *
*---------------------------------------------------------------------*
*       Bezeichner f¨¹r die Sortierfelder ermitteln und                *
*       evtl. diese modifizieren.                                     *
*---------------------------------------------------------------------*
*  -->  VALUE(V_INDEX)   : Sortierstufe (1-5)                         *
*  -->  VALUE(FELDINHALT): Sortierfeldname                            *
*  -->  C_TEXT           : Sortierfeldbezeichner                      *
*---------------------------------------------------------------------*
FORM sort_text_lesen USING    value(v_index) LIKE sy-index
                     CHANGING feldinhalt
                              c_text.
* lokale Variable zum anpassen des FELDINHALT-Feldes gem## L#ngenangabe
* aus der Sortiervariante
DATA: ld_feldinhalt_tmp TYPE feldinhalt,
      ld_c_text_2       LIKE itab_data-s1_text.

  READ TABLE feld INDEX v_index.
  IF sy-subrc EQ 0.
    IF summb = 'X'.                                         "no 332180
      CLEAR anlav-anlhtxt. "undefined content                no 332180
    ENDIF.                                                  "no 332180

* F¨¹r OFFSET und L#NGE den Feldinhalt modifizieren, falls einer der
* beiden oder beide Parameter nicht initial sind. Dies wird ben#tigt
* damit der ALV bei OFFSET und L#NGE in den Sortiervarianten die
* Sortierung richtig darstellen kann.
    IF feld-foffset IS INITIAL AND feld-laenge IS INITIAL.
* Da keine OFFSET und L#NGE in der Sortiervariante nun nur Text der
* Sortierstufe lesen und das wars.
      CALL FUNCTION 'AREP_FBEZ_ERMITTELN'
         EXPORTING  i_feld     = feld
                    i_content  = feldinhalt
                    i_anlav    = anlav
                    i_bereich1 = bereich1
                    i_berdat   = berdatum
         IMPORTING  e_bez      = c_text.
    ELSE.
* Da OFFSET und/oder L#NGE einen Wert haben nun FELDINHALT modifizieren
       IF NOT feld-foffset IS INITIAL.
         SHIFT feldinhalt BY feld-foffset PLACES.
       ENDIF.

       IF NOT feld-laenge IS INITIAL.
         ld_feldinhalt_tmp = feldinhalt.
         MOVE ld_feldinhalt_tmp(feld-laenge) TO feldinhalt.
       ENDIF.
* Sortierstufentext als Fragezeichen ausgeben
         c_text = '?'.
    ENDIF.

  ENDIF.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM SORT_FELDER_VORBEREITEN                                  *
*---------------------------------------------------------------------*
*       Sortierfelder mit Texten versehen und evtl. modifizieren.     *
*---------------------------------------------------------------------*
FORM sort_felder_vorbereiten.

* Felder zur Anzeige mit ihren Feldnamen erg#nzen und modifizieren
  IF con_srtst >= 1.
    PERFORM sort_text_lesen USING 1
                            CHANGING <s1> itab_data-s1_text.
  ENDIF.
  IF con_srtst >= 2.
    PERFORM sort_text_lesen USING 2
                            CHANGING <s2> itab_data-s2_text.
  ENDIF.
  IF con_srtst >= 3.
    PERFORM sort_text_lesen USING 3
                            CHANGING <s3> itab_data-s3_text.
  ENDIF.
  IF con_srtst >= 4.
    PERFORM sort_text_lesen USING 4
                            CHANGING <s4> itab_data-s4_text.
  ENDIF.
  IF con_srtst >= 5.
    PERFORM sort_text_lesen USING 5
                            CHANGING <s5> itab_data-s5_text.
  ENDIF.

  IF con_srtst >= 1.
    itab_data-s1 = <s1>.
  ENDIF.
  IF con_srtst >= 2.
    itab_data-s2 = <s2>.
  ENDIF.
  IF con_srtst >= 3.
    itab_data-s3 = <s3>.
  ENDIF.
  IF con_srtst >= 4.
    itab_data-s4 = <s4>.
  ENDIF.
  IF con_srtst >= 5.
    itab_data-s5 = <s5>.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM SET_REF_TABLE                                            *
*---------------------------------------------------------------------*
*       Referenzfelder aus dem DDIC in die Sortierfelder des          *
*       Feldkataloges eintragen (inklusive Konvertierungsexit).
*---------------------------------------------------------------------*
*  -->  FELD          : Sortierfelder                                 *
*  -->  VALUE(V_INDEX): Sortierfeldindex                              *
*  -->  X_FIELD_CAT   : Feldkatalogzeile                              *
*---------------------------------------------------------------------*
FORM set_ref_table TABLES feld           STRUCTURE feld
                    USING value(v_index) LIKE sy-index
                 CHANGING x_field_cat    TYPE slis_fieldcat_alv.
  DATA: l_index(1).
  DATA: ddicfeld_info  TYPE dfies,
        ddic_tabname   LIKE dfies-tabname,
        ddic_fieldname LIKE dfies-lfieldname.
  l_index = v_index.

* Sortierfeld aus Tabelle FELD lesen und in Feldkatalog schreiben
  READ TABLE feld INDEX v_index.
  IF sy-subrc EQ 0.
* Referenz Feld-/Tabellenname aus dem DDIC eintragen
* (Die Felder im Katalog haben Dummy-Namen S1, S2, ... repr#sentieren
*  aber reale Felder einer realen Tabelle im DDIC)
    x_field_cat-ref_fieldname = feld-feldn.  " DDIC Feldname
    x_field_cat-ref_tabname   = feld-tabln.  " DDIC Tabellenname

*   Einen vorhandenen Konvertierungexit eintragen.
*   Zuerst pr¨¹fen, ob es einen gibt:
    CLEAR ddicfeld_info.
    ddic_tabname   = feld-tabln.
    ddic_fieldname = feld-feldn.

    CALL FUNCTION 'DDIF_FIELDINFO_GET'
         EXPORTING
              tabname    = ddic_tabname
              lfieldname = ddic_fieldname
         IMPORTING
              dfies_wa   = ddicfeld_info
         EXCEPTIONS
              OTHERS     = 0.

    IF ddicfeld_info-convexit NE space.
*     Konvertierungsexit in Feldkatalog eintragen
      CONCATENATE '==' ddicfeld_info-convexit
             INTO x_field_cat-edit_mask.
    ENDIF.

*   Das Feld festlegen in dem die Feldbeschreibung textuell abgelegt ist
*   (== Sx_TEXT)
    x_field_cat-text_fieldname(1) = 'S'.
    CONCATENATE x_field_cat-text_fieldname l_index '_TEXT'
                INTO x_field_cat-text_fieldname.
  ENDIF.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM VARIANTEN_AUSWAHL                                        *
*---------------------------------------------------------------------*
*       Auswahl einer ALV Variante f¨¹r die Liste (F4)                 *
*---------------------------------------------------------------------*
*  -->  pvari  : Variantenname                                        *
*---------------------------------------------------------------------*
FORM varianten_auswahl CHANGING pvari LIKE disvariant-variant.
  DATA: x_exit(1)  TYPE c,
        x_variant  LIKE disvariant,
        x_variant2 LIKE disvariant.

  DATA: fieldvalues TYPE dynpread OCCURS 1 WITH HEADER LINE,
        crepid      LIKE sy-repid.
  crepid = sy-repid.
* Feld SUMMB vom Dynpro einlesen.
* (Da der PAI noch nicht durchlaufen ist!)
  CLEAR fieldvalues.
  REFRESH fieldvalues.
  MOVE: 'SUMMB' TO fieldvalues-fieldname.
  APPEND fieldvalues.

  CALL FUNCTION 'DYNP_VALUES_READ'
       EXPORTING dyname     = crepid
                 dynumb     = '1000'
       TABLES    dynpfields = fieldvalues
       EXCEPTIONS
                    invalid_abapworkarea           = 1
                    invalid_dynprofield            = 2
                    invalid_dynproname             = 3
                    invalid_dynpronummer           = 4
                    invalid_request                = 5
                    no_fielddescription            = 6
                    invalid_parameter              = 7
                    undefind_error                 = 8
                    double_conversion              = 9
                    stepl_not_found                = 10
                    OTHERS                         = 11.
  IF sy-subrc = 0.
    READ TABLE fieldvalues INDEX 1.
    summb = fieldvalues-fieldvalue.
  ELSE.
    CLEAR summb.
  ENDIF.
* Aktueller Reportname
  x_variant-report  = sy-repid.
* ...       Variantenname
  x_variant-variant = pvari.

* Anzeigevarianten f¨¹r (Nicht)Summenbericht unterschiedlich!
  IF summb = 'X'.
    x_variant-handle = 'SUMX'.
  ELSE.
    x_variant-handle = ''.
  ENDIF.

  CALL FUNCTION 'REUSE_ALV_VARIANT_F4'
       EXPORTING
            is_variant = x_variant
            i_save     = 'A'
       IMPORTING
            e_exit     = x_exit
            es_variant = x_variant2
       EXCEPTIONS
            not_found  = 2.
  IF sy-subrc = 2.
*   Keine Varianten f¨¹r den Report vorhanden
    MESSAGE ID sy-msgid TYPE 'S'      NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ELSE.
    IF x_exit = space.
*     Augew#hlten Variantennamen ¨¹bernehmen
      pvari = x_variant2-variant.
    ENDIF.
  ENDIF.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM HASHSUM_COLLECTION                                       *
*---------------------------------------------------------------------*
*       Reportzeilen in einer Hashtabelle aufsummieren.               *
*---------------------------------------------------------------------*
*  -->  VALUE(LINE): Reportzeile aus der internen Tabelle             *
*---------------------------------------------------------------------*
FORM hashsum_collection USING value(line) LIKE itab_data.
  MOVE-CORRESPONDING line TO sumline.
  COLLECT sumline INTO sumtab_data.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM SUMMENTABELLE_AUFBAUEN                                   *
*---------------------------------------------------------------------*
*       Hashtabelle in eine Standardtabelle ¨¹bertragen.               *
*---------------------------------------------------------------------*
FORM summentabelle_aufbauen.

  LOOP AT sumtab_data INTO sumline.
    MOVE-CORRESPONDING sumline TO sumtab_data_s.
    sumtab_data_s-flg_pick_up = 'X'.   " Summen darf man picken
    sumtab_data_s-hlp_level = con_srtst.      " Summenstufe merken
*   ANLAV f¨¹llen f¨¹r Textbezeichner lesen
    CLEAR anlav.                                 "<<<0433908
    MOVE sumtab_data_s-s1 TO <s1>.
    MOVE sumtab_data_s-s2 TO <s2>.
    MOVE sumtab_data_s-s3 TO <s3>.
    MOVE sumtab_data_s-s4 TO <s4>.
    MOVE sumtab_data_s-s5 TO <s5>.

    CASE con_srtst.
      WHEN 1.
*        PERFORM sort_text_lesen USING 1                        "<781218
*                                CHANGING sumtab_data_s-s1      "<781218
*                                         sumtab_data_s-text.   "<781218
        sumtab_data_s-text = sumtab_data_s-s1_text.             "<781218
      WHEN 2.
*        PERFORM sort_text_lesen USING 2                        "<781218
*                                CHANGING sumtab_data_s-s2      "<781218
*                                         sumtab_data_s-text.   "<781218
         sumtab_data_s-text = sumtab_data_s-s2_text.            "<781218
      WHEN 3.
*        PERFORM sort_text_lesen USING 3                        "<781218
*                                CHANGING sumtab_data_s-s3      "<781218
*                                         sumtab_data_s-text.   "<781218
         sumtab_data_s-text = sumtab_data_s-s3_text.            "<781218
      WHEN 4.
*        PERFORM sort_text_lesen USING 4                        "<781218
*                                CHANGING sumtab_data_s-s4      "<781218
*                                         sumtab_data_s-text.   "<781218
         sumtab_data_s-text = sumtab_data_s-s4_text.            "<781218
      WHEN 5.
*        PERFORM sort_text_lesen USING 5                        "<781218
*                                CHANGING sumtab_data_s-s5      "<781218
*                                         sumtab_data_s-text.   "<781218
        sumtab_data_s-text = sumtab_data_s-s5_text.             "<781218
    ENDCASE.
    APPEND sumtab_data_s.
  ENDLOOP.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM felder_ausblenden                                        *
*---------------------------------------------------------------------*
*       Ausblenden eines Feldes vom Selektionsbild (mit Textfeld)     *
*---------------------------------------------------------------------*
FORM felder_ausblenden USING fname txtname.
* Ausblenden Summenberichtsschalter der LDB ADA (st#rt!)
  LOOP AT SCREEN.
    CASE screen-name.
      WHEN fname.                      " Feldame
        screen-invisible = ' '.
        screen-active = '0'.
        MODIFY SCREEN.
      WHEN txtname.                    " Bezeichner
        screen-invisible = ' '.
        screen-active = '0'.
        MODIFY SCREEN.
    ENDCASE.
  ENDLOOP.
ENDFORM.

*---------------------------------------------------------------------*
*       FORM tcollect_fuellen                                         *
*---------------------------------------------------------------------*
*       F¨¹llen der Felder, die an den FB gegeben werden m¨¹ssen.       *
*---------------------------------------------------------------------*
FORM tcollect_fuellen.
  CLEAR tcollect.

  MOVE-CORRESPONDING: t091c TO tcollect,
                      t091s TO tcollect,
                      t090u TO tcollect.
* The information of the currency is needed within the function group
* FIAA_FALVREPORTS. TCOLLECT is the only information source for the
* currency passed to this function group.
  MOVE t093b-waers TO tcollect-waers.                  "<< note 583578

  MOVE: sav_gittertxt  TO tcollect-gittertxt,
        sav_simvartxt  TO tcollect-simvartxt,
        txt_umvar      TO tcollect-txt_umvar,
        sy-repid       TO tcollect-reportid,
        pa_ai_id       TO tcollect-pa_ai_id,
        sav_gjahr      TO tcollect-sav_gjahr,
        pa_titel       TO tcollect-pa_titel,
        pa_mikro       TO tcollect-pa_mikro,
*        pa_lssep       TO tcollect-pa_lssep,              "no 394136
        head           TO tcollect-list_title,
        flg_not_first  TO tcollect-flg_not_first,
        berdatum       TO tcollect-berdatum,
        bereich1       TO tcollect-bewertungsbereich,
        p_table        TO tcollect-x_table_out.

ENDFORM.
