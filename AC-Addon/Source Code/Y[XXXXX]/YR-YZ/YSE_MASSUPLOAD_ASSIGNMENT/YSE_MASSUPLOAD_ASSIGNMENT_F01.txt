*----------------------------------------------------------------------*
* PROGRAM ID           : YSE_MASSUPLOAD_ASSIGNMENT_F01                 *
* PROGRAM TITLE        : YSE_MASSUPLOAD_ASSIGNMENT_F01                 *
* AUTHOR               : Sridhar Perumalla                             *
* DATE                 : 23/06/2014                                    *
* DEVELOPMENT ID       : CR 3243                                       *
* CHANGE REQUEST NUMBER: CD1K982715                                    *
* PROGRAM DESCRIPTION  : This is a program that updates the assignment *
*                        field in the accounting document number       *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME                   | CORR. NR   | CHANGE REF*
*----------------------------------------------------------------------*
*                                                                      *
************************************************************************
*&---------------------------------------------------------------------*
*&      Form  READ_DATA
*&---------------------------------------------------------------------*
*   Fetch data based on the selection screen inputs
*----------------------------------------------------------------------*
FORM read_data .
  SELECT bukrs                    " Company Code
         belnr                    " Accounting Document Number
         gjahr                    " Fiscal Year
         buzei                    " Number of Line Item Within Accounting Document
         bschl                    " Posting Key
         zuonr                    " Assignment Number
         vbeln                    " Billing Document
         hkont                    " General Ledger Account
         paobjnr                  " Profitability Segment Number (CO-PA)
         FROM bseg INTO TABLE it_bseg
         WHERE bukrs IN so_bukrs AND
               belnr IN so_belnr AND
               gjahr IN so_gjahr.

  IF sy-subrc IS NOT INITIAL.
    MESSAGE ID 'YSE_SALES_LOG' TYPE 'I' NUMBER '000' WITH text-002.
  ENDIF. " IF sy-subrc IS NOT INITIAL

  IF it_bseg IS NOT INITIAL.
    SELECT vbeln   " Billing Document
           posnr   " Billing item
           aubel   " Sales Document
           aupos   " Sales Document Item
           paobjnr " Profitability Segment Number (CO-PA)
           FROM vbrp INTO TABLE it_vbrp
           FOR ALL ENTRIES IN it_bseg
           WHERE vbeln = it_bseg-vbeln.
    IF sy-subrc IS INITIAL.
      SORT  it_vbrp BY paobjnr ASCENDING.
    ENDIF. " IF sy-subrc IS INITIAL
  ENDIF. " IF it_bseg IS NOT INITIAL

*     Append the records from it_bseg and it_vbrp into final internal table it_final
*     where it_bseg-hkont field has a G/L account which exist in SO_HKONT

  LOOP AT it_bseg INTO wa_bseg WHERE hkont IN so_hkont.
*        IF wa_bseg-hkont IN so_hkont.
    wa_final-bukrs   = wa_bseg-bukrs.
    wa_final-belnr   = wa_bseg-belnr.
    wa_final-gjahr   = wa_bseg-gjahr.
    wa_final-buzei   = wa_bseg-buzei.
    wa_final-bschl   = wa_bseg-bschl.
    wa_final-hkont   = wa_bseg-hkont.
    wa_final-paobjnr = wa_bseg-paobjnr.
*     Read it_vbrp table for ZUONR which is concatenation of Sales Doc and its item
    READ TABLE it_vbrp INTO wa_vbrp
                       WITH KEY paobjnr = wa_bseg-paobjnr
                       BINARY SEARCH.
    IF sy-subrc IS INITIAL.
      CONCATENATE wa_vbrp-aubel wa_vbrp-aupos INTO wa_final-n_zuonr SEPARATED BY c_slash.
    ENDIF. " IF sy-subrc IS INITIAL
    APPEND wa_final TO it_final.
    CLEAR : wa_final, wa_bseg.
*      ELSE.
*    *      Do nothing
*      ENDIF.
  ENDLOOP. " LOOP AT it_bseg INTO wa_bseg WHERE hkont IN so_hkont

ENDFORM.                    " READ_DATA
*&---------------------------------------------------------------------*
*&      Form  UPDATE_ASSIGNMENT
*&---------------------------------------------------------------------*
*  to Update assignment field in the Accounting document number
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM update_assignment .

  LOOP AT it_final INTO wa_final.
    wa_s_bseg-bukrs = wa_final-bukrs.
    wa_s_bseg-belnr = wa_final-belnr.
    wa_s_bseg-gjahr = wa_final-gjahr.
    wa_s_bseg-buzei = wa_final-buzei.
    wa_s_bseg-bschl = wa_final-bschl.
    wa_s_bseg-zuonr = wa_final-n_zuonr.
    wa_s_bseg-hkont = wa_final-hkont.
    wa_s_bseg-paobjnr = wa_final-paobjnr.

    wa_fldtab-fname = c_zuonr.
    APPEND wa_fldtab TO it_fldtab.
    CLEAR : wa_fldtab.

    wa_buztab-bukrs = wa_final-bukrs.
    wa_buztab-belnr = wa_final-belnr.
    wa_buztab-gjahr = wa_final-gjahr.
    wa_buztab-buzei = wa_final-buzei.
    wa_buztab-bschl = wa_final-bschl.
    APPEND wa_buztab TO it_buztab.
    CLEAR : wa_buztab.

    CALL FUNCTION 'FI_ITEMS_MASS_CHANGE'
      EXPORTING
        s_bseg     = wa_s_bseg
      IMPORTING
        errtab     = wa_errtab
      TABLES
        it_buztab  = it_buztab
        it_fldtab  = it_fldtab
      EXCEPTIONS
        bdc_errors = 1
        OTHERS     = 2.

    IF sy-subrc <> 0.
      CALL FUNCTION 'FORMAT_MESSAGE'
        EXPORTING
          id        = sy-msgid
          lang      = sy-langu
          no        = sy-msgno
          v1        = sy-msgv1
          v2        = sy-msgv2
          v3        = sy-msgv3
          v4        = sy-msgv4
        IMPORTING
          msg       = wa_message
        EXCEPTIONS
          not_found = 1
          OTHERS    = 2.
      wa_error-bukrs = wa_final-bukrs.
      wa_error-belnr = wa_final-belnr.
      wa_error-gjahr = wa_final-gjahr.
      wa_error-buzei = wa_final-buzei.
      wa_error-bschl = wa_final-bschl.
      wa_error-hkont = wa_final-hkont.
      wa_error-paobjnr = wa_final-paobjnr.
      wa_error-n_zuonr = wa_final-n_zuonr.
      wa_error-message = wa_message.
      APPEND wa_error TO it_error.
      CLEAR : wa_error.

    ELSE.
      wa_success-bukrs = wa_final-bukrs.
      wa_success-belnr = wa_final-belnr.
      wa_success-gjahr = wa_final-gjahr.
      wa_success-buzei = wa_final-buzei.
      wa_success-bschl = wa_final-bschl.
      wa_success-hkont = wa_final-hkont.
      wa_success-paobjnr = wa_final-paobjnr.
      wa_success-n_zuonr = wa_final-n_zuonr.
      wa_success-message = text-004.
      APPEND wa_success TO it_success.
      CLEAR : wa_success.
    ENDIF.
    WAIT UP TO 2 SECONDS.
    CLEAR : wa_final, wa_s_bseg.
    REFRESH : it_buztab, it_fldtab.
  ENDLOOP.


ENDFORM.                    " UPDATE_ASSIGNMENT
*&---------------------------------------------------------------------*
*&      Form  WRITE_OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM write_output .

  IF it_success[] IS NOT INITIAL.
    WRITE : / text-005.
    SKIP 1.
    LOOP AT it_success INTO wa_success.
      WRITE :/ wa_success-bukrs,
                wa_success-belnr,
                wa_success-gjahr,
                wa_success-buzei,
                wa_success-bschl,
                wa_success-hkont,
                wa_success-paobjnr,
                wa_success-n_zuonr,
                wa_success-message.
      CLEAR : wa_success.
    ENDLOOP.
  ENDIF.
  SKIP 3.
  IF it_error[] IS NOT INITIAL.
    WRITE : / text-006.
    SKIP 1.
    LOOP AT it_error INTO wa_error.
      WRITE : / wa_error-bukrs,
                wa_error-belnr,
                wa_error-gjahr,
                wa_error-buzei,
                wa_error-bschl,
                wa_error-hkont,
                wa_error-paobjnr,
                wa_error-n_zuonr,
                wa_error-message.
      CLEAR : wa_error.
    ENDLOOP.
  ENDIF.

ENDFORM.                    " WRITE_OUTPUT
