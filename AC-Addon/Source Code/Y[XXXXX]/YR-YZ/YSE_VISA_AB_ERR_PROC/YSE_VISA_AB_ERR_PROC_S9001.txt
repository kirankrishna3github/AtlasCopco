*&---------------------------------------------------------------------*
*&  Include           YSE_VISA_AB_ERR_PROC_S9001
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Module  S9001_STATUS  OUTPUT
*&---------------------------------------------------------------------*
module s9001_status output.

  set titlebar  'S9001_DEFAULT'.
  set pf-status 'S9001_DEFAULT'.

endmodule.                 " S9001_STATUS  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  S9001_PREPSC  OUTPUT
*&---------------------------------------------------------------------*
module s9001_prepsc output.

  perform s9001_prepsc.

endmodule.                 " S9001_PREPSC  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  S9001_UCOMM  INPUT
*&---------------------------------------------------------------------*
module s9001_ucomm input.

  gv_okcod2 = gv_okcode.
  clear gv_okcode.
  case gv_okcod2.
    when 'BACK' or 'EXIT' or 'CANC'.
      free go_ov_handler.
      call method go_ov_alv->free.
      free go_ov_alv.
      call method go_ov_cont->free.
      free go_ov_cont.
      leave to screen 0.
    when 'EXEC'.
      perform selection_update.
    when 'DELE'.
      perform selection_delete.
  endcase.

endmodule.                 " S9001_UCOMM  INPUT

*&---------------------------------------------------------------------*
*&      Form  S9001_PREPSC
*&---------------------------------------------------------------------*
form s9001_prepsc .

  data:
    lv_outstruc  type tabname,
    ls_layout    type lvc_s_layo,
    ls_variant   type disvariant.
  field-symbols:
    <ls_fieldcat> type lvc_s_fcat.

* Build fieldcatalog if it's initial
  if it_fieldcat_ov[] is initial.
*   Fetch the field catalog
    lv_outstruc = 'YSE_VISA_AB_ERR'.
    refresh it_fieldcat_ov.
    call function 'LVC_FIELDCATALOG_MERGE'
      exporting
        i_buffer_active  = ' '
        i_structure_name = lv_outstruc
      changing
        ct_fieldcat      = it_fieldcat_ov.
*   Modify some of the fields
    loop at it_fieldcat_ov assigning <ls_fieldcat>.
      case <ls_fieldcat>-fieldname.
        when 'BBMNG'.
          <ls_fieldcat>-no_out = gc_char_x.
      endcase.
    endloop.
  endif.

* Set layout options
  ls_layout-cwidth_opt = gc_char_x.
  ls_layout-sel_mode   = 'A'.
* Set variant options
  ls_variant-report = sy-repid.

* If overview container object is initial
  if go_ov_cont is initial.
    create object go_ov_cont
      exporting
        repid           = sy-repid
        dynnr           = sy-dynnr
        lifetime        = cntl_lifetime_dynpro
        ratio           = 95
*       EXTENSION       =
        side            = cl_gui_docking_container=>dock_at_bottom.
  endif.

* If overview ALV object is initial
  if go_ov_alv is initial.
    create object go_ov_alv
      exporting
        i_parent = go_ov_cont.
*   Enable Line Selection And Double-Clicking
    create object go_ov_handler.



*   Display the grid
    call method go_ov_alv->set_table_for_first_display
      exporting
        i_structure_name              = lv_outstruc
        i_save                        = 'A'
        is_layout                     = ls_layout
        is_variant                    = ls_variant
      changing
        it_outtab                     = it_overview[]
        it_fieldcatalog               = it_fieldcat_ov
      exceptions
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        others                        = 4.
    if sy-subrc <> 0.
*       MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*       WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    endif.

    set handler go_ov_handler->handle_double_click for go_ov_alv.
  else.
*   Refresh ALV to reflect changes in IT_OVERVIEW
    call method go_ov_alv->refresh_table_display.
  endif.

endform.                    " S9001_PREPSC

*&---------------------------------------------------------------------*
*&      Form  SELECTION_DELETE
*&---------------------------------------------------------------------*
form selection_delete .

  data:
    wa_index  type lvc_s_row,
    lv_error  type c,
    lv_answer type c,
    gc_flag   type c.         "CR1475  EXTUVE 2010/06/08



* Get selection and check result
  perform get_selected_rows using lv_error.
  check lv_error is initial.

* Have the user confirm deletion
  clear lv_answer.
  call function 'POPUP_TO_CONFIRM'
    exporting
      titlebar              = 'Please confirm'(001)
      text_question         = 'Are you sure you want to delete the selected entries?'(002)
      default_button        = '2'
      display_cancel_button = space
      popup_type            = 'ICON_MESSAGE_WARNING'
    importing
      answer                = lv_answer.
* If user replied "no"
  if lv_answer eq '2'.
    message id 'YSE_SALES_LOG' type 'W' number '055'.
    check 1 eq 2.
* If something went wrong with the popup to confirm, just stop this routine
  elseif sy-subrc ne 0.
    check 1 eq 2.
  endif.

*>>>>> START OF INSERT EXTUVE CR1475
  field-symbols: <fs_overview> like it_overview.
  data : gv_counter type lvc_index.
  clear gv_counter.
  check not it_overview[] is initial.
  loop  at it_overview assigning <fs_overview>.
    gv_counter  = gv_counter + 1.
    <fs_overview>-gv_index = gv_counter.
  endloop.
*>>>>> END   OF INSERT EXTUVE CR1475

* Process the indices to be deleted
  loop at it_index into wa_index.
*   Find corresponding entry in overview table
*    READ TABLE IT_OVERVIEW INDEX WA_INDEX-INDEX.                "CR1475
    read table it_overview with key gv_index =  wa_index-index. "CR1475
*   If not found
    if sy-subrc ne 0.
      message id 'YSE_SALES_LOG' type 'E' number '054'.
      check 1 eq 2.
    endif.

* Begin of insert MOD-001
    if it_overview-mandt = ' '.

* Update control records
      update edidc
             set status = c_68
             where docnum eq it_overview-docnum and status = c_51.
      commit work and wait.

    elseif it_overview-xblnr = '800'.
      update yse_matsps set deleted = 'X'
               where ebeln = it_overview-ebeln
                 and ebelp = it_overview-ebelp
                 and docnum = it_overview-docnum.
    else.
* End of insert MOD-001
*   Delete entries from DB table for this PO combination
      delete from yse_visa_ab_err
            where ebeln eq it_overview-ebeln
              and ebelp eq it_overview-ebelp.
* Begin of insert MOD-001
    endif.
* End of insert MOD-001
*   Delete entries from error internal table for this PO combination
    delete      it_err
          where ebeln eq it_overview-ebeln
            and ebelp eq it_overview-ebelp.
*   Delete entry from overview internal table
    delete it_overview where gv_index = wa_index-index.
  endloop.

endform.                    " SELECTION_DELETE

*&---------------------------------------------------------------------*
*&      Form  SELECTION_UPDATE
*&---------------------------------------------------------------------*
form selection_update .

  data:
    wa_index  type lvc_s_row,
    lv_error  type c,
    lv_answer type c.
  data: sel_tab       like rsparams  occurs 0  with header line.



* Get selection and check result
  perform get_selected_rows using lv_error.
  check lv_error is initial.

* Copy selected lines to new internal table
  refresh it_2bupdated.
* Process the indices to be updated
  loop at it_index into wa_index.
*   Find corresponding entry in overview table
    read table it_overview index wa_index-index.
*   If not found
    if sy-subrc ne 0.
      message id 'YSE_SALES_LOG' type 'E' number '054'.
      check 1 eq 2.
    endif.
    it_2bupdated = it_overview.
    append it_2bupdated.
  endloop.

* Call Screen which displays first one of those entries to be updated
  read table it_2bupdated index 1.

* Begin of insert MOD-001
  if it_2bupdated-mandt = ' '.
* Selection table for IDoc reprocessing
    clear sel_tab.
    refresh sel_tab.
    sel_tab-selname = 'SO_MESTY'.
    sel_tab-kind    = 'S'.
    sel_tab-sign    = 'I'.
    sel_tab-option  = 'EQ'.
    sel_tab-low     = c_yse_visa_ordrsp.
    append sel_tab.
    sel_tab-selname = 'SO_DOCNU'.
    sel_tab-kind    = ''.
    sel_tab-sign    = 'I'.
    sel_tab-option  = 'EQ'.
    sel_tab-low     = it_2bupdated-docnum.
    append sel_tab.


* Reprocess IDocs
    submit rbdmanin with selection-table sel_tab
*                  VIA SELECTION-SCREEN
                    and return.
  ELSEIF it_2bupdated-xblnr = '800'.
    message i310(yse_sales_log).
*   Message with status 800 cannot be reprocessed.
  else.
* End of insert MOD-001
    call screen '9002'.
* Begin of insert MOD-001
  endif.
* End of insert MOD-001

endform.                    " SELECTION_UPDATE

*&---------------------------------------------------------------------*
*&      Form  GET_SELECTED_ROWS
*&---------------------------------------------------------------------*
form get_selected_rows using p_error.

* Reset error flag
  clear p_error.

* Get selected rows
  refresh: it_index, it_rowno.
  call method go_ov_alv->get_selected_rows
    importing
      et_index_rows = it_index
      et_row_no     = it_rowno.

* If no entries selected, raise message
  describe table it_index lines sy-tfill.
  if sy-tfill eq 0.
    p_error = gc_char_x.
    message id 'YSE_SALES_LOG' type 'E' number '053'.
  endif.

endform.                    " GET_SELECTED_ROWS
