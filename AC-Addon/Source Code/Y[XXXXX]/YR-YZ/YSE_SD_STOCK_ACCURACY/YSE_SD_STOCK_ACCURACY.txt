
************************************************************************
* Program ID           : YSE_SD_STOCK_ACCURACY                         *
* Program Title        : Stock accuracy report                         *
* Author               : Andr¨¦ Blommaert                              *
* Date                 : 26.03.2007                                    *
* Change Request Number: CD1K913081
*                        26032007-SDMM-REP: D110-YSE_SD_STOCK_ACCURACY *
*
* Description          :                                               *
*----------------------------------------------------------------------*

REPORT yse_sd_stock_accuracy MESSAGE-ID yse_sales_log.

INCLUDE yse_sd_rep_include.
*----------------------------------------------------------------------*
* Data declarations                                                    *
*----------------------------------------------------------------------*

*--- Tables
TABLES: mara,marc,mard.

*--- Type pools
TYPE-POOLS slis.

****TYPES*******
TYPES: BEGIN OF t_iseg,
      werks LIKE iseg-werks,
      lgort like iseg-lgort,
      matnr LIKE iseg-matnr,
*      difference(1),
      buchm LIKE iseg-buchm,
      menge LIKE iseg-menge,
      END OF t_iseg.

*--- Structures
DATA: gs_layout         TYPE slis_layout_alv.
DATA: gs_sd_alv-variant LIKE disvariant.
DATA: g_user_command          TYPE slis_formname VALUE 'USER_COMMAND'.

*--- Internal tables
DATA: it_fieldcat       TYPE slis_t_fieldcat_alv.
DATA: wa_fieldcat       TYPE slis_fieldcat_alv.


DATA: BEGIN OF i_vbak OCCURS 0,
      vbeln LIKE vbak-vbeln,
      auart LIKE vbak-auart,
      audat LIKE vbak-audat,
      vkorg LIKE vbak-vkorg,
      vtweg LIKE vbak-vtweg,
      kunnr LIKE vbak-kunnr,
      netwr LIKE vbak-netwr,
      waerk LIKE vbak-waerk,
      END OF i_vbak.

DATA: BEGIN OF i_vbap OCCURS 0,
      vbeln LIKE vbap-vbeln,
      posnr LIKE vbap-posnr,
      matnr LIKE vbap-matnr,
      kwmeng LIKE vbap-kwmeng,
      vrkme LIKE vbap-vrkme,
      END OF i_vbap.

DATA: BEGIN OF i_vbuk OCCURS 0,
      vbeln LIKE vbuk-vbeln,
      fksak LIKE vbuk-fksak,
      END OF i_vbuk.

DATA: BEGIN OF it_output OCCURS 0,
      werks LIKE marc-werks,
      lgort like mard_lgort,
      nr_mat_counted(10),
      nr_mat_corrected(10),
      %_corr(6).

DATA: END OF it_output.

DATA: it_t001l LIKE t001l OCCURS 0 WITH HEADER LINE.
DATA: it_iseg TYPE TABLE OF t_iseg WITH HEADER LINE.
DATA: wa_iseg TYPE t_iseg.
DATA: it_iseg2 TYPE TABLE OF t_iseg WITH HEADER LINE.


DATA: wa_period(6) TYPE n.
*--- Variables
DATA: enddatum LIKE sy-datum.
DATA: g_variant_flag    TYPE c.

DATA: WA_LGORT LIKE ISEG-LGORT.

RANGES: r_lgort FOR iseg-lgort.
*----------------------------------------------------------------------*
* Selection screen                                                     *
*----------------------------------------------------------------------*
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-s01.
SELECT-OPTIONS: s_period FOR enddatum NO-EXTENSION.
SELECT-OPTIONS: s_werks FOR marc-werks.
SELECT-OPTIONS: s_lgort FOR mard-lgort.
SELECT-OPTIONS: s_mtart FOR mara-mtart.
SELECT-OPTIONS: s_matkl FOR mara-matkl.
*SELECT-OPTIONS: s_matnr FOR vbap-matnr.
*SELECT-OPTIONS: s_kunnr FOR vbak-kunnr.
*SELECT-OPTIONS: s_audat FOR vbak-audat.
*selection-screen: SKIP.
*SELECT-OPTIONS: s_fksak FOR vbuk-fksak.
SELECTION-SCREEN END OF BLOCK b1.
SELECTION-SCREEN: SKIP.
SELECTION-SCREEN BEGIN OF BLOCK b02 WITH FRAME TITLE text-s02.
SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (25) text-s07.
SELECTION-SCREEN POSITION POS_LOW.
PARAMETERS: p_var   LIKE disvariant-variant.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK b02.

INITIALIZATION.

  CLEAR enddatum.
  CALL FUNCTION 'RP_LAST_DAY_OF_MONTHS'
    EXPORTING
      day_in                  = sy-datum
   IMPORTING
     last_day_of_month       = enddatum
* EXCEPTIONS
*   DAY_IN_NO_DATE          = 1
*   OTHERS                  = 2
            .
*  s_audat-high = enddatum.
*  APPEND s_audat.


AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_var.
  PERFORM variant_inputhelp USING p_var.

AT SELECTION-SCREEN.
  perform authorisation_check.
  PERFORM existence_variant USING p_var.

AT SELECTION-SCREEN OUTPUT.

  PERFORM variant_init.
  IF p_var IS INITIAL AND g_variant_flag IS INITIAL.
    PERFORM get_default_variant USING p_var.
    g_variant_flag = 'X'.
  ENDIF.
* FIND DEFAULT STORAGE LOCATION


  SELECT SINGLE lgort INTO WA_LGORT
  FROM t001l
  WHERE werks IN  s_werks.

  S_LGORT-LOW = WA_LGORT.
  S_LGORT-OPTION = 'EQ'.
  S_LGORT-SIGN = 'I'.
  APPEND S_LGORT.


AT  SELECTION-SCREEN ON s_period.

  LOOP AT s_period.

    IF s_period-low  > sy-datum OR s_period-high > sy-datum.
      MESSAGE e024.
    ENDIF.

  ENDLOOP.
************************************************************************
* START MAIN PROGRAM                                                   *
************************************************************************
START-OF-SELECTION.

  PERFORM select_data.
  PERFORM process_data.
  PERFORM display_data.

*&---------------------------------------------------------------------*
*&      Form  select_data
*&---------------------------------------------------------------------*
FORM select_data .





  SELECT b~buchm b~matnr b~werks b~lgort b~menge
  INTO CORRESPONDING FIELDS OF TABLE it_iseg
  FROM mara AS a
  INNER JOIN iseg AS b
  ON a~matnr = b~matnr
  WHERE a~mtart IN s_mtart
   AND a~mtart IN s_mtart
  AND a~lvorm EQ space
  AND b~werks IN s_werks
   AND b~lgort IN S_lgort
  AND b~xnzae EQ space
  AND b~zldat IN s_period.

* IF NOTHING FOUND SEND MESSAGE AND TRY AGAIN
  DESCRIBE TABLE it_iseg LINES sy-tfill.
  IF sy-tfill NE 0.
    SORT it_iseg.
  ELSE.

    MESSAGE s002.


    SUBMIT yse_sd_stock_accuracy VIA SELECTION-SCREEN.




  ENDIF.


ENDFORM.                    " select_data

*&---------------------------------------------------------------------*
*&      Form  process_data
*&---------------------------------------------------------------------*

FORM process_data .

  DATA: lv_nr_differences TYPE i,
        lv_nr_corrected TYPE i,
        lv_material_nr TYPE i,
        lv_procent TYPE p DECIMALS 2.
  .
*DATA: BEGIN OF i_output OCCURS 0,
*      werks LIKE marc-werks,
*      nr_mat_counted(10),
*      nr_mat_corrected(10),
*      %_corr(3).
*
*DATA: END OF i_output.

  it_iseg2[] = it_iseg[].

  LOOP AT it_iseg .

    wa_iseg = it_iseg.

    IF wa_iseg-buchm NE wa_iseg-menge.
      lv_nr_differences = lv_nr_differences + 1.
    ENDIF.

    AT END OF matnr.

      lv_material_nr = lv_material_nr + 1.
      IF lv_nr_differences > 0.

        lv_nr_differences = 0.
        lv_nr_corrected = lv_nr_corrected + 1.
      ENDIF.
    ENDAT.

    AT END OF lgort.
      it_output-werks = wa_iseg-werks.
      it_output-lgort = wa_iseg-lgort.

      it_output-nr_mat_counted = lv_material_nr.
      it_output-nr_mat_corrected = lv_nr_corrected.

      lv_procent  = ( lv_nr_corrected / lv_material_nr ) * 100.
      it_output-%_corr = lv_procent.

      APPEND it_output.
      lv_nr_differences = 0.
      lv_material_nr = 0.
      lv_nr_corrected = 0.

    ENDAT.


  ENDLOOP.








ENDFORM.                    " process_data

*&---------------------------------------------------------------------*
*&      Form  display_data
*&---------------------------------------------------------------------*

FORM display_data .

  PERFORM fill_field_catalog.
  PERFORM alv_output.

ENDFORM.                    " display_data


*----------------------------------------------------------------------*
*       Form  FILL_FIELD_CATALOG                                       *
*----------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
FORM fill_field_catalog.

  x_repid = sy-repid.
  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
       EXPORTING
            i_program_name         = x_repid
            i_internal_tabname     = 'IT_OUTPUT'
*           i_structure_name       =
*           i_client_never_display = 'X'
            i_inclname             = x_repid
*           i_bypassing_buffer     =
*           i_buffer_active        =
       CHANGING
            ct_fieldcat            = it_fieldcat
       EXCEPTIONS
            inconsistent_interface = 1
            program_error          = 2
            OTHERS                 = 3.
  IF sy-subrc <> 0.
*   message id sy-msgid type sy-msgty number sy-msgno
*           with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

* gs_layout-colwidth_optimize   = 'X'.
  gs_layout-confirmation_prompt = 'X'.
  gs_layout-key_hotspot         = 'X'.
  gs_layout-detail_titlebar
  = 'SALES REP REPORTING FOR COMMISSIONS'.


  LOOP AT it_fieldcat INTO wa_fieldcat.
    CASE  wa_fieldcat-fieldname.

      WHEN 'NR_MAT_COUNTED'.

        wa_fieldcat-seltext_l = text-002.
        wa_fieldcat-seltext_m = text-002.
        wa_fieldcat-seltext_s = text-002.
        wa_fieldcat-reptext_ddic = text-002.
        wa_fieldcat-OUTPUTLEN  = 30.
        MODIFY it_fieldcat FROM wa_fieldcat.
      WHEN 'NR_MAT_CORRECTED'.

        wa_fieldcat-seltext_l = text-003.
        wa_fieldcat-seltext_m = text-003.
        wa_fieldcat-seltext_s = text-003.
        wa_fieldcat-reptext_ddic = text-003.
        wa_fieldcat-OUTPUTLEN  = 30.
        MODIFY it_fieldcat FROM wa_fieldcat.

      WHEN '%_CORR'.

        wa_fieldcat-seltext_l = text-004.
        wa_fieldcat-seltext_m = text-004.
        wa_fieldcat-seltext_s = text-004.
        wa_fieldcat-reptext_ddic = text-004.
        wa_fieldcat-OUTPUTLEN  = 20.
        MODIFY it_fieldcat FROM wa_fieldcat.



    ENDCASE.

  ENDLOOP.

ENDFORM.                    "fill_field_catalog


*----------------------------------------------------------------------*
*       Form  ALV_OUTPUT                                               *
*----------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
FORM alv_output.

*  variant-report    = 'YSE_SD_PREPAYSO'.
*  variant-variant   = variant.
*  gs_sd_alv-variant = gx_variant.

*  LEAVE TO LIST-PROCESSING.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
       EXPORTING
*           i_interface_check           = ' '
*           i_bypassing_buffer          =
*           i_buffer_active             = ' '
            i_callback_program          = 'YSE_SD_STOCK_ACCURACY'
*           i_callback_pf_status_set    = ' '
            i_callback_user_command     = g_user_command
*           i_callback_top_of_page      = ' '
*           i_callback_html_top_of_page = ' '
*           i_callback_html_end_of_list = ' '
*           i_structure_name            =
*           i_background_id             = ' '
            i_grid_title                = text-001
*           i_grid_settings             =
            is_layout                   = gs_layout
            it_fieldcat                 = it_fieldcat
*           it_excluding                =
*           it_special_groups           =
*            it_sort                     = it_sort
*           it_filter                   =
*           is_sel_hide                 =
            i_default                   = 'X'
            i_save                      = 'A'
            is_variant                  = gs_sd_alv-variant
*           it_events                   =
*           it_event_exit               =
*           is_print                    =
*           is_reprep_id                =
            i_screen_start_column       = 0
            i_screen_start_line         = 0
            i_screen_end_column         = 0
            i_screen_end_line           = 0
*           it_alv_graphics             =
*           it_add_fieldcat             =
*           it_hyperlink                =
*      importing
*           e_exit_caused_by_caller     =
*           es_exit_caused_by_user      =
       TABLES
            t_outtab                    = it_output
       EXCEPTIONS
            program_error               = 1
            OTHERS                      = 2.
  IF sy-subrc NE 0.
*   message id sy-msgid type sy-msgty number sy-msgno
*           with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

ENDFORM.                    " ALV_OUTPUT

* ----------------------------------------------------------------------
*   FORM
*   USER COMMAND
*
*   User commands management
*
* ----------------------------------------------------------------------
FORM user_command USING pi_ucomm       LIKE sy-ucomm
                        pi_rs_selfield TYPE slis_selfield.  "#EC CALLED


ENDFORM.                                                   "user_comman
*&---------------------------------------------------------------------*
*&      Form  authorisation_check
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form authorisation_check .

  DATA: t_t001w LIKE STANDARD TABLE OF t001w WITH HEADER LINE.

  SELECT *
  FROM t001w
  INTO TABLE t_t001w WHERE werks IN s_werks.


  LOOP AT t_t001w.

    AUTHORITY-CHECK OBJECT 'I_SWERK'
             ID 'TCD' DUMMY
             ID 'SWERK' FIELD t_t001w-werks.

    IF sy-subrc = 4.
*   No authorisation to display data from Sales Organisation p_vkorg
      MESSAGE ID 'YSE_GENERAL' TYPE 'E' NUMBER '008' WITH t_t001w-werks.
      EXIT.
    ELSEIF sy-subrc <> 0.
*   Error checking authorization.
      MESSAGE ID 'YSE_GENERAL' TYPE 'E' NUMBER '004'.
      EXIT.
    ENDIF.
  ENDLOOP.

endform.                    " authorisation_check

*Text symbol text£º
*001:Stock accuracy report
*002:Number of materials counted
*003:Number of materials corrected
*004:Percentage of corrections
*S01:Material Selections
*S02:Output Selections

*S07:ALV Output Variant
*Selection text£º
*P_VAR:        Variant
*S_LGORT:        Storage location
*S_MATKL:        Material type
*S_MTART:        Material group
*S_PERIOD:        Period (Begindate - Enddate)
*S_WERKS:        Plant
