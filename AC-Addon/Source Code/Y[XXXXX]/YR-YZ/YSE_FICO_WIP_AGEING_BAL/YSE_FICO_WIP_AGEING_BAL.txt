************************************************************************
* Program ID           : YSE_FICO_WIP_AGEING_BAL                       *
* Program Title        : Ageing balance for WIP                        *
* Author               : Erik Walravens                                *
* Date                 : 03.05.2007                                    *
* Change Request Number: CD1K914402                                    *
* Transport description: 070430-FICO-WIP ageing report                 *
* Description          : Reporting of WIP ageing balances to be        *
*                        executed per division. The division is        *
*                        derived from the profit center.               *
************************************************************************
* Notes: This program is based on YSE_FICO_AGEING_BALANCE_BUS_AR       *
*        by Andr¨¦ Blommaert.                                           *
************************************************************************
* Change History Log                                                    *
*----------------------------------------------------------------------*
* Mod. no |  Date    | Name           | Transport  | Change ref        *
*----------------------------------------------------------------------*
* MOD-001 |14/05/2007| Erik Walravens | CD1K914938 | 001               *
* Description: Remove column '90-720' and change last columns to '>90'.*
*----------------------------------------------------------------------*
* MOD-002 |14/05/2007| Erik Walravens | CD1K914950 | 002               *
* Description: Delete unused includes.                                 *
*----------------------------------------------------------------------*
* MOD-003 |15/05/2007| Erik Walravens | CD1K915029 | 003               *
* Description: Adjust postings sign using debit/credit indicator.      *
*----------------------------------------------------------------------*
* MOD-004 |04/10/2007| Tom Van Oevelen|            | 004               *
* Description: Issue 3448                                              *
*----------------------------------------------------------------------*
* MOD-005 |09/03/2009| M Jacobs       | CD1K946827 | 005 NEWGL         *
* Description: CR0648                                                  *
*----------------------------------------------------------------------*
* MOD-006 |27/10/2010| G Rutten       | CD1K960460 | GPS 10 WIP Ageing *
* Description: CR1169                                in balance sheet  *
************************************************************************
REPORT yse_fico_wip_ageing_bal MESSAGE-ID yse_fico.


************************************************************************
* TABLES                                                               *
************************************************************************
TABLES: bsis, yse_wips_ageing.


************************************************************************
* SELECTION SCREEN                                                     *
************************************************************************
SELECTION-SCREEN BEGIN OF BLOCK 1 WITH FRAME TITLE text-001.
PARAMETERS:
  p_bukrs  LIKE bsis-bukrs OBLIGATORY,      " Company code
  p_keydat LIKE bsis-bldat OBLIGATORY.      " Key date
SELECT-OPTIONS:
  so_hkont FOR bsis-hkont  OBLIGATORY.      " General Ledger Account
SELECTION-SCREEN END OF BLOCK 1.

SELECTION-SCREEN BEGIN OF BLOCK 2 WITH FRAME TITLE text-002.
PARAMETER:
  p_extr AS CHECKBOX.          " Extract for BW

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT 01(30) text-003. " Due date sorted list
SELECTION-SCREEN POSITION POS_LOW.
PARAMETERS:
  rastbis1(1) DEFAULT '0',
  rastbis2(5) DEFAULT '1-30',
  rastbis3(8) DEFAULT '31-60',
  rastbis4(8) DEFAULT '61-90'.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK 2.

SELECTION-SCREEN BEGIN OF BLOCK 3 WITH FRAME TITLE text-004.
PARAMETERS:
  p_del AS CHECKBOX,                        " Delete old data
  p_date LIKE bsis-budat.                   " Prior to
SELECTION-SCREEN END OF BLOCK 3.

* Begin MOD-006
SELECTION-SCREEN BEGIN OF BLOCK 4 WITH FRAME TITLE text-034.
PARAMETER: lv_check AS CHECKBOX.
PARAMETERS: p_postd TYPE budat.
PARAMETERS: p_rpostd TYPE budat.               " Prior to
SELECTION-SCREEN END OF BLOCK 4.

DATA: gv_date like bsid-budat,
      gv_error type c.
* End MOD-006


* INCLUDE yse_fico_wip_ageing_baltop                .  " Global Data
* INCLUDE yse_fico_wip_ageing_balev                 .  " Events
* INCLUDE YSE_FICO_WIP_AGEING_BALO01              .  " PBO-Modules     *
* INCLUDE YSE_FICO_WIP_AGEING_BALI01              .  " PAI-Modules     *
* INCLUDE YSE_FICO_WIP_AGEING_BALF01              .  " FORM-Routines   *


***********************************************************************
* OBJECTS                                                             *
***********************************************************************
DATA:  obj_container  TYPE REF TO cl_gui_docking_container,
       obj_alv        TYPE REF TO cl_gui_alv_grid.



************************************************************************
* TYPES                                                                *
************************************************************************
TYPES:
  BEGIN OF str_bsis,
    bukrs TYPE bsis-bukrs,    " Company Code
    gjahr TYPE bsis-gjahr,    " Fiscal year
    monat TYPE bsis-monat,    " Fiscal month
    blart TYPE bsis-blart,    " Document type
    belnr TYPE bsis-belnr,    " Accounting Doc nr
    buzei TYPE bsis-buzei,    " Line item nr
    bldat TYPE bsis-bldat,    " Document date
    budat TYPE bsis-budat,    " Posting date
    shkzg TYPE bsis-shkzg,    " Debit/Credit indicator
    dmbtr TYPE bsis-dmbtr,    " Amount in local currency
    waers TYPE bsis-waers,    " Currency
    prctr TYPE bsis-prctr,    " Profit Center
    zfbdt TYPE bsis-zfbdt,    " Baseline date for due date calc
    zuonr TYPE bsis-zuonr,    " FI doc assignment nr
    hkont TYPE bsis-hkont,    " GL account
* begin of insertion MOD-005
    segment TYPE bsis-segment, "segment
* end of insertion MOD-005
  END OF str_bsis,

  BEGIN OF str_output,
    prctr TYPE bsis-prctr,    " Profit Center
    waers LIKE bsis-waers,    " Company Code Currency
    blart LIKE bsis-blart,    " Document Type
    belnr LIKE bsis-belnr,    " Accounting Doc Nr
    bldat LIKE bsis-bldat,    " Document date in doc
    budat TYPE bsis-budat,    " Posting date
    rast1 LIKE bsid-dmbtr,    " Amount non due
    rast2 LIKE bsid-dmbtr,    " Amount  1-30
    rast3 LIKE bsid-dmbtr,    " Amount 31-60
    rast4 LIKE bsid-dmbtr,    " Amount 61-90
    rast5 LIKE bsid-dmbtr,    " Amount >90
    zuonr TYPE bsis-zuonr,    " FI doc assignment nr
    hkont TYPE bsis-hkont,    " GL account
    gjahr TYPE bsis-gjahr,    " Fiscal year
    monat TYPE bsis-monat,    " Fiscal month
* begin of insertion MOD-005
    segment TYPE bsis-segment, "segment
* end of insertion MOD-005
  END OF str_output.

*** Begin MOD-006
TYPES : BEGIN OF t_summ,

   segment like faglflexa-segment,
   rast1 LIKE bsid-dmbtr,
   rast2 LIKE bsid-dmbtr,
   rast3 LIKE bsid-dmbtr,
   rast4 LIKE bsid-dmbtr,
   rast5 LIKE bsid-dmbtr,
   rast6 LIKE bsid-dmbtr,

   END OF t_summ.

*** End MOD-006


************************************************************************
* INTERNAL TABLES                                                      *
************************************************************************
DATA:
  it_wips            TYPE TABLE OF str_bsis        WITH HEADER LINE,
  it_output          TYPE TABLE OF str_output      WITH HEADER LINE,
  wa_output          TYPE str_output,
  it_yse_wips_ageing LIKE yse_wips_ageing OCCURS 0 WITH HEADER LINE,
  it_fieldcat        TYPE lvc_t_fcat               WITH HEADER LINE.

*** Begin MOD-006
DATA: it_summ TYPE TABLE OF t_summ with header line.
DATA: wa_summ TYPE t_summ.
DATA: gv_mode    type c             value 'N',
      gt_err    LIKE bdcmsgcoll OCCURS 0 WITH HEADER LINE,
      lv_waers TYPE WAERS.
DATA: i_bdcdata LIKE bdcdata OCCURS 0 WITH HEADER LINE,
      struct_bdcdata TYPE bdcdata.

data:
      period like t009b-poper,
      year like bkpf-gjahr.
*** End MOD-006

************************************************************************
* CONSTANTS                                                            *
************************************************************************
CONSTANTS:
  gc_true      TYPE c VALUE 'X'.        " True


************************************************************************
* VARIABLES                                                            *
************************************************************************
DATA:
  gv_monat(2)  TYPE n,                  " Fiscal period
  gv_gjahr     LIKE t009b-bdatj,        " Fiscal year
  gv_waers     LIKE t001-waers,         " Currency
  gv_last_2(3) TYPE n,                  " Due date intervals
  gv_last_3(3) TYPE n,
  gv_last_4(3) TYPE n,
  okcode       LIKE sy-ucomm,           " return param screen 100
  gv_variant   TYPE disvariant,         " ALV layout variant
  gv_layout    TYPE lvc_s_layo.         " ALV layout


************************************************************************
* AT SELECTION SCREEN                                                  *
************************************************************************
AT SELECTION-SCREEN.

  PERFORM check_authorization.
  PERFORM check_intervals.

*** Begin MOD-006
   IF lv_check = 'X'.
     IF p_postd IS INITIAL.
      MESSAGE e027(yse_fico).
     ENDIF.
   ENDIF.

   IF lv_check = 'X'.
     IF p_rpostd IS INITIAL.
      MESSAGE e028(yse_fico).
     ENDIF.
   ENDIF.

  IF lv_check = 'X'.
     IF p_postd IS INITIAL.
      MESSAGE e027(yse_fico).
     ENDIF.
   ENDIF.

   IF lv_check = 'X'.
     IF p_rpostd IS INITIAL.
      MESSAGE e028(yse_fico).
     ENDIF.
   ENDIF.

IF lv_check = 'X'.
   IF p_rpostd <= p_postd.
     MESSAGE e029(yse_fico).
   ENDIF.
ENDIF.

IF lv_check = 'X'.


* check if the posting and reverse posting date in an open period
  gv_date = p_postd.

  call function 'FI_PERIOD_DETERMINE'
     exporting
          i_budat = gv_date
          i_bukrs = p_bukrs
     importing
          e_gjahr = year
          e_poper = period.


    CALL FUNCTION 'FI_PERIOD_CHECK'
      EXPORTING
        i_bukrs                = p_bukrs   " Company Code
        i_gjahr                = year  " This is we got from FM used above
        i_koart                = '+'
        i_konto                = '+'
        i_monat                = period   " This is we got from FM used above
     EXCEPTIONS
       error_period           = 1
       error_period_acc       = 2
       invalid_input          = 3
       OTHERS                 = 4.


  IF sy-subrc <> 0.
     MESSAGE e030(yse_fico).
  ENDIF.

  clear gv_date.
    gv_date = p_rpostd.

  call function 'FI_PERIOD_DETERMINE'
     exporting
          i_budat = gv_date
          i_bukrs = p_bukrs
     importing
          e_gjahr = year
          e_poper = period.

    CALL FUNCTION 'FI_PERIOD_CHECK'
      EXPORTING
        i_bukrs                = p_bukrs   " Company Code
        i_gjahr                = year  " This is we got from FM used above
        i_koart                = '+'
        i_konto                = '+'
        i_monat                = period   " This is we got from FM used above
     EXCEPTIONS
       error_period           = 1
       error_period_acc       = 2
       invalid_input          = 3
       OTHERS                 = 4.


  IF sy-subrc <> 0.
     MESSAGE e031(yse_fico).
  ENDIF.
ENDIF.
*** End MOD-006


************************************************************************
* START-OF-SELECTION                                                   *
************************************************************************
START-OF-SELECTION.

  PERFORM calc_period.

  PERFORM load_company_code_currency.

  PERFORM load_postings.

  PERFORM get_last_due_dates.

  PERFORM calc_due_ageing.

* Begin MOD-006

*** Summarize table it_output by segment into it_summ
LOOP at it_output into wa_output.
  move-corresponding wa_output to it_summ.
  collect it_summ.
ENDLOOP.

if lv_check = 'X'.


      PERFORM reposting TABLES it_summ.
 if gv_error = 'N'.
      PERFORM reverse_reposting TABLES it_summ.
 endif.

endif.
* End MOD-006

  PERFORM update_db.


************************************************************************
* END-OF-SELECTION                                                     *
************************************************************************
END-OF-SELECTION.

  IF sy-batch NE 'X'.

*   Display in ALV-grid
    CALL SCREEN 100.
  ENDIF.


************************************************************************
* MODULE STATUS_100 OUTPUT                                             *
************************************************************************
MODULE status_0100 OUTPUT.

  SET PF-STATUS '100'.
  SET TITLEBAR '100'.

ENDMODULE.       " STATUS_0100 OUTPUT


************************************************************************
* MODULE PREVARE_SCREEN OUTPUT                                         *
************************************************************************
MODULE prepare_screen OUTPUT.

  IF obj_container IS INITIAL.
*   Create a container
    CREATE OBJECT obj_container
      EXPORTING
        repid             =  sy-repid
        dynnr             =  sy-dynnr
        lifetime          =  cntl_lifetime_dynpro
*       ratio             =  90.
        extension         =  5000.

*   Create an ALV control
    CREATE OBJECT obj_alv
      EXPORTING
        i_parent = obj_container.

*   Set parameters regarding layout, etc.
    gv_variant-report = sy-cprog.
    gv_layout-cwidth_opt = gc_true.
    gv_layout-no_toolbar = ' '.

*   Create the field catalog
    PERFORM build_field_catalog.

*   Display the data in the ALV control
    CALL METHOD obj_alv->set_table_for_first_display
      EXPORTING
        i_save          = 'A'
        is_variant      = gv_variant
        is_layout       = gv_layout
      CHANGING
        it_outtab       = it_output[]
        it_fieldcatalog = it_fieldcat[].
  ELSE.
*   If ALV exists, refresh data without changing layout
    CALL METHOD obj_alv->refresh_table_display
      EXPORTING
        i_soft_refresh = 'X'.
  ENDIF.

ENDMODULE.    " PREPARE_SCREEN OUTPUT


***********************************************************************
** Module USER_COMMAND_0100 INPUT                                     *
***********************************************************************
MODULE user_command_0100 INPUT.
  CASE okcode.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
    WHEN 'EXIT'.
      LEAVE TO SCREEN 0.
  ENDCASE.  " okcode
ENDMODULE.  " USER_COMMAND_0100 INPUT


************************************************************************
* FORM CHECK_AUTHORIZATION                                             *
************************************************************************
FORM check_authorization.

  AUTHORITY-CHECK OBJECT 'F_KNA1_BUK'
                      ID 'BUKRS' FIELD p_bukrs
                      ID 'ACTVT' DUMMY.

  IF sy-subrc = 4.
*   No authorisation to display the data
    MESSAGE ID 'YSE_RENTAL' TYPE 'E' NUMBER '040' WITH p_bukrs.
  ELSEIF sy-subrc <> 0.
*   Error checking authorization.
    MESSAGE ID 'YSE_RENTAL' TYPE 'E' NUMBER '046'.
  ENDIF.

ENDFORM.                    " Check_Authorization


************************************************************************
* FORM CHECK_INTERVALS                                                 *
*----------------------------------------------------------------------*
* Description: Save data to the BW table is only allowed if the day    *
*              intervals are default.                                  *
************************************************************************
FORM check_intervals.

  CONSTANTS:
    lc_rastbis1(1) TYPE c VALUE '0',
    lc_rastbis2(5) TYPE c VALUE '1-30',
    lc_rastbis3(8) TYPE c VALUE '31-60',
    lc_rastbis4(8) TYPE c VALUE '61-90'.

  IF p_extr   EQ gc_true     AND
   ( rastbis1 NE lc_rastbis1 OR
     rastbis2 NE lc_rastbis2 OR
     rastbis3 NE lc_rastbis3 OR
     rastbis4 NE lc_rastbis4 ).

*   No authorisation to display the data
    MESSAGE ID 'YSE_RENTAL'
          TYPE 'E'
        NUMBER '000'
          WITH 'Download for BW not possible if the inter'(030)
               'vals are not default.'(031).
  ENDIF.

ENDFORM.                    " Check_Authorization


************************************************************************
* FORM CALC_PERIOD                                                     *
************************************************************************
* Description: Get the last day in the selected period.                *
************************************************************************
FORM calc_period.

  DATA:
    lv_periv     LIKE t001-periv,         " Fiscal year variant
    lv_period    LIKE t009b-poper.        " Posting period

  SELECT SINGLE periv
      INTO lv_periv
      FROM t001
     WHERE bukrs = p_bukrs.

  CALL FUNCTION 'G_PERIOD_GET'
    EXPORTING
      company                        = p_bukrs
      date                           = p_keydat
      variant                        = lv_periv
    IMPORTING
      period                         = lv_period
      year                           = gv_gjahr
    EXCEPTIONS
      ledger_not_assigned_to_company = 1
      period_not_defined             = 2
      variant_not_defined            = 3
      OTHERS                         = 4.

  IF sy-subrc <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*           WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ELSE.
    gv_monat = lv_period.
  ENDIF.

ENDFORM.                    " FIND_PERIOD


************************************************************************
* FORM LOAD_COMPANY_CODE_CURRENCY                                      *
************************************************************************
* Description: Loads the Company Code Currency.                        *
************************************************************************
FORM load_company_code_currency.

  SELECT SINGLE waers
      INTO gv_waers
      FROM t001
     WHERE bukrs EQ p_bukrs.

ENDFORM.                    " load_company_code_currency


************************************************************************
* FORM LOAD_POSTINGS                                                   *
************************************************************************
* Description:                                                         *
************************************************************************
FORM load_postings.

  DATA: lv_kmntend TYPE dats.

* Calculate end of keydate's month
  lv_kmntend = p_keydat.
  lv_kmntend+4(2) = lv_kmntend+4(2) + 1.    " add 1 month
  lv_kmntend = lv_kmntend - 1.              " substract 1 day

  SELECT bukrs gjahr monat blart
         belnr buzei bldat budat
         shkzg dmbtr waers prctr
         zfbdt zuonr hkont
* begin of insertion MOD-005
         segment
* begin of insertion MOD-005
      INTO TABLE it_wips
      FROM bsis                             " -> Postings table
     WHERE   bukrs EQ p_bukrs            " Company Code
       AND   hkont IN so_hkont           " General Ledger Account
       AND   budat LE p_keydat.          " Posting date >= key date  " MOD-004
*      AND ( budat LE p_keydat           " Posting date >= key date  " MOD-004
*       OR   bldat LE p_keydat ).        " Doc date >= key date      " MOD-004

* Read all clearings with document date before the keydate
* and clearing date after the key date
  SELECT bukrs gjahr monat blart
         belnr buzei bldat budat
         shkzg dmbtr waers prctr
         zfbdt zuonr hkont
* begin of insertion MOD-005
         segment
* begin of insertion MOD-005
      APPENDING TABLE it_wips
      FROM bsas                            " -> Clearings table
     WHERE bukrs EQ p_bukrs                " Company Code
       AND hkont IN so_hkont               " General Ledger Account
       AND budat LE p_keydat               " Posting date <= Key date
       AND augdt GT p_keydat.              " Clearing date > key date

  SORT it_wips.

* begin of insertion MOD-005
  LOOP AT it_wips.
    IF it_wips-segment IS INITIAL.
      it_wips-segment = it_wips-prctr.
      MODIFY it_wips.
    ENDIF.
  ENDLOOP.
* end of insertion MOD-005

ENDFORM.  " load_postings


************************************************************************
* FORM GET_LAST_DUE_DATES                                              *
************************************************************************
* Description: Analyses the interval entries and extracts the amount   *
*              of days to calculate the due dates.                     *
************************************************************************
FORM get_last_due_dates.

  SEARCH rastbis2 FOR '-'.
  MOVE rastbis2+sy-fdpos TO gv_last_2.

  SEARCH rastbis3 FOR '-'.
  MOVE rastbis3+sy-fdpos TO gv_last_3.

  SEARCH rastbis4 FOR '-'.
  MOVE rastbis4+sy-fdpos TO gv_last_4.

ENDFORM.   " get_last_due_dates


************************************************************************
* FORM CALC_DUE_AGEING                                                 *
************************************************************************
* Description: Analyses the interval entries and extracts the amount   *
*              of days to calculate the due dates.                     *
************************************************************************
FORM calc_due_ageing.

  DATA:
    wa_faede         LIKE faede,
    lv_days_overdue  TYPE i.

  CONSTANTS:
    lc_neg           TYPE shkzg VALUE 'H'.

  LOOP AT it_wips.
*   Copy standard fields
    MOVE-CORRESPONDING it_wips TO it_output.
    lv_days_overdue = p_keydat - it_wips-bldat.

*   Check debit/credit indicator and adjust accordingly
    IF it_wips-shkzg = lc_neg.
      it_wips-dmbtr = 0 - it_wips-dmbtr.
    ENDIF.
*   Insert amounts in correct interval
    IF lv_days_overdue <= gv_last_2.
      it_output-rast2 = it_wips-dmbtr.
    ELSEIF lv_days_overdue <= gv_last_3.
      it_output-rast3 = it_wips-dmbtr.
    ELSEIF lv_days_overdue <= gv_last_4.
      it_output-rast4 = it_wips-dmbtr.
    ELSE.
      it_output-rast5 = it_wips-dmbtr.  " it_output-rast6
    ENDIF.

    APPEND it_output.
    CLEAR  it_output.
  ENDLOOP.    " it_wips

  SORT it_output BY belnr.

ENDFORM.                    " calculate_due_ageing


************************************************************************
* Form                 : UPDATE_DB                                     *
*----------------------------------------------------------------------*
* Description          : Saves the data to a dbase to be used by BW.   *
************************************************************************
FORM update_db.

  IF p_extr EQ 'X'.
*   Refill table for BW upload
    DELETE FROM yse_wips_ageing
       WHERE bukrs EQ p_bukrs
         AND keydat = p_keydat.

*    COMMIT WORK AND WAIT.
    LOOP AT it_output.              " INTO wa_output.
*     Copy the WIPS data
      MOVE-CORRESPONDING it_output TO it_yse_wips_ageing.
*     Copy fiscal period and year
      MOVE gv_monat TO it_yse_wips_ageing-monat.
      MOVE gv_gjahr TO it_yse_wips_ageing-gjahr.
*     Copy the Company code
      MOVE p_bukrs  TO it_yse_wips_ageing-bukrs.
*     Change Currency to Company Code Currency
      MOVE gv_waers TO it_yse_wips_ageing-waers.
*     Copy the new key date
      MOVE p_keydat TO it_yse_wips_ageing-keydat.
      APPEND it_yse_wips_ageing.
    ENDLOOP.

    SORT it_yse_wips_ageing.
    MODIFY yse_wips_ageing FROM TABLE it_yse_wips_ageing.

*    COMMIT WORK.
  ENDIF.

* Delete records before selected date
  IF p_del = 'X'.
    DELETE FROM yse_wips_ageing
       WHERE bukrs  EQ p_bukrs
         AND hkont  IN so_hkont
         AND keydat LT p_date.
  ENDIF.

ENDFORM.  " save_data

************************************************************************
* ALV GRID                                                             *
************************************************************************


************************************************************************
* FORM BUILD_FIELD_CATALOG                                             *
************************************************************************
FORM build_field_catalog.

  DATA: lv_text(30).

  CLEAR it_fieldcat.

  it_fieldcat-fieldname = 'PRCTR'.
  it_fieldcat-coltext   = 'Profit center'(005).
  it_fieldcat-tooltip   = 'Profit ctr'(006).
  APPEND it_fieldcat.

  it_fieldcat-fieldname = 'WAERS'.
  it_fieldcat-coltext   = 'Curr'(007).
  it_fieldcat-tooltip   = 'Currency code'(008).
  APPEND it_fieldcat.

  it_fieldcat-fieldname = 'BLART'.
  it_fieldcat-coltext   = 'Doc Type'(009).
  it_fieldcat-tooltip   = 'Document type'(010).
  APPEND it_fieldcat.

  it_fieldcat-fieldname = 'BELNR'.
  it_fieldcat-coltext   = 'Acc doc'(011).
  it_fieldcat-tooltip   = 'Account document'(012).
  APPEND it_fieldcat.

  it_fieldcat-fieldname = 'BLDAT'.
  it_fieldcat-coltext   = 'Doc date'(013).
  it_fieldcat-tooltip   = 'Document date'(014).
  APPEND it_fieldcat.

  it_fieldcat-fieldname = 'BUDAT'.
  it_fieldcat-coltext   = 'Post date'(015).
  it_fieldcat-tooltip   = 'Posting date'(016).
  APPEND it_fieldcat.

  it_fieldcat-fieldname = 'RAST1'.
  it_fieldcat-coltext   = 'None due'(017).
  it_fieldcat-tooltip   = 'Outside selected intervals'(018).
  APPEND it_fieldcat.

  it_fieldcat-fieldname = 'RAST2'.
  CONCATENATE 'Overdue' rastbis2 INTO lv_text SEPARATED BY space.
  it_fieldcat-coltext   = lv_text.
  it_fieldcat-tooltip   = lv_text.
  APPEND it_fieldcat.

  it_fieldcat-fieldname = 'RAST3'.
  CONCATENATE 'Overdue' rastbis3 INTO lv_text SEPARATED BY space.
  it_fieldcat-coltext   = lv_text.
  it_fieldcat-tooltip   = lv_text.
  APPEND it_fieldcat.

  it_fieldcat-fieldname = 'RAST4'.
  CONCATENATE 'Overdue' rastbis4 INTO lv_text SEPARATED BY space.
  it_fieldcat-coltext   = lv_text.
  it_fieldcat-tooltip   = lv_text.
  APPEND it_fieldcat.

  it_fieldcat-fieldname = 'RAST5'.
  CONCATENATE 'Overdue >' rastbis4+3(3) INTO lv_text SEPARATED BY space.
  it_fieldcat-coltext   = lv_text.   " 'Overdue >90'(019).
  it_fieldcat-tooltip   = lv_text.   " 'Overdue >90'(020).
  APPEND it_fieldcat.

  it_fieldcat-fieldname = 'ZUONR'.
  it_fieldcat-coltext   = 'Assignment'(021).
  it_fieldcat-tooltip   = 'Assignment number'(022).
  APPEND it_fieldcat.

  it_fieldcat-fieldname = 'HKONT'.
  it_fieldcat-coltext   = 'GL account'(023).
  it_fieldcat-tooltip   = 'General ledger account'(024).
  APPEND it_fieldcat.

  it_fieldcat-fieldname = 'GJAHR'.
  it_fieldcat-coltext   = 'Fisc year'(025).
  it_fieldcat-tooltip   = 'Fiscal year'(026).
  APPEND it_fieldcat.

  it_fieldcat-fieldname = 'MONAT'.
  it_fieldcat-coltext   = 'Fisc period'(027).
  it_fieldcat-tooltip   = 'Fiscal period'(028).
  APPEND it_fieldcat.
* begin of insertion MOD-005
  it_fieldcat-fieldname = 'SEGMENT'.
  it_fieldcat-coltext   = 'Segment'(032).
  it_fieldcat-tooltip   = 'Segment for Segmental Reporting'(033).
  APPEND it_fieldcat.
* end of insertion MOD-005
ENDFORM.    " build_field_catalog

*** Begin MOD-006
FORM reposting  tables it_summ.

data: lv_account type saknr,
      lv_date type d,
      lv_wrbtr type char16,
      lv_rast type t_summ-rast1,
      lv_newbs(2) type c,
      lv_first type c.
* 1st posting
  refresh: i_bdcdata,
           gt_err.



* Post document: Header Data
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0100'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  clear lv_date.
  write p_postd to lv_date.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BKPF-BLDAT'  lv_date
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BKPF-BUDAT'  lv_date
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BKPF-BLART'  'SA'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BKPF-BUKRS' p_bukrs
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  clear lv_waers.
  SELECT SINGLE WAERS FROM T001 INTO lv_waers
    WHERE BUKRS = p_bukrs.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BKPF-WAERS'  lv_waers
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  clear lv_date.
  write p_keydat to lv_date.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BKPF-XBLNR'  lv_date
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BKPF-BKTXT'  'WIP Ageing-Reclass'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  lv_first = 'Y'.

  LOOP AT it_summ into wa_summ.

     wa_summ-rast1 = wa_summ-rast1 + wa_summ-rast2 + wa_summ-rast3.
     wa_summ-rast2 = wa_summ-rast4.
     wa_summ-rast3 = wa_summ-rast5.
     if wa_summ-rast1 is not initial or wa_summ-rast2 is not initial or
        wa_summ-rast3 is not initial.


***************
if wa_summ-rast1 is not initial.
if lv_first = 'N'.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0330'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
endif.
if wa_summ-rast1 < 0.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWBS'  '50'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
elseif wa_summ-rast1 > 0.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWBS'  '40'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
endif.


  lv_account = '1443901'.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWKO' lv_account
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '/00'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
* Item 1

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0300' 'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  clear lv_wrbtr.
  clear lv_rast.
  lv_rast = abs( wa_summ-rast1 ).
  write lv_rast to lv_wrbtr.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BSEG-WRBTR'  lv_wrbtr
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ZK'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


* Coding block
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPLKACB'  '0002'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'COBL-SEGMENT'  wa_summ-segment
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ENTE'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
lv_first = 'N'.
endif.
***
if wa_summ-rast2 is not initial.
if lv_first = 'N'.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0330'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
endif.
if wa_summ-rast2 < 0.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWBS'  '50'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
elseif wa_summ-rast2 > 0.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWBS'  '40'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
endif.


  lv_account = '1444901'.


  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWKO' lv_account
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '/00'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

* Item 1

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0300' 'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  clear lv_wrbtr.
  clear lv_rast.
  lv_rast = abs( wa_summ-rast2 ).
  write lv_rast to lv_wrbtr.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BSEG-WRBTR'  lv_wrbtr
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ZK'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

* Coding block
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPLKACB'  '0002'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'COBL-SEGMENT'  wa_summ-segment
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ENTE'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

lv_first = 'N'.
endif.
***
if wa_summ-rast3 is not initial.
if lv_first = 'N'.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0330'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
endif.
if wa_summ-rast3 < 0.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWBS'  '50'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
elseif wa_summ-rast3 > 0.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWBS'  '40'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
endif.


  lv_account = '1445901'.


  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWKO' lv_account
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '/00'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
* Item 1

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0300' 'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  clear lv_wrbtr.
  clear lv_rast.
  lv_rast = abs( wa_summ-rast3 ).
  write lv_rast to lv_wrbtr.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BSEG-WRBTR'  lv_wrbtr
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ZK'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

* Coding block
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPLKACB'  '0002'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'COBL-SEGMENT'  wa_summ-segment
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ENTE'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
lv_first = 'N'.
endif.


******************


*  write wa_yse_round_post-BLDAT to lv_bldat.
*  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
*       USING    ''  ''  ''  'BSEG-ZFBDT'  lv_bldat
*          CHANGING struct_bdcdata.
*  APPEND struct_bdcdata  TO i_bdcdata.
*  CLEAR  struct_bdcdata.

**************************************************************

 clear lv_wrbtr.
 clear lv_rast.
 clear lv_newbs.
 lv_rast = wa_summ-rast1 + wa_summ-rast2 + wa_summ-rast3.
   if lv_rast < 0.
   lv_newbs = '40'.
 else.
   lv_newbs = '50'.
 endif.
 lv_rast =  abs( lv_rast ).
 write lv_rast to lv_wrbtr.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0330'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWBS'  lv_newbs
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWKO'  '1441910'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '/00'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

* Add G/L Account Item
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0300'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


 PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BSEG-WRBTR'  lv_wrbtr
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ZK'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

* Coding block
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPLKACB'  '0002'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'COBL-SEGMENT'  wa_summ-segment
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ENTE'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


  endif.

 ENDLOOP.

************************************ end posting and save


  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0330'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


* PERFORM fill_bdcdata IN PROGRAM yam_common_routines
*       USING    ''  ''  ''  'BSEG-WRBTR'  lv_wrbtr
*          CHANGING struct_bdcdata.
*  APPEND struct_bdcdata  TO i_bdcdata.
*  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=BU'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.



** Coding block
*  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
*           USING    'SAPLKACB'  '0002'  'X'  ''   ''
*           CHANGING struct_bdcdata.
*  APPEND struct_bdcdata  TO i_bdcdata.
*  CLEAR  struct_bdcdata.
*
*  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
*       USING    ''  ''  ''  'COBL-SEGMENT'  wa_summ-segment
*          CHANGING struct_bdcdata.
*  APPEND struct_bdcdata  TO i_bdcdata.
*  CLEAR  struct_bdcdata.
*
*  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
*           USING    ''  ''  ''  'BDC_OKCODE'  '=ENTE'
*           CHANGING struct_bdcdata.
*  APPEND struct_bdcdata  TO i_bdcdata.
*  CLEAR  struct_bdcdata.




 gv_error = 'N'.
 call transaction 'FB01' using i_bdcdata
 update 'S' mode gv_mode messages into gt_err.
   if sy-subrc = 0.
       gv_error = 'N'.
       LOOP AT gt_err.
         if gt_err-msgtyp = 'A' or gt_err-msgtyp = 'E'.
           gv_error = 'Y'.
         endif.
       ENDLOOP.
   else.
       gv_error = 'Y'.
   endif.

ENDFORM.

FORM reverse_reposting  tables  it_summ.

data: lv_account type saknr,
      lv_date type d,
      lv_wrbtr type char16,
      lv_rast type t_summ-rast1,
      lv_newbs(2) type c,
      lv_first type c.
* 1st posting
  refresh: i_bdcdata,
           gt_err.

* Post document: Header Data
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0100'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  clear lv_date.
  write p_rpostd to lv_date.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BKPF-BLDAT'  lv_date
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BKPF-BUDAT'  lv_date
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BKPF-BLART'  'SA'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BKPF-BUKRS' p_bukrs
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  clear lv_waers.
  SELECT SINGLE WAERS FROM T001 INTO lv_waers
    WHERE BUKRS = p_bukrs.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BKPF-WAERS'  lv_waers
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  clear lv_date.
  write p_keydat to lv_date.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BKPF-XBLNR'  lv_date
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BKPF-BKTXT'  'WIP Ageing-Reclass'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


lv_first = 'Y'.

 LOOP AT it_summ into wa_summ.

    wa_summ-rast1 = wa_summ-rast1 + wa_summ-rast2 + wa_summ-rast3.
    wa_summ-rast2 = wa_summ-rast4.
    wa_summ-rast3 = wa_summ-rast5.
    if wa_summ-rast1 is not initial or wa_summ-rast2 is not initial or
        wa_summ-rast3 is not initial.

***************
if wa_summ-rast1 is not initial.
if lv_first = 'N'.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0330'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
endif.
if wa_summ-rast1 < 0.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWBS'  '40'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
elseif wa_summ-rast1 > 0.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWBS'  '50'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
endif.


  lv_account = '1443901'.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWKO' lv_account
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '/00'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
* Item 1

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0300' 'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  clear lv_wrbtr.
  clear lv_rast.
  lv_rast = abs( wa_summ-rast1 ).
  write lv_rast to lv_wrbtr.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BSEG-WRBTR'  lv_wrbtr
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ZK'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


* Coding block
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPLKACB'  '0002'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'COBL-SEGMENT'  wa_summ-segment
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ENTE'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
lv_first = 'N'.
endif.
***
if wa_summ-rast2 is not initial.
if lv_first = 'N'.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0330'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
endif.
if wa_summ-rast2 < 0.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWBS'  '40'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
elseif wa_summ-rast2 > 0.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWBS'  '50'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
endif.


  lv_account = '1444901'.


  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWKO' lv_account
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '/00'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

* Item 1

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0300' 'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  clear lv_wrbtr.
  clear lv_rast.
  lv_rast = abs( wa_summ-rast2 ).
  write lv_rast to lv_wrbtr.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BSEG-WRBTR'  lv_wrbtr
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ZK'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

* Coding block
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPLKACB'  '0002'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'COBL-SEGMENT'  wa_summ-segment
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ENTE'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

lv_first = 'N'.
endif.
***
if wa_summ-rast3 is not initial.
if lv_first = 'N'.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0330'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
endif.
if wa_summ-rast3 < 0.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWBS'  '40'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
elseif wa_summ-rast3 > 0.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWBS'  '50'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
endif.


  lv_account = '1445901'.


  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWKO' lv_account
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '/00'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
* Item 1

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0300' 'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  clear lv_wrbtr.
  clear lv_rast.
  lv_rast = abs( wa_summ-rast3 ).
  write lv_rast to lv_wrbtr.
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BSEG-WRBTR'  lv_wrbtr
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ZK'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

* Coding block
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPLKACB'  '0002'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'COBL-SEGMENT'  wa_summ-segment
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ENTE'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.
lv_first = 'N'.
endif.
***
*  write wa_yse_round_post-BLDAT to lv_bldat.
*  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
*       USING    ''  ''  ''  'BSEG-ZFBDT'  lv_bldat
*          CHANGING struct_bdcdata.
*  APPEND struct_bdcdata  TO i_bdcdata.
*  CLEAR  struct_bdcdata.

**************************************************************

 clear lv_wrbtr.
 clear lv_rast.
 clear lv_newbs.
 lv_rast = wa_summ-rast1 + wa_summ-rast2 + wa_summ-rast3.
 write lv_rast to lv_wrbtr.
  if lv_rast < 0.
   lv_newbs = '50'.
 else.
   lv_newbs = '40'.
 endif.
 lv_rast =  abs( lv_rast ).

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0330'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWBS'  lv_newbs
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'RF05A-NEWKO'  '1441910'
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '/00'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

* Add G/L Account Item
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0300'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


 PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'BSEG-WRBTR'  lv_wrbtr
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ZK'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.

* Coding block
  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPLKACB'  '0002'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
       USING    ''  ''  ''  'COBL-SEGMENT'  wa_summ-segment
          CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=ENTE'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


   endif.

  ENDLOOP.

********************************** end booking + save


  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    'SAPMF05A'  '0330'  'X'  ''   ''
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


* PERFORM fill_bdcdata IN PROGRAM yam_common_routines
*       USING    ''  ''  ''  'BSEG-WRBTR'  lv_wrbtr
*          CHANGING struct_bdcdata.
*  APPEND struct_bdcdata  TO i_bdcdata.
*  CLEAR  struct_bdcdata.

  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
           USING    ''  ''  ''  'BDC_OKCODE'  '=BU'
           CHANGING struct_bdcdata.
  APPEND struct_bdcdata  TO i_bdcdata.
  CLEAR  struct_bdcdata.


* Coding block
*  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
*           USING    'SAPLKACB'  '0002'  'X'  ''   ''
*           CHANGING struct_bdcdata.
*  APPEND struct_bdcdata  TO i_bdcdata.
*  CLEAR  struct_bdcdata.
*
*  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
*       USING    ''  ''  ''  'COBL-SEGMENT'  wa_summ-segment
*          CHANGING struct_bdcdata.
*  APPEND struct_bdcdata  TO i_bdcdata.
*  CLEAR  struct_bdcdata.
*
*  PERFORM fill_bdcdata IN PROGRAM yam_common_routines
*           USING    ''  ''  ''  'BDC_OKCODE'  '=ENTE'
*           CHANGING struct_bdcdata.
*  APPEND struct_bdcdata  TO i_bdcdata.
*  CLEAR  struct_bdcdata.
*
*
  call transaction 'FB01' using i_bdcdata
  update 'S' mode gv_mode messages into gt_err.

ENDFORM.

*** End MOD-006
*Text symbol text£º
*001:General selections
*002:Further selections
*003:Ageing time in days
*004:Delete old data
*005:Profit center
*006:Profit ctr
*007:Curr
*008:Currency code
*009:Doc Type
*010:Document type
*011:Acc doc
*012:Account document
*013:Doc date
*014:Document date
*015:Post date
*016:Posting date
*017:None due
*018:Outside selected intervals
*019:Overdue >90
*020:Overdue >90
*021:Assignment
*022:Assignment number
*023:GL account
*024:General ledger account
*025:Fisc year
*026:Fiscal year
*027:Fisc period
*028:Fiscal period
*030:Download for BW not possible if the inter
*031:vals are not default.
*032:Segment
*033:Segment for Segmental Reporting

*034:Reclass Postings
*Selection text£º
*LV_CHECK:        Create reclass postings in FI
*P_BUKRS:        Company code
*P_DATE:        Prior to
*P_DEL:        Delete old data
*P_EXTR:        Extract for BW
*P_KEYDAT:        Keydate
*P_POSTD:        Posting date reposting
*P_RPOSTD:        Posting date reposting reverse
*RASTBIS1:        Ageing time 0
*RASTBIS2:        Ageing time  30
*RASTBIS3:        Ageing time  60
*RASTBIS4:        Ageing time  90
*SO_HKONT:        G/L Account
