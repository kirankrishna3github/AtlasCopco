*&---------------------------------------------------------------------*
*& Report  YSE_UPLOAD_STANDARD_COSTS                                  *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  yse_upload_standard_costs  MESSAGE-ID yse_sales_log .


*----------------------------------------------------------------------*
* PROGRAM ID           : YSE_UPLOAD_STANDARD_COSTS
* PROGRAM TITLE        : Upload standard costs from text file         *
* AUTHOR               : Andr¨¦ Blommaert                               *
* DATE                 : 14/02/2007                                    *
* DEVELOPMENT ID       : D184-SDMM-Upload of calculated Standard Costs
**                        (in material master)
*                                                                      *
* CHANGE REQUEST NUMBER: CD1K910573                                    *
*                                                                      *
* Program Description:  Upload program for calculated STANDARD COSTS
*                       in material master
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*
*                                                                      *
************************************************************************

************************************************************************
*                   T A B L E S                                        *
************************************************************************
************************************************************************
*                   TYPES                                *
************************************************************************
TYPES: BEGIN OF t_input,
   budat LIKE mkpf-budat,
   bukrs LIKE t001-bukrs,
   werks LIKE eine-werks,
   matnr LIKE eina-matnr,
   stprs(15),
   END OF t_input.


************************************************************************
*                   V A R I A B L E S                                  *
************************************************************************
DATA: wa_input TYPE t_input.
************************************************************************
*                  I N T E R N A L   T A B L E S                       *
************************************************************************
DATA: it_input TYPE TABLE OF t_input WITH HEADER LINE.
.

************************************************************************
*                  FIELD-SYMBOLS                       *
************************************************************************

.
************************************************************************
*       S E L E C T - O P T I O N S / P A R A M E T E R S              *
************************************************************************

SELECTION-SCREEN : BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.


PARAMETERS: p_upfile LIKE rlgrap-filename
        DEFAULT 'c:\temp\standard_costs.txt' OBLIGATORY.




SELECTION-SCREEN : END OF BLOCK b1.

SELECTION-SCREEN SKIP 2.

INCLUDE bdcrecx1.

***********
*  AT SELECTION SCREEN
*-----------------------------------------------------------------------

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_upfile.

  PERFORM file_lookup USING p_upfile.


************************************************************************
*       S T A R T - O F - S E L E C T I O N                            *
************************************************************************
START-OF-SELECTION.

  PERFORM upload_standard_costs TABLES it_input
                                 USING p_upfile.


  PERFORM open_group.

  PERFORM create_batch_input_mr21 TABLES it_input.


  PERFORM close_group.



*&---------------------------------------------------------------------*
*&      Form  file_lookup
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_P_UPFILE  text
*----------------------------------------------------------------------*
FORM file_lookup  USING    p_p_upfile.

  DATA: lv_filesel LIKE ibipparms-path.

  CALL FUNCTION 'F4_FILENAME'
    EXPORTING
      program_name  = syst-repid
      dynpro_number = syst-dynnr
    IMPORTING
      file_name     = lv_filesel
    EXCEPTIONS
      OTHERS        = 1.

  p_p_upfile = lv_filesel.


ENDFORM.                    " file_lookup
*&---------------------------------------------------------------------*
*&      Form  UPLOAD_TRANSFER_PRICES
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_INPUT  text
*      -->P_P_UPFILE  text
*----------------------------------------------------------------------*
FORM upload_transfer_prices  TABLES   p_it_input STRUCTURE wa_input
                             USING    p_p_upfile.

  DATA: lv_filename TYPE string.

  MOVE p_p_upfile TO lv_filename.

  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      filename                      = lv_filename
     filetype                      = 'ASC'
      has_field_separator           = 'X'
*     HEADER_LENGTH                 = 0
*     READ_BY_LINE                  = 'X'
*     DAT_MODE                      = ' '
*     CODEPAGE                      = ' '
*     IGNORE_CERR                   = ABAP_TRUE
*     REPLACEMENT                   = '#'
*     CHECK_BOM                     = ' '
*     NO_AUTH_CHECK                 = ' '
*   IMPORTING
*     FILELENGTH                    =
*     HEADER                        =
    TABLES
      data_tab                      =  p_it_input
   EXCEPTIONS
     file_open_error               = 1
     file_read_error               = 2
     no_batch                      = 3
     gui_refuse_filetransfer       = 4
     invalid_type                  = 5
     no_authority                  = 6
     unknown_error                 = 7
     bad_data_format               = 8
     header_not_allowed            = 9
     separator_not_allowed         = 10
     header_too_long               = 11
     unknown_dp_error              = 12
     access_denied                 = 13
     dp_out_of_memory              = 14
     disk_full                     = 15
     dp_timeout                    = 16
     OTHERS                        = 17
            .
  IF sy-subrc <> 0.

* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.




ENDFORM.                    " UPLOAD_TRANSFER_PRICES
*&---------------------------------------------------------------------*
*&      Form  find_existing_purch_inforecs
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_INPUT  text
*      -->P_IT_EXISTING_INFORECS  text
*----------------------------------------------------------------------*
FORM find_existing_purch_inforecs  TABLES p_it_input STRUCTURE wa_input.


  READ TABLE p_it_input INDEX 1.

  CHECK sy-subrc EQ 0.

  LOOP AT p_it_input.
    CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
      EXPORTING
        input        = p_it_input-matnr
      IMPORTING
        output       = p_it_input-matnr
      EXCEPTIONS
        length_error = 1
        OTHERS       = 2.
    IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    MODIFY p_it_input.

  ENDLOOP.







ENDFORM.                    " find_existing_purch_inforecs





*&---------------------------------------------------------------------*
*&      Form  upload_standard_costs
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_INPUT  text
*      -->P_P_UPFILE  text
*----------------------------------------------------------------------*
FORM upload_standard_costs  TABLES   p_it_input STRUCTURE wa_input
                            USING    p_p_upfile.

  DATA: lv_filename TYPE string.

  MOVE p_p_upfile TO lv_filename.

  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      filename                      = lv_filename
     filetype                      = 'ASC'
      has_field_separator           = 'X'
*     HEADER_LENGTH                 = 0
*     READ_BY_LINE                  = 'X'
*     DAT_MODE                      = ' '
*     CODEPAGE                      = ' '
*     IGNORE_CERR                   = ABAP_TRUE
*     REPLACEMENT                   = '#'
*     CHECK_BOM                     = ' '
*     NO_AUTH_CHECK                 = ' '
*   IMPORTING
*     FILELENGTH                    =
*     HEADER                        =
    TABLES
      data_tab                      =  p_it_input
   EXCEPTIONS
     file_open_error               = 1
     file_read_error               = 2
     no_batch                      = 3
     gui_refuse_filetransfer       = 4
     invalid_type                  = 5
     no_authority                  = 6
     unknown_error                 = 7
     bad_data_format               = 8
     header_not_allowed            = 9
     separator_not_allowed         = 10
     header_too_long               = 11
     unknown_dp_error              = 12
     access_denied                 = 13
     dp_out_of_memory              = 14
     disk_full                     = 15
     dp_timeout                    = 16
     OTHERS                        = 17
            .
  IF sy-subrc <> 0.

* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.





ENDFORM.                    " upload_standard_costs
*&---------------------------------------------------------------------*
*&      Form  create_batch_input_mr21
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_INPUT  text
*----------------------------------------------------------------------*
FORM create_batch_input_mr21  TABLES   p_it_input STRUCTURE wa_input.

  LOOP AT p_it_input.

    PERFORM bdc_dynpro      USING 'SAPRCKM_MR21' '0201'.
    PERFORM bdc_field       USING 'BDC_CURSOR'
                                  'MR21HEAD-BUDAT'.

    PERFORM bdc_field       USING 'BDC_OKCODE'
                                  '=ENTR'.



    PERFORM bdc_field       USING 'MR21HEAD-BUDAT'
                                   p_it_input-budat.



    PERFORM bdc_field       USING 'MR21HEAD-BUKRS'
                                   p_it_input-bukrs.

    PERFORM bdc_field       USING 'MR21HEAD-WERKS'
                                   p_it_input-werks.


**********************

    PERFORM bdc_dynpro      USING 'SAPRCKM_MR21' '0201'.
    PERFORM bdc_field       USING 'BDC_CURSOR'
                                  'MR21HEAD-BUDAT'.

    PERFORM bdc_field       USING 'BDC_OKCODE'
                                  '=ENTR'.



    PERFORM bdc_field       USING 'CKI_MR21_0250-MATNR(01)'
                                   p_it_input-matnr.



    PERFORM bdc_field       USING 'CKI_MR21_0250-NEWVALPR(01)'
                                   p_it_input-stprs.

***************

    PERFORM bdc_dynpro      USING 'SAPRCKM_MR21' '0201'.

    PERFORM bdc_field       USING 'BDC_OKCODE'
                                   '=SAVE'.

    PERFORM bdc_transaction USING 'MR21'.






  ENDLOOP.

ENDFORM.                    " create_batch_input_mr21

*Text symbol text£º
*001:Selections
*E00:Error opening dataset, return code:
*I01:Session name
*I02:Open session
*I03:Insert transaction
*I04:Close Session
*I05:Return code =
*I06:Error session created
*S01:Session name
*S02:User
*S03:Keep session
*S04:Lock date
*S05:Processing Mode
*S06:Update Mode
*S07:Generate session
*S08:Call transaction
*S09:Error sessn

*S10:Nodata indicator
*Selection text£º
*P_DOWNF:        Downl. file non-exist inforecs
*P_UPFILE:        Upload file
