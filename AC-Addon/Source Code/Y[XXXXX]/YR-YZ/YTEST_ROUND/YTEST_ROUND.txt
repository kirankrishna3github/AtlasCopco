*&---------------------------------------------------------------------*
*& Report  YTEST_ROUND
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  ytest_round.
break EXTVPA.
*DATA : p_val type vemng VALUE '2.99'.
*
*CALL FUNCTION 'ROUND'
*  EXPORTING
*   DECIMALS            = 2
*    input               = p_val
*   SIGN                = 'X'
* IMPORTING
*   OUTPUT              = p_val.
** EXCEPTIONS
**   INPUT_INVALID       = 1
**   OVERFLOW            = 2
**   TYPE_INVALID        = 3
**   OTHERS              = 4
*          .
*IF sy-subrc <> 0.
** MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*ENDIF.
*
*WRITE : / p_val.

*DATA :
*wa_test TYPE vemng,
*wa_test1 TYPE vemng ,
*wa_test2 TYPE vemng.
*
*DATA :
*wa_test3(10) TYPE p DECIMALS 2.
*wa_test3 = '10.009'.
*wa_test3 = FLOOR( wa_test3 ).
*
*wa_test = '15.67'.
*wa_test1 = '10.0091'.
*
*wa_test2 = '1.99'.
*
*wa_test = CEIL( wa_test ).
*wa_test1 = CEIL( wa_test1 ).
*wa_test2 = CEIL( wa_test2 ).
*WRITE : / wa_test,wa_test1,wa_test2,wa_test3.
*data : v_int type i.
PARAMETERS : p_val(15) TYPE c.
*v_int = p_val.
*
*write :/ v_int.
DATA :   lv_vemng TYPE i.


lv_vemng = p_val.
*WRITE : / lv_vemng,p_val.
*
*IF caufvd_imp IS NOT INITIAL.
*  CLEAR: lv_flag,wa_iloan,wa_seo_sales.
*  SELECT SINGLE iloan
*                FROM iloa
*                INTO wa_iloan
*      WHERE vkorg = caufvd_imp-vkorg
*        AND vtweg = caufvd_imp-vtweg
*        AND spart = caufvd_imp-spart.
*  IF sy-subrc = 0.
*    SELECT SINGLE *
*           FROM yse_seo_sales
*           INTO wa_seo_sales
*        WHERE vkorg = caufvd_imp-vkorg
*        AND   vtweg = caufvd_imp-vtweg
*        AND   spart = caufvd_imp-spart
*        AND   bemot = caufvd_imp-bemot.
*    IF sy-subrc = 0.
*      lv_flag = c_x.
*    ENDIF.
*  ENDIF.
*ENDIF.
