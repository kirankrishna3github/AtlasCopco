*----------------------------------------------------------------------*
*INCLUDE YSE_SDMM_SURPLUS_NEW_O01                                     *
*----------------------------------------------------------------------*


*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
MODULE STATUS_0100 OUTPUT.

  SET PF-STATUS '100'.
  SET TITLEBAR '100'.

ENDMODULE.                 " STATUS_0100  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  build_screen_100  OUTPUT
*&---------------------------------------------------------------------*
MODULE BUILD_SCREEN_100 OUTPUT.

  IF MY_CONTAINER IS INITIAL.
*   Create the container
    CREATE OBJECT MY_CONTAINER
      EXPORTING
          REPID           =  SY-REPID
          DYNNR           =  SY-DYNNR
          LIFETIME        =  CNTL_LIFETIME_DYNPRO
*          RATIO           =  90.
          EXTENSION       =  5000.

*   Create the ALV control
    CREATE OBJECT MY_ALV
      EXPORTING
          I_PARENT  =  MY_CONTAINER.
*   Set parameters regarding layout, etc.
    IF NOT VARIANT IS INITIAL.
      GS_VARIANT-VARIANT = VARIANT.    " '/VENDOR WARR'.
    ENDIF.
    GS_VARIANT-REPORT = SY-CPROG.
    GS_LAYOUT-NO_TOOLBAR = SPACE.
    GS_LAYOUT-CWIDTH_OPT = GC_TRUE.
*   Create the fieldcatalog e.g. which fields to display
    PERFORM CREATE_FIELDCAT.
*   Display the data in the ALV control
    MY_ALV->SET_TABLE_FOR_FIRST_DISPLAY(
                EXPORTING
                    I_SAVE        =  'A'
                    IS_VARIANT    =  GS_VARIANT
                    IS_LAYOUT     =  GS_LAYOUT
                CHANGING
                    IT_OUTTAB         =  GT_MAT_SURPLUS[]
                    IT_FIELDCATALOG   =  GT_FIELDCAT ).

* If ALV control already exists, refresh data without changing the layout -> 'soft'
  ELSE.
    MY_ALV->REFRESH_TABLE_DISPLAY(
      EXPORTING
          I_SOFT_REFRESH  =  'X' ).
  ENDIF.

ENDMODULE.                 " build_screen_100  OUTPUT

*&---------------------------------------------------------------------*
*&      Form  create_fieldcat
*&---------------------------------------------------------------------*
FORM CREATE_FIELDCAT.

  DATA:
    WA_FIELDCAT LIKE LINE OF GT_FIELDCAT.

* Clear the field catalog table
  REFRESH: GT_FIELDCAT.

* Fetch the field catalog for structure YSE_RENT_EHRSP_OUTPUT
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_BUFFER_ACTIVE              = ' '
      I_STRUCTURE_NAME             = 'YSE_SDMM_SURPLUS_OUTPUT_NEW'
    CHANGING
      CT_FIELDCAT                  = GT_FIELDCAT.

* Adjust some tooltip help
  LOOP AT GT_FIELDCAT INTO WA_FIELDCAT.
    IF WA_FIELDCAT-FIELDNAME EQ 'BAL_LESS'.
      WA_FIELDCAT-TOOLTIP = 'Stock balance (Last receipt <= 6 months)'(M66).
      MODIFY GT_FIELDCAT FROM WA_FIELDCAT.
    ELSEIF WA_FIELDCAT-FIELDNAME EQ 'VAL_LESS'.
      WA_FIELDCAT-TOOLTIP = 'Stock value (Last receipt <= 6 months)'(M68).
      MODIFY GT_FIELDCAT FROM WA_FIELDCAT.
    ELSEIF WA_FIELDCAT-FIELDNAME EQ 'BAL_MORE'.
      WA_FIELDCAT-TOOLTIP = 'Stock balance (Last receipt > 6 months)'(M70).
      MODIFY GT_FIELDCAT FROM WA_FIELDCAT.
    ELSEIF WA_FIELDCAT-FIELDNAME EQ 'VAL_MORE'.
      WA_FIELDCAT-TOOLTIP = 'Stock value (Last receipt > 6 months)'(M72).
      MODIFY GT_FIELDCAT FROM WA_FIELDCAT.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " create_fieldcat
