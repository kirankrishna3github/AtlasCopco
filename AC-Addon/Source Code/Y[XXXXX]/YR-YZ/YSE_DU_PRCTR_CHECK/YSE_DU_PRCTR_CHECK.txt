*&---------------------------------------------------------------------*
*& Report  YSE_DU_PRCTR_CHECK                                          *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  YSE_DU_PRCTR_CHECK                      .

TABLES: MARC.

DATA: V_PRDHA(8) TYPE C,
      V_GAC(4) TYPE C,
      V_BUKRS(4) TYPE C,
      V_VKORG(4) TYPE C,
      V_MTART(4) TYPE C,
      V_BKLAS(4) TYPE C,
      V_LIFNR(10) TYPE C,
      V_KTOKK(4) TYPE C,
      V_WERTU(4) TYPE C,
      V_PREV_MATNR(18) TYPE C,
      V_PREV_PRCTR(12) TYPE C.

TYPES: BEGIN OF LINE,
          MATERIAL(18) TYPE C,
          WERKS(4) TYPE C,
          PRCTR(12) TYPE C,
          PRCTR_WANTED(12) TYPE C,
          PGC(4) TYPE C,
        END OF LINE.

DATA: PRCTRTABLE TYPE SORTED TABLE OF LINE WITH NON-UNIQUE KEY MATERIAL WERKS.

FIELD-SYMBOLS: <FS_PRCTRTABLE> TYPE LINE.

*TYPES PRCTRTABLE TYPE SORTED TABLE OF LINE WITH UNIQUE KEY COLUMN1.
SELECT-OPTIONS: PLANT FOR MARC-WERKS.


START-OF-SELECTION.
  SELECT MATNR WERKS PRCTR FROM MARC INTO TABLE PRCTRTABLE WHERE
         WERKS IN PLANT AND
         DISMM NOT IN ('Z1','Z2','Z3','Z4').

  CHECK SY-SUBRC = 0.

*write header

  WRITE :/   'ERROR',
             '       MATERIAL       ',
             'PLANT    ',
             'PGC  ',
             ' CURR PRCTR       ',
             'REQ PRCTR'.
  WRITE :/   '----------------------------------------------------------------------'.

*START LOOP
  LOOP AT PRCTRTABLE ASSIGNING <FS_PRCTRTABLE>.
    SELECT SINGLE MTART FROM MARA INTO V_MTART WHERE MATNR = <FS_PRCTRTABLE>-MATERIAL.
    IF SY-SUBRC = '0' AND ( V_MTART = 'ZMAT' OR V_MTART = 'ZDIE').

      IF V_PREV_MATNR <> <FS_PRCTRTABLE>-MATERIAL.
        SELECT SINGLE PRDHA FROM MARA INTO V_PRDHA WHERE
                      MATNR EQ <FS_PRCTRTABLE>-MATERIAL.
      ENDIF.



*Check whether basic data prdha is existing
      SELECT SINGLE REP_GAC FROM YSE_PRCTR_DERIV INTO V_GAC WHERE
              REP_GAC EQ V_PRDHA(4) AND
              REP_PGC EQ V_PRDHA+4(4) AND
              VTWEG EQ '01'.
      IF SY-SUBRC NE 0.
        WRITE :/ 'PRDHA    ',<FS_PRCTRTABLE>-MATERIAL,'     ',V_PRDHA.
      ENDIF.

*Find correct profit center
      IF V_PREV_MATNR <> <FS_PRCTRTABLE>-MATERIAL.
        SELECT SINGLE PRCTR FROM YSE_PRCTR_DERIV INTO <FS_PRCTRTABLE>-PRCTR_WANTED WHERE
            REP_PGC EQ V_PRDHA+4(4) AND
            VTWEG = '01'.
      ELSE.
        <FS_PRCTRTABLE>-PRCTR_WANTED = V_PREV_PRCTR.
      ENDIF.
*Check whether profit center corresponding to BA represented in legal entity
      IF <FS_PRCTRTABLE>-PRCTR+6(1) EQ '3'.
        SELECT SINGLE BUKRS FROM T001K INTO V_BUKRS WHERE
              BWKEY EQ <FS_PRCTRTABLE>-WERKS.
        V_VKORG(2) = <FS_PRCTRTABLE>-WERKS(2).
        V_VKORG+2(2) = '03'.

        SELECT SINGLE BUKRS FROM TVKO INTO V_VKORG WHERE
              BUKRS EQ V_BUKRS AND
              VKORG EQ V_VKORG.
        IF SY-SUBRC <> 0.
          WRITE :/   'NO IT','   ',
                    <FS_PRCTRTABLE>-MATERIAL,' ',
                    <FS_PRCTRTABLE>-WERKS,'  ',
                    V_PRDHA+4(4),' ',
                    <FS_PRCTRTABLE>-PRCTR.
        ENDIF.

      ELSEIF <FS_PRCTRTABLE>-PRCTR+6(1) EQ '2'.
        SELECT SINGLE BUKRS FROM T001K INTO V_BUKRS WHERE
                BWKEY EQ <FS_PRCTRTABLE>-WERKS.
        V_VKORG(2) = <FS_PRCTRTABLE>-WERKS(2).
        V_VKORG+2(2) = '02'.

        SELECT SINGLE BUKRS FROM TVKO INTO V_VKORG WHERE
              BUKRS EQ V_BUKRS AND
              VKORG EQ V_VKORG.
        IF SY-SUBRC <> 0.
          WRITE :/   'NO CMT','  ',
                    <FS_PRCTRTABLE>-MATERIAL,' ',
                    <FS_PRCTRTABLE>-WERKS,'  ',
                    V_PRDHA+4(4),' ',
                    <FS_PRCTRTABLE>-PRCTR.

        ENDIF.

      ELSEIF <FS_PRCTRTABLE>-PRCTR+6(1) EQ '1'.
        SELECT SINGLE BUKRS FROM T001K INTO V_BUKRS WHERE
                      BWKEY EQ <FS_PRCTRTABLE>-WERKS.
        V_VKORG(2) = <FS_PRCTRTABLE>-WERKS(2).
        V_VKORG+2(2) = '01'.

        SELECT SINGLE BUKRS FROM TVKO INTO V_VKORG WHERE
              BUKRS EQ V_BUKRS AND
              VKORG EQ V_VKORG.
        IF SY-SUBRC <> 0.
          V_VKORG+2(2) = '04'.

          SELECT SINGLE BUKRS FROM TVKO INTO V_VKORG WHERE
                BUKRS EQ V_BUKRS AND
                VKORG EQ V_VKORG.
          IF SY-SUBRC <> 0.
            WRITE :/   'NO CT','   ',
                      <FS_PRCTRTABLE>-MATERIAL,' ',
                      <FS_PRCTRTABLE>-WERKS,'  ',
                      V_PRDHA+4(4),' ',
                      <FS_PRCTRTABLE>-PRCTR.
          ENDIF.
        ENDIF.
      ENDIF.
*Check for rental profit center

      IF <FS_PRCTRTABLE>-PRCTR EQ '0000001410'.
        WRITE :/   'RENTAL   ',
                         <FS_PRCTRTABLE>-MATERIAL,' ',
                         <FS_PRCTRTABLE>-WERKS,'  ',
                         V_PRDHA+4(4),' ',
                         <FS_PRCTRTABLE>-PRCTR.

      ENDIF.
*Check valuation class consistency
*    Check whether plant is valuated (T134M)           --> V_WERTU
      SELECT SINGLE WERTU FROM T134M INTO V_WERTU
      WHERE BWKEY EQ <FS_PRCTRTABLE>-WERKS
      AND MTART EQ 'ZMAT'.

*    Find Valuaton class                               --> V_BKLAS
      SELECT SINGLE BKLAS FROM MBEW INTO V_BKLAS WHERE
                    MATNR EQ <FS_PRCTRTABLE>-MATERIAL AND
                    BWKEY EQ <FS_PRCTRTABLE>-WERKS.
      IF SY-SUBRC = 0.

*    Find Fixed vendor                                 --> V_LIFNR
        SELECT SINGLE LIFNR FROM EORD INTO V_LIFNR WHERE
                      MATNR EQ <FS_PRCTRTABLE>-MATERIAL AND
                      WERKS EQ <FS_PRCTRTABLE>-WERKS AND
                      FLIFN EQ 'X'.

*    Find other vendor if no fixed                     --> V_LIFNR
        IF SY-SUBRC <> 0.
          SELECT SINGLE LIFNR FROM EORD INTO V_LIFNR WHERE
                      MATNR EQ <FS_PRCTRTABLE>-MATERIAL AND
                      WERKS EQ <FS_PRCTRTABLE>-WERKS.
        ENDIF.
*    Check if vendor is intercompany (3040)            --> V_KTOKK
        IF V_LIFNR IS NOT INITIAL AND V_BKLAS IS NOT INITIAL.
          SELECT SINGLE KTOKK FROM LFA1 INTO V_KTOKK WHERE
                LIFNR EQ V_LIFNR.

          IF V_KTOKK EQ 'ZICV' AND V_BKLAS <> '3040' AND V_BKLAS <> '3070' AND V_WERTU EQ 'X'.
            WRITE :/   'BKLAS    ',
                           <FS_PRCTRTABLE>-MATERIAL,' ',
                           <FS_PRCTRTABLE>-WERKS,'               ',
                           V_BKLAS,' ',
                           '-->  3040'.
          ENDIF.
          IF V_KTOKK <> 'ZICV' AND V_BKLAS <> '3060' AND V_BKLAS <> '3070' AND V_WERTU EQ 'X'.
            WRITE :/   'BKLAS    ',
                           <FS_PRCTRTABLE>-MATERIAL,' ',
                           <FS_PRCTRTABLE>-WERKS,'               ',
                           V_BKLAS,' ',
                           '-->  3060'.
          ENDIF.
          IF V_BKLAS IS NOT INITIAL AND V_WERTU NE 'X'.
            WRITE :/   'BKLAS    ',
                           <FS_PRCTRTABLE>-MATERIAL,' ',
                           <FS_PRCTRTABLE>-WERKS,'               ',
                           V_BKLAS,' ',
                           '-->  INITIAL'.
          ENDIF.

          CLEAR: V_LIFNR,
                V_KTOKK.
        ENDIF.
      ENDIF.

*Store prctr and matnr for next run (to skip select statements if matnr is identical)
      V_PREV_MATNR = <FS_PRCTRTABLE>-MATERIAL.
      V_PREV_PRCTR = <FS_PRCTRTABLE>-PRCTR_WANTED.

*Delete entries which are not physical materials and which have a correct profit center

      IF <FS_PRCTRTABLE>-PRCTR_WANTED EQ '0000001410'.
        WRITE :/   'RENTAL   ',
                           <FS_PRCTRTABLE>-MATERIAL,' ',
                           <FS_PRCTRTABLE>-WERKS,'  ',
                           V_PRDHA+4(4),' '.
        DELETE PRCTRTABLE WHERE MATERIAL = <FS_PRCTRTABLE>-MATERIAL AND WERKS = <FS_PRCTRTABLE>-WERKS.
      ELSEIF <FS_PRCTRTABLE>-PRCTR_WANTED EQ <FS_PRCTRTABLE>-PRCTR.
        DELETE PRCTRTABLE WHERE MATERIAL = <FS_PRCTRTABLE>-MATERIAL AND WERKS = <FS_PRCTRTABLE>-WERKS.
      ELSE.
        WRITE :/   'PRCTR','   ',
                   <FS_PRCTRTABLE>-MATERIAL,' ',
                   <FS_PRCTRTABLE>-WERKS,'  ',
                   V_PRDHA+4(4),' ',
                   <FS_PRCTRTABLE>-PRCTR,'--> ',
                   <FS_PRCTRTABLE>-PRCTR_WANTED.
      ENDIF.
    ELSE.
      DELETE PRCTRTABLE WHERE MATERIAL = <FS_PRCTRTABLE>-MATERIAL AND WERKS = <FS_PRCTRTABLE>-WERKS.
    ENDIF.


  ENDLOOP.



*Write end statement (to visualise end of program after no results have been printed)


  PRINT-CONTROL FUNCTION: 'SF000'.
  WRITE :/ 'end of processing'.
