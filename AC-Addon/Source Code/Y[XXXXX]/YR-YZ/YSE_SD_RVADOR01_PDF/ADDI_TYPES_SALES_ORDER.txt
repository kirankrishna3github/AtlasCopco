*----------------------------------------------------------------------*
*   INCLUDE ADDI_TYPES_SALES_ORDER                                     *
*----------------------------------------------------------------------*

*  We need to find out the source for finding a material's
*  additionals.  It is either master data or the sales order.
constants: addi_access_master_data type c value ' ',
           addi_access_sales_order type c value 'S',
           addi_access_purchase_order type c value 'B'. "CvB/P99K032023

*  Upon analyzing whether additionals have been maintained for
*  a material we distinguish between the additionals for the master
*  data (WTADDI/MAMT) and the additionals maintained for the
*  material of a sales order position.
*  Within documents created with reference to a sales order, most
*  notably a delivery, we need to find out the source for the
*  additional.  Deliveries refer to a document category.  This
*  category is used to determine the source of the additional.
*  We define all the values as constants.
constants: addi_sd_doc_cats_4_deli type char20 value 'ABCgG'.

*  We introduce two constants that help us to decide how to treat
*  additionals in pricing:
*  a) If field komp-vbtyp is initial additionals are read from
*     master data and are analyzed according to the calculation flag
*  b) If komp-vbtyp is a contained in addi_calc_sales_order_vbtyp
*     we behave exactly as in the master data case except that
*     data stems from the sales order referenced.
*  c) This is the invoice case. Again, data comes from a sales order.
*     The list of additionals can be further reduced since only those
*     are returned for which---besides the calculation flag---the
*     invoice flag has value '2'.
constants: addi_calc_sales_order_vbtyp
               type char50 value 'ABCDEFGHIJQRTVWX0128ghij',
           addi_calc_invoice_vbtyp
               type char50 value 'KLMNSOPU34567a'.



*  We declare a type for the entries that are presented per
*  sales order item.  This is a complex table since each additional
*  may have extra text and one customer or another might want to
*  write the text onto the document.

*  The extra text has the same structure used for order copies.
*  We reserve a separate type, however.
types:  begin of addi_so_extra_text.
          include structure wtad_buying_print_extra_text.
types:  end of addi_so_extra_text.
types:  addi_so_extra_text_itab type addi_so_extra_text occurs 0.

types: begin of addi_so_print.
        include structure wtad_addis_in_so_print.
types:   addi_so_extra_text_info type addi_so_extra_text occurs 0,
       end of addi_so_print.
types: addi_so_print_itab type addi_so_print occurs 0.


