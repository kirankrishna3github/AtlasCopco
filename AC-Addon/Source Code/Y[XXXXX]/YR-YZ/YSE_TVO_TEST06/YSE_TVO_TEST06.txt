*&---------------------------------------------------------------------*
*& Report  ZRIM09                                                      *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  YSE_TVO_TEST06                                  .

data: ls_contr_header like BAPISDHD1.
data: li_contr_partners like table of BAPIPARNR.
data: wi_contr_partners like BAPIPARNR.
data: li_contr_items like table of BAPISDITM.
data: wi_contr_items like BAPISDITM.
data: li_return like table of BAPIRET2.

DATA  ls_bapi_view            TYPE order_view.
DATA  lt_salesdocuments       TYPE TABLE OF sales_key.
DATA  lt_order_headers_out    TYPE TABLE OF bapisdhd.
DATA  lt_order_items_out      TYPE TABLE OF bapisdit.
DATA  lt_order_schedules_out  TYPE TABLE OF bapisdhedu.
DATA  lt_order_conditions_out TYPE TABLE OF bapisdcond.
DATA  lt_order_partners_out   TYPE TABLE OF bapisdpart.

DATA: lv_logic_switch         TYPE bapisdls.
DATA  lv_salesdocument        TYPE bapivbeln-vbeln.
DATA  lt_return               TYPE TABLE OF bapiret2.
DATA  lt_order_items_in       TYPE TABLE OF bapisditm.
DATA  lt_order_schedules_in   TYPE TABLE OF bapischdl.
DATA  lt_order_partners       TYPE TABLE OF bapiparnr.
DATA  lt_order_conditions_in  TYPE TABLE OF bapicond.
DATA LT_ORDER_BUSINESS_OUT TYPE TABLE OF BAPISDBUSI.
DATA LT_ORDER_ADDRESS_OUT TYPE TABLE OF BAPISDCOAD.
DATA LT_ORDER_STATUSHEADERS_OUT TYPE TABLE OF BAPISDHDST.
DATA LT_ORDER_STATUSITEMS_OUT TYPE TABLE OF BAPISDITST.
DATA LT_ORDER_COND_HEAD TYPE TABLE OF BAPICONDHD.
DATA LT_ORDER_COND_ITEM TYPE TABLE OF BAPICONDIT.
DATA LT_ORDER_COND_QTY_SCALE TYPE TABLE OF BAPICONDQS.
DATA LT_ORDER_COND_VAL_SCALE TYPE TABLE OF BAPICONDVS.
DATA LT_ORDER_CONTRACTS_OUT TYPE TABLE OF BAPISDCNTR.
DATA LT_ORDER_TEXTHEADERS_OUT TYPE TABLE OF BAPISDTEHD.
DATA LT_ORDER_TEXTLINES_OUT TYPE TABLE OF BAPITEXTLI.
DATA LT_ORDER_FLOWS_OUT TYPE TABLE OF BAPISDFLOW.
DATA LT_ORDER_CFGS_CUREFS_OUT TYPE TABLE OF BAPICUREFM.
DATA LT_ORDER_CFGS_CUCFGS_OUT TYPE TABLE OF BAPICUCFGM.
DATA LT_ORDER_CFGS_CUINS_OUT TYPE TABLE OF BAPICUINSM.
DATA LT_ORDER_CFGS_CUPRTS_OUT TYPE TABLE OF BAPICUPRTM.
DATA LT_ORDER_CFGS_CUVALS_OUT TYPE TABLE OF BAPICUVALM.
DATA LT_ORDER_CFGS_CUBLBS_OUT TYPE TABLE OF BAPICUBLBM.
DATA LT_ORDER_CFGS_CUVKS_OUT TYPE TABLE OF BAPICUVKM.
DATA LT_ORDER_BILLINGPLANS_OUT TYPE TABLE OF BAPISDBPL.
DATA LT_ORDER_BILLINGDATES_OUT TYPE TABLE OF BAPISDBPLD.
DATA LT_ORDER_CREDITCARDS_OUT TYPE TABLE OF BAPICCARDM.
DATA LT_EXTENSIONOUT TYPE TABLE OF BAPIPAREX.


DATA: ls_return               TYPE bapiret2.
DATA: ls_header_out           TYPE bapisdhd.
DATA  ls_order_header_in      TYPE bapisdhd1.
DATA: ls_item_out             TYPE bapisdit.
DATA: ls_order_items_in       TYPE bapisditm.
DATA: ls_order_schedules_in   TYPE bapischdl.
DATA: ls_schedules_out        TYPE bapisdhedu.
DATA: ls_order_partners_out   TYPE bapisdpart.
DATA: ls_order_partners       TYPE bapiparnr.
DATA  ls_order_conditions_in  TYPE bapicond.
DATA: ls_conditions_out       TYPE bapisdcond.

PARAMETERS: pa_key   TYPE sales_key  default '0020000055', " Ref_doc
            pa_auart TYPE vbak-auart default 'ZQP',        " Doc_type
            pa_itmno TYPE vbap-posnr default '20',         " Itm_number
            pa_qty   TYPE vbep-wmeng default '1',          " Order quantity
            pa_prart TYPE kond-knprs default 'C',          " Condition type
            pa_purno TYPE vbkd-bstkd,                      " Order number
*           pa_sernr type gernr default 'AIP416285'.       " Serial number
            pa_sernr type gernr default 'AIPO'.       " Serial number


***********************************************************************
* S T A R T - O F - S E L E C T I O N
***********************************************************************
start-of-selection.

  ls_bapi_view-HEADER       = 'X'.
  ls_bapi_view-ITEM         = 'X'.
  ls_bapi_view-SDSCHEDULE   = 'X'.
  ls_bapi_view-BUSINESS     = 'X'.
  ls_bapi_view-PARTNER      = 'X'.
  ls_bapi_view-ADDRESS      = 'X'.
  ls_bapi_view-STATUS_H     = 'X'.
  ls_bapi_view-STATUS_I     = 'X'.
  ls_bapi_view-SDCOND       = 'X'.
  ls_bapi_view-SDCOND_ADD   = 'X'.
  ls_bapi_view-CONTRACT     = 'X'.
  ls_bapi_view-TEXT         = 'X'.
  ls_bapi_view-FLOW         = 'X'.
  ls_bapi_view-BILLPLAN     = 'X'.
  ls_bapi_view-CONFIGURE    = 'X'.
  ls_bapi_view-CREDCARD     = 'X'.
  ls_bapi_view-INCOMP_LOG   = 'X'.

  BREAK AIR21777.

* Finalize list of quotations to be read
* APPEND '0020000054' TO lt_salesdocuments.
  APPEND PA_KEY TO lt_salesdocuments.

* Read the quotation
  CALL FUNCTION 'BAPISDORDER_GETDETAILEDLIST'
    EXPORTING
      i_bapi_view                   = ls_bapi_view
    TABLES
      sales_documents               = lt_salesdocuments
      order_headers_out             = lt_order_headers_out
      order_items_out               = lt_order_items_out
      order_schedules_out           = lt_order_schedules_out
      order_partners_out            = lt_order_partners_out
      order_conditions_out          = lt_order_conditions_out
      ORDER_BUSINESS_OUT            = LT_ORDER_BUSINESS_OUT  " Required for payment terms, pricing date etc...
      ORDER_ADDRESS_OUT             = LT_ORDER_ADDRESS_OUT
      ORDER_STATUSHEADERS_OUT       = LT_ORDER_STATUSHEADERS_OUT
      ORDER_STATUSITEMS_OUT         = LT_ORDER_STATUSITEMS_OUT
      ORDER_COND_HEAD               = LT_ORDER_COND_HEAD
      ORDER_COND_ITEM               = LT_ORDER_COND_ITEM
      ORDER_COND_QTY_SCALE          = LT_ORDER_COND_QTY_SCALE
      ORDER_COND_VAL_SCALE          = LT_ORDER_COND_VAL_SCALE
      ORDER_CONTRACTS_OUT           = LT_ORDER_CONTRACTS_OUT " Required for contract start date, Val Per.Cat etc.
      ORDER_TEXTHEADERS_OUT         = LT_ORDER_TEXTHEADERS_OUT
      ORDER_TEXTLINES_OUT           = LT_ORDER_TEXTLINES_OUT
      ORDER_FLOWS_OUT               = LT_ORDER_FLOWS_OUT
      ORDER_CFGS_CUREFS_OUT         = LT_ORDER_CFGS_CUREFS_OUT
      ORDER_CFGS_CUCFGS_OUT         = LT_ORDER_CFGS_CUCFGS_OUT
      ORDER_CFGS_CUINS_OUT          = LT_ORDER_CFGS_CUINS_OUT
      ORDER_CFGS_CUPRTS_OUT         = LT_ORDER_CFGS_CUPRTS_OUT
      ORDER_CFGS_CUVALS_OUT         = LT_ORDER_CFGS_CUVALS_OUT
      ORDER_CFGS_CUBLBS_OUT         = LT_ORDER_CFGS_CUBLBS_OUT
      ORDER_CFGS_CUVKS_OUT          = LT_ORDER_CFGS_CUVKS_OUT
      ORDER_BILLINGPLANS_OUT        = LT_ORDER_BILLINGPLANS_OUT
      ORDER_BILLINGDATES_OUT        = LT_ORDER_BILLINGDATES_OUT
      ORDER_CREDITCARDS_OUT         = LT_ORDER_CREDITCARDS_OUT
      EXTENSIONOUT                  = LT_EXTENSIONOUT.

* Fill in the header of the contract.
  IF NOT lt_order_headers_out[] IS INITIAL.
    READ TABLE lt_order_headers_out INTO ls_header_out INDEX 1.
    ls_order_header_in-doc_type   = pa_auart.
    ls_order_header_in-sales_org  = ls_header_out-sales_org.
    ls_order_header_in-distr_chan = ls_header_out-distr_chan.
    ls_order_header_in-division   = ls_header_out-division.
*  ls_order_header_in-ref_doc    = pa_key.
*  ls_order_header_in-purch_no_c = pa_purno.
*  ls_order_header_in-refdoc_cat = ls_header_out-sd_doc_cat.
****    ls_order_header_in-REFOBJTYPE = 'BUS2031'.
****    ls_order_header_in-REFOBJKEY  = PA_KEY.
****    ls_order_header_in-REFDOCTYPE = 'ZQT'.
  ENDIF.

* fill partner data
  READ TABLE lt_order_partners_out INTO ls_order_partners_out
                                    WITH KEY partn_role = 'AG'.
  IF sy-subrc = 0.
    ls_order_partners-partn_role = 'AG'.
    ls_order_partners-partn_numb   = ls_order_partners_out-customer.
    APPEND ls_order_partners TO lt_order_partners.
  ENDIF.

*  fill item data
  IF pa_itmno NE 0.
** if itm_number is selected
    READ TABLE lt_order_items_out INTO ls_item_out
                                  WITH KEY itm_number = pa_itmno.
    IF sy-subrc = 0.
      PERFORM add_items.
      PERFORM add_schedules.
      IF pa_prart CA 'BCG'.
        PERFORM add_conditions.
      ENDIF.
    ENDIF.
  ELSE.
** for all items
    LOOP AT lt_order_items_out INTO ls_item_out.
      PERFORM add_items.
      PERFORM add_schedules.
      IF pa_prart CA 'BCG'.
        PERFORM add_conditions.
      ENDIF.
    ENDLOOP.
  ENDIF.

*fill logic switch
  lv_logic_switch-pricing = pa_prart.

* Fill in items.
* wi_contr_items-ITM_NUMBER = '10'.
* wi_contr_items-MATERIAL   = '000000000000000036'.
* append wi_contr_items to li_contr_items.

  CALL FUNCTION 'BAPI_SALESORDER_CREATEFROMDAT2'
    EXPORTING
      order_header_in               = ls_order_header_in
      logic_switch                  = lv_logic_switch
    IMPORTING
      salesdocument                 = lv_salesdocument
    TABLES
      return                        = lt_return
      order_items_in                = lt_order_items_in
      order_partners                = lt_order_partners
      order_schedules_in            = lt_order_schedules_in
      order_conditions_in           = lt_order_conditions_in.

  LOOP AT lt_return INTO ls_return.
    WRITE:/ ls_return-type,
            ls_return-id,
            ls_return-number,
            ls_return-message.
  ENDLOOP.

  CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'.

*&---------------------------------------------------------------------*
*&      Form  add_items
*&---------------------------------------------------------------------*
FORM add_items .

  ls_order_items_in-itm_number = ls_item_out-itm_number.
  ls_order_items_in-material = '000000008162803657'.
****  ls_order_items_in-ref_doc  = pa_key.
  ls_order_items_in-DLVSCHDUSE = ls_item_out-DLVSCHEDUS.
****  ls_order_items_in-ref_doc_it = ls_item_out-itm_number.
****  ls_order_items_in-ref_doc_ca = ls_header_out-sd_doc_cat.
  ls_order_items_in-TARGET_QTY = ls_item_out-TARGET_QTY.
  ls_order_items_in-BOMEXPL_NO = pa_sernr.
  APPEND ls_order_items_in TO lt_order_items_in.

ENDFORM.                    " add_items

*&---------------------------------------------------------------------*
*&      Form  add_conditions
*&---------------------------------------------------------------------*
FORM add_conditions.          " add conditions to item


  LOOP AT lt_order_conditions_out INTO ls_conditions_out
                       WHERE itm_number = ls_item_out-itm_number
                       AND NOT cond_type IS INITIAL.
    CLEAR ls_order_conditions_in.
    MOVE-CORRESPONDING ls_conditions_out TO ls_order_conditions_in.
    ls_order_conditions_in-cond_unit = ls_conditions_out-cond_d_unt.
    APPEND ls_order_conditions_in TO lt_order_conditions_in.
  ENDLOOP.

ENDFORM.                    " add_conditions

*&---------------------------------------------------------------------*
*&      Form  add_schedules
*&---------------------------------------------------------------------*
FORM add_schedules .         "add schedules to item

  LOOP AT lt_order_schedules_out INTO ls_schedules_out
                   WHERE itm_number = ls_item_out-itm_number.
    ls_order_schedules_in-itm_number = ls_schedules_out-itm_number.

    IF NOT pa_qty IS INITIAL AND NOT ls_schedules_out-req_qty = 0.
      ls_order_schedules_in-req_qty = pa_qty.
    ELSE.
      ls_order_schedules_in-req_qty = ls_schedules_out-req_qty.
    ENDIF.

    ls_order_schedules_in-sched_line = ls_schedules_out-sched_line.
    APPEND  ls_order_schedules_in TO lt_order_schedules_in.
  ENDLOOP.

  IF sy-subrc <> 0.
    ls_order_schedules_in-itm_number = ls_item_out-itm_number.
    ls_order_schedules_in-sched_line = '001'.
    ls_order_schedules_in-req_qty = pa_qty.
    APPEND  ls_order_schedules_in TO lt_order_schedules_in.
  ENDIF.

ENDFORM.                    " add_schedules
