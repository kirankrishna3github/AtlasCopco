*&---------------------------------------------------------------------*
*&  Include       YSE_LJ3RF_RATE_CALCPBO                               *
*&                                                                     *
*&  PAI and PBO modules for selection screen in include                *
*&  YSE_LJ3RF_RATE_CALCSEL                                             *
*&                                                                     *
*&---------------------------------------------------------------------*

************************************************************************
*     At selection-screen output
************************************************************************
AT SELECTION-SCREEN OUTPUT.

  PERFORM rate_calc_pbo.


*&---------------------------------------------------------------------*
*&      Form  rate_calc_pbo
*&---------------------------------------------------------------------*
*       enable/disable controls
*----------------------------------------------------------------------*
FORM rate_calc_pbo.

* macro definitions
* check default radio buttons
  DEFINE check_defaults.
    if &1 eq 'X' and &2 eq 'X'.
      &1 = ' '.
    endif.
  END-OF-DEFINITION.

  SET TITLEBAR '100' of program gc_main_func.

* check defaults
  check_defaults p_invdat p_invrat.

*  bkpf-waers = p_waers.                                     "N1363895

*
  LOOP AT SCREEN.
    IF screen-name CS 'P_INVDAT' OR screen-name CS 'P_INVRAT'.
      screen-active = '1'.
    ENDIF.

    IF screen-name CS 'P_CLCDAT'.
      screen-active = '1'.
      IF p_invdat EQ 'X'.
        screen-input = '1'.
      ELSE.
        screen-input = '0'.
      ENDIF.
    ENDIF.

    IF screen-name CS 'P_CLCRAT'.
      screen-active = '1'.
      IF p_invrat EQ 'X'.
        screen-input = '1'.
        screen-required = '1'.
      ELSE.
        screen-input = '0'.
        screen-required = '0'.
      ENDIF.
    ENDIF.

    MODIFY SCREEN.
  ENDLOOP.

**
*  IF P_INVDAT = 'X'.
*    PERFORM get_invoice_rate.
*  ENDIF.

ENDFORM.                    "rate_calc_pbo

*&---------------------------------------------------------------------*
*&      Form  get_invoice_rate
*&---------------------------------------------------------------------*
*       get invoice exchange rate
*----------------------------------------------------------------------*
FORM get_invoice_rate.

  DATA: l_waers TYPE t001-waers,
        l_dmbtr TYPE bseg-dmbtr,
        l_wrbtr TYPE bseg-wrbtr,
        ffact   TYPE tcurr-ffact,
        lfact   TYPE tcurr-tfact.

* invoice date should be defined
  CHECK NOT p_clcdat IS INITIAL.

* get company currency
  SELECT SINGLE waers FROM t001 INTO l_waers WHERE bukrs = p_bukrs.
  CHECK sy-subrc IS INITIAL.

*  currency should not match company one
  CHECK l_waers NE p_waers.

* convert to FC
  l_dmbtr = 1000.

  CALL FUNCTION 'CONVERT_TO_FOREIGN_CURRENCY'
    EXPORTING
      date             = p_clcdat
      foreign_currency = p_waers
      local_amount     = l_dmbtr
      local_currency   = l_waers
    IMPORTING
      foreign_amount   = l_wrbtr
    EXCEPTIONS
      OTHERS           = 6.

  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
               WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  CALL FUNCTION 'READ_EXCHANGE_RATE'
    EXPORTING
      date             = p_clcdat
      foreign_currency = p_waers
      local_currency   = l_waers
    IMPORTING
      exchange_rate    = p_clcrat
      foreign_factor   = ffact
      local_factor     = lfact
    EXCEPTIONS
      no_rate_found    = 1
      no_factors_found = 2
      no_spread_found  = 3
      derived_2_times  = 4
      overflow         = 5
      zero_rate        = 6
      OTHERS           = 7.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
       WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

*  IF ffact <> 1 OR lfact <> 1.
*    IF l_wrbtr > 0.
*      p_clcrat = l_dmbtr / l_wrbtr.
*    ENDIF.
*  ENDIF.

ENDFORM.                    "get_invoice_rate

*&---------------------------------------------------------------------*
*&      Form  get_default_rstgr
*&---------------------------------------------------------------------*
*       get default difference reason
*----------------------------------------------------------------------*
*      -->P_RSTGR    text
*----------------------------------------------------------------------*
FORM check_rstgr
  CHANGING p_rstgr LIKE df05b-rstgr.

  IF NOT p_rstgr IS INITIAL AND NOT p_bukrs IS INITIAL.
    SELECT SINGLE rstgr FROM t053r
      INTO p_rstgr
      WHERE bukrs = p_bukrs AND
            rstgr = p_rstgr.
    CHECK sy-subrc NE 0.
    CLEAR p_rstgr.
  ENDIF.

  IF NOT p_bukrs IS INITIAL.
    SELECT SINGLE rstgr FROM t053r
      INTO p_rstgr
      WHERE bukrs = p_bukrs AND
            rstgr = '055'.

*   if not found then search first avaialble
    IF NOT sy-subrc IS INITIAL.
      SELECT SINGLE rstgr FROM t053r
        INTO p_rstgr
        WHERE bukrs = p_bukrs AND
              xausb = ''.                               "#EC CI_GENBUFF
    ENDIF.
  ENDIF.

ENDFORM.                    "get_default_rstgr

*&---------------------------------------------------------------------*
*&      Form  j3rf_rate_calc_init
*&---------------------------------------------------------------------*
*       initiate variant
*----------------------------------------------------------------------*
FORM j3rf_rate_calc_init.
  CLEAR g_variant.
  g_save               = 'A'.
  g_variant-report     = gc_main_repid.
  gx_variant           = g_variant.
*  gx_variant-variant   = p_vari.
*  IF p_vari IS INITIAL.
  CALL FUNCTION 'REUSE_ALV_VARIANT_DEFAULT_GET'
    EXPORTING
      i_save     = g_save
    CHANGING
      cs_variant = gx_variant
    EXCEPTIONS
      not_found  = 2.
  IF sy-subrc = 0.
*    p_vari = gx_variant-variant.
  ENDIF.
*  ENDIF.
ENDFORM.                    "variant_init

************************************************************************
*     Save exit command
************************************************************************
AT SELECTION-SCREEN ON EXIT-COMMAND.
  PERFORM rc_exit_command.

************************************************************************
*     Save exit for future processing
************************************************************************
FORM rc_exit_command.
  rc_ok_code = sy-ucomm.
ENDFORM.                    "rc_exit_command

************************************************************************
*     Show F4 for exchange rate
************************************************************************
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_CLCRAT.
  PERFORM f4_for_clrrat.

*&---------------------------------------------------------------------*
*&      Form  f4_for_clrrat
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM f4_for_clrrat.

  DATA: l_dynpprog TYPE D020S-PROG,
        l_dynpnr   TYPE D020S-DNUM,
        l_display  TYPE XFELD,
        l_waers    TYPE t001-waers.

* company, invoice currency and invoice date should be defined
  CHECK NOT p_bukrs  IS INITIAL AND
        NOT p_waers  IS INITIAL AND
        NOT p_clcdat IS INITIAL.

* get company currency
  SELECT SINGLE waers FROM t001 INTO l_waers WHERE bukrs = p_bukrs.
  CHECK sy-subrc IS INITIAL.
*  currency should not match company one
  CHECK l_waers NE p_waers.

  l_dynpprog = sy-repid.
  l_dynpnr   = sy-dynnr.
  l_display  = p_invdat.

  if rateequation-kurstyp is initial.
    rateequation-kurstyp = 'M'.
  endif.
*  if rateequation-conv_date is initial.
  rateequation-conv_date = p_clcdat.
*  endif.

  CALL FUNCTION 'F4_EXCHANGE_RATE'
    EXPORTING
      TYPE_OF_RATE       = rateequation-kurstyp
      DATE               = rateequation-conv_date
      FOREIGN_CURRENCY   = p_waers
      LOCAL_CURRENCY     = l_waers
      FIELDNAME          = 'P_CLCRAT'
      DYNAME             = l_dynpprog
      DYNUMB             = l_dynpnr
      DISPLAY_ONLY       = l_display
    EXCEPTIONS
      INSUFFICIENT_INPUT = 1
      OTHERS             = 2.

ENDFORM.                    "f4_for_clrrat
