*&---------------------------------------------------------------------*
*& Report  YSE_FICO_SAS99RPT
*&
*&---------------------------------------------------------------------*
*& Request No     Date        Programmer  Revision
*&---------------------------------------------------------------------*
*& CD1K973290     17/09/2012   Johnny Wu   CR2680 Initial version
*&---------------------------------------------------------------------*
*& CD1K983704     11/11/2014   Anda   Wu   CR3329 M0D-001
*&---------------------------------------------------------------------*

REPORT  yse_fico_sas99rpt_cjal.

************************************************************************
*
*                   SAS 99 Data Extract Program
*
*
*
*   Prepared by:  Ketan Gohil
*
*                 RJT Compuquest.
*
*
*
*   Preparation date:  March 13, 2003
*
*
*
*   Purpose:  Extract data related to SAS 99 analysis from tables SKAT,
*             BSEG AND BKPF
*
*   How to Use ?
*   This program is dealing with very large tables BSEG and BKPF .
*   If it is run online with selection of more than 3 to 4 month data
*   will be taking much time in execution .It may time out
*        So it is advisable to run in  background . If it is run in
*   background system will not be able to  download the file
*   on presentation server.
*
*   This program has 3 options.
*   1. EXPORT: option will fatch the data from the database tables and
*       put them into database memory . if you are running the program
*       in backgaround select this option .
*   2. IMPORT : After running the program in background run the program
*       online with this selection . system will read data from database
*       memory and down load to presentation server
*   3. ONLINE : This option will fatch data from the table and download
*      to presenation server online . If you want to fatch data for
*      less than three months use this option .
*
*   How can I run this program efficiently?
*       let's say if you want to down load data for one year .
*       run program in background for 3 month each and export radio
*       button selected . Use CPU Date for the 3 month selection .
*       After job completed run program online with IMPORT radio button
*       selected and download each table in different file.
*       Performance of the program will be very good if it is run for
*       one company code and one fiscal year .
*
*   Fields Referenced:   bseg-mandt client,
*                        bseg-buzei line item,
*                        bseg-shkzg debit/credit indicator,
*                        bseg-dmbtr GL amount,
*                        bseg-sgtxt description2,
*                        bseg-kostl cost center,
*                        bseg-hkont GL account number,
*                        bseg-belnr document number,
*                        bseg-bukrs company code,
*                        skat-spras language key,
*                        skat-ktopl chart of accounts,
*                        skat-saknr GL account,
*                        skat-txt50 account description,
*                        bkpf-mandt client,
*                        bkpf-bukrs company code,
*                        bkpf-belnr document number,
*                        bkpf-gjahr fiscal year,
*                        bkpf-blart document type,
*                        bkpf-bldat effective date,
*                        bkpf-budat posting date,
*                        bkpf-monat posting period,
*                        bkpf-usnam user id,
*                        bkpf-bktxt description,
*                        bkpf-waers currency,
*                        bkpf-kursf exchange rate,
*                        bkpf-cpudt system date
************************************************************************
*         You can use or modify this report for your own work.
*      In no event will the author be liable for indirect, special,
*      incidental, or consequental damages (if any) arising out of
*                      the use of this report.
************************************************************************
************************************************************************


************************************************************************
*
*                  DATA DEFINITIONS
*
************************************************************************
TABLES:

   skat,
   bkpf,
   bseg.

TABLES indx.

DATA:

   BEGIN OF tempbseg OCCURS 0,
     mandt TYPE bseg-mandt ,
     bukrs TYPE bseg-bukrs ,
     belnr TYPE bseg-belnr,
     gjahr TYPE bseg-gjahr,
     buzei TYPE bseg-buzei,
     shkzg TYPE bseg-shkzg,
     dmbtr TYPE bseg-dmbtr,
     wrbtr TYPE bseg-wrbtr,
     sgtxt TYPE bseg-sgtxt,
     kostl TYPE bseg-kostl,
     hkont TYPE bseg-hkont,
   END OF tempbseg.

DATA:
    BEGIN OF tempskat OCCURS 0,
      spras TYPE skat-spras,
      ktopl TYPE skat-ktopl,
      saknr TYPE skat-saknr,
      txt50 TYPE skat-txt50,
    END OF tempskat.

DATA:
    BEGIN OF tempbkpf OCCURS 0,
        mandt TYPE bkpf-mandt,
        bukrs TYPE bkpf-bukrs,
        belnr TYPE bkpf-belnr,
        gjahr TYPE bkpf-gjahr,
        blart TYPE bkpf-blart,
        bldat TYPE bkpf-bldat,
        budat TYPE bkpf-budat,
        monat TYPE bkpf-monat,
        usnam TYPE bkpf-usnam,
        bktxt TYPE bkpf-bktxt,
        waers TYPE bkpf-waers,
        kursf TYPE bkpf-kursf,
        xblnr TYPE bkpf-xblnr,
        bstat TYPE bkpf-bstat, " add 2014.11.19
   END OF tempbkpf.

DATA:
    BEGIN OF join OCCURS 0,
*        mandt type bkpf-mandt,
        bukrs TYPE bkpf-bukrs,
        blart TYPE bkpf-blart,
        gjahr TYPE bkpf-gjahr,
        monat TYPE bkpf-monat,
        budat TYPE bkpf-budat,
        hkont TYPE bseg-hkont,
        belnr TYPE bkpf-belnr,
*        bldat type bkpf-bldat,
        buzei TYPE bseg-buzei,
        kostl TYPE bseg-kostl,
        dmbtr TYPE bseg-dmbtr,
        waers_l TYPE t001-waers,
        wrbtr TYPE bseg-wrbtr,
        waers TYPE bkpf-waers,
        shkzg TYPE bseg-shkzg,
        bktxt TYPE bkpf-bktxt,
        xblnr TYPE bkpf-xblnr,
        sgtxt TYPE bseg-sgtxt,
        kursf TYPE bkpf-kursf,
        usnam TYPE bkpf-usnam,
    END OF join.

*local fields .

DATA  i_index TYPE sy-tabix .
DATA  l_bkpf TYPE i .

*DATA: skatkey type indx-srtfd VALUE 'TEMPSKAT'.
*DATA: bkpfkey type indx-srtfd VALUE 'TEMPBKPF'.
*DATA: bsegkey type indx-srtfd VALUE 'TEMPBSEG'.
DATA: joinkey TYPE indx-srtfd VALUE 'JOIN'.

*  CR3329 ADD   BEGIN
DATA: gv_codepage TYPE abap_encod VALUE '8400'.
*  CR3329 ADD   END

************************************************************************
*
*                SELECTION SCREEN
*
************************************************************************

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME .

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (20) text001.
SELECT-OPTIONS client FOR bseg-mandt DEFAULT sy-mandt OBLIGATORY.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (23) text002.
PARAMETERS: co_code TYPE bseg-bukrs OBLIGATORY.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (20) text003.
SELECT-OPTIONS date FOR bkpf-bldat.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (20) text004.
SELECT-OPTIONS lang FOR skat-spras DEFAULT sy-langu.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (20) text005.
SELECT-OPTIONS ch_accts FOR skat-ktopl.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (20) text006.
SELECT-OPTIONS doc_type FOR bkpf-blart.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (20) text007.
SELECT-OPTIONS user FOR bkpf-usnam.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (20) text008.
SELECT-OPTIONS post_dt FOR bkpf-budat.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (20) text009.
SELECT-OPTIONS doc_no FOR bkpf-belnr.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (20) text010.
SELECT-OPTIONS fisc_yr FOR bkpf-gjahr OBLIGATORY.
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
SELECTION-SCREEN COMMENT (20) text011.
SELECT-OPTIONS cpu_dt FOR bkpf-cpudt .
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN END OF BLOCK b1 .

SELECTION-SCREEN SKIP 2.

SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME .
*Select data from tables and export to database memory
PARAMETERS : export RADIOBUTTON GROUP rad1 .
* Import priviously selected from  database memory
PARAMETERS : import RADIOBUTTON GROUP rad1 .
*Select data and download to excel
PARAMETERS : online RADIOBUTTON GROUP rad1 .

SELECTION-SCREEN END OF BLOCK b2 .

SELECTION-SCREEN BEGIN OF BLOCK b3 WITH FRAME .
****MOD-001 DEL BEGIN
*PARAMETERS : skatfile type  rlgrap-filename
*                           DEFAULT 'c:\temp\tempskat.txt'.
*PARAMETERS : bkpffile type  rlgrap-filename
*                           DEFAULT 'c:\temp\tempbkpf.txt'.
*PARAMETERS : bsegfile type  rlgrap-filename
*                           DEFAULT 'c:\temp\tempbseg.txt'.
****MOD-001 DEL END
PARAMETERS : joinfile TYPE  rlgrap-filename
                           DEFAULT 'c:\temp\tempjoin.txt'.

SELECTION-SCREEN END OF BLOCK b3 .

SELECTION-SCREEN BEGIN OF BLOCK b4 WITH FRAME .
*display Join data on sreen ? if this check box selected data from
*internal table will be displayed on the screen
PARAMETER display AS CHECKBOX .
SELECTION-SCREEN END OF BLOCK b4 .

INITIALIZATION.
  PERFORM f_initialize_texts.

*&---------------------------------------------------------------------*
*&      Form  f_initialize_texts
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM f_initialize_texts .
  text001 = '客户端'.
  text002 = '公司代码'.
  text003 = '凭证日期'.
  text004 = '语言代码'.
  text005 = '帐目表(COA)'.
  text006 = '凭证类型'.
  text007 = '用户名'.
  text008 = '过帐日期'.
  text009 = '凭证编号'.
  text010 = '会计年度'.
  text011 = '凭证输入日期'.
ENDFORM.                    "f_initialize_texts
************************************************************************
*                    DATA SELECTION
*
************************************************************************
START-OF-SELECTION .
* Authourization check
  PERFORM auth_check.

  IF online = 'X' .
    IF sy-batch = 'X' .
      MESSAGE e999(fh) WITH 'With ONLINE option' 'you cannot this run program'
                            'in background' .
    ENDIF.
  ENDIF.

  IF export = 'X' OR online = 'X' .
*selection from skat .
    PERFORM select_skat .

*selection from bkpf .
    PERFORM select_bkpf .

*check whether data was populated in table bkpf or not .
    DESCRIBE TABLE tempbkpf LINES l_bkpf .

    IF l_bkpf NE 0 .
*selection from bseg .
      PERFORM select_bseg .
*populate internal table join with bkpf and bseg data.
      PERFORM poulate_join .
    ENDIF.
  ENDIF.
  IF export = 'X' .
*export internal tables to data base memory
    PERFORM export_data .
  ELSEIF import = 'X' .
*import internal tables to data base memory
    PERFORM import_data .
  ELSEIF online = 'X' .
*run online and download to excel file .
    PERFORM online_data .

  ENDIF.
*write data on the screen .

  IF display = 'X' .
    PERFORM write_data.
  ENDIF.
************************************************************************
*
*                  SUBROUTINES
*
************************************************************************
*&---------------------------------------------------------------------*
*&      Form  SELECT_SKAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_skat.
************************************************************************
*
*SELECT SUBSET OF DATA FROM TABLE SPRAS FOR DOWNLOAD AND OUTSIDE REVIEW
*
************************************************************************

  SELECT spras ktopl saknr txt50 FROM skat INTO CORRESPONDING FIELDS OF
  TABLE tempskat
      WHERE spras IN lang
      AND ktopl IN ch_accts.


ENDFORM.                    " SELECT_SKAT

*&---------------------------------------------------------------------*
*&      Form  SELECT_BKPF
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_bkpf.

************************************************************************
*
* SELECT SUBSET OF DATA FROM TABLE BKPF FOR DOWNLOAD AND OUTSIDE REVIEW
*
************************************************************************
  DATA: lv_exc_sta  TYPE bkpf-bstat.

  lv_exc_sta = 'S'.

  SELECT mandt bukrs belnr gjahr blart bldat budat monat usnam bktxt
   waers kursf xblnr
    bstat " add 2014.11.19
 FROM bkpf CLIENT SPECIFIED INTO CORRESPONDING FIELDS OF TABLE tempbkpf
   WHERE mandt IN client
   AND blart IN doc_type
   AND bldat IN date
   AND bukrs = co_code
   AND gjahr IN fisc_yr
   AND belnr IN doc_no
   AND budat IN post_dt
   AND cpudt IN cpu_dt
   AND usnam IN user .

* sort table
  SORT tempbkpf BY mandt bukrs belnr gjahr .
  DELETE  tempbkpf[] WHERE bstat = lv_exc_sta.

ENDFORM.                    " SELECT_BKPF

*&---------------------------------------------------------------------*
*&      Form  SELECT_BSEG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM select_bseg.
************************************************************************
*
*  SELECT SUBSET OF DATA FROM TABLE BSEG FOR DOWNLOAD AND OUTSIDE REVIEW
*
************************************************************************
  DATA: lt_tempbkpf_1 LIKE tempbkpf[],
        lt_tempbkpf_2 LIKE tempbkpf[].

  APPEND LINES OF tempbkpf[] TO lt_tempbkpf_1[].
  APPEND LINES OF tempbkpf[] TO lt_tempbkpf_2[].

  DELETE lt_tempbkpf_1 WHERE  blart = '1R'
                          OR  blart = 'AF'
                          OR  blart = 'Z3'.

  DELETE lt_tempbkpf_2 WHERE NOT ( blart = '1R'
                          OR  blart = 'AF'
                          oR  blart = 'AN').
  DELETE lt_tempbkpf_2 WHERE blart = 'Z3'.

  IF lt_tempbkpf_1 IS NOT INITIAL.
    SELECT mandt buzei shkzg dmbtr wrbtr sgtxt kostl hkont belnr bukrs gjahr
            FROM bseg
     CLIENT SPECIFIED INTO CORRESPONDING FIELDS OF TABLE tempbseg
     FOR ALL ENTRIES IN lt_tempbkpf_1[]
     WHERE mandt IN client
      AND bukrs = lt_tempbkpf_1-bukrs
      AND gjahr = lt_tempbkpf_1-gjahr
      AND belnr = lt_tempbkpf_1-belnr .
  ENDIF.
  IF lt_tempbkpf_2 IS NOT INITIAL.
    SELECT mandt buzei shkzg dmbtr wrbtr sgtxt kostl hkont belnr bukrs gjahr
            FROM bseg_add
     CLIENT SPECIFIED APPENDING CORRESPONDING FIELDS OF TABLE tempbseg
     FOR ALL ENTRIES IN lt_tempbkpf_2[]
     WHERE mandt IN client
      AND bukrs = lt_tempbkpf_2-bukrs
      AND gjahr = lt_tempbkpf_2-gjahr
      AND belnr = lt_tempbkpf_2-belnr .
  ENDIF.
  SORT tempbseg .

ENDFORM.                    " SELECT_BSEG

*&---------------------------------------------------------------------*
*&      Form  POULATE_JOIN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM poulate_join.

  DATA: lt_t001 TYPE STANDARD TABLE OF t001,
        ls_t001 TYPE t001.

  IF tempbkpf[] IS NOT INITIAL.
    SELECT *
      FROM t001
      INTO TABLE lt_t001
      FOR ALL ENTRIES IN tempbkpf
      WHERE bukrs = tempbkpf-bukrs.
  ENDIF.
  LOOP AT tempbseg .
    READ TABLE tempbkpf WITH KEY mandt = tempbseg-mandt
                                 bukrs = tempbseg-bukrs
                                 belnr = tempbseg-belnr
                                 gjahr = tempbseg-gjahr BINARY SEARCH .
    IF sy-subrc = 0 .
      READ TABLE lt_t001 INTO ls_t001 WITH KEY bukrs = tempbkpf-bukrs.
      MOVE-CORRESPONDING tempbkpf TO join.
      join-buzei = tempbseg-buzei.
      join-shkzg = tempbseg-shkzg.
      join-dmbtr = tempbseg-dmbtr.
      join-sgtxt = tempbseg-sgtxt.
      join-waers_l  = ls_t001-waers.
      join-kostl = tempbseg-kostl.
      join-hkont = tempbseg-hkont.
      join-wrbtr = tempbseg-wrbtr.
      APPEND join .
    ENDIF.
  ENDLOOP.

ENDFORM.                    " POULATE_JOIN

*&---------------------------------------------------------------------*
*&      Form  WRITE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM write_data.
************************************************************************
*
*     WRITE CONTENTS OF TABLE JOIN TO THE SCREEN
*
************************************************************************

  WRITE: 'Join Results'.

  LOOP AT join.
    WRITE: / join-bukrs, join-belnr,
             join-dmbtr, join-blart,
             join-budat, join-monat, join-usnam,
             join-bktxt, join-waers, join-kursf,
             join-buzei, join-shkzg, join-gjahr,
             join-sgtxt, join-kostl, join-hkont.
  ENDLOOP.


ENDFORM.                    " WRITE_DATA

*&---------------------------------------------------------------------*
*&      Form  EXPORT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM export_data.
*send internal tables to the database memory .

*  EXPORT tempskat TO  DATABASE indx(st) ID skatkey.
*  IF sy-subrc = 0 .
*    WRITE :/ 'SKAT data sucessfully exported' .
*  ENDIF.
*
*  EXPORT tempbkpf TO  DATABASE indx(st) ID bkpfkey.
*  IF sy-subrc = 0 .
*    WRITE :/ 'BKPF data sucessfully exported' .
*  ENDIF.
*  EXPORT tempbseg TO  DATABASE indx(st) ID bsegkey.
*  IF sy-subrc = 0 .
*    WRITE :/ 'BSEG data sucessfully exported' .
*  ENDIF.
  EXPORT join TO  DATABASE indx(st) ID joinkey.
  IF sy-subrc = 0 .
    WRITE :/ 'JOIN data sucessfully exported' .
  ENDIF.



ENDFORM.                    " EXPORT_DATA

*&---------------------------------------------------------------------*
*&      Form  ONLINE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM online_data.
*****MOD-001 DEL BEGIN
*  PERFORM skat_excel_download .
*  PERFORM bkpf_excel_download .
*  PERFORM bseg_excel_download .
*****MOD-001 DEL END
  PERFORM join_excel_download .

ENDFORM.                    " ONLINE_DATA

*&---------------------------------------------------------------------*
*&      Form  IMPORT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM import_data.
*import tables from the database  and down load to excel .

*  IMPORT  tempskat FROM  DATABASE indx(st) ID skatkey.
*  IF sy-subrc = 0 .
*    DELETE FROM DATABASE indx(st) ID skatkey.
*  ENDIF.
*
*  IMPORT  tempbkpf FROM  DATABASE indx(st) ID bkpfkey.
*  IF sy-subrc = 0 .
*    DELETE FROM DATABASE indx(st) ID bkpfkey.
*  ENDIF.
*
*  IMPORT  tempbseg FROM  DATABASE indx(st) ID bsegkey.
*  IF sy-subrc = 0 .
*    DELETE FROM DATABASE indx(st) ID bsegkey.
*  ENDIF.

  IMPORT  join FROM  DATABASE indx(st) ID joinkey.
  IF sy-subrc = 0 .
    DELETE FROM DATABASE indx(st) ID joinkey.
  ENDIF.
*****MOD-001 DEL BEGIN******
*  PERFORM skat_excel_download .
*  PERFORM bkpf_excel_download .
*  PERFORM bseg_excel_download .
*****MOD-001 DEL END******
  PERFORM join_excel_download .

ENDFORM.                    " IMPORT_DATA
******MOD-001 DEL BEGIN
*&---------------------------------------------------------------------*
*&      Form  SKAT_EXCEL_DOWNLOAD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_ENDFORM  text
*----------------------------------------------------------------------*
*FORM skat_excel_download  .
************************************
***************************************
**
**  DOWNLOAD RECORDS FROM INTERNAL TABLES INTO A FLAT FILE.
**
************************************
***************************************
***  CR3329 MOD   BEGIN
**  call function 'WS_DOWNLOAD'
**    exporting
**      filename            = skatfile
***      filetype            = 'DAT'
**    tables
**      data_tab            = tempskat
**    exceptions
**      file_open_error     = 1
**      file_write_error    = 2
**      invalid_filesize    = 3
**      invalid_table_width = 4
**      invalid_type        = 5
**      no_batch            = 6
**      unknown_error       = 7
**      others              = 8.
*  DATA: lv_filename TYPE string.
*  lv_filename = skatfile.
*  CALL METHOD cl_gui_frontend_services=>gui_download
*    EXPORTING
*      filename                = lv_filename
*      write_field_separator   = cl_abap_char_utilities=>horizontal_tab
*      codepage                = gv_codepage
*    CHANGING
*      data_tab                = tempskat[]
*    EXCEPTIONS
*      file_write_error        = 1
*      no_batch                = 2
*      gui_refuse_filetransfer = 3
*      invalid_type            = 4
*      no_authority            = 5
*      unknown_error           = 6
*      header_not_allowed      = 7
*      separator_not_allowed   = 8
*      filesize_not_allowed    = 9
*      header_too_long         = 10
*      dp_error_create         = 11
*      dp_error_send           = 12
*      dp_error_write          = 13
*      unknown_dp_error        = 14
*      access_denied           = 15
*      dp_out_of_memory        = 16
*      disk_full               = 17
*      dp_timeout              = 18
*      file_not_found          = 19
*      dataprovider_exception  = 20
*      control_flush_error     = 21
*      not_supported_by_gui    = 22
*      error_no_gui            = 23
*      OTHERS                  = 24.
*  IF sy-subrc <> 0.
**   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.
***  CR3329 MOD  END
***********************************************
*
*
*ENDFORM.                    " SKAT_EXCEL_DOWNLOAD

*&---------------------------------------------------------------------*
*&      Form  BKPF_EXCEL_DOWNLOAD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*FORM bkpf_excel_download.
**********************************************
**  CR3329 MOD   BEGIN
**  call function 'WS_DOWNLOAD'
**    exporting
**      filename            = bkpffile
**
***      filetype            = 'DAT'
**      filetype            = 'ASC'
**    tables
**      data_tab            = tempbkpf
**    exceptions
**      file_open_error     = 1
**      file_write_error    = 2
**      invalid_filesize    = 3
**      invalid_table_width = 4
**      invalid_type        = 5
**      no_batch            = 6
**      unknown_error       = 7
**      others              = 8.
*
*  DATA: lv_filename TYPE string.
*  lv_filename = bkpffile.
*  CALL METHOD cl_gui_frontend_services=>gui_download
*    EXPORTING
*      filename                = lv_filename
*      write_field_separator   = cl_abap_char_utilities=>horizontal_tab
*      codepage                = gv_codepage
*    CHANGING
*      data_tab                = tempbkpf[]
*    EXCEPTIONS
*      file_write_error        = 1
*      no_batch                = 2
*      gui_refuse_filetransfer = 3
*      invalid_type            = 4
*      no_authority            = 5
*      unknown_error           = 6
*      header_not_allowed      = 7
*      separator_not_allowed   = 8
*      filesize_not_allowed    = 9
*      header_too_long         = 10
*      dp_error_create         = 11
*      dp_error_send           = 12
*      dp_error_write          = 13
*      unknown_dp_error        = 14
*      access_denied           = 15
*      dp_out_of_memory        = 16
*      disk_full               = 17
*      dp_timeout              = 18
*      file_not_found          = 19
*      dataprovider_exception  = 20
*      control_flush_error     = 21
*      not_supported_by_gui    = 22
*      error_no_gui            = 23
*      OTHERS                  = 24.
*  IF sy-subrc <> 0.
**   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.
***  CR3329 MOD  END
************************************************************************
*
*ENDFORM.                    " BKPF_EXCEL_DOWNLOAD

*&---------------------------------------------------------------------*
*&      Form  BSEG_EXCEL_DOWNLOAD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
*FORM bseg_excel_download.
*********************************************
***  CR3329 MOD  BEGIN
**  call function 'WS_DOWNLOAD'
**    exporting
**      filename            = bsegfile
**      filetype            = 'DAT'
**    tables
**      data_tab            = tempbseg
**    exceptions
**      file_open_error     = 1
**      file_write_error    = 2
**      invalid_filesize    = 3
**      invalid_table_width = 4
**      invalid_type        = 5
**      no_batch            = 6
**      unknown_error       = 7
**      others              = 8.
*
*  DATA: lv_filename TYPE string.
*  lv_filename = bsegfile.
*  CALL METHOD cl_gui_frontend_services=>gui_download
*    EXPORTING
*      filename                = lv_filename
*      write_field_separator   = cl_abap_char_utilities=>horizontal_tab
*      codepage                = gv_codepage
*    CHANGING
*      data_tab                = tempbseg[]
*    EXCEPTIONS
*      file_write_error        = 1
*      no_batch                = 2
*      gui_refuse_filetransfer = 3
*      invalid_type            = 4
*      no_authority            = 5
*      unknown_error           = 6
*      header_not_allowed      = 7
*      separator_not_allowed   = 8
*      filesize_not_allowed    = 9
*      header_too_long         = 10
*      dp_error_create         = 11
*      dp_error_send           = 12
*      dp_error_write          = 13
*      unknown_dp_error        = 14
*      access_denied           = 15
*      dp_out_of_memory        = 16
*      disk_full               = 17
*      dp_timeout              = 18
*      file_not_found          = 19
*      dataprovider_exception  = 20
*      control_flush_error     = 21
*      not_supported_by_gui    = 22
*      error_no_gui            = 23
*      OTHERS                  = 24.
*  IF sy-subrc <> 0.
**   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.
***  CR3329 MOD  END
*
************************************************************************
*
*ENDFORM.                    " BSEG_EXCEL_DOWNLOAD
*******MOD DEL END******
*&---------------------------------------------------------------------*
*&      Form  JOIN_EXCEL_DOWNLOAD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM join_excel_download.
*********************************************
**  CR3329 MOD  BEGIN
*  CALL FUNCTION 'WS_DOWNLOAD'
*    EXPORTING
*      filename            = joinfile
*      filetype            = 'DAT'
*    TABLES
*      data_tab            = join
*    EXCEPTIONS
*      file_open_error     = 1
*      file_write_error    = 2
*      invalid_filesize    = 3
*      invalid_table_width = 4
*      invalid_type        = 5
*      no_batch            = 6
*      unknown_error       = 7
*      OTHERS              = 8.
  DATA: lv_filename TYPE string.
  lv_filename = joinfile.
  CALL METHOD cl_gui_frontend_services=>gui_download
    EXPORTING
      filename                = lv_filename
      write_field_separator   = cl_abap_char_utilities=>horizontal_tab
      codepage                = gv_codepage
    CHANGING
      data_tab                = join[]
    EXCEPTIONS
      file_write_error        = 1
      no_batch                = 2
      gui_refuse_filetransfer = 3
      invalid_type            = 4
      no_authority            = 5
      unknown_error           = 6
      header_not_allowed      = 7
      separator_not_allowed   = 8
      filesize_not_allowed    = 9
      header_too_long         = 10
      dp_error_create         = 11
      dp_error_send           = 12
      dp_error_write          = 13
      unknown_dp_error        = 14
      access_denied           = 15
      dp_out_of_memory        = 16
      disk_full               = 17
      dp_timeout              = 18
      file_not_found          = 19
      dataprovider_exception  = 20
      control_flush_error     = 21
      not_supported_by_gui    = 22
      error_no_gui            = 23
      OTHERS                  = 24.
  IF sy-subrc <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
**  CR3329 MOD  END

ENDFORM.                    " JOIN_EXCEL_DOWNLOAD
************************************************************************
*
*                   END PROGRAM
*
************************************************************************
*&---------------------------------------------------------------------*
*&      Form  AUTH_CHECK
*&---------------------------------------------------------------------*
*      Authourization check
*----------------------------------------------------------------------*
FORM auth_check .
  AUTHORITY-CHECK OBJECT 'F_BKPF_BUK'
                      ID 'BUKRS' FIELD co_code
                      ID 'ACTVT' DUMMY.
  IF sy-subrc <> 0.
    MESSAGE e001(00) WITH text-095 co_code.
  ENDIF.
ENDFORM.                    " AUTH_CHECK

*Text symbol text：
*095:Not authorised for company code:
