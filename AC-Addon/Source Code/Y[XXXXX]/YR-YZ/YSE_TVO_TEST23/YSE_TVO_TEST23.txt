*&---------------------------------------------------------------------*
*& Report  YSE_TVO_TEST23                                              *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  YSE_TVO_TEST23.

DATA:
  OKCODE            TYPE SY-UCOMM,
  OBJ_CONT_OV       TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
  OBJ_ALV_OV        TYPE REF TO CL_GUI_ALV_GRID,
  BEGIN OF WA_T001W,
    WERKS TYPE WERKS_D,
    NAME1 TYPE NAME1,
    ADRNR TYPE ADRNR,
  END OF WA_T001W,
  IT_T001W LIKE WA_T001W OCCURS 0,
  BEGIN OF WA_T001L,
    WERKS TYPE WERKS_D,
    LGORT LIKE T001L-LGORT,
    LGOBE TYPE LGOBE,
    LFDNR TYPE LFDNR_TWLAD,  " TWLAD
    ADRNR TYPE AD_ADDRNUM, " TWLAD
  END OF WA_T001L,
  IT_T001L LIKE WA_T001L OCCURS 0,
  BEGIN OF WA_TVKO,
    VKORG TYPE VKORG,
    VTEXT TYPE VTXTK,  " TVKOT
    ADRNR TYPE ADRNR,
  END OF WA_TVKO,
  IT_TVKO LIKE WA_TVKO OCCURS 0,
  BEGIN OF WA_TVBUR,
    VKBUR LIKE TVBUR-VKBUR,
    BEZEI TYPE BEZEI, " TVKBT
    ADRNR TYPE ADRNR,
  END OF WA_TVBUR,
  IT_TVBUR LIKE WA_TVBUR OCCURS 0,
  BEGIN OF WA_TVST,
    VSTEL LIKE TVST-VSTEL,
    VTEXT TYPE BEZEI30,   " TVSTT
    ADRNR TYPE ADRNR,
  END OF WA_TVST,
  IT_TVST LIKE WA_TVST OCCURS 0,
  BEGIN OF IT_ADRNR OCCURS 0,
    ADRNR TYPE ADRNR,
  END OF IT_ADRNR,
  IT_ADRC        TYPE ADRC        OCCURS 0 WITH HEADER LINE,
  IT_OUT         TYPE YSE_OU_ADRC OCCURS 0 WITH HEADER LINE,
  GT_FIELDCAT_OV TYPE LVC_T_FCAT.

* SELECTION SCREEN *
********************
  SELECT-OPTIONS:
    S_WERKS FOR WA_T001W-WERKS,
    S_LGORT FOR WA_T001L-LGORT,
    S_VKORG FOR WA_TVKO-VKORG,
    S_VKBUR FOR WA_TVBUR-VKBUR,
    S_VSTEL FOR WA_TVST-VSTEL.

* START OF SELECTION *
**********************
  IF NOT S_WERKS IS INITIAL.
    SELECT      WERKS NAME1 ADRNR
           INTO TABLE IT_T001W
           FROM T001W
          WHERE WERKS IN S_WERKS.
  ENDIF.

  IF NOT S_LGORT IS INITIAL.
    SELECT      A~WERKS A~LGORT A~LGOBE B~LFDNR B~ADRNR
           INTO TABLE IT_T001L
           FROM T001L AS A
           LEFT JOIN TWLAD AS B   " Also select StLoc w/o address!
             ON A~WERKS EQ B~WERKS
            AND A~LGORT EQ B~LGORT
          WHERE A~WERKS IN S_WERKS
            AND A~LGORT IN S_LGORT.
  ENDIF.

  IF NOT S_VKORG IS INITIAL.
    SELECT      A~VKORG B~VTEXT A~ADRNR
           INTO TABLE IT_TVKO
           FROM TVKO AS A
           JOIN TVKOT AS B
             ON A~VKORG EQ B~VKORG
          WHERE A~VKORG IN S_VKORG
            AND B~SPRAS EQ 'EN'.
  ENDIF.

  IF NOT S_VKBUR IS INITIAL.
    SELECT      A~VKBUR B~BEZEI A~ADRNR
           INTO TABLE IT_TVBUR
           FROM TVBUR AS A
           JOIN TVKBT AS B
             ON A~VKBUR EQ B~VKBUR
          WHERE A~VKBUR IN S_VKBUR
            AND B~SPRAS EQ 'EN'.
  ENDIF.

  IF NOT S_VSTEL IS INITIAL.
    SELECT      A~VSTEL B~VTEXT A~ADRNR
           INTO TABLE IT_TVST
           FROM TVST AS A
           JOIN TVSTT AS B
             ON A~VSTEL EQ B~VSTEL
          WHERE A~VSTEL IN S_VSTEL
            AND B~SPRAS EQ 'EN'.
  ENDIF.

  LOOP AT IT_T001W INTO WA_T001W.
    IT_ADRNR = WA_T001W-ADRNR.
    APPEND IT_ADRNR.
  ENDLOOP.
  LOOP AT IT_T001L INTO WA_T001L.
    IT_ADRNR = WA_T001L-ADRNR.
    APPEND IT_ADRNR.
  ENDLOOP.
  LOOP AT IT_TVKO INTO WA_TVKO.
    IT_ADRNR = WA_TVKO-ADRNR.
    APPEND IT_ADRNR.
  ENDLOOP.
  LOOP AT IT_TVBUR INTO WA_TVBUR.
    IT_ADRNR = WA_TVBUR-ADRNR.
    APPEND IT_ADRNR.
  ENDLOOP.
  LOOP AT IT_TVST INTO WA_TVST.
    IT_ADRNR = WA_TVST-ADRNR.
    APPEND IT_ADRNR.
  ENDLOOP.
  SORT IT_ADRNR.
  DELETE ADJACENT DUPLICATES FROM IT_ADRNR.
  DELETE IT_ADRNR WHERE ADRNR IS INITIAL.

  SELECT      *
         INTO TABLE IT_ADRC
         FROM ADRC
          FOR ALL ENTRIES IN IT_ADRNR
        WHERE ADDRNUMBER EQ IT_ADRNR-ADRNR.

* Start building output table
  CLEAR IT_OUT.
  LOOP AT IT_T001W INTO WA_T001W.
    MOVE-CORRESPONDING WA_T001W TO IT_OUT.
    IT_OUT-BEZEI = WA_T001W-NAME1.
    LOOP AT IT_ADRC WHERE ADDRNUMBER EQ WA_T001W-ADRNR.
      MOVE-CORRESPONDING IT_ADRC TO IT_OUT.
      APPEND IT_OUT.
    ENDLOOP.
  ENDLOOP.
  CLEAR IT_OUT.
  LOOP AT IT_T001L INTO WA_T001L.
    MOVE-CORRESPONDING WA_T001L TO IT_OUT.
    IT_OUT-BEZEI = WA_T001L-LGOBE.
    LOOP AT IT_ADRC WHERE ADDRNUMBER EQ WA_T001L-ADRNR.
      MOVE-CORRESPONDING IT_ADRC TO IT_OUT.
      APPEND IT_OUT.
    ENDLOOP.
*   If no corresponding address found, append the StLoc without address
    IF SY-SUBRC EQ 4.
      APPEND IT_OUT.
    ENDIF.
  ENDLOOP.
  CLEAR IT_OUT.
  LOOP AT IT_TVKO INTO WA_TVKO.
    MOVE-CORRESPONDING WA_TVKO TO IT_OUT.
    IT_OUT-BEZEI = WA_TVKO-VTEXT.
    LOOP AT IT_ADRC WHERE ADDRNUMBER EQ WA_TVKO-ADRNR.
      MOVE-CORRESPONDING IT_ADRC TO IT_OUT.
      APPEND IT_OUT.
    ENDLOOP.
  ENDLOOP.
  CLEAR IT_OUT.
  LOOP AT IT_TVBUR INTO WA_TVBUR.
    MOVE-CORRESPONDING WA_TVBUR TO IT_OUT.
    IT_OUT-BEZEI = WA_TVBUR-BEZEI.
    LOOP AT IT_ADRC WHERE ADDRNUMBER EQ WA_TVBUR-ADRNR.
      MOVE-CORRESPONDING IT_ADRC TO IT_OUT.
      APPEND IT_OUT.
    ENDLOOP.
  ENDLOOP.
  CLEAR IT_OUT.
  LOOP AT IT_TVST INTO WA_TVST.
    MOVE-CORRESPONDING WA_TVST TO IT_OUT.
    IT_OUT-BEZEI = WA_TVST-VTEXT.
    LOOP AT IT_ADRC WHERE ADDRNUMBER EQ WA_TVST-ADRNR.
      MOVE-CORRESPONDING IT_ADRC TO IT_OUT.
      APPEND IT_OUT.
    ENDLOOP.
  ENDLOOP.

  CALL SCREEN '0100'.

*&---------------------------------------------------------------------*
*&      Module  0100_PBO  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE 0100_PBO OUTPUT.

  SET PF-STATUS 'OVERVIEW'.

  IF OBJ_CONT_OV IS INITIAL .
    CREATE OBJECT OBJ_CONT_OV
             EXPORTING CONTAINER_NAME = 'OVERVIEW' .

    CREATE OBJECT OBJ_ALV_OV
              EXPORTING I_PARENT = OBJ_CONT_OV.

*   Fetch the field catalog for structure YSE_RENT_EHRSP_OUTPUT
    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        I_BUFFER_ACTIVE              = ' '
        I_STRUCTURE_NAME             = 'YSE_OU_ADRC'
      CHANGING
        CT_FIELDCAT                  = GT_FIELDCAT_OV.

  ENDIF.

* Display the grid
  CALL METHOD OBJ_ALV_OV->SET_TABLE_FOR_FIRST_DISPLAY
    EXPORTING
      I_STRUCTURE_NAME              = 'YSE_OU_ADRC'
*     IS_LAYOUT                     = GS_LAYOUT
    CHANGING
      IT_OUTTAB                     = IT_OUT[]
      IT_FIELDCATALOG               = GT_FIELDCAT_OV
*     IT_SORT                       = GT_FSORT_OV
    EXCEPTIONS
      INVALID_PARAMETER_COMBINATION = 1
      PROGRAM_ERROR                 = 2
      TOO_MANY_LINES                = 3
      OTHERS                        = 4.

ENDMODULE.                 " 0100_PBO  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  0100_PAI  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE 0100_PAI INPUT.

  CASE OKCODE.
    WHEN 'BACK' OR 'EXIT'.
      CALL METHOD OBJ_ALV_OV->FREE.
      FREE OBJ_ALV_OV.
      CALL METHOD OBJ_CONT_OV->FREE.
      FREE OBJ_CONT_OV.
      LEAVE TO SCREEN 0.

  ENDCASE.

ENDMODULE.                 " 0100_PAI  INPUT

*Selection text£º
*S_LGORT:D       Storage Location
*S_VKBUR:D       Sales office
*S_VKORG:D       Sales Organization
*S_VSTEL:D       Shipping Point/Receiving Pt
*S_WERKS:D       Plant
