*&---------------------------------------------------------------------*
*& Report  YRD_TEST
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  yrd_test.


DATA: l_number TYPE bapi_order_key-order_number,
      wa_orderdata TYPE bapi_pp_order_change,
      wa_orderdatax TYPE bapi_pp_order_changex,
      wa_return TYPE bapiret2.

PARAMETERS: p_aufnr TYPE afko-aufnr OBLIGATORY.
PARAMETERS: p_datum TYPE sy-datum OBLIGATORY.

l_number = p_aufnr.

*SELECT SINGLE gstrp
*  FROM afko
*  INTO wa_orderdata-basic_start_date
* WHERE aufnr = p_aufnr.
*wa_orderdatax-basic_start_date = 'X'.


wa_orderdata-basic_end_date = p_datum.
wa_orderdatax-basic_end_date = 'X'.



CALL FUNCTION 'BAPI_PRODORD_CHANGE'
  EXPORTING
    number                 = l_number
    orderdata              = wa_orderdata
    orderdatax             = wa_orderdatax
  IMPORTING
   return                 = wa_return
*   ORDER_TYPE             =
*   ORDER_STATUS           =
*   MASTER_DATA_READ       =
          .

IF NOT wa_return IS INITIAL.
  WRITE: / wa_return-message.
ELSE.
  MESSAGE 'Update success' TYPE 'S'.
ENDIF.

*
*TYPES:
*  BEGIN OF type_s_flight,
*  carrid TYPE scarr-carrid,
*  connid TYPE spfli-connid,
*  fldate TYPE sflight-fldate,
*  END OF type_s_flight.
*
*DATA:
*  fs_flight TYPE type_s_flight.
*
*DATA:
*  t_flight LIKE STANDARD TABLE OF fs_flight.
*
*START-OF-SELECTION.
*
*  SELECT carrid
*         connid
*         fldate
*    FROM sflight
*    INTO TABLE t_flight.
*
*  SET PF-STATUS 'FLIGHT'.  "-----> you have to set this pf-status before you run the program
*                           " with the function keys SORT, STABLE and Basic function codes like
*                           " Back Exit and Cancel
*END-OF-SELECTION.
*
*  WRITE:/10 'CARRID' COLOR 4,
*         20 'CONNID' COLOR 4,
*         30 'FLDATE' COLOR 4.
*
*  LOOP AT t_flight INTO fs_flight.
*    WRITE:/10 fs_flight-carrid,
*           20 fs_flight-connid,
*           30 fs_flight-fldate.
*  ENDLOOP.
*
*AT USER-COMMAND.
*  CASE sy-ucomm.
*    WHEN 'SORT'.
*      SORT t_flight BY carrid DESCENDING.
*      sy-lsind = 1.
*      WRITE:/10 'CARRID' COLOR 4,
*         20 'CONNID' COLOR 4,
*         30 'FLDATE' COLOR 4.
*      LOOP AT t_flight INTO fs_flight.
*        WRITE:/10 fs_flight-carrid,
*               20 fs_flight-connid,
*               30 fs_flight-fldate.
*      ENDLOOP.
*
*    WHEN 'STABLE'.
*      SORT t_flight STABLE BY carrid DESCENDING.
*      sy-lsind = 1.
*      WRITE:/10 'CARRID' COLOR 4,
*         20 'CONNID' COLOR 4,
*         30 'FLDATE' COLOR 4.
*      LOOP AT t_flight INTO fs_flight.
*        WRITE:/10 fs_flight-carrid,
*               20 fs_flight-connid,
*               30 fs_flight-fldate.
*      ENDLOOP.

*  ENDCASE.
*Selection text£º
*P_AUFNR:        Production Order
*P_DATUM:        Basic Finish Date
