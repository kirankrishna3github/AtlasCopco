*&---------------------------------------------------------------------*
*&  Include           YSE_FI_FX_GL_UPDATE_FORMS
*&---------------------------------------------------------------------*
*----------------------------------------------------------------------*
* PROGRAM ID           : YSE_FI_FX_GL_UPDATE_FORMS                     *
* PROGRAM TITLE        : Foreign update changes in GL accounts         *
* AUTHOR               : SHIREESHA DEPALA                              *
* DATE                 : 20/01/2015                                    *
* DEVELOPMENT ID       : CR3847                                        *
* CHANGE REQUEST NUMBER: CD1K988101                                    *
* PROGRAM DESCRIPTION  : The purpose of this program is to update      *
*                        foreign exchange update in GL accounts        *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME                 |CORRECTION NR| CHANGE REF *
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  READ_FILENAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM read_filename .
* Get file name
  CALL FUNCTION 'F4_FILENAME'
    IMPORTING
      file_name = p_flname
    EXCEPTIONS
      OTHERS    = 1.
  IF sy-subrc <> 0.
* Cannot read file name
    MESSAGE text-002 TYPE lv_e.
  ENDIF.

ENDFORM.                    " READ_FILENAME
*&---------------------------------------------------------------------*
*&      Form  READ_FILEDATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM read_filedata .
* Declare filename
  DATA : w_filename TYPE string.

  w_filename = p_flname.

  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      filename                = w_filename
      filetype                = lv_asc
      has_field_separator     = abap_true
    TABLES
      data_tab                = gt_data
    EXCEPTIONS
      file_open_error         = 1
      file_read_error         = 2
      no_batch                = 3
      gui_refuse_filetransfer = 4
      invalid_type            = 5
      no_authority            = 6
      unknown_error           = 7
      bad_data_format         = 8
      header_not_allowed      = 9
      separator_not_allowed   = 10
      header_too_long         = 11
      unknown_dp_error        = 12
      access_denied           = 13
      dp_out_of_memory        = 14
      disk_full               = 15
      dp_timeout              = 16
      OTHERS                  = 17.
  IF sy-subrc <> 0.
    MESSAGE text-003 TYPE lv_e.
  ENDIF.
* Delete first row from file as header line is included
  DELETE gt_data INDEX 1.
ENDFORM.                    " READ_FILEDATA
*&---------------------------------------------------------------------*
*&      Form  PROCESS_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM process_data .
*  Clear & Refresh data
  CLEAR: bdcdata.
  REFRESH: bdcdata[].

* Peform Call transaction method
  LOOP AT gt_data INTO wa_data.
* No Ledger
    IF wa_data-bwber = ' '.
      PERFORM bdc_dynpro      USING 'SAPDFKB1' '0120'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'T030A-KTOSL(03)'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=PICK'.
      PERFORM bdc_dynpro      USING 'SAPDFKB1' '1006'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'T004-KTOPL'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=BWBE'.
      PERFORM bdc_field       USING 'T004-KTOPL'
                                    wa_data-ktopl.
      PERFORM bdc_dynpro      USING 'SAPDFKB1' '1019'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'RFPDO3-ALLGBWBE'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=ENTR'.
      PERFORM bdc_dynpro      USING 'SAPL0F11' '0040'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'V_T030H-KTOPL'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=NEWL'.
      PERFORM bdc_dynpro      USING 'SAPL0F11' '0041'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'V_T030H-LKORR'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=SAVE'.
      PERFORM bdc_field       USING 'V_T030H-HKONT'
                                    wa_data-hkont.
      PERFORM bdc_field       USING 'V_T030H-LSREA'
                                    wa_data-lsrea.
      PERFORM bdc_field       USING 'V_T030H-LHREA'
                                    wa_data-lhrea.
      PERFORM bdc_field       USING 'V_T030H-LSBEW'
                                    wa_data-lsbew.
      PERFORM bdc_field       USING 'V_T030H-LHBEW'
                                    wa_data-lhbew.
      PERFORM bdc_field       USING 'V_T030H-LKORR'
                                    wa_data-lkorr.
      PERFORM bdc_dynpro      USING 'SAPL0F11' '0041'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'V_T030H-LSREA'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=ENDE'.
      PERFORM bdc_field       USING 'V_T030H-LSREA'
                                    wa_data-lsrea.
      PERFORM bdc_field       USING 'V_T030H-LHREA'
                                    wa_data-lhrea.
      PERFORM bdc_field       USING 'V_T030H-LSBEW'
                                    wa_data-lsbew.
      PERFORM bdc_field       USING 'V_T030H-LHBEW'
                                    wa_data-lhbew.
      PERFORM bdc_field       USING 'V_T030H-LKORR'
                                    wa_data-lkorr.
      PERFORM bdc_dynpro      USING 'SAPDFKB1' '0120'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '/EF15'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'T030W-LTEXT(03)'.
    ELSE.
      PERFORM bdc_dynpro      USING 'SAPDFKB1' '0120'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'T030A-KTOSL(03)'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=PICK'.
      PERFORM bdc_dynpro      USING 'SAPDFKB1' '1006'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'T004-KTOPL'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=BWBE'.
      PERFORM bdc_field       USING 'T004-KTOPL'
                                    wa_data-ktopl.
      PERFORM bdc_dynpro      USING 'SAPDFKB1' '1019'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'RFPDO3-ALLGBWBE'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=ENTR'.
      PERFORM bdc_field       USING 'RFPDO3-ALLGBWBE'
                                    wa_data-bwber.
      PERFORM bdc_dynpro      USING 'SAPL0F11' '0280'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'V_T030HB-KTOPL'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=NEWL'.
      PERFORM bdc_dynpro      USING 'SAPL0F11' '0281'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'V_T030HB-LKORR'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=SAVE'.
      PERFORM bdc_field       USING 'V_T030HB-HKONT'
                                    wa_data-hkont.
      PERFORM bdc_field       USING 'V_T030HB-LSBEW'
                                    wa_data-lsbew.
      PERFORM bdc_field       USING 'V_T030HB-LHBEW'
                                    wa_data-lhbew.
      PERFORM bdc_field       USING 'V_T030HB-LKORR'
                                    wa_data-lkorr.
      PERFORM bdc_field       USING 'V_T030HB-LSREA'
                                    wa_data-lsrea.
      PERFORM bdc_field       USING 'V_T030HB-LHREA'
                                    wa_data-lhrea.
      PERFORM bdc_dynpro      USING 'SAPL0F11' '0281'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'V_T030HB-LSBEW'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '=ENDE'.
      PERFORM bdc_field       USING 'V_T030HB-LSBEW'
                                    wa_data-lsbew.
      PERFORM bdc_field       USING 'V_T030HB-LHBEW'
                                    wa_data-lhbew.
      PERFORM bdc_field       USING 'V_T030HB-LKORR'
                                    wa_data-lkorr.
      PERFORM bdc_field       USING 'V_T030HB-LSREA'
                                    wa_data-lsrea.
      PERFORM bdc_field       USING 'V_T030HB-LHREA'
                                    wa_data-lhrea.
      PERFORM bdc_dynpro      USING 'SAPDFKB1' '0120'.
      PERFORM bdc_field       USING 'BDC_OKCODE'
                                    '/EF15'.
      PERFORM bdc_field       USING 'BDC_CURSOR'
                                    'T030W-LTEXT(03)'.
    ENDIF.
* Call OBA1 transaction to update foreign exchange for new GL accounts
    CALL TRANSACTION gc_tcode USING bdcdata MODE gv_mode
                             MESSAGES INTO i_messtab.
* Check for the billing document whether it is processed or not.
    IF sy-subrc = 0.
      wa_hkont-hkont = wa_data-hkont.
      wa_hkont-bwber = wa_data-bwber.
      APPEND wa_hkont TO it_success.
    ELSE.
      wa_errors-hkont = wa_data-hkont.
      wa_errors-bwber = wa_data-bwber.
* Attach the error message for failure GL Accounts
      LOOP AT i_messtab INTO wa_messtab WHERE  msgtyp = lv_e.
        CALL FUNCTION 'FORMAT_MESSAGE'
          EXPORTING
            id        = wa_messtab-msgid
            lang      = sy-langu
            no        = wa_messtab-msgnr
          IMPORTING
            msg       = wa_errors-message
          EXCEPTIONS
            not_found = 1
            OTHERS    = 2.
        IF sy-subrc <> 0.
* DO NOTHING
        ENDIF.
        CLEAR: wa_messtab.
      ENDLOOP.
      REFRESH: i_messtab, bdcdata.
      APPEND wa_errors TO it_errors.
      CLEAR wa_errors.
    ENDIF.
    CLEAR:  wa_hkont,
            wa_data.
    REFRESH: i_messtab.
    REFRESH: bdcdata.
  ENDLOOP.
ENDFORM.                    " PROCESS_DATA
*&---------------------------------------------------------------------*
*&      Form  BDC_DYNPRO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0130   text
*      -->P_0131   text
*----------------------------------------------------------------------*
FORM bdc_dynpro  USING program dynpro.
  CLEAR wa_bdcdata.
  wa_bdcdata-program  = program.
  wa_bdcdata-dynpro   = dynpro.
  wa_bdcdata-dynbegin = lv_x.
  APPEND wa_bdcdata TO bdcdata.
ENDFORM.                    " BDC_DYNPRO
*&---------------------------------------------------------------------*
*&      Form  BDC_FIELD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0135   text
*      -->P_0136   text
*----------------------------------------------------------------------*
FORM bdc_field  USING fnam fval.
  CLEAR wa_bdcdata.
  wa_bdcdata-fnam = fnam.
  wa_bdcdata-fval = fval.
  APPEND wa_bdcdata TO bdcdata.

ENDFORM.                    " BDC_FIELD
*&---------------------------------------------------------------------*
*&      Form  GL_ACCOUNTS_STATUS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM gl_accounts_status .
*Try to get the total list of GL accounts
  NEW-LINE.
  WRITE:/ text-005 COLOR COL_POSITIVE.
  LOOP AT it_errors INTO wa_errors.
    WRITE:/ wa_errors-hkont,
            lv_with,
            wa_errors-bwber,
            wa_errors-message.
  ENDLOOP.
ENDFORM.                    " GL_ACCOUNTS_STATUS
