*&---------------------------------------------------------------------*
*& Report  YSE_JP_FIFTH
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  yse_jp_fifth.

*TYPE-POOLS: slis.

*TABLES DECLARATION

TABLES: equi,eqkt,mara,iloa.

*TYPES DECLARATION

TYPES: BEGIN OF ty_equi_mara,
       equnr  TYPE equi-equnr,
       erdat  TYPE equi-erdat,
       warpl  TYPE equi-warpl,
       eqtyp  TYPE equi-eqtyp,
       matnr  TYPE equi-matnr,
       sernr  TYPE equi-sernr,
       prdha TYPE  mara-prdha,
    END OF ty_equi_mara,


   BEGIN OF ty_eqkt,
       equnr  TYPE eqkt-equnr,
       spras  TYPE eqkt-spras,
       eqktx  TYPE eqkt-eqktx,
      END OF ty_eqkt,

BEGIN OF ty_equz_iloa,
  equnr TYPE equz-equnr,
  iloan TYPE equz-iloan,
  swerk TYPE iloa-swerk,

  END OF ty_equz_iloa.


TYPES: BEGIN OF des_head,
        1     TYPE string,
        2     TYPE string,
        3     TYPE string,
        4     TYPE string,
        5     TYPE string,
        6     TYPE string,
       END OF des_head.

*  WORK AREA

DATA:  ls_equi  TYPE ty_equi_mara,
       ls_head  TYPE des_head,
       ls_eqkt  TYPE ty_eqkt,
       ls_equz  TYPE ty_equz_iloa.


DATA: lt_equi  TYPE STANDARD TABLE OF ty_equi_mara,
      lt_eqkt  TYPE STANDARD TABLE OF ty_eqkt,
      lt_equz  TYPE STANDARD TABLE OF ty_equz_iloa.



SELECT-OPTIONS: s_equnr FOR equi-equnr OBLIGATORY,
                s_matnr FOR equi-matnr,
                s_prdha FOR mara-prdha,
                s_swerk FOR iloa-swerk.

PARAMETERS: p_spras TYPE eqkt-spras.

ls_head-1 = text-d01.
ls_head-2 = text-d02.
ls_head-3 = text-d03.
ls_head-4 = text-d04.
ls_head-5 = text-d05.
ls_head-6 = text-d06.

WRITE: ls_head-1, 20 ls_head-2, 50 ls_head-3,70 ls_head-4, 90 ls_head-5, 110 ls_head-6.



SELECT  equi~equnr "<- source fields from database table
        equi~erdat
        equi~warpl
        equi~eqtyp
        equi~matnr
        equi~sernr
        mara~prdha
   FROM equi
   INNER JOIN  mara
   ON equi~matnr = mara~matnr
   INTO  TABLE lt_equi
  WHERE  equi~equnr IN s_equnr
       AND mara~prdha IN s_prdha
       AND equi~matnr IN s_matnr.
*     AND equi~ERNAM in s_MATNR.

IF lt_equi IS NOT INITIAL.
  SELECT  equnr
          spras
          eqktx
    FROM eqkt
    INTO TABLE lt_eqkt
    FOR ALL ENTRIES IN lt_equi
    WHERE  equnr = lt_equi-equnr.
ENDIF.

IF lt_equi IS NOT INITIAL.
  SELECT  equz~equnr
          equz~iloan
          swerk
    FROM equz
    INNER JOIN iloa
    ON iloa~iloan = equz~iloan
    INTO TABLE lt_equz
    FOR ALL ENTRIES IN lt_equi
    WHERE  equnr = lt_equi-equnr
      AND swerk IN s_swerk.
ENDIF.



IF s_equnr-low IS NOT INITIAL AND lt_equi IS NOT INITIAL.
  LOOP AT lt_equi INTO  ls_equi.
    READ TABLE lt_eqkt INTO  ls_eqkt WITH KEY equnr = ls_equi-equnr.
    READ TABLE  lt_equz INTO ls_equz WITH KEY equnr = ls_equi-equnr.
    IF sy-subrc = 0.
      WRITE: / ls_equi-equnr  UNDER ls_head-1,
                ls_eqkt-eqktx  UNDER ls_head-2,
                ls_equz-swerk  UNDER ls_head-3,
                ls_equi-sernr  UNDER ls_head-4,
                ls_equi-matnr  UNDER ls_head-5,
                ls_equi-prdha  UNDER ls_head-6.
    ENDIF.

  ENDLOOP.
ELSE.
  WRITE: / 'EQUIPMENT ', s_equnr , 'DOES NOT EXIST'.
ENDIF.

*Text symbol text£º
*D01:Equipment number
*D02:Equipment description
*D03:Maintenance plant
*D04:Serial number
*D05:Material number

*D06:Production hierarchy
*Selection text£º
*P_SPRAS:D       .
*S_EQUNR:D       .
*S_MATNR:D       .
*S_PRDHA:D       .
*S_SWERK:D       .
