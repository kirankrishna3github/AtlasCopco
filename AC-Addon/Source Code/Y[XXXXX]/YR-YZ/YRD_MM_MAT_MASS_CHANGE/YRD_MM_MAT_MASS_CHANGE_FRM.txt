*&---------------------------------------------------------------------*
*&  Include           YRD_MM_MAT_MASS_CHANGE_FRM
*&---------------------------------------------------------------------*


*&---------------------------------------------------------------------*
*&      Form  FRM_DEAL_SEL_COMMAND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_deal_sel_command .

  IF sscrfields-ucomm = 'FC01'. "Upload Template
    PERFORM frm_download_temp USING gc_dt.
  ENDIF.

ENDFORM.                    " FRM_DEAL_SEL_COMMAND
*&---------------------------------------------------------------------*
*&      Form  FRM_DOWNLOAD_TEMP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_GC_P3_DT  text
*----------------------------------------------------------------------*
FORM frm_download_temp  USING pc_dt TYPE string.

  DATA:lo_objdata TYPE wwwdatatab,
       lo_mime TYPE w3mime,
       lv_destination TYPE rlgrap-filename,
       lv_objnam TYPE string,
       lv_rc TYPE sy-subrc.

  DATA:lv_objid TYPE wwwdatatab-objid,
       lv_dest TYPE sapb-sappfad.

  DATA:lv_filename TYPE string,
       lv_path     TYPE string,
       lv_fullpath TYPE string.

  lv_objid = pc_dt.
  CONCATENATE lv_objid '.XLSX' INTO lv_filename.

  CALL METHOD cl_gui_frontend_services=>file_save_dialog
    EXPORTING
      default_extension    = 'XLSX'
      default_file_name    = lv_filename
    CHANGING
      filename             = lv_filename
      path                 = lv_path
      fullpath             = lv_fullpath
    EXCEPTIONS
      cntl_error           = 1
      error_no_gui         = 2
      not_supported_by_gui = 3
      OTHERS               = 4.

  IF lv_fullpath = ''.
    lv_errtxt = text-001.
    MESSAGE lv_errtxt TYPE 'E'.
  ENDIF.

  IF sy-subrc = 0.
    lv_dest = lv_fullpath.

    CONCATENATE pc_dt '.XLSX' INTO lv_objnam.

    CONDENSE lv_objnam NO-GAPS.
    SELECT SINGLE relid objid FROM wwwdata INTO CORRESPONDING FIELDS OF lo_objdata
           WHERE srtf2 = 0 AND relid = 'MI' AND objid = lv_objid.
    IF sy-subrc NE 0 OR lo_objdata-objid EQ space.
      CONCATENATE text-002 lv_objnam text-003 INTO lv_errtxt.
      MESSAGE lv_errtxt TYPE 'I'.
    ENDIF.
    lv_destination = lv_dest.
    CALL FUNCTION 'DOWNLOAD_WEB_OBJECT'
      EXPORTING
        key         = lo_objdata
        destination = lv_destination
      IMPORTING
        rc          = lv_rc.
    IF lv_rc NE 0.
      CONCATENATE text-002 lv_objnam text-004 INTO lv_errtxt.
      MESSAGE lv_errtxt TYPE 'S' DISPLAY LIKE 'E'.
    ENDIF.
  ENDIF.


ENDFORM.                    " FRM_DOWNLOAD_TEMP
*&---------------------------------------------------------------------*
*&      Form  FRM_GET_FILE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_get_file .

  CALL FUNCTION 'WS_FILENAME_GET'
    EXPORTING
*      def_filename     = ''
*      def_path         = ''
      mask             = ',ExcelÎÄ¼þ(*.XLS;*.XLSX),*.XLS;*.XLSX,'
      mode             = 'O'
      title            = 'UPLOAD'
    IMPORTING
      filename         = p_file
*     RC               =
    EXCEPTIONS
      inv_winsys       = 1
      no_batch         = 2
      selection_cancel = 3
      selection_error  = 4
      OTHERS           = 5.

ENDFORM.                    " FRM_GET_FILE

*&---------------------------------------------------------------------*
*&      Form  FRM_UPLOAD_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_upload_data .

  FIELD-SYMBOLS: <wa_itab> TYPE alsmex_tabline.
  CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE'
    EXPORTING
      filename    = p_file
      i_begin_col = 1
      i_begin_row = 1
      i_end_col   = 18
      i_end_row   = 9999
    TABLES
      intern      = itab.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

  SORT itab BY row.
  DELETE itab WHERE row <= '0010'.  "Delete Excel Title

  LOOP AT itab ASSIGNING <wa_itab>.
    CASE <wa_itab>-col.
      WHEN '0001'.
        wa_upload-matnr = <wa_itab>-value.
      WHEN '0002'.
        wa_upload-mtart = <wa_itab>-value.
      WHEN '0003'.
        wa_upload-werks = <wa_itab>-value.
      WHEN '0004'.
        wa_upload-lgort = <wa_itab>-value.
      WHEN '0005'.
        wa_upload-beskz = <wa_itab>-value.
      WHEN '0006'.
        wa_upload-rgekz = <wa_itab>-value.
      WHEN '0007'.
        wa_upload-dzeit = <wa_itab>-value.
      WHEN '0008'.
        wa_upload-fhori = <wa_itab>-value.
      WHEN '0009'.
        wa_upload-strgr = <wa_itab>-value.
      WHEN '0010'.
        wa_upload-vrmod = <wa_itab>-value.
      WHEN '0011'.
        wa_upload-vint1 = <wa_itab>-value.
      WHEN '0012'.
        wa_upload-vint2 = <wa_itab>-value.
      WHEN '0013'.
        wa_upload-miskz = <wa_itab>-value.
      WHEN '0014'.
        wa_upload-mtvfp = <wa_itab>-value.
      WHEN '0015'.
        wa_upload-fevor = <wa_itab>-value.
      WHEN '0016'.
        wa_upload-lgpro = <wa_itab>-value.
      WHEN '0017'.
        wa_upload-sfcpf = <wa_itab>-value.
      WHEN '0018'.
        wa_upload-stlan = <wa_itab>-value.
    ENDCASE.
    AT END OF row.
      APPEND wa_upload TO it_upload.
      CLEAR wa_upload.
    ENDAT.
  ENDLOOP.

ENDFORM.                    " FRM_UPLOAD_DATA

*&---------------------------------------------------------------------*
*&      Form  FRM_CHECK_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->  text
*----------------------------------------------------------------------*
FORM frm_check_data .

  LOOP AT it_upload INTO wa_upload.
**Material Number
    CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
      EXPORTING
        input        = wa_upload-matnr
      IMPORTING
        output       = wa_upload-matnr
      EXCEPTIONS
        length_error = 1
        OTHERS       = 2.

    SELECT SINGLE * FROM marc
     WHERE matnr = wa_upload-matnr
       AND werks = wa_upload-werks.
    IF sy-subrc <> 0.

      it_message-light = gc_light_red.
      it_message-matnr  = wa_upload-matnr.
      SHIFT it_message-matnr LEFT DELETING LEADING '0'.
      SELECT SINGLE maktx FROM makt
        INTO it_message-maktx
       WHERE matnr = wa_upload-matnr
         AND spras = 'E'.

      CONCATENATE text-007 it_message-matnr text-008 wa_upload-werks INTO it_message-text.
      CONDENSE it_message-text.
      APPEND it_message.
      CLEAR: it_message.

      DELETE TABLE it_upload FROM wa_upload.
    ENDIF.
  ENDLOOP.


ENDFORM.                    " FRM_CHECK_DATA
*&---------------------------------------------------------------------*
*&      Form  FRM_UPDATE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM frm_update_data .

  DATA: lv_lines TYPE i.


  DATA: wa_header LIKE bapimathead,
        wa_marc   LIKE bapi_marc,
        wa_marcx  LIKE bapi_marcx,
        wa_mard   LIKE bapi_mard,
        wa_mardx  LIKE bapi_mardx,
        wa_return LIKE bapiret2.


  LOOP AT it_upload INTO wa_upload.
    CLEAR: wa_header,wa_marc,wa_marcx,wa_mard,wa_mardx,wa_return.

    CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
      EXPORTING
        input        = wa_upload-matnr
      IMPORTING
        output       = wa_upload-matnr
      EXCEPTIONS
        length_error = 1
        OTHERS       = 2.

***insert wa_header
    wa_header-material      = wa_upload-matnr. "Material Number
    wa_header-matl_type     = wa_upload-mtart. "Material Type
    SELECT SINGLE mbrsh FROM mara
      INTO wa_header-ind_sector                "Industry sector
     WHERE matnr = wa_upload-matnr.

    IF NOT wa_upload-beskz IS INITIAL
      OR NOT wa_upload-rgekz IS INITIAL
      OR NOT wa_upload-strgr IS INITIAL
      OR NOT wa_upload-vrmod IS INITIAL
      OR NOT wa_upload-vint1 IS INITIAL
      OR NOT wa_upload-vint2 IS INITIAL
      OR NOT wa_upload-miskz IS INITIAL
      OR NOT wa_upload-mtvfp IS INITIAL.
      wa_header-mrp_view        = gc_x.
    ENDIF.
    IF NOT wa_upload-fevor IS INITIAL
      OR NOT wa_upload-lgpro IS INITIAL
      OR NOT wa_upload-sfcpf IS INITIAL.
      wa_header-work_sched_view = gc_x.
    ENDIF.
    IF NOT wa_upload-stlan IS INITIAL.
      wa_header-cost_view       = gc_x.
    ENDIF.

***inser marc / marcx
    wa_marc-plant                = wa_upload-werks.
    wa_marcx-plant               = wa_upload-werks.
    IF NOT wa_upload-beskz IS INITIAL.
      wa_marc-proc_type          = wa_upload-beskz.
      wa_marcx-proc_type         = gc_x.
    ENDIF.
    IF NOT wa_upload-rgekz IS INITIAL.
      wa_marc-backflush          = wa_upload-rgekz.
      wa_marcx-backflush         = gc_x.
    ENDIF.
    IF NOT wa_upload-dzeit IS INITIAL.
      wa_marc-inhseprodt         = wa_upload-dzeit.
      wa_marcx-inhseprodt        = gc_x.
    ENDIF.
    IF NOT wa_upload-fhori IS INITIAL.
      wa_marc-sm_key             = wa_upload-fhori.
      wa_marcx-sm_key            = gc_x.
    ENDIF.
    IF NOT wa_upload-strgr IS INITIAL.
      wa_marc-plan_strgp         = wa_upload-strgr.
      wa_marcx-plan_strgp        = gc_x.
    ENDIF.
    IF NOT wa_upload-vrmod IS INITIAL.
      wa_marc-consummode         = wa_upload-vrmod.
      wa_marcx-consummode        = gc_x.
    ENDIF.
    IF NOT wa_upload-vint1 IS INITIAL.
      wa_marc-bwd_cons           = wa_upload-vint1.
      wa_marcx-bwd_cons          = gc_x.
    ENDIF.
    IF NOT wa_upload-vint2 IS INITIAL.
      wa_marc-fwd_cons           = wa_upload-vint2.
      wa_marcx-fwd_cons          = gc_x.
    ENDIF.
    IF NOT wa_upload-miskz IS INITIAL.
      wa_marc-mixed_mrp          = wa_upload-miskz.
      wa_marcx-mixed_mrp         = gc_x.
    ENDIF.
    IF NOT wa_upload-mtvfp IS INITIAL.
      wa_marc-availcheck         = wa_upload-mtvfp.
      wa_marcx-availcheck        = gc_x.
    ENDIF.
    IF NOT wa_upload-fevor IS INITIAL.
      wa_marc-production_scheduler  = wa_upload-fevor.
      wa_marcx-production_scheduler = gc_x.
    ENDIF.
    IF NOT wa_upload-lgpro IS INITIAL.
      wa_marc-iss_st_loc        = wa_upload-lgpro.
      wa_marcx-iss_st_loc       = gc_x.
    ENDIF.
    IF NOT wa_upload-sfcpf IS INITIAL.
      wa_marc-prodprof          = wa_upload-sfcpf.
      wa_marcx-prodprof         = gc_x.
    ENDIF.
    IF NOT wa_upload-stlan IS INITIAL.
      wa_marc-bom_usage         = wa_upload-stlan.
      wa_marcx-bom_usage        = gc_x.
    ENDIF.


***insert mard / mardx
    IF NOT wa_upload-lgort IS INITIAL.
      wa_mard-plant             = wa_upload-werks.
      wa_mardx-plant            = wa_upload-werks.
      wa_mard-stge_loc          = wa_upload-lgort.
      wa_mardx-stge_loc         = wa_upload-lgort.
    ENDIF.


    CALL FUNCTION 'BAPI_MATERIAL_SAVEDATA'
      EXPORTING
        headdata             = wa_header
        plantdata            = wa_marc
        plantdatax           = wa_marcx
        storagelocationdata  = wa_mard
        storagelocationdatax = wa_mardx
      IMPORTING
        return               = wa_return.

    IF wa_return-type = 'E'.
      it_message-light = gc_light_red.
    ELSE.
      it_message-light = gc_light_green.
    ENDIF.
    it_message-matnr  = wa_upload-matnr.
    SHIFT it_message-matnr LEFT DELETING LEADING '0'.
    SELECT SINGLE maktx FROM makt
      INTO it_message-maktx
     WHERE matnr = wa_upload-matnr
       AND spras = 'E'.
    it_message-msgtp  = wa_return-type.
    it_message-id     = wa_return-id.
    it_message-number = wa_return-number.
    SELECT SINGLE text
      FROM t100
      INTO it_message-text
    WHERE sprsl = sy-langu
      AND arbgb = it_message-id
      AND msgnr = it_message-number.
    REPLACE FIRST OCCURRENCE OF '&'  IN it_message-text  WITH wa_return-message_v1.
    REPLACE FIRST OCCURRENCE OF '&'  IN it_message-text  WITH wa_return-message_v2.
    REPLACE FIRST OCCURRENCE OF '&'  IN it_message-text  WITH wa_return-message_v3.
    REPLACE FIRST OCCURRENCE OF '&'  IN it_message-text  WITH wa_return-message_v4.
    CONDENSE it_message-text.
    APPEND it_message.
    CLEAR: it_message.

    IF wa_return-type = 'E'.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
    ELSE.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          wait = gc_x.
    ENDIF.
  ENDLOOP.


ENDFORM.                    " FRM_UPDATE_DATA
*&---------------------------------------------------------------------*
*&      Form  SHOW_MESSAGE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM show_message .


*ALV Define
  TYPE-POOLS: slis.
  DATA: ls_layout TYPE slis_layout_alv.
  DATA: lt_fieldcate TYPE slis_t_fieldcat_alv WITH HEADER LINE.

*ALV Display set fields
  CLEAR lt_fieldcate.
  lt_fieldcate-fieldname = 'LIGHT'.
  lt_fieldcate-seltext_m = text-z01.
  lt_fieldcate-outputlen = 10.
  lt_fieldcate-just = 'L'.
  APPEND lt_fieldcate.

  CLEAR lt_fieldcate.
  lt_fieldcate-fieldname = 'MATNR'.
  lt_fieldcate-seltext_m = text-z02.
  lt_fieldcate-outputlen = 10.
  lt_fieldcate-just = 'L'.
  APPEND lt_fieldcate.

  CLEAR lt_fieldcate.
  lt_fieldcate-fieldname = 'MAKTX'.
  lt_fieldcate-seltext_m = text-z03.
  lt_fieldcate-outputlen = 40.
  lt_fieldcate-just = 'L'.
  APPEND lt_fieldcate.

  CLEAR lt_fieldcate.
  lt_fieldcate-fieldname = 'MSGTP'.
  lt_fieldcate-seltext_m = text-z04.
  lt_fieldcate-outputlen = 5.
  lt_fieldcate-just = 'L'.
  APPEND lt_fieldcate.

  CLEAR lt_fieldcate.
  lt_fieldcate-fieldname = 'ID'.
  lt_fieldcate-seltext_m = text-z05.
  lt_fieldcate-outputlen = 5.
  lt_fieldcate-just = 'L'.
  APPEND lt_fieldcate.

  CLEAR lt_fieldcate.
  lt_fieldcate-fieldname = 'NUMBER'.
  lt_fieldcate-seltext_m = text-z06.
  lt_fieldcate-outputlen = 5.
  lt_fieldcate-just = 'L'.
  APPEND lt_fieldcate.

  CLEAR lt_fieldcate.
  lt_fieldcate-fieldname = 'TEXT'.
  lt_fieldcate-seltext_m = text-z07.
  lt_fieldcate-outputlen = 100.
  lt_fieldcate-just = 'L'.
  APPEND lt_fieldcate.

  ls_layout-colwidth_optimize =  'X'.
  ls_layout-zebra = 'X'.

*Call FM, Display ALV
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program = sy-repid
      i_grid_title       = text-005
      is_layout          = ls_layout
      it_fieldcat        = lt_fieldcate[]
    TABLES
      t_outtab           = it_message.

ENDFORM.                    " SHOW_MESSAGE
