***INCLUDE RFKORI93 .

*NCLUDE RFKORI00.

*=======================================================================
*       Interne Perform-Routinen
*=======================================================================

*----------------------------------------------------------------------*
* FORM  MESSAGE_APPEND
*----------------------------------------------------------------------*
FORM MESSAGE_APPEND.

  CALL FUNCTION 'FI_MESSAGE_COLLECT'
       EXPORTING
            I_FIMSG       = FIMSG
            I_XAPPN       = 'X'
       EXCEPTIONS
            MSGID_MISSING = 01
            MSGNO_MISSING = 02
            MSGTY_MISSING = 03.

  XNACH = 'X'.
ENDFORM.

*----------------------------------------------------------------------*
* FORM  MESSAGE_COLLECT
*----------------------------------------------------------------------*
FORM MESSAGE_COLLECT.

  CALL FUNCTION 'FI_MESSAGE_COLLECT'
       EXPORTING
            I_FIMSG       = FIMSG
            I_XAPPN       = ' '
       EXCEPTIONS
            MSGID_MISSING = 01
            MSGNO_MISSING = 02
            MSGTY_MISSING = 03.

  XNACH = 'X'.
ENDFORM.

*----------------------------------------------------------------------*
* FORM  MESSAGE_CHECK
*----------------------------------------------------------------------*
FORM MESSAGE_CHECK.

  CALL FUNCTION 'FI_MESSAGE_CHECK'
       EXCEPTIONS
            NO_MESSAGE = 01.

ENDFORM.

*----------------------------------------------------------------------*
* FORM  MESSAGE_ELEMENT
*----------------------------------------------------------------------*
FORM MESSAGE_ELEMENT.
  CLEAR FIMSG.
  FIMSG-MSORT = COUNTM. FIMSG-MSGID = 'FB'.
  FIMSG-MSGTY = 'I'.
  FIMSG-MSGNO = '287'.
  FIMSG-MSGV1 = SAVE_FORM.
  FIMSG-MSGV2 = WINDOW.
  FIMSG-MSGV3 = EREIGNIS.
  PERFORM MESSAGE_COLLECT.
ENDFORM.

*----------------------------------------------------------------------*
* FORM  MESSAGE_GET
*----------------------------------------------------------------------*
FORM MESSAGE_GET.

  CALL FUNCTION 'FI_MESSAGE_GET'
       TABLES
            T_FIMSG    = HFIMSG
       EXCEPTIONS
            NO_MESSAGE = 01.

ENDFORM.

*----------------------------------------------------------------------*
* FORM  MESSAGE_GET_MSORT
*----------------------------------------------------------------------*
FORM MESSAGE_GET_MSORT.

  CALL FUNCTION 'FI_MESSAGE_GET_MSORT'
       IMPORTING
            E_XINIT    = XINIT
       TABLES
            S_FIMSG    = MSORT_TAB
       EXCEPTIONS
            NO_MESSAGE = 01.

ENDFORM.

*----------------------------------------------------------------------*
* FORM  MESSAGE_INIT
*----------------------------------------------------------------------*
FORM  MESSAGE_INIT.

  CALL FUNCTION 'FI_MESSAGE_INIT'.

ENDFORM.

*----------------------------------------------------------------------*
* FORM MESSAGE_NO_SELECTION
*----------------------------------------------------------------------*
FORM MESSAGE_NO_SELECTION.
  PERFORM MESSAGE_CHECK.
  IF SY-SUBRC = 0.
    CLEAR BUKLINES.
    DESCRIBE TABLE HBUKRS LINES BUKLINES.
    IF BUKLINES = '1'.
      IF HBUKRS-HIGH IS INITIAL.
        MBUKRS = HBUKRS-LOW.
      ENDIF.
    ENDIF.
    PERFORM MESSAGE_PRINT.
  ELSE.
    CLEAR BUKLINES.
    DESCRIBE TABLE HBUKRS LINES BUKLINES.
    IF BUKLINES = '1'.
      IF HBUKRS-HIGH IS INITIAL.
        IF SAVE_EVENT IS INITIAL.
          MESSAGE S474 WITH SAVE_REPID HBUKRS-LOW.
        ELSE.
          MESSAGE S475 WITH SAVE_REPID HBUKRS-LOW SAVE_EVENT.
        ENDIF.
      ELSE.
        IF SAVE_EVENT IS INITIAL.
          MESSAGE S472 WITH SAVE_REPID.
        ELSE.
          MESSAGE S473 WITH SAVE_REPID SAVE_EVENT.
        ENDIF.
      ENDIF.
    ELSE.
      IF SAVE_EVENT IS INITIAL.
        MESSAGE S472 WITH SAVE_REPID.
      ELSE.
        MESSAGE S473 WITH SAVE_REPID SAVE_EVENT.
      ENDIF.
    ENDIF.
  ENDIF.
ENDFORM.

*----------------------------------------------------------------------*
* FORM  MESSAGE_OUTPUT
*----------------------------------------------------------------------*
FORM  MESSAGE_OUTPUT.
  IF NOT XNACH IS INITIAL.
    CLEAR HBKORMKEY.
    CLEAR HERDATA.
    CLEAR HKOKON.
    HBKORMKEY-BUKRS = HDBUKRS.
    HBKORMKEY-KOART = HDKOART.
    HBKORMKEY-KONTO = HDKONTO.
    HBKORMKEY-BELNR = DABELNR.
    HBKORMKEY-GJAHR = DAGJAHR.
    CONDENSE HBKORMKEY.
    HERDATA-USNAM = HDUSNAM.
    HERDATA-DATUM = HDDATUM.
    HERDATA-UZEIT = HDUZEIT.
    IF NOT HDKOAR2 IS INITIAL
    OR NOT HDKONT2 IS INITIAL.
      HKOKON-KOART = HDKOAR2.
      HKOKON-KONTO = HDKONT2.
    ENDIF.
    IF XKAUSG IS INITIAL.
      IF NOT HDKOAR2 IS INITIAL
      OR NOT HDKONT2 IS INITIAL.
        CLEAR FIMSG.
        FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
        FIMSG-MSGTY = 'I'.
        FIMSG-MSGNO = '826'.
        FIMSG-MSGV1 = '          '.
        FIMSG-MSGV2 = HBKORMKEY.
        FIMSG-MSGV3 = HERDATA.
        FIMSG-MSGV4 = HKOKON.
        PERFORM MESSAGE_APPEND.
      ELSE.
        CLEAR FIMSG.
        FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
        FIMSG-MSGTY = 'I'.
        FIMSG-MSGNO = '828'.
        FIMSG-MSGV1 = '          '.
        FIMSG-MSGV2 = HBKORMKEY.
        FIMSG-MSGV3 = HERDATA.
        PERFORM MESSAGE_APPEND.
      ENDIF.
    ELSE.
      IF NOT HDKOAR2 IS INITIAL
      OR NOT HDKONT2 IS INITIAL.
        CLEAR FIMSG.
        FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
        FIMSG-MSGTY = 'I'.
        FIMSG-MSGNO = '827'.
        FIMSG-MSGV1 = '          '.
        FIMSG-MSGV2 = HBKORMKEY.
        FIMSG-MSGV3 = HERDATA.
        FIMSG-MSGV4 = HKOKON.
        PERFORM MESSAGE_APPEND.
      ELSE.
        CLEAR FIMSG.
        FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
        FIMSG-MSGTY = 'I'.
        FIMSG-MSGNO = '548'.
        FIMSG-MSGV1 = '          '.
        FIMSG-MSGV2 = HBKORMKEY.
        FIMSG-MSGV3 = HERDATA.
        PERFORM MESSAGE_APPEND.
      ENDIF.
    ENDIF.
  ENDIF.
ENDFORM.

*----------------------------------------------------------------------*
* FORM  MESSAGE_PRINT
*----------------------------------------------------------------------*
FORM MESSAGE_PRINT.

  CLEAR XKAUSG.
  CLEAR PROLISTN.
  PROLISTN      = SAVE_EVENT.
  IF NOT MBUKRS IS INITIAL.
    PROLISTN+6(4) = MBUKRS.
  ENDIF.
  IF PRINT IS INITIAL
  OR NOT XONLI IS INITIAL.
    NEW-PAGE
      LINE-SIZE               132.
  ELSE.
    IF SY-BATCH IS INITIAL.
      IF SAVE_PRDEST IS INITIAL.
        SELECT SINGLE * FROM USR01
          WHERE BNAME = SY-UNAME.
        IF SY-SUBRC = 0.
          SAVE_PRDEST = USR01-SPLD.
        ENDIF.
      ENDIF.
      IF NOT SAVE_PRDEST IS INITIAL.
        NEW-PAGE
          PRINT ON
          LINE-SIZE               132
          DESTINATION             SAVE_PRDEST
          LIST NAME               PROLISTN
          IMMEDIATELY             ' '
          NEW LIST IDENTIFICATION 'X'
          KEEP IN SPOOL           'X'
          LIST DATASET            'F140ER'
          sap cover page          pri_params-prsap
          receiver                pri_params-prrec
          department              pri_params-prabt
          NO DIALOG.
      ELSE.
        NEW-PAGE
          PRINT ON
          LINE-SIZE               132
          LIST NAME               PROLISTN
          IMMEDIATELY             ' '
          NEW LIST IDENTIFICATION 'X'
          KEEP IN SPOOL           'X'
          sap cover page          pri_params-prsap
          receiver                pri_params-prrec
          department              pri_params-prabt
          LIST DATASET            'F140ER'.
      ENDIF.
    ELSE.
      IF SAVE_PRDEST IS INITIAL.
        IF NOT SYST-PDEST  IS INITIAL.
          SAVE_PRDEST = SYST-PDEST.
        ELSE.
          IF NOT SAVE_PDEST IS INITIAL.
            SAVE_PRDEST = SAVE_PDEST.
          ENDIF.
        ENDIF.
      ENDIF.
      IF NOT SAVE_PRDEST IS INITIAL.
        NEW-PAGE
          PRINT ON
          LINE-SIZE               132
          DESTINATION             SAVE_PRDEST
          LIST NAME               PROLISTN
          IMMEDIATELY             ' '
          NEW LIST IDENTIFICATION 'X'
          KEEP IN SPOOL           'X'
          LIST DATASET            'F140ER'
          sap cover page          pri_params-prsap
          receiver                pri_params-prrec
          department              pri_params-prabt
          NO DIALOG.
      ELSE.
*       MESSAGE i829.
        CLEAR FIMSG.
        FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
        FIMSG-MSGTY = 'I'.
        FIMSG-MSGNO = '829'.
        PERFORM MESSAGE_APPEND.

        CALL FUNCTION 'FI_MESSAGE_PROTOCOL'
*            EXPORTING
*                 TYPE_S_ONLY = 'X'
             EXCEPTIONS
*                 NO_MESSAGE  = 1
*                 NOT_BATCH   = 2
                  OTHERS      = 3
                  .
        IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
        ENDIF.
        XKAUSG = 'X'.
      ENDIF.
    ENDIF.
  ENDIF.
  IF XKAUSG IS INITIAL.
    IF MBUKRS IS INITIAL.
      MOVE: '    '   TO BHDGD-BUKRS.
    ELSE.
      MOVE: MBUKRS   TO BHDGD-BUKRS.
    ENDIF.
    MOVE: '0'      TO BHDGD-INIFL,
          SY-LINSZ TO BHDGD-LINES,     "Zeilenbreite der Liste aus Rep.
          '132'    TO BHDGD-LINES,     "Zeilenbreite der Liste aus Rep.
          SY-UNAME TO BHDGD-UNAME,     "Benutzername
          SY-REPID TO BHDGD-REPID,     "Name des ABAP-Programmes
          SY-TITLE TO BHDGD-LINE1,     "Titel des ABAP-Programmes
          TEXT-205 TO BHDGD-LINE2,     "Fehlerliste
*         MI-FICHE TO BHDGD-MIFFL,     "Mikrofiche-Zeile
          SPACE    TO BHDGD-SEPAR,     "keine Listseparation
          'BUKRS'  TO BHDGD-DOMAI.

    CLEAR T048T-LTEXT.
    IF NOT SAVE_EVENT IS INITIAL.
      SELECT SINGLE * FROM T048T
        WHERE SPRAS = SY-LANGU
        AND   EVENT = SAVE_EVENT.
      IF SY-SUBRC NE 0.
        T048T-LTEXT = TEXT-203.
      ENDIF.
    ELSE.
      IF NOT SAVE_REPID IS INITIAL.
        T048T-LTEXT = TEXT-204.
      ENDIF.
    ENDIF.
    IF NOT T048T-LTEXT IS INITIAL.
      WRITE: / T048T-LTEXT.
      ULINE.
    ENDIF.

    CALL FUNCTION 'FI_MESSAGE_PRINT'
         EXPORTING
              I_MSORT = ' '
              I_XAUSN = 'X'
              I_XEAUS = ' '
              I_XSKIP = ' '.

    NEW-PAGE
      PRINT OFF.

    IF  NOT SY-SPONO IS INITIAL.
      CLEAR PROT_AUSGABE.
      IF MBUKRS IS INITIAL.
        PROT_AUSGABE-BUKRS     = '    '.
      ELSE.
        PROT_AUSGABE-BUKRS     = MBUKRS.
      ENDIF.
      PROT_AUSGABE-EVENT     = SAVE_EVENT.
      PROT_AUSGABE-REPID     = SAVE_REPID.
      PROT_AUSGABE-TDSPOOLID = SY-SPONO.
      PROT_AUSGABE-TDDEVICE  = SY-PDEST.
      PROT_AUSGABE-TDPREVIEW = ' '.
      PROT_AUSGABE-TDDATASET = SY-PRDSN.
      PROT_AUSGABE-TDSUFFIX1 = SY-PDEST.
      PROT_AUSGABE-TDSUFFIX2 = SY-PLIST.
      PROT_AUSGABE-COUNTP    = 0.
      COLLECT PROT_AUSGABE.
    ENDIF.
  ENDIF.
ENDFORM.

*-------------------- -------------------------------------------------*
* FORM  MESSAGE_PRINT_MSORT
*----------------------------------------------------------------------*
FORM MESSAGE_PRINT_MSORT.

  CALL FUNCTION 'FI_MESSAGE_PRINT'
       EXPORTING
            I_MSORT = HMSORT
            I_XAUSN = 'X'
            I_XEAUS = ' '
            I_XSKIP = ' '.

ENDFORM.

*----------------------------------------------------------------------*
* FORM  MESSAGE_SET
*----------------------------------------------------------------------*
FORM MESSAGE_SET.

  CALL FUNCTION 'FI_MESSAGE_SET'
       TABLES
            T_FIMSG    = HFIMSG
       EXCEPTIONS
            NO_MESSAGE = 01.

ENDFORM.

*----------------------------------------------------------------------*
* FORM  MESSAGE_SORT
*----------------------------------------------------------------------*
FORM MESSAGE_SORT.

  CALL FUNCTION 'FI_MESSAGE_SORT'
       EXCEPTIONS
            NO_MESSAGE = 01.

ENDFORM.

*----------------------------------------------------------------------*
* FORM  MESSAGE_WINDOW
*----------------------------------------------------------------------*
FORM MESSAGE_WINDOW.
  CLEAR FIMSG.
  FIMSG-MSORT = COUNTM. FIMSG-MSGID = 'FB'.
  FIMSG-MSGTY = 'I'.
  FIMSG-MSGNO = '286'.
  FIMSG-MSGV1 = SAVE_FORM.
  FIMSG-MSGV2 = WINDOW.
  PERFORM MESSAGE_COLLECT.
ENDFORM.

*----------------------------------------------------------------------*
* FORM PRI_PARAM_GET
*----------------------------------------------------------------------*
FORM PRI_PARAM_GET.
  CLEAR PRI_PARAMS.
  CALL FUNCTION 'GET_PRINT_PARAMETERS'
       EXPORTING
            MODE           = 'CURRENT'
            NO_DIALOG      = 'X'
       IMPORTING
            OUT_PARAMETERS = PRI_PARAMS
       EXCEPTIONS
            OTHERS         = 4.
ENDFORM.

*----------------------------------------------------------------------*
* FORM PRI_PARAM_EXPORT
*----------------------------------------------------------------------*
FORM PRI_PARAM_EXPORT.
  MEMOKEY(8)    = 'F140PRIP'.
  MEMOKEY+8(12) = SY-UNAME.
  EXPORT PRI_PARAMS TO MEMORY ID MEMOKEY.
ENDFORM.

*----------------------------------------------------------------------*
* FORM  PRI_PARAM_IMPORT
*----------------------------------------------------------------------*
FORM PRI_PARAM_IMPORT.
  CLEAR PRI_PARAMS.
  MEMOKEY(8)    = 'F140PRIP'.
  MEMOKEY+8(12) = SY-UNAME.
  IMPORT PRI_PARAMS FROM MEMORY ID MEMOKEY.
ENDFORM.

*----------------------------------------------------------------------*
* FORM PROT_EXPORT.
*----------------------------------------------------------------------*
FORM PROT_EXPORT.
  MEMOKEY(8)    = 'F140PROT'.
  MEMOKEY+8(12) = SY-UNAME.
  EXPORT PROT_AUSGABE TO MEMORY ID MEMOKEY.
ENDFORM.

*----------------------------------------------------------------------*
* FORM  PROT_IMPORT
*----------------------------------------------------------------------*
FORM PROT_IMPORT.
  MEMOKEY(8)    = 'F140PROT'.
  MEMOKEY+8(12) = SY-UNAME.
  IMPORT PROT_AUSGABE FROM MEMORY ID MEMOKEY.
ENDFORM.

*----------------------------------------------------------------------*
* FORM PROT_PRINT
*----------------------------------------------------------------------*
FORM PROT_PRINT.
  CLEAR XKAUSG.
  CLEAR PROLISTN.
  PROLISTN(8)   = SY-DATUM.
  PROLISTN+8(4) = SAVE_PROID.
  IF PRINT IS INITIAL
  OR NOT XONLI IS INITIAL.
    NEW-PAGE
      LINE-SIZE               132.
  ELSE.
    IF SY-BATCH IS INITIAL.
      IF SAVE_PRDEST IS INITIAL.
        SELECT SINGLE * FROM USR01
          WHERE BNAME = SY-UNAME.
        IF SY-SUBRC = 0.
          SAVE_PRDEST = USR01-SPLD.
        ENDIF.
      ENDIF.
      IF NOT SAVE_PRDEST IS INITIAL.
        NEW-PAGE
          PRINT ON
          LINE-SIZE               132
          DESTINATION             SAVE_PRDEST
          LIST NAME               PROLISTN
          IMMEDIATELY             ' '
          NEW LIST IDENTIFICATION 'X'
          KEEP IN SPOOL           'X'
          LIST DATASET            'F140'
          sap cover page          pri_params-prsap
          receiver                pri_params-prrec
          department              pri_params-prabt
          NO DIALOG.
      ELSE.
        NEW-PAGE
          PRINT ON
          LINE-SIZE               132
          LIST NAME               PROLISTN
          IMMEDIATELY             ' '
          NEW LIST IDENTIFICATION 'X'
          KEEP IN SPOOL           'X'
          sap cover page          pri_params-prsap
          receiver                pri_params-prrec
          department              pri_params-prabt
          LIST DATASET            'F140'.
      ENDIF.
    ELSE.
      IF SAVE_PRDEST IS INITIAL.
        IF NOT SYST-PDEST  IS INITIAL.
          SAVE_PRDEST = SYST-PDEST.
        ELSE.
          IF NOT SAVE_PDEST IS INITIAL.
            SAVE_PRDEST = SAVE_PDEST.
          ENDIF.
        ENDIF.
      ENDIF.
      IF NOT SAVE_PRDEST IS INITIAL.
        NEW-PAGE
          PRINT ON
          LINE-SIZE               132
          DESTINATION             SAVE_PRDEST
          LIST NAME               PROLISTN
          IMMEDIATELY             ' '
          NEW LIST IDENTIFICATION 'X'
          KEEP IN SPOOL           'X'
          LIST DATASET            'F140'
          sap cover page          pri_params-prsap
          receiver                pri_params-prrec
          department              pri_params-prabt
          NO DIALOG.
      ELSE.
        MESSAGE I544.
        XKAUSG = 'X'.
      ENDIF.
    ENDIF.
  ENDIF.
  IF XKAUSG IS INITIAL.
    MOVE: '    '   TO BHDGD-BUKRS,
          '0'      TO BHDGD-INIFL,
          SY-LINSZ TO BHDGD-LINES,     "Zeilenbreite der Liste aus Rep.
          '132'    TO BHDGD-LINES,     "Zeilenbreite der Liste aus Rep.
          SY-UNAME TO BHDGD-UNAME,     "Benutzername
          SY-REPID TO BHDGD-REPID,     "Name des ABAP-Programmes
          SY-TITLE TO BHDGD-LINE1,     "Titel des ABAP-Programmes
          TEXT-200 TO BHDGD-LINE2,     "Protokoll
*         MI-FICHE TO BHDGD-MIFFL,     "Mikrofiche-Zeile
          SPACE    TO BHDGD-SEPAR,     "keine Listseparation
          'BUKRS'  TO BHDGD-DOMAI.

    SORT PROT_AUSGABE.
    LOOP AT PROT_AUSGABE.
      AT FIRST.
        WRITE: / TEXT-201.
        WRITE: / TEXT-202.
        ULINE.
      ENDAT.

      IF NOT PROT_AUSGABE-EVENT IS INITIAL.
        SELECT SINGLE * FROM T048T
          WHERE SPRAS = SY-LANGU
          AND   EVENT = PROT_AUSGABE-EVENT.
        IF SY-SUBRC NE 0.
          T048T-LTEXT = TEXT-203.
        ENDIF.
      ELSE.
        IF SY-REPID = PROT_AUSGABE-REPID.
          T048T-LTEXT = TEXT-204.
        ELSE.
          MESSAGE E543.
        ENDIF.
      ENDIF.
      WRITE: /   PROT_AUSGABE-BUKRS,
              6  T048T-LTEXT.
      IF PROT_AUSGABE-INTAD IS INITIAL.
        IF PROT_AUSGABE-TDDEVICE EQ 'TELEFAX'.
          IF NOT PROT_AUSGABE-TDFAXID IS INITIAL.
            WRITE:  47 PROT_AUSGABE-TDFAXID,
                    61 PROT_AUSGABE-TDTELELAND,
                       PROT_AUSGABE-TDTELENUM.
          ELSE.
            WRITE:  47 PROT_AUSGABE-TDSPOOLID,
                    61 PROT_AUSGABE-TDTELELAND,
                       PROT_AUSGABE-TDTELENUM.
          ENDIF.
        ELSE.
          WRITE:  47 PROT_AUSGABE-TDSPOOLID,
                  61 PROT_AUSGABE-TDDATASET,
                     PROT_AUSGABE-TDSUFFIX1,
                     PROT_AUSGABE-TDSUFFIX2.
        ENDIF.
      ELSE.
        WRITE :  46(33) PROT_AUSGABE-INTAD.
      ENDIF.
      WRITE:  95 PROT_AUSGABE-COUNTP NO-ZERO.
      PERFORM PRINT_IMMEDIATELY.
    ENDLOOP.
  ENDIF.

ENDFORM.

*---------------------------------------------------------------------*
*       FORM PRINT_IMMEDIATELY                                        *
*---------------------------------------------------------------------*
*       ........                                                      *
*---------------------------------------------------------------------*
FORM PRINT_IMMEDIATELY.

* LOOP AT PROT_AUSGABE.
    DATA: HRQIDENT  LIKE TSP01-RQIDENT.
    IF      PROT_AUSGABE-TDDEVICE  = 'PRINTER'
    AND NOT PROT_AUSGABE-TDSPOOLID IS INITIAL
    AND NOT PROT_AUSGABE-TDIMMED IS INITIAL.
      HRQIDENT = PROT_AUSGABE-TDSPOOLID.
      CALL FUNCTION 'RSPO_OUTPUT_SPOOL_REQUEST'
           EXPORTING
                SPOOL_REQUEST_ID = HRQIDENT
           EXCEPTIONS
                OTHERS           = 0.
    ENDIF.
* ENDLOOP.
ENDFORM.
