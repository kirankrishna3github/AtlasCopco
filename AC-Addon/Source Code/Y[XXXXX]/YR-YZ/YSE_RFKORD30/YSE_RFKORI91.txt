***INCLUDE RFKORI91 .

*NCLUDE RFKORI00.

*-----------------------------------------------------------------------
*       FORM DEBI_KRED_ANZAHL
*-----------------------------------------------------------------------
FORM DEBI_KRED_ANZAHL.
  CLEAR XMULTK.
  CLEAR SAVE_KOAR1.
  CLEAR SAVE_KONT1.
  LOOP AT HEXTRACT.
    IF SY-TABIX = 1.
      SAVE_KOAR1 =  HEXTRACT-KOAR1.
      SAVE_KONT1 =  HEXTRACT-KONT1.
    ELSE.
      IF SAVE_KOAR1 NE HEXTRACT-KOAR1
      OR SAVE_KONT1 NE HEXTRACT-KONT1.
        XMULTK = 'X'.
      ENDIF.
    ENDIF.
  ENDLOOP.
ENDFORM.

*-----------------------------------------------------------------------
*       FORM DEBI_KRED_DATEN
*-----------------------------------------------------------------------
FORM DEBI_KRED_DATEN.
  IF BKORM-KOART = 'D'.
    HDKOAR2    = BKORM-KOART.
    HDKONT2    = BKORM-KONTO.
    SAVE_KOART = BKORM-KOART.
    SAVE_KUNNR = BKORM-KONTO.
    SAVE_BUKRS = BKORM-BUKRS.
    PERFORM READ_KNA1.
    IF SY-SUBRC NE 0.
      XKAUSG = 'X'.
    ENDIF.
*   PERFORM SAVE_KNA1.
    PERFORM READ_KNB1.
    IF SY-SUBRC NE 0.
      XKAUSG = 'X'.
    ENDIF.
*   PERFORM SAVE_KNB1.
  ENDIF.
  IF BKORM-KOART = 'K'.
    HDKOAR2    = BKORM-KOART.
    HDKONT2    = BKORM-KONTO.
    SAVE_KOART = BKORM-KOART.
    SAVE_LIFNR = BKORM-KONTO.
    SAVE_BUKRS = BKORM-BUKRS.
    PERFORM READ_LFA1.
    IF SY-SUBRC NE 0.
      XKAUSG = 'X'.
    ENDIF.
*   PERFORM SAVE_LFA1.
    PERFORM READ_LFB1.
    IF SY-SUBRC NE 0.
      XKAUSG = 'X'.
    ENDIF.
*   PERFORM SAVE_LFB1.
  ENDIF.
ENDFORM.

*-----------------------------------------------------------------------
*       FORM DEBI_KRED_IM_BELEG
*-----------------------------------------------------------------------
FORM DEBI_KRED_IM_BELEG.

  LOOP AT HEXTRACTD
    WHERE XBEARB = ' '.
    CLEAR HEXTRACT.

    HEXTRACT-BUKRS = HEXTRACTD-BUKRS.
    HEXTRACT-KOAR1 = HEXTRACTD-KOAR1.
    HEXTRACT-KONT1 = HEXTRACTD-KONT1.
    HEXTRACT-EMPF1 = HEXTRACTD-EMPF1.
    HEXTRACT-BELNR = HEXTRACTD-BELNR.
    HEXTRACT-GJAHR = HEXTRACTD-GJAHR.
    HEXTRACT-BUZEI = HEXTRACTD-BUZEI.

    APPEND HEXTRACT.
    HEXTRACTD-XBEARB = 'X'.
    MODIFY HEXTRACTD.
  ENDLOOP.

  LOOP AT HEXTRACTK
    WHERE XBEARB = ' '.
    CLEAR HEXTRACT.

    HEXTRACT-BUKRS = HEXTRACTK-BUKRS.
    HEXTRACT-KOAR1 = HEXTRACTK-KOAR1.
    HEXTRACT-KONT1 = HEXTRACTK-KONT1.
    HEXTRACT-EMPF1 = HEXTRACTK-EMPF1.
    HEXTRACT-BELNR = HEXTRACTK-BELNR.
    HEXTRACT-GJAHR = HEXTRACTK-GJAHR.
    HEXTRACT-BUZEI = HEXTRACTK-BUZEI.

    APPEND HEXTRACT.
    HEXTRACTK-XBEARB = 'X'.
    MODIFY HEXTRACTK.
  ENDLOOP.

ENDFORM.

*-----------------------------------------------------------------------
*       FORM DEBI_KRED_ZUORDNEN_2
*-----------------------------------------------------------------------
FORM DEBI_KRED_ZUORDNEN_2.
  CLEAR SAVE2_LIFNR.
  LOOP AT HEXTRACTK.
    SAVE_LIFNR = HEXTRACTK-KONT1.
      PERFORM PRUEFEN_HLFA1.        "note 370984
      IF XVORH NE 'X'.              "note 370984
        PERFORM READ_LFA1.          "note 370984
        IF SY-SUBRC NE 0.           "note 370984
          XKAUSG = 'X'.             "note 370984
        ENDIF.                      "note 370984
        PERFORM SAVE_LFA1.          "note 370984
      ENDIF.                        "note 370984
      SAVE_BUKRS = HDBUKRS.
      PERFORM PRUEFEN_HLFB1.
      IF XVORH NE 'X'.
        PERFORM READ_LFB1.
        IF SY-SUBRC NE 0.
          XKAUSG = 'X'.
        ENDIF.
        PERFORM SAVE_LFB1.
      ENDIF.

      IF  NOT HLFA1-KUNNR IS INITIAL
      AND NOT HLFB1-XVERR IS INITIAL.
        SAVE_BUKRS = HDBUKRS.
        PERFORM PRUEFEN_HKNB1.
        IF XVORH NE 'X'.
          PERFORM READ_KNB1.
          IF SY-SUBRC NE 0.
            XKAUSG = 'X'.
          ENDIF.
          PERFORM SAVE_KNB1.
        ENDIF.
        IF NOT HLFB1-XVERR IS INITIAL.
          LOOP AT HEXTRACTD
            WHERE KONT1 = HLFA1-KUNNR.
            IF HEXTRACTD-XBEARB IS INITIAL.
              CLEAR HEXTRACT.
              HEXTRACT-BUKRS = HEXTRACTD-BUKRS.
              HEXTRACT-KOAR1 = HEXTRACTD-KOAR1.
              HEXTRACT-KONT1 = HEXTRACTD-KONT1.
              HEXTRACT-EMPF1 = HEXTRACTD-EMPF1.
              HEXTRACT-BELNR = HEXTRACTD-BELNR.
              HEXTRACT-GJAHR = HEXTRACTD-GJAHR.
              HEXTRACT-BUZEI = HEXTRACTD-BUZEI.

              HEXTRACT-KOAR2 = HEXTRACTK-KOAR1.
              HEXTRACT-KONT2 = HEXTRACTK-KONT1.
              HEXTRACT-EMPF2 = HEXTRACTK-EMPF1.
              APPEND HEXTRACT.
              HEXTRACTD-XBEARB = 'X'.
              MODIFY HEXTRACTD.
            ENDIF.
            SAVE_KOAR1 = HEXTRACTD-KOAR1.
            SAVE_KONT1 = HEXTRACTD-KONT1.
            SAVE_EMPF1 = HEXTRACTD-EMPF1.
          ENDLOOP.
        ENDIF.
        IF SY-SUBRC = '0'.
          IF SAVE_LIFNR NE SAVE2_LIFNR.
            SAVE2_LIFNR = SAVE_LIFNR.
            COUNTK = COUNTK - 1.
          ENDIF.
          CLEAR HEXTRACT.

          HEXTRACT-BUKRS = HEXTRACTK-BUKRS.
          HEXTRACT-KOAR2 = HEXTRACTK-KOAR1.
          HEXTRACT-KONT2 = HEXTRACTK-KONT1.
          HEXTRACT-EMPF2 = HEXTRACTK-EMPF1.
          HEXTRACT-BELNR = HEXTRACTK-BELNR.
          HEXTRACT-GJAHR = HEXTRACTK-GJAHR.
          HEXTRACT-BUZEI = HEXTRACTK-BUZEI.

          HEXTRACT-KOAR1 = SAVE_KOAR1.
          HEXTRACT-KONT1 = SAVE_KONT1.
          HEXTRACT-EMPF1 = SAVE_EMPF1.
          APPEND HEXTRACT.
          HEXTRACTK-XBEARB = 'X'.
          MODIFY HEXTRACTK.
        ENDIF.
      ENDIF.
  ENDLOOP.

ENDFORM.

*-----------------------------------------------------------------------
*       FORM EXTRACT
*-----------------------------------------------------------------------
FORM EXTRACT.
  EXTRACT DATEN.
  XEXTRA = 'X'.
ENDFORM.

*-----------------------------------------------------------------------
*       FORM EXTRACT_BELEG
*-----------------------------------------------------------------------
FORM EXTRACT_BELEG.
*-------Headerfelder f¨¹r Extract----------------------------------------
  HDBUKRS       = SAVE_BUKRS.
  HDKOART       = '   '.
  HDKONTO       = '   '.
  HDBELGJ(4)    = BKPF-GJAHR.
  HDBELGJ+4(10) = BKPF-BELNR.
  HDUSNAM       = SY-UNAME.
  HDDATUM       = SY-DATUM.
  HDUZEIT       = SY-UZEIT.

*-------Datenfelder f¨¹r Extract-----------------------------------------
  EXTRACT(1)    = 'X'.
  DABELNR       = BKPF-BELNR.
  DAGJAHR       = BKPF-GJAHR.
  PARAMET       = HPARAME.
  IF NOT T048-XBUKR IS INITIAL.
    DABBUKR = SAVE_BBUKR.
  ELSE.
    DABBUKR = '    '.
  ENDIF.
  XBKORM        = ' '.

  PERFORM EXTRACT.
ENDFORM.

*-----------------------------------------------------------------------
*       FORM EXTRACT_FELDER_BKORM
*-----------------------------------------------------------------------
FORM EXTRACT_FELDER_BKORM.
*-------Headerfelder f¨¹r Extract----------------------------------------
  HDBUKRS       = BKORM-BUKRS.
  HDKOART       = BKORM-KOART.
  HDKONTO       = BKORM-KONTO.
  HDBELGJ(4)    = BKORM-GJAHR.
  HDBELGJ+4(10) = BKORM-BELNR.
  HDUSNAM       = BKORM-USNAM.
  HDDATUM       = BKORM-DATUM.
  HDUZEIT       = BKORM-UZEIT.

*-------Datenfelder f¨¹r Extract-----------------------------------------
  EXTRACT(1)    = 'X'.
  DABELNR       = BKORM-BELNR.
  DAGJAHR       = BKORM-GJAHR.
  DAERLDT       = BKORM-ERLDT.
  DATUM01       = BKORM-PARAM(8).
  DATUM02       = BKORM-PARAM+8(8).
  PARAMET(64)   = BKORM-PARAM+16(64).
  DAVSID        = BKORM-AVSID.
  DABBUKR       = BKORM-BBUKR.
  Dacajon       = BKORM-cajon.
  XBKORM        = 'X'.

  IF SORTID = '1'
  OR SORTID = '2'
  OR SORTID = '3'.
    CLEAR SAVE_BUKRS.
    CLEAR SAVE_BELNR.
    CLEAR SAVE_GJAHR.
    IF T048-XBUKR IS INITIAL.
      SAVE_BUKRS = BKORM-BUKRS.
    ELSE.
      SAVE_BUKRS = BKORM-BBUKR.
    ENDIF.
    SAVE_BELNR = BKORM-BELNR.
    SAVE_GJAHR = BKORM-GJAHR.
    CLEAR SY-SUBRC.
    PERFORM READ_BKPF.
    IF SY-SUBRC NE 0.
      CLEAR FIMSG.
      FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
      FIMSG-MSGNO = '547'.
      FIMSG-MSGV1 = BKORM-BUKRS.
      FIMSG-MSGV2 = BKORM-BELNR.
      FIMSG-MSGV3 = BKORM-GJAHR.
      PERFORM MESSAGE_APPEND.
      BKORM-ERLDT = SY-DATUM.
      UPDATE BKORM.
      IF SY-SUBRC NE 0.
        CLEAR HBKORMKEY.
        CLEAR HERDATA.
        HBKORMKEY-BUKRS = BKORM-BUKRS.
        HBKORMKEY-KOART = BKORM-KOART.
        HBKORMKEY-KONTO = BKORM-KONTO.
        HBKORMKEY-BELNR = BKORM-BELNR.
        HBKORMKEY-GJAHR = BKORM-GJAHR.
        CONDENSE HBKORMKEY.
        HERDATA-USNAM = BKORM-USNAM.
        HERDATA-DATUM = BKORM-DATUM.
        HERDATA-UZEIT = BKORM-UZEIT.
        MESSAGE E546 WITH 'BKORM' BKORM-EVENT HBKORMKEY HERDATA.
      ENDIF.
      XKAUSG = 'X'.
      CLEAR HBKORMKEY.
      CLEAR HERDATA.
      HBKORMKEY-BUKRS = BKORM-BUKRS.
      HBKORMKEY-KOART = BKORM-KOART.
      HBKORMKEY-KONTO = BKORM-KONTO.
      HBKORMKEY-BELNR = BKORM-BELNR.
      HBKORMKEY-GJAHR = BKORM-GJAHR.
      CONDENSE HBKORMKEY.
      HERDATA-USNAM = BKORM-USNAM.
      HERDATA-DATUM = BKORM-DATUM.
      HERDATA-UZEIT = BKORM-UZEIT.
      CLEAR FIMSG.
      FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
      FIMSG-MSGNO = '548'.
      FIMSG-MSGV1 = BKORM-EVENT.
      FIMSG-MSGV2 = HBKORMKEY.
      FIMSG-MSGV3 = HERDATA.
      PERFORM MESSAGE_APPEND.
    ELSE.

      CLEAR XKAUSG.
      CASE SORTID.
        WHEN '1'.
          PERFORM EXTRACT_VORBEREITUNG_1.
        WHEN '2'.
          PERFORM EXTRACT_VORBEREITUNG_2.
        WHEN '3'.
          PERFORM EXTRACT_VORBEREITUNG_3.
      ENDCASE.
    ENDIF.
    IF XKAUSG IS INITIAL.
      CLEAR SY-SUBRC.
      CLEAR SAVE4_KOART.
      CLEAR SAVE3_KONTO.
      CLEAR HDEMPFG.
      LOOP AT HEXTRACT.
        IF T048-XBUKR IS INITIAL.
          CHECK HEXTRACT-BUKRS = HDBUKRS.
        ENDIF.
        IF SAVE4_KOART NE HEXTRACT-KOAR1
        OR SAVE3_KONTO NE HEXTRACT-KONT1.
          IF HEXTRACT-KOAR1 = 'D'.
            SAVE_KOART = HEXTRACT-KOAR1.
            SAVE_KUNNR = HEXTRACT-KONT1.
            SAVE_BUKRS = HEXTRACT-BUKRS.
            PERFORM PRUEFEN_HKNA1.
            IF XVORH NE 'X'.
              PERFORM READ_KNA1.
              IF SY-SUBRC NE 0.
                XKAUSG = 'X'.
              ENDIF.
              PERFORM SAVE_KNA1.
            ENDIF.
            PERFORM PRUEFEN_HKNB1.
            IF XVORH NE 'X'.
              PERFORM READ_KNB1.
              IF SY-SUBRC NE 0.
                XKAUSG = 'X'.
              ENDIF.
              PERFORM SAVE_KNB1.
            ENDIF.
            IF  NOT KNA1-XCPDK IS INITIAL
            AND     SORTID     NE '2'.
              LOOP AT HBSEC
                where bukrs = HEXTRACT-bukrs
                and   belnr = HEXTRACT-belnr
                and   gjahr = HEXTRACT-gjahr.
*               WHERE EMPFG = HEXTRACT-EMPF1.
                BSEC = HBSEC.
                HDEMPFG = BSEC-EMPFG.
                EXIT.
              ENDLOOP.
            ELSE.
              CLEAR BSEC.
              CLEAR HDEMPFG.
            ENDIF.
            IF  SORTID NE '2'.
              PERFORM SORTIERUNG USING 'K' 'K' 'X'.
            ELSE.
              PERFORM SORTIERUNG USING 'K' 'K' ' '.
            ENDIF.
          ENDIF.
          IF HEXTRACT-KOAR1 = 'K'.
            SAVE_KOART = HEXTRACT-KOAR1.
            SAVE_LIFNR = HEXTRACT-KONT1.
            SAVE_BUKRS = HEXTRACT-BUKRS.
            PERFORM PRUEFEN_HLFA1.
            IF XVORH NE 'X'.
              PERFORM READ_LFA1.
              IF SY-SUBRC NE 0.
                XKAUSG = 'X'.
              ENDIF.
              PERFORM SAVE_LFA1.
            ENDIF.
            PERFORM PRUEFEN_HLFB1.
            IF XVORH NE 'X'.
              PERFORM READ_LFB1.
              IF SY-SUBRC NE 0.
                XKAUSG = 'X'.
              ENDIF.
              PERFORM SAVE_LFB1.
            ENDIF.
            IF NOT LFA1-XCPDK IS INITIAL
            AND     SORTID     NE '2'.
              LOOP AT HBSEC
                where bukrs = HEXTRACT-bukrs
                and   belnr = HEXTRACT-belnr
                and   gjahr = HEXTRACT-gjahr.
*               WHERE EMPFG = HEXTRACT-EMPF1.
                BSEC = HBSEC.
                HDEMPFG = BSEC-EMPFG.
                EXIT.
              ENDLOOP.
            ELSE.
              CLEAR BSEC.
              CLEAR HDEMPFG.
            ENDIF.
            IF  SORTID NE '2'.
              PERFORM SORTIERUNG USING 'K' 'K' 'X'.
            ELSE.
              PERFORM SORTIERUNG USING 'K' 'K' ' '.
            ENDIF.
          ENDIF.
          SAVE4_KOART  =  HEXTRACT-KOAR1.
          SAVE3_KONTO  =  HEXTRACT-KONT1.
        ENDIF.
*       IF XKAUSG IS INITIAL.
        LOOP AT HBSEG
          WHERE BUKRS = HEXTRACT-BUKRS
          AND   BELNR = HEXTRACT-BELNR
          AND   GJAHR = HEXTRACT-GJAHR
          AND   BUZEI = HEXTRACT-BUZEI.
          CLEAR BSEG.
          MOVE-CORRESPONDING HBSEG TO BSEG.
          HDKOAR2 = HEXTRACT-KOAR1.
          HDKONT2 = HEXTRACT-KONT1.
          PERFORM EXTRACT.
*         CLEAR  SORT1.
*         CLEAR  SORT2.
*         CLEAR  SORT3.
*         CASE SAVE_SORT.
*           WHEN '1'.
*             SORT1 = HBSEG-GJAHR.
*             SORT2 = HBSEG-BELNR.
*             HDKOAR2 = HEXTRACT-KOAR1.
*             HDKONT2 = HEXTRACT-KONT1.
*             PERFORM EXTRACT.
*           WHEN '2'.
*             SORT1 = HEXTRACT-KOAR1.
*             SORT2 = HEXTRACT-KONT1.
*             HDKOAR2 = HEXTRACT-KOAR1.
*             HDKONT2 = HEXTRACT-KONT1.
*             PERFORM EXTRACT.
*           WHEN OTHERS.
*         ENDCASE.
        ENDLOOP.
*       ELSE.
*         CLEAR HBKORMKEY.
*         CLEAR HERDATA.
*         CLEAR HKOKON.
*         HBKORMKEY-BUKRS = BKORM-BUKRS.
*         HBKORMKEY-KOART = BKORM-KOART.
*         HBKORMKEY-KONTO = BKORM-KONTO.
*         HBKORMKEY-BELNR = BKORM-BELNR.
*         HBKORMKEY-GJAHR = BKORM-GJAHR.
*         CONDENSE HBKORMKEY.
*         HERDATA-USNAM = BKORM-USNAM.
*         HERDATA-DATUM = BKORM-DATUM.
*         HERDATA-UZEIT = BKORM-UZEIT.
*         HDKOAR2 = HEXTRACT-KOAR1.
*         HDKONT2 = HEXTRACT-KONT1.
*         HKOKON-KOART = HDKOAR2.
*         HKOKON-KONTO = HDKONT2.
*         CLEAR FIMSG.
*         FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
*         FIMSG-MSGNO = '827'.
*         FIMSG-MSGV1 = BKORM-EVENT.
*         FIMSG-MSGV2 = HBKORMKEY.
*         FIMSG-MSGV3 = HERDATA.
*         FIMSG-MSGV4 = HKOKON.
*         PERFORM MESSAGE_APPEND.
*         IF BKORM-ERLDT IS INITIAL.
*           BKORM-ERLDT = SY-DATUM.
*           UPDATE BKORM.
*         ENDIF.
*       ENDIF.
      ENDLOOP.
      IF SY-SUBRC NE 0.
        CLEAR FIMSG.
        FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
        FIMSG-MSGNO = '552'.
        FIMSG-MSGV1 = BKORM-BUKRS.
        FIMSG-MSGV2 = BKORM-BELNR.
        FIMSG-MSGV3 = BKORM-GJAHR.
        PERFORM MESSAGE_APPEND.
        BKORM-ERLDT = SY-DATUM.
        UPDATE BKORM.
        IF SY-SUBRC NE 0.
          CLEAR HBKORMKEY.
          CLEAR HERDATA.
          HBKORMKEY-BUKRS = BKORM-BUKRS.
          HBKORMKEY-KOART = BKORM-KOART.
          HBKORMKEY-KONTO = BKORM-KONTO.
          HBKORMKEY-BELNR = BKORM-BELNR.
          HBKORMKEY-GJAHR = BKORM-GJAHR.
          CONDENSE HBKORMKEY.
          HERDATA-USNAM = BKORM-USNAM.
          HERDATA-DATUM = BKORM-DATUM.
          HERDATA-UZEIT = BKORM-UZEIT.
          MESSAGE E546 WITH 'BKORM' BKORM-EVENT HBKORMKEY HERDATA.
        ENDIF.
        CLEAR HBKORMKEY.
        CLEAR HERDATA.
        HBKORMKEY-BUKRS = BKORM-BUKRS.
        HBKORMKEY-KOART = BKORM-KOART.
        HBKORMKEY-KONTO = BKORM-KONTO.
        HBKORMKEY-BELNR = BKORM-BELNR.
        HBKORMKEY-GJAHR = BKORM-GJAHR.
        CONDENSE HBKORMKEY.
        HERDATA-USNAM = BKORM-USNAM.
        HERDATA-DATUM = BKORM-DATUM.
        HERDATA-UZEIT = BKORM-UZEIT.
        CLEAR FIMSG.
        FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
        FIMSG-MSGNO = '548'.
        FIMSG-MSGV1 = BKORM-EVENT.
        FIMSG-MSGV2 = HBKORMKEY.
        FIMSG-MSGV3 = HERDATA.
        PERFORM MESSAGE_APPEND.
      ENDIF.
    ELSE.
      BKORM-ERLDT = SY-DATUM.
      UPDATE BKORM.
      IF SY-SUBRC NE 0.
        CLEAR HBKORMKEY.
        CLEAR HERDATA.
        HBKORMKEY-BUKRS = BKORM-BUKRS.
        HBKORMKEY-KOART = BKORM-KOART.
        HBKORMKEY-KONTO = BKORM-KONTO.
        HBKORMKEY-BELNR = BKORM-BELNR.
        HBKORMKEY-GJAHR = BKORM-GJAHR.
        CONDENSE HBKORMKEY.
        HERDATA-USNAM = BKORM-USNAM.
        HERDATA-DATUM = BKORM-DATUM.
        HERDATA-UZEIT = BKORM-UZEIT.
        MESSAGE E546 WITH 'BKORM' BKORM-EVENT HBKORMKEY HERDATA.
      ENDIF.
      CLEAR HBKORMKEY.
      CLEAR HERDATA.
      HBKORMKEY-BUKRS = BKORM-BUKRS.
      HBKORMKEY-KOART = BKORM-KOART.
      HBKORMKEY-KONTO = BKORM-KONTO.
      HBKORMKEY-BELNR = BKORM-BELNR.
      HBKORMKEY-GJAHR = BKORM-GJAHR.
      CONDENSE HBKORMKEY.
      HERDATA-USNAM = BKORM-USNAM.
      HERDATA-DATUM = BKORM-DATUM.
      HERDATA-UZEIT = BKORM-UZEIT.
      CLEAR FIMSG.
      FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
      FIMSG-MSGNO = '548'.
      FIMSG-MSGV1 = BKORM-EVENT.
      FIMSG-MSGV2 = HBKORMKEY.
      FIMSG-MSGV3 = HERDATA.
      PERFORM MESSAGE_APPEND.
    ENDIF.
  ENDIF.

  IF SORTID = '4'.
    CLEAR SAVE_BUKRS.
    CLEAR SAVE_BELNR.
    CLEAR SAVE_GJAHR.
    IF T048-XBUKR IS INITIAL.
      SAVE_BUKRS = BKORM-BUKRS.
    ELSE.
      SAVE_BUKRS = BKORM-BBUKR.
    ENDIF.
    SAVE_BELNR = BKORM-BELNR.
    SAVE_GJAHR = BKORM-GJAHR.
    CLEAR SY-SUBRC.
    PERFORM READ_BKPF.
    IF SY-SUBRC NE 0.
      CLEAR FIMSG.
      FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
      FIMSG-MSGNO = '547'.
      FIMSG-MSGV1 = BKORM-BUKRS.
      FIMSG-MSGV2 = BKORM-BELNR.
      FIMSG-MSGV3 = BKORM-GJAHR.
      PERFORM MESSAGE_APPEND.
      BKORM-ERLDT = SY-DATUM.
      UPDATE BKORM.
      IF SY-SUBRC NE 0.
        CLEAR HBKORMKEY.
        CLEAR HERDATA.
        HBKORMKEY-BUKRS = BKORM-BUKRS.
        HBKORMKEY-KOART = BKORM-KOART.
        HBKORMKEY-KONTO = BKORM-KONTO.
        HBKORMKEY-BELNR = BKORM-BELNR.
        HBKORMKEY-GJAHR = BKORM-GJAHR.
        CONDENSE HBKORMKEY.
        HERDATA-USNAM = BKORM-USNAM.
        HERDATA-DATUM = BKORM-DATUM.
        HERDATA-UZEIT = BKORM-UZEIT.
        MESSAGE E546 WITH 'BKORM' BKORM-EVENT HBKORMKEY HERDATA.
      ENDIF.
      XKAUSG = 'X'.
      CLEAR HBKORMKEY.
      CLEAR HERDATA.
      HBKORMKEY-BUKRS = BKORM-BUKRS.
      HBKORMKEY-KOART = BKORM-KOART.
      HBKORMKEY-KONTO = BKORM-KONTO.
      HBKORMKEY-BELNR = BKORM-BELNR.
      HBKORMKEY-GJAHR = BKORM-GJAHR.
      CONDENSE HBKORMKEY.
      HERDATA-USNAM = BKORM-USNAM.
      HERDATA-DATUM = BKORM-DATUM.
      HERDATA-UZEIT = BKORM-UZEIT.
      CLEAR FIMSG.
      FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
      FIMSG-MSGNO = '548'.
      FIMSG-MSGV1 = BKORM-EVENT.
      FIMSG-MSGV2 = HBKORMKEY.
      FIMSG-MSGV3 = HERDATA.
      PERFORM MESSAGE_APPEND.
    ELSE.
      PERFORM SORTIERUNG USING 'K' 'B' ' '.
      PERFORM EXTRACT.
*     CASE SAVE_SORT.
*       WHEN '1'.
*         PERFORM EXTRACT.
*       WHEN '2'.
*         SORT1(4)    = HBKPF-GJAHR.
*         SORT1+4(16) = HBKPF-XBLNR.
*         PERFORM EXTRACT.
*       WHEN OTHERS.
*     ENDCASE.
    ENDIF.
  ENDIF.

  IF SORTID = '5'.
    CLEAR SAVE_BUKRS.
    CLEAR SAVE_BELNR.
    CLEAR SAVE_GJAHR.
    SAVE_BUKRS = BKORM-BUKRS.
    SAVE_BELNR = BKORM-BELNR.
    SAVE_GJAHR = BKORM-GJAHR.
    CLEAR SY-SUBRC.
    PERFORM READ_BKPF.
    IF SY-SUBRC NE 0.
      CLEAR FIMSG.
      FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
      FIMSG-MSGNO = '547'.
      FIMSG-MSGV1 = BKORM-BUKRS.
      FIMSG-MSGV2 = BKORM-BELNR.
      FIMSG-MSGV3 = BKORM-GJAHR.
      PERFORM MESSAGE_APPEND.
      BKORM-ERLDT = SY-DATUM.
      UPDATE BKORM.
      IF SY-SUBRC NE 0.
        CLEAR HBKORMKEY.
        CLEAR HERDATA.
        HBKORMKEY-BUKRS = BKORM-BUKRS.
        HBKORMKEY-KOART = BKORM-KOART.
        HBKORMKEY-KONTO = BKORM-KONTO.
        HBKORMKEY-BELNR = BKORM-BELNR.
        HBKORMKEY-GJAHR = BKORM-GJAHR.
        CONDENSE HBKORMKEY.
        HERDATA-USNAM = BKORM-USNAM.
        HERDATA-DATUM = BKORM-DATUM.
        HERDATA-UZEIT = BKORM-UZEIT.
        MESSAGE E546 WITH 'BKORM' BKORM-EVENT HBKORMKEY HERDATA.
      ENDIF.
      XKAUSG = 'X'.
      CLEAR HBKORMKEY.
      CLEAR HERDATA.
      HBKORMKEY-BUKRS = BKORM-BUKRS.
      HBKORMKEY-KOART = BKORM-KOART.
      HBKORMKEY-KONTO = BKORM-KONTO.
      HBKORMKEY-BELNR = BKORM-BELNR.
      HBKORMKEY-GJAHR = BKORM-GJAHR.
      CONDENSE HBKORMKEY.
      HERDATA-USNAM = BKORM-USNAM.
      HERDATA-DATUM = BKORM-DATUM.
      HERDATA-UZEIT = BKORM-UZEIT.
      CLEAR FIMSG.
      FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
      FIMSG-MSGNO = '548'.
      FIMSG-MSGV1 = BKORM-EVENT.
      FIMSG-MSGV2 = HBKORMKEY.
      FIMSG-MSGV3 = HERDATA.
      PERFORM MESSAGE_APPEND.
    ELSE.
      SAVE_IDPOS  = BKORM-PARAM+16(1).
      SAVE2_REPID = BKORM-PARAM+18(8).
      CLEAR XKAUSG.
      PERFORM EXTRACT_VORBEREITUNG_4.
    ENDIF.
    IF XKAUSG IS INITIAL.
*     LOOP AT HEXTRACT.
      SAVE_KOART = 'D'.
      SAVE_KUNNR = SAVE_KONTO.
      SAVE_BUKRS = SAVE_BUKRS.
      PERFORM PRUEFEN_HKNA1.
      PERFORM PRUEFEN_HKNB1.
      PERFORM SORTIERUNG USING 'K' 'K' ' '.
      HDKOAR2 = 'D'.
      HDKONT2 = SAVE_KONTO.
      SORT1 = BKORM-PARAM+16(1).
*       IF XKAUSG IS INITIAL.
      LOOP AT HBSEG.
*         WHERE BUKRS = HEXTRACT-BUKRS
*         AND   BELNR = HEXTRACT-BELNR
*         AND   GJAHR = HEXTRACT-GJAHR
*         AND   BUZEI = HEXTRACT-BUZEI.
        CLEAR BSEG.
        MOVE-CORRESPONDING HBSEG TO BSEG.
        PERFORM EXTRACT.
*         CLEAR  SORT1.
*         CLEAR  SORT2.
*         CLEAR  SORT3.
*         CASE SAVE_SORT.
*           WHEN '1'.
*             SORT1 = BKORM-PARAM+16(1).
*             HDKOAR2 = 'D'.
*             HDKONT2 = SAVE_KONTO.
*             PERFORM EXTRACT.
*           WHEN '2'.
*             SORT1 = BKORM-PARAM+16(1).
*             SORT2 = 'D'.
*             SORT3 = SAVE_KONTO.
*             HDKOAR2 = 'D'.
*             HDKONT2 = SAVE_KONTO.
*             PERFORM EXTRACT.
*           WHEN OTHERS.
*         ENDCASE.
      ENDLOOP.
*     ENDLOOP.
      IF SY-SUBRC NE 0.
        CLEAR FIMSG.
        FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
        FIMSG-MSGNO = '552'.
        FIMSG-MSGV1 = BKORM-BUKRS.
        FIMSG-MSGV2 = BKORM-BELNR.
        FIMSG-MSGV3 = BKORM-GJAHR.
        PERFORM MESSAGE_APPEND.
        BKORM-ERLDT = SY-DATUM.
        UPDATE BKORM.
        IF SY-SUBRC NE 0.
          CLEAR HBKORMKEY.
          CLEAR HERDATA.
          HBKORMKEY-BUKRS = BKORM-BUKRS.
          HBKORMKEY-KOART = BKORM-KOART.
          HBKORMKEY-KONTO = BKORM-KONTO.
          HBKORMKEY-BELNR = BKORM-BELNR.
          HBKORMKEY-GJAHR = BKORM-GJAHR.
          CONDENSE HBKORMKEY.
          HERDATA-USNAM = BKORM-USNAM.
          HERDATA-DATUM = BKORM-DATUM.
          HERDATA-UZEIT = BKORM-UZEIT.
          MESSAGE E546 WITH 'BKORM' BKORM-EVENT HBKORMKEY HERDATA.
        ENDIF.
        CLEAR HBKORMKEY.
        CLEAR HERDATA.
        HBKORMKEY-BUKRS = BKORM-BUKRS.
        HBKORMKEY-KOART = BKORM-KOART.
        HBKORMKEY-KONTO = BKORM-KONTO.
        HBKORMKEY-BELNR = BKORM-BELNR.
        HBKORMKEY-GJAHR = BKORM-GJAHR.
        CONDENSE HBKORMKEY.
        HERDATA-USNAM = BKORM-USNAM.
        HERDATA-DATUM = BKORM-DATUM.
        HERDATA-UZEIT = BKORM-UZEIT.
        CLEAR FIMSG.
        FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
        FIMSG-MSGNO = '548'.
        FIMSG-MSGV1 = BKORM-EVENT.
        FIMSG-MSGV2 = HBKORMKEY.
        FIMSG-MSGV3 = HERDATA.
        PERFORM MESSAGE_APPEND.
      ENDIF.
*     ELSE.
**    Message in Sortierroutine
*       BKORM-ERLDT = SY-DATUM.
*       UPDATE BKORM.
*       IF SY-SUBRC NE 0.
*         CLEAR HBKORMKEY.
*         CLEAR HERDATA.
*         HBKORMKEY-BUKRS = BKORM-BUKRS.
*         HBKORMKEY-KOART = BKORM-KOART.
*         HBKORMKEY-KONTO = BKORM-KONTO.
*         HBKORMKEY-BELNR = BKORM-BELNR.
*         HBKORMKEY-GJAHR = BKORM-GJAHR.
*         CONDENSE HBKORMKEY.
*         HERDATA-USNAM = BKORM-USNAM.
*         HERDATA-DATUM = BKORM-DATUM.
*         HERDATA-UZEIT = BKORM-UZEIT.
*         MESSAGE E546 WITH 'BKORM' BKORM-EVENT HBKORMKEY HERDATA.
*       ENDIF.
*       CLEAR HBKORMKEY.
*       CLEAR HERDATA.
*       HBKORMKEY-BUKRS = BKORM-BUKRS.
*       HBKORMKEY-KOART = BKORM-KOART.
*       HBKORMKEY-KONTO = BKORM-KONTO.
*       HBKORMKEY-BELNR = BKORM-BELNR.
*       HBKORMKEY-GJAHR = BKORM-GJAHR.
*       CONDENSE HBKORMKEY.
*       HERDATA-USNAM = BKORM-USNAM.
*       HERDATA-DATUM = BKORM-DATUM.
*       HERDATA-UZEIT = BKORM-UZEIT.
*       CLEAR FIMSG.
*       FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
*       FIMSG-MSGNO = '548'.
*       FIMSG-MSGV1 = BKORM-EVENT.
*       FIMSG-MSGV2 = HBKORMKEY.
*       FIMSG-MSGV3 = HERDATA.
*       PERFORM MESSAGE_APPEND.
*     endif.
    ELSE.
*     Message in Analyseroutine
      BKORM-ERLDT = SY-DATUM.
      UPDATE BKORM.
      IF SY-SUBRC NE 0.
        CLEAR HBKORMKEY.
        CLEAR HERDATA.
        HBKORMKEY-BUKRS = BKORM-BUKRS.
        HBKORMKEY-KOART = BKORM-KOART.
        HBKORMKEY-KONTO = BKORM-KONTO.
        HBKORMKEY-BELNR = BKORM-BELNR.
        HBKORMKEY-GJAHR = BKORM-GJAHR.
        CONDENSE HBKORMKEY.
        HERDATA-USNAM = BKORM-USNAM.
        HERDATA-DATUM = BKORM-DATUM.
        HERDATA-UZEIT = BKORM-UZEIT.
        MESSAGE E546 WITH 'BKORM' BKORM-EVENT HBKORMKEY HERDATA.
      ENDIF.
      CLEAR HBKORMKEY.
      CLEAR HERDATA.
      HBKORMKEY-BUKRS = BKORM-BUKRS.
      HBKORMKEY-KOART = BKORM-KOART.
      HBKORMKEY-KONTO = BKORM-KONTO.
      HBKORMKEY-BELNR = BKORM-BELNR.
      HBKORMKEY-GJAHR = BKORM-GJAHR.
      CONDENSE HBKORMKEY.
      HERDATA-USNAM = BKORM-USNAM.
      HERDATA-DATUM = BKORM-DATUM.
      HERDATA-UZEIT = BKORM-UZEIT.
      CLEAR FIMSG.
      FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
      FIMSG-MSGNO = '548'.
      FIMSG-MSGV1 = BKORM-EVENT.
      FIMSG-MSGV2 = HBKORMKEY.
      FIMSG-MSGV3 = HERDATA.
      PERFORM MESSAGE_APPEND.
    ENDIF.
  ENDIF.

  IF SORTID = '6'.
    if bkorm-cajon is initial.
      bkorm-cajon = bkorm-gjahr.
      bkorm-gjahr = '0000'.
      dacajon     = bkorm-cajon.
    endif.
    check bkorm-cajon in hcajon.
    HDKONTO       = BKORM-cajon.
    SELECT SINGLE * FROM  TCJ_DOCUMENTS
           WHERE  COMP_CODE       = BKORM-BUKRS
           AND    CAJO_NUMBER     = BKORM-cajon
           AND    fisc_year       = BKORM-gjahr
           AND    POSTING_NUMBER  = BKORM-BELNR.

    CLEAR BKPF.
    BKPF-BELNR       = TCJ_DOCUMENTS-POSTING_NUMBER.
    BKPF-BUKRS       = TCJ_DOCUMENTS-COMP_CODE.
    BKPF-GJAHR       = TCJ_DOCUMENTS-fisc_year.
    BKPF-BUDAT       = TCJ_DOCUMENTS-POSTING_DATE.
    BKPF-BLDAT       = TCJ_DOCUMENTS-DOCUMENT_DATE.
    BKPF-WAERS       = TCJ_DOCUMENTS-CURRENCY.
    BKPF-awtyp       = 'CAJO'.
    BKPF-awkey(10)   = TCJ_DOCUMENTS-POSTING_NUMBER.
    BKPF-awkey+10(4) = TCJ_DOCUMENTS-cajo_number.
    BKPF-awkey+14(4) = TCJ_DOCUMENTS-COMP_CODE.

    PERFORM SORTIERUNG USING 'K' 'B' ' '.
    PERFORM EXTRACT.
  ENDIF.
ENDFORM.

*-----------------------------------------------------------------------
*       FORM EXTRACT_SPLIT_1
*-----------------------------------------------------------------------
FORM EXTRACT_SPLIT_1.
  CLEAR   HEXTRACT.
  REFRESH HEXTRACT.
  CLEAR   HEXTRACTD.
  REFRESH HEXTRACTD.
  CLEAR   HEXTRACTK.
  REFRESH HEXTRACTK.
  CLEAR COUNTD.
  CLEAR COUNTK.
  CLEAR SAVE2_KUNNR.
  CLEAR SAVE2_LIFNR.

* CLEAR XNZGZ.
* PERFORM INIT_BELEG_SPLIT.

  LOOP AT YACCNT.
    LOOP AT POSTAB
      WHERE BUKRS = YACCNT-BUKRS
      AND   KOART = YACCNT-KOART
      AND   KONTO = YACCNT-KTNRA.
      IF YACCNT-KOART = 'D'.


*-------Debitoren in Beleg----------------------------------------------
        CLEAR HEXTRACTD.
        MOVE POSTAB-BUKRS TO HEXTRACTD-BUKRS.
        MOVE POSTAB-KOART TO HEXTRACTD-KOAR1.
        MOVE POSTAB-KONTO TO HEXTRACTD-KONT1.
*     MOVE HBSEC-EMPFG TO HEXTRACTD-EMPF1.
        MOVE POSTAB-BELNR TO HEXTRACTD-BELNR.
        MOVE POSTAB-GJAHR TO HEXTRACTD-GJAHR.
        MOVE POSTAB-BUZEI TO HEXTRACTD-BUZEI.
        COLLECT HEXTRACTD.

      ENDIF.
      IF YACCNT-KOART = 'K'.

*-------Kreditoren in Beleg---------------------------------------------
        CLEAR HEXTRACTK.
        MOVE POSTAB-BUKRS TO HEXTRACTK-BUKRS.
        MOVE POSTAB-KOART TO HEXTRACTK-KOAR1.
        MOVE POSTAB-KONTO TO HEXTRACTK-KONT1.
*     MOVE HBSEC-EMPFG TO HEXTRACTK-EMPF1.
        MOVE POSTAB-BELNR TO HEXTRACTK-BELNR.
        MOVE POSTAB-GJAHR TO HEXTRACTK-GJAHR.
        MOVE POSTAB-BUZEI TO HEXTRACTK-BUZEI.
        COLLECT HEXTRACTK.

      ENDIF.
    ENDLOOP.
  ENDLOOP.

  CLEAR SAVE2_KUNNR.
  CLEAR SAVE2_LIFNR.
ENDFORM.

*-----------------------------------------------------------------------
*       FORM EXTRACT_SPLIT_2
*-----------------------------------------------------------------------
FORM EXTRACT_SPLIT_2.
  CLEAR   HEXTRACT.
  REFRESH HEXTRACT.
  CLEAR   HEXTRACTD.
  REFRESH HEXTRACTD.
  CLEAR   HEXTRACTK.
  REFRESH HEXTRACTK.
* PERFORM INIT_BELEG_SPLIT_2.

*-------Adressdaten lesen ----------------------------------------------
  LOOP AT HBSEG.
    IF HBSEG-KOART = 'D'.
*     MOVE HBSEG-BUZEI TO HBUZEI-BUZEI.
*     APPEND HBUZEI.
*     COUNTZ = COUNTZ + 1.

      SAVE_KUNNR = HBSEG-KUNNR.
      PERFORM PRUEFEN_HKNA1.
      IF XVORH NE 'X'.
        PERFORM READ_KNA1.
        IF SY-SUBRC NE 0.
          XKAUSG = 'X'.
        ENDIF.
        PERFORM SAVE_KNA1.
      ENDIF.
      SAVE_BUKRS = HBSEG-BUKRS.
      PERFORM PRUEFEN_HKNB1.
      IF XVORH NE 'X'.
        PERFORM READ_KNB1.
        IF SY-SUBRC NE 0.
          XKAUSG = 'X'.
        ENDIF.
        PERFORM SAVE_KNB1.
      ENDIF.
    ENDIF.
    IF HBSEG-KOART = 'K'.
*     MOVE HBSEG-BUZEI TO HBUZEI-BUZEI.
*     APPEND HBUZEI.
*     COUNTZ = COUNTZ + 1.

      SAVE_LIFNR = HBSEG-LIFNR.
      PERFORM PRUEFEN_HLFA1.
      IF XVORH NE 'X'.
        PERFORM READ_LFA1.
        IF SY-SUBRC NE 0.
          XKAUSG = 'X'.
        ENDIF.
        PERFORM SAVE_LFA1.
      ENDIF.
      SAVE_BUKRS = HBSEG-BUKRS.
      PERFORM PRUEFEN_HLFB1.
      IF XVORH NE 'X'.
        PERFORM READ_LFB1.
        IF SY-SUBRC NE 0.
          XKAUSG = 'X'.
        ENDIF.
        PERFORM SAVE_LFB1.
      ENDIF.
    ENDIF.
*-------Wechselzeilen merken--------------------------------------------

*-------Debitoren in Beleg ---------------------------------------------
    IF HBSEG-KOART = 'D'.
      IF HBSEG-UMSKS = 'W'.
        CLEAR HEXTRACTD.
        MOVE HBSEG-BUKRS TO HEXTRACTD-BUKRS.
        MOVE HBSEG-KOART TO HEXTRACTD-KOAR1.
        MOVE HBSEG-KUNNR TO HEXTRACTD-KONT1.
        MOVE HBSEC-EMPFG TO HEXTRACTD-EMPF1.
        MOVE HBSEG-BELNR TO HEXTRACTD-BELNR.
        MOVE HBSEG-GJAHR TO HEXTRACTD-GJAHR.
        MOVE HBSEG-BUZEI TO HEXTRACTD-BUZEI.
        COLLECT HEXTRACTD.
      ENDIF.
    ENDIF.
*-------Kreditoren in Beleg---------------------------------------------
    IF HBSEG-KOART = 'K'.
      IF HBSEG-UMSKS = 'W'.
        CLEAR HEXTRACTK.
        MOVE HBSEG-BUKRS TO HEXTRACTK-BUKRS.
        MOVE HBSEG-KOART TO HEXTRACTK-KOAR1.
        MOVE HBSEG-LIFNR TO HEXTRACTK-KONT1.
        MOVE HBSEC-EMPFG TO HEXTRACTK-EMPF1.
        MOVE HBSEG-BELNR TO HEXTRACTK-BELNR.
        MOVE HBSEG-GJAHR TO HEXTRACTK-GJAHR.
        MOVE HBSEG-BUZEI TO HEXTRACTK-BUZEI.
        COLLECT HEXTRACTD.
      ENDIF.
    ENDIF.

*-------Spesenzeilen zusammenfassen und merken--------------------------
    IF HBSEG-BUZID = 'D'
    OR HBSEG-BUZID = 'I'
    OR HBSEG-BUZID = 'W'.
      IF XBEGIN IS INITIAL.
        XBEGIN = 'X'.
        CLEAR   HBUZEI2.
        REFRESH HBUZEI2.
      ENDIF.
    ENDIF.
    IF NOT XBEGIN IS INITIAL.
      IF HBSEG-BUZID = 'D'.
        CLEAR HBUZEI2.
        MOVE-CORRESPONDING HBSEG TO HBUZEI2.
        APPEND HBUZEI2.
      ENDIF.
      IF HBSEG-BUZID = 'I'.
        CLEAR HBUZEI2.
        MOVE-CORRESPONDING HBSEG TO HBUZEI2.
        APPEND HBUZEI2.
      ENDIF.
      IF HBSEG-BUZID = 'W'.
        CLEAR HBUZEI2.
        MOVE-CORRESPONDING HBSEG TO HBUZEI2.
        APPEND HBUZEI2.
      ENDIF.
      IF HBSEG-BUZID = 'S'.
        LOOP AT HBUZEI2.
          HBUZEI2-KOART = HBSEG-KOART.
          HBUZEI2-KUNNR = HBSEG-KUNNR.
          HBUZEI2-LIFNR = HBSEG-LIFNR.
          MODIFY HBUZEI2.
        ENDLOOP.

        CLEAR HBUZEI2.
        MOVE-CORRESPONDING HBSEG TO HBUZEI2.
        APPEND HBUZEI2.

        LOOP AT HBUZEI2.
          IF HBUZEI2-KOART = 'D'.
            CLEAR HEXTRACTD.
            MOVE HBUZEI2-BUKRS TO HEXTRACTD-BUKRS.
            MOVE HBUZEI2-KOART TO HEXTRACTD-KOAR1.
            MOVE HBUZEI2-KUNNR TO HEXTRACTD-KONT1.
            MOVE HBSEC-EMPFG   TO HEXTRACTD-EMPF1.
            MOVE HBUZEI2-BELNR TO HEXTRACTD-BELNR.
            MOVE HBUZEI2-GJAHR TO HEXTRACTD-GJAHR.
            MOVE HBUZEI2-BUZEI TO HEXTRACTD-BUZEI.
            COLLECT HEXTRACTD.
          ELSE.
            CLEAR HEXTRACTK.
            MOVE HBUZEI2-BUKRS TO HEXTRACTK-BUKRS.
            MOVE HBUZEI2-KOART TO HEXTRACTK-KOAR1.
            MOVE HBUZEI2-LIFNR TO HEXTRACTK-KONT1.
            MOVE HBSEC-EMPFG   TO HEXTRACTK-EMPF1.
            MOVE HBUZEI2-BELNR TO HEXTRACTK-BELNR.
            MOVE HBUZEI2-GJAHR TO HEXTRACTK-GJAHR.
            MOVE HBUZEI2-BUZEI TO HEXTRACTK-BUZEI.
            COLLECT HEXTRACTK.
          ENDIF.
        ENDLOOP.

        CLEAR XBEGIN.
      ENDIF.
    ENDIF.
  ENDLOOP.

ENDFORM.

*-----------------------------------------------------------------------
*       FORM EXTRACT_SPLIT_3
*-----------------------------------------------------------------------
FORM EXTRACT_SPLIT_3.
  CLEAR   HEXTRACT.
  REFRESH HEXTRACT.
  CLEAR   HEXTRACTD.
  REFRESH HEXTRACTD.
  CLEAR   HEXTRACTK.
  REFRESH HEXTRACTK.
  CLEAR COUNTD.
  CLEAR COUNTK.
  CLEAR SAVE2_KUNNR.
  CLEAR SAVE2_LIFNR.

* CLEAR XNZGZ.
* PERFORM INIT_BELEG_SPLIT.

  CLEAR XSEL.
  LOOP AT HBSEG.
    IF  HBSEG-BSCHL IN HBSCHL
    AND HBSEG-UMSKZ IN HUMSKZ.
      XSEL = 'X'.
      IF HBSEG-KOART = 'D'.
*       MOVE HBSEG-BUZEI TO HBUZEI-BUZEI.
*       APPEND HBUZEI.
*       COUNTZ = COUNTZ + 1.

        SAVE_KUNNR = HBSEG-KUNNR.
        IF SAVE_KUNNR NE SAVE2_KUNNR.
          SAVE2_KUNNR = SAVE_KUNNR.
          COUNTD = COUNTD + 1.
        ENDIF.
        PERFORM PRUEFEN_HKNA1.
        IF XVORH NE 'X'.
          PERFORM READ_KNA1.
          IF SY-SUBRC NE 0.
            XKAUSG = 'X'.
          ENDIF.
          PERFORM SAVE_KNA1.
        ENDIF.
        SAVE_BUKRS = HBSEG-BUKRS.
        PERFORM PRUEFEN_HKNB1.
        IF XVORH NE 'X'.
          PERFORM READ_KNB1.
          IF SY-SUBRC NE 0.
            XKAUSG = 'X'.
          ENDIF.
          PERFORM SAVE_KNB1.
        ENDIF.
        IF NOT KNA1-XCPDK IS INITIAL.
          SAVE_BUKRS = HBSEG-BUKRS.
          SAVE_BELNR = HBSEG-BELNR.
          SAVE_GJAHR = HBSEG-GJAHR.
          SAVE_BUZEI = HBSEG-BUZEI.
          IF BKPF-BSTAT = 'V'.
            PERFORM READ_VBSEC.
          ELSE.
            PERFORM READ_BSEC.
          ENDIF.
          IF SY-SUBRC NE 0.
            XKAUSG = 'X'.
          ENDIF.
          PERFORM SAVE_BSEC.
        ELSE.
          CLEAR HBSEC.
        ENDIF.

*-------Debitoren in Beleg----------------------------------------------
        CLEAR HEXTRACTD.
        MOVE HBSEG-BUKRS TO HEXTRACTD-BUKRS.
        MOVE HBSEG-KOART TO HEXTRACTD-KOAR1.
        MOVE HBSEG-KUNNR TO HEXTRACTD-KONT1.
        MOVE HBSEC-EMPFG TO HEXTRACTD-EMPF1.
        MOVE HBSEG-BELNR TO HEXTRACTD-BELNR.
        MOVE HBSEG-GJAHR TO HEXTRACTD-GJAHR.
        MOVE HBSEG-BUZEI TO HEXTRACTD-BUZEI.
        COLLECT HEXTRACTD.

      ENDIF.
      IF HBSEG-KOART = 'K'.
*       MOVE HBSEG-BUZEI TO HBUZEI-BUZEI.
*       APPEND HBUZEI.
*       COUNTZ = COUNTZ + 1.

        SAVE_LIFNR = HBSEG-LIFNR.
        IF SAVE_LIFNR NE SAVE2_LIFNR.
          SAVE2_LIFNR = SAVE_LIFNR.
          COUNTK = COUNTK + 1.
        ENDIF.
        PERFORM PRUEFEN_HLFA1.
        IF XVORH NE 'X'.
          PERFORM READ_LFA1.
          IF SY-SUBRC NE 0.
            XKAUSG = 'X'.
          ENDIF.
          PERFORM SAVE_LFA1.
        ENDIF.
        SAVE_BUKRS = HBSEG-BUKRS.
        PERFORM PRUEFEN_HLFB1.
        IF XVORH NE 'X'.
          PERFORM READ_LFB1.
          IF SY-SUBRC NE 0.
            XKAUSG = 'X'.
          ENDIF.
          PERFORM SAVE_LFB1.
        ENDIF.
        IF NOT LFA1-XCPDK IS INITIAL.
          SAVE_BUKRS = HBSEG-BUKRS.
          SAVE_BELNR = HBSEG-BELNR.
          SAVE_GJAHR = HBSEG-GJAHR.
          SAVE_BUZEI = HBSEG-BUZEI.
          IF BKPF-BSTAT = 'V'.
            PERFORM READ_VBSEC.
          ELSE.
            PERFORM READ_BSEC.
          ENDIF.
          IF SY-SUBRC NE 0.
            XKAUSG = 'X'.
          ENDIF.
          PERFORM SAVE_BSEC.
        ELSE.
          CLEAR HBSEC.
        ENDIF.

*-------Kreditoren in Beleg---------------------------------------------
        CLEAR HEXTRACTK.
        MOVE HBSEG-BUKRS TO HEXTRACTK-BUKRS.
        MOVE HBSEG-KOART TO HEXTRACTK-KOAR1.
        MOVE HBSEG-LIFNR TO HEXTRACTK-KONT1.
        MOVE HBSEC-EMPFG TO HEXTRACTK-EMPF1.
        MOVE HBSEG-BELNR TO HEXTRACTK-BELNR.
        MOVE HBSEG-GJAHR TO HEXTRACTK-GJAHR.
        MOVE HBSEG-BUZEI TO HEXTRACTK-BUZEI.
        COLLECT HEXTRACTK.

      ENDIF.
    ENDIF.
  ENDLOOP.

  IF XSEL IS INITIAL.
    XKAUSG = 'X'.
    CLEAR FIMSG.
    FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
    FIMSG-MSGNO = '552'.
    FIMSG-MSGV1 = SAVE_BUKRS.
    FIMSG-MSGV2 = SAVE_BELNR.
    FIMSG-MSGV3 = SAVE_GJAHR.
    PERFORM MESSAGE_APPEND.
  ENDIF.

*-------Konsistenztest ob alle Debi/Kredzeilen zugeordnet---------------
* IF COUNTZ NE 0.
*   PERFORM NICHT_ZUGEORDNETE_ZEILEN.
*   XNZGZ = 'X'.
* ENDIF.

  CLEAR SAVE2_KUNNR.
  CLEAR SAVE2_LIFNR.
ENDFORM.

*-----------------------------------------------------------------------
*       FORM EXTRACT_SPLIT_4
*-----------------------------------------------------------------------
FORM EXTRACT_SPLIT_4.
  CLEAR SAVE_KOART.
  CLEAR SAVE_KONTO.
* CLEAR RF140-WAERS.
  LOOP AT HBSEG.
    CASE TINSO-IDPOS.
      WHEN '1'.
        IF  HBSEG-SHKZG = 'S'
        AND HBSEG-UMSKS = 'W'
        AND HBSEG-KOART = 'D'
        AND NOT HBSEG-AUGDT IS INITIAL
        AND NOT HBSEG-AUGBL IS INITIAL.
          SAVE_KUNNR = HBSEG-KUNNR.
          PERFORM PRUEFEN_HKNA1.
          IF XVORH NE 'X'.
            PERFORM READ_KNA1.
            IF SY-SUBRC NE 0.
              XKAUSG = 'X'.
            ENDIF.
            PERFORM SAVE_KNA1.
          ENDIF.
          SAVE_BUKRS = HBSEG-BUKRS.
          PERFORM PRUEFEN_HKNB1.
          IF XVORH NE 'X'.
            PERFORM READ_KNB1.
            IF SY-SUBRC NE 0.
              XKAUSG = 'X'.
            ENDIF.
            PERFORM SAVE_KNB1.
          ENDIF.

          IF  NOT SAVE_KONTO IS INITIAL
          AND SAVE_KONTO NE HBSEG-KUNNR.
            CLEAR SAVE_KONTO.
            XKAUSG = 'X'.
            CLEAR FIMSG.
            FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
            FIMSG-MSGTY = 'I'.
            FIMSG-MSGNO = '552'.
            FIMSG-MSGV1 = SAVE_BUKRS.
            FIMSG-MSGV2 = SAVE_BELNR.
            FIMSG-MSGV3 = SAVE_GJAHR.
            PERFORM MESSAGE_APPEND.
            EXIT.
          ELSE.
            SAVE_KOART = HBSEG-KOART.
            SAVE_KONTO = HBSEG-KUNNR.
          ENDIF.
        ENDIF.
      WHEN '2'.
        XKAUSG = 'X'.
        CLEAR FIMSG.
        FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
        FIMSG-MSGTY = 'I'.
        FIMSG-MSGNO = '551'.
        FIMSG-MSGV1 = SAVE_BUKRS.
        FIMSG-MSGV2 = SAVE_BELNR.
        FIMSG-MSGV3 = SAVE_GJAHR.
        PERFORM MESSAGE_APPEND.
      WHEN  '3'.
        IF  HBSEG-KOART = 'D'
        AND HBSEG-KUNNR = TINSO-KUNNR.
          SAVE_KUNNR = HBSEG-KUNNR.
          PERFORM PRUEFEN_HKNA1.
          IF XVORH NE 'X'.
            PERFORM READ_KNA1.
            IF SY-SUBRC NE 0.
              XKAUSG = 'X'.
            ENDIF.
            PERFORM SAVE_KNA1.
          ENDIF.
          SAVE_BUKRS = HBSEG-BUKRS.
          PERFORM PRUEFEN_HKNB1.
          IF XVORH NE 'X'.
            PERFORM READ_KNB1.
            IF SY-SUBRC NE 0.
              XKAUSG = 'X'.
            ENDIF.
            PERFORM SAVE_KNB1.
          ENDIF.

          IF  NOT SAVE_KONTO IS INITIAL
          AND SAVE_KONTO NE HBSEG-KUNNR.
            CLEAR SAVE_KONTO.
            XKAUSG = 'X'.
            CLEAR FIMSG.
            FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
            FIMSG-MSGTY = 'I'.
            FIMSG-MSGNO = '553'.
            FIMSG-MSGV1 = SAVE_BUKRS.
            FIMSG-MSGV2 = SAVE_BELNR.
            FIMSG-MSGV3 = SAVE_GJAHR.
            PERFORM MESSAGE_APPEND.
            EXIT.
          ELSE.
            SAVE_KOART = HBSEG-KOART.
            SAVE_KONTO = HBSEG-KUNNR.
          ENDIF.
        ENDIF.
      WHEN OTHERS.
        CLEAR FIMSG.
        FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
        FIMSG-MSGTY = 'I'.
        FIMSG-MSGNO = '551'.
        FIMSG-MSGV1 = SAVE_BUKRS.
        FIMSG-MSGV2 = SAVE_BELNR.
        FIMSG-MSGV3 = SAVE_GJAHR.
        PERFORM MESSAGE_APPEND.
        XKAUSG = 'X'.
    ENDCASE.
  ENDLOOP.

ENDFORM.

*-----------------------------------------------------------------------
*       FORM EXTRACT_VORBEREITUNG_1
*-----------------------------------------------------------------------
FORM EXTRACT_VORBEREITUNG_1.
* CLEAR   RF140.
* CLEAR   COUNTZ.
  CLEAR   HBKPF.
  REFRESH HBKPF.
  CLEAR   HBSEG.
  REFRESH HBSEG.
* CLEAR   HBUZEI.
* REFRESH HBUZEI.

*-------Beleg einlesen--------------------------------------------------
  IF  NOT SAVE_RINDKO IS INITIAL
  AND     SAVE_RXBKOR IS INITIAL.
    PERFORM READ_BKPF.
    IF SY-SUBRC NE 0.
      CLEAR FIMSG.
      FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
      FIMSG-MSGNO = '547'.
      FIMSG-MSGV1 = SAVE_BUKRS.
      FIMSG-MSGV2 = SAVE_BELNR.
      FIMSG-MSGV3 = SAVE_GJAHR.
      PERFORM MESSAGE_APPEND.
      XKAUSG = 'X'.
    ENDIF.
  ENDIF.
  IF BKPF-BSTAT = 'V'
  OR BKPF-BSTAT = 'W'
  OR BKPF-BSTAT = 'Z'.
* OR BKPF-BSTAT = 'A'.
    CLEAR FIMSG.
    FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
    FIMSG-MSGTY = 'I'.
    FIMSG-MSGNO = '850'.
    FIMSG-MSGV1 = BKPF-BSTAT.
    FIMSG-MSGV2 = BKPF-BUKRS.
    FIMSG-MSGV3 = BKPF-BELNR.
    FIMSG-MSGV4 = BKPF-GJAHR.
    PERFORM MESSAGE_APPEND.
    XKAUSG = 'X'.
  ENDIF.
  MOVE-CORRESPONDING BKPF TO HBKPF.
  APPEND HBKPF.
* RF140-WAERS = HBKPF-WAERS.
* PERFORM SAVE_BKPF.

*-------Pr¨¹fen ob buchungskreis¨¹bergreifender Vorgang-------------------
  PERFORM PRUEFEN_BVORG.
* IF NOT SAVE_BVORG IS INITIAL.
*   CLEAR FIMSG.
*   FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
*   FIMSG-MSGNO = '550'.
*   FIMSG-MSGV1 = SAVE_BUKRS.
*   FIMSG-MSGV2 = SAVE_BELNR.
*   FIMSG-MSGV3 = SAVE_GJAHR.
*   FIMSG-MSGV4 = SAVE_BVORG.
*   PERFORM MESSAGE_APPEND.
*   XKAUSG = 'X'.
* ENDIF.
  IF XKAUSG IS INITIAL.
    REFRESH POSTAB.
    REFRESH YACCNT.

    CALL FUNCTION 'GET_CLEARED_ITEMS'
         EXPORTING
              I_BELNR                = SAVE_BELNR
              I_BUKRS                = SAVE_BUKRS
              I_GJAHR                = SAVE_GJAHR
              I_BVORG                = SAVE_BVORG
*            I_AUGDT                =
*            I_RFZEI                =
*       IMPORTING
*            E_XKDF                 =
*            E_XSKV                 =
         TABLES
              T_ITEMS                = POSTAB
              T_ACCNT                = YACCNT
         EXCEPTIONS
              NOT_FOUND              = 1
              ERROR_CLEARED_ACCOUNTS = 2
              OTHERS                 = 3.
*   IF sy-subrc <> 0.
*     CLEAR fimsg.
*     fimsg-msort = '    '. fimsg-msgid = sy-msgid.
*     fimsg-msgty = 'I'.
*     fimsg-msgno = sy-msgno.
*     fimsg-msgv1 = sy-msgv1.
*     fimsg-msgv2 = sy-msgv2.
*     fimsg-msgv3 = sy-msgv3.
*     fimsg-msgv4 = sy-msgv4.
*     PERFORM message_append.
*     xkausg = 'X'.
*   ENDIF.

    SELECT * FROM BSEG
      WHERE BUKRS =  SAVE_BUKRS
      AND   BELNR =  SAVE_BELNR
      AND   GJAHR =  SAVE_GJAHR
      AND   AUGBL NE SAVE_BELNR.
      IF BSEG-KOART = 'D'
      OR BSEG-KOART = 'K'.
        YACCNT-BUKRS = BSEG-BUKRS.
        YACCNT-KOART = BSEG-KOART.
        IF BSEG-KOART = 'D'.
          YACCNT-KTNRA = BSEG-KUNNR.
        ELSE.
          YACCNT-KTNRA = BSEG-LIFNR.
        ENDIF.
        COLLECT YACCNT.
        MOVE-CORRESPONDING BSEG TO POSTAB.
        IF BSEG-KOART = 'D'.
          POSTAB-KONTO = BSEG-KUNNR.
        ELSE.
          POSTAB-KONTO = BSEG-LIFNR.
        ENDIF.
        APPEND POSTAB.
      ENDIF.
    ENDSELECT.
    IF NOT XBVORG IS INITIAL.
      LOOP AT HBVOR
        WHERE BUKRS NE SAVE_BUKRS.
        SELECT * FROM BSEG
          WHERE BUKRS =  HBVOR-BUKRS
          AND   BELNR =  HBVOR-BELNR
          AND   GJAHR =  HBVOR-GJAHR
          AND   AUGBL NE HBVOR-BELNR.
          IF BSEG-KOART = 'D'
          OR BSEG-KOART = 'K'.
            YACCNT-BUKRS = BSEG-BUKRS.
            YACCNT-KOART = BSEG-KOART.
            IF BSEG-KOART = 'D'.
              YACCNT-KTNRA = BSEG-KUNNR.
            ELSE.
              YACCNT-KTNRA = BSEG-LIFNR.
            ENDIF.
            COLLECT YACCNT.
            MOVE-CORRESPONDING BSEG TO POSTAB.
            IF BSEG-KOART = 'D'.
              POSTAB-KONTO = BSEG-KUNNR.
            ELSE.
              POSTAB-KONTO = BSEG-LIFNR.
            ENDIF.
            APPEND POSTAB.
          ENDIF.
        ENDSELECT.
      ENDLOOP.
    ENDIF.

*   IF NOT SAVE_BVORG IS INITIAL.
*     SAVE2_BUKRS = SAVE_BUKRS.
*     SAVE2_BELNR = SAVE_BELNR.
*     SAVE2_GJAHR = SAVE_GJAHR.
*     PERFORM BVORG_BKPF.
*   ENDIF.

*-------Beleg splitten f¨¹r Extract--------------------------------------
    PERFORM EXTRACT_SPLIT_1.
*   PERFORM DESCRIBE_TABLES_BSEG.
*   PERFORM SAVE_BSAD.
*   PERFORM SAVE_BSAK.

*-------Debitoren-Kreditorenzuordnung-----------------------------------
    DESCRIBE TABLE HEXTRACTD  LINES KUNLINES.
    DESCRIBE TABLE HEXTRACTK  LINES LIFLINES.
    IF  NOT KUNLINES IS INITIAL
    AND NOT LIFLINES IS INITIAL.
      PERFORM DEBI_KRED_ZUORDNEN_2.
    ENDIF.

*   IF NOT SAVE_RINDKO IS INITIAL.
*     COUNTD = COUNTD + COUNTK.
*     IF COUNTD NE '1'.
*       XKAUSG = 'X'.
*     ENDIF.
*   ENDIF.

*-------Debitoren- und Kreditoren Belegzeilen f¨¹r Extract---------------
*   IF XKAUSG IS INITIAL.
    PERFORM DEBI_KRED_IM_BELEG.
*   ENDIF.
    PERFORM FILL_HBSEG.
  ENDIF.
ENDFORM.

*-----------------------------------------------------------------------
*       FORM EXTRACT_VORBEREITUNG_2
*-----------------------------------------------------------------------
FORM EXTRACT_VORBEREITUNG_2.
* CLEAR   RF140.
  CLEAR   HBKPF.
  REFRESH HBKPF.
  CLEAR   HBSEG.
  REFRESH HBSEG.
* CLEAR   HBUZEI.
* REFRESH HBUZEI.

*-------Beleg einlesen--------------------------------------------------
* PERFORM READ_BKPF.
  IF BKPF-BSTAT = 'V'
  OR BKPF-BSTAT = 'W'
  OR BKPF-BSTAT = 'Z'
  OR BKPF-BSTAT = 'A'.
    CLEAR FIMSG.
    FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
    FIMSG-MSGTY = 'I'.
    FIMSG-MSGNO = '850'.
    FIMSG-MSGV1 = BKPF-BSTAT.
    FIMSG-MSGV2 = BKPF-BUKRS.
    FIMSG-MSGV3 = BKPF-BELNR.
    FIMSG-MSGV4 = BKPF-GJAHR.
    PERFORM MESSAGE_APPEND.
    XKAUSG = 'X'.
  ENDIF.
  MOVE-CORRESPONDING BKPF TO HBKPF.
  APPEND HBKPF.
* RF140-WAERS = HBKPF-WAERS.
* PERFORM SAVE_BKPF.

*-------Pr¨¹fen ob buchungskreis¨¹bergreifender Vorgang-------------------
  PERFORM PRUEFEN_BVORG.
* IF NOT SAVE_BVORG IS INITIAL.
*   CLEAR FIMSG.
*   FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
*   FIMSG-MSGNO = '550'.
*   FIMSG-MSGV1 = SAVE_BUKRS.
*   FIMSG-MSGV2 = SAVE_BELNR.
*   FIMSG-MSGV3 = SAVE_GJAHR.
*   FIMSG-MSGV4 = SAVE_BVORG.
*   PERFORM MESSAGE_APPEND.
*   XKAUSG = 'X'.
* ENDIF.

  IF XKAUSG IS INITIAL.
    PERFORM READ_BSEG.
    IF SY-SUBRC NE 0.
      CLEAR FIMSG.
      FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
      FIMSG-MSGNO = '554'.
      FIMSG-MSGV1 = SAVE_BUKRS.
      FIMSG-MSGV2 = SAVE_BELNR.
      FIMSG-MSGV3 = SAVE_GJAHR.
      PERFORM MESSAGE_APPEND.
      XKAUSG = 'X'.
    ENDIF.

*-------bei buchungskreis¨¹bergreifendem Vorgang zus#tzliche ------------
*-------Informationen einlesen------------------------------------------
    IF  NOT SAVE_BVORG IS INITIAL
    AND NOT T048-XBUKR IS INITIAL.
*       PERFORM READ_BVOR.
      PERFORM SAVE_BSEG.
      SAVE2_BUKRS = SAVE_BUKRS.
      SAVE2_BELNR = SAVE_BELNR.
      SAVE2_GJAHR = SAVE_GJAHR.
      PERFORM BVORG_BKPF.
      PERFORM BVORG_BSEG.
      PERFORM RESTORE_BSEG.
    ENDIF.

*-------Beleg splitten f¨¹r Extract--------------------------------------
    PERFORM EXTRACT_SPLIT_2.
*   PERFORM DESCRIBE_TABLES_BSEG.
*   PERFORM SAVE_BSAD.
*   PERFORM SAVE_BSAK.

*-------Zentralen/Filialen pr¨¹fen---------------------------------------
*   PERFORM PRUEFEN_ZENTFIL.

*-------Debitoren-Kreditorenzuordnung-----------------------------------
*   DESCRIBE TABLE KUNNR_wespe LINES KUNLINES.
*   DESCRIBE TABLE LIFNR_wespe LINES LIFLINES.
*   IF  NOT KUNLINES IS INITIAL
*   AND NOT LIFLINES IS INITIAL.
*     PERFORM DEBI_KRED_ZUORDNEN.
*   ENDIF.
* ENDIF.

*-------Debitoren- und Kreditoren Belegzeilen f¨¹r Extract---------------
    PERFORM DEBI_KRED_IM_BELEG.
  ENDIF.
ENDFORM.

*-----------------------------------------------------------------------
*       FORM EXTRACT_VORBEREITUNG_3
*-----------------------------------------------------------------------
FORM EXTRACT_VORBEREITUNG_3.
* CLEAR   RF140.
* CLEAR   COUNTZ.
  CLEAR   HBKPF.
  REFRESH HBKPF.
  CLEAR   HBSEG.
  REFRESH HBSEG.
* CLEAR   HBUZEI.
* REFRESH HBUZEI.

*-------Beleg einlesen--------------------------------------------------
  IF  NOT SAVE_RINDKO IS INITIAL
  AND     SAVE_RXBKOR IS INITIAL.
    PERFORM READ_BKPF.
    IF SY-SUBRC NE 0.
      CLEAR FIMSG.
      FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
      FIMSG-MSGNO = '547'.
      FIMSG-MSGV1 = SAVE_BUKRS.
      FIMSG-MSGV2 = SAVE_BELNR.
      FIMSG-MSGV3 = SAVE_GJAHR.
      PERFORM MESSAGE_APPEND.
      XKAUSG = 'X'.
    ENDIF.
  ENDIF.
* IF BKPF-BSTAT = 'V'
  IF BKPF-BSTAT = 'W'
  OR BKPF-BSTAT = 'Z'.
    CLEAR FIMSG.
    FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
    FIMSG-MSGTY = 'I'.
    FIMSG-MSGNO = '856'.
    FIMSG-MSGV1 = BKPF-BSTAT.
    FIMSG-MSGV2 = BKPF-BUKRS.
    FIMSG-MSGV3 = BKPF-BELNR.
    FIMSG-MSGV4 = BKPF-GJAHR.
    PERFORM MESSAGE_APPEND.
    XKAUSG = 'X'.
  ENDIF.
  CASE BKPF-BSTAT.
    WHEN ' '.
    WHEN 'V'.
    WHEN 'S'.
      IF SAVE_STATBL IS INITIAL.
        XKAUSG = 'X'.
        CLEAR FIMSG.
        FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
        FIMSG-MSGNO = '556'.
        FIMSG-MSGV1 = SAVE_BUKRS.
        FIMSG-MSGV2 = SAVE_BELNR.
        FIMSG-MSGV3 = SAVE_GJAHR.
        PERFORM MESSAGE_APPEND.
      ENDIF.
    WHEN OTHERS.
      CLEAR FIMSG.
      FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
      FIMSG-MSGNO = '555'.
      FIMSG-MSGV1 = SAVE_BUKRS.
      FIMSG-MSGV2 = SAVE_BELNR.
      FIMSG-MSGV3 = SAVE_GJAHR.
      FIMSG-MSGV4 = BKPF-BSTAT.
      PERFORM MESSAGE_APPEND.
      XKAUSG = 'X'.
  ENDCASE.
  IF XKAUSG IS INITIAL.
    MOVE-CORRESPONDING BKPF TO HBKPF.
    APPEND HBKPF.
*   RF140-WAERS = HBKPF-WAERS.
*   PERFORM SAVE_BKPF.

*-------Pr¨¹fen ob buchungskreis¨¹bergreifender Vorgang-------------------
    PERFORM PRUEFEN_BVORG.
*   IF NOT SAVE_BVORG IS INITIAL.
*     CLEAR FIMSG.
*     FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
*     FIMSG-MSGNO = '550'.
*     FIMSG-MSGV1 = SAVE_BUKRS.
*     FIMSG-MSGV2 = SAVE_BELNR.
*     FIMSG-MSGV3 = SAVE_GJAHR.
*     FIMSG-MSGV4 = SAVE_BVORG.
*     PERFORM MESSAGE_APPEND.
*     XKAUSG = 'X'.
*   ENDIF.
    IF XKAUSG IS INITIAL.
      IF BKPF-BSTAT = 'V'.
        PERFORM READ_PREL_DOCUMENT.
        PERFORM READ_VBSEG.
      ELSE.
        PERFORM READ_BSEG.
      ENDIF.
      IF SY-SUBRC NE 0.
        CLEAR FIMSG.
        FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
        FIMSG-MSGNO = '554'.
        FIMSG-MSGV1 = SAVE_BUKRS.
        FIMSG-MSGV2 = SAVE_BELNR.
        FIMSG-MSGV3 = SAVE_GJAHR.
        PERFORM MESSAGE_APPEND.
        XKAUSG = 'X'.
      ENDIF.
*     PERFORM SAVE_BSEG.

*-------bei buchungskreis¨¹bergreifendem Vorgang zus#tzliche ------------
*-------Informationen einlesen------------------------------------------
      IF  NOT SAVE_BVORG IS INITIAL
      AND NOT T048-XBUKR IS INITIAL.
*       PERFORM READ_BVOR.
        PERFORM SAVE_BSEG.
        SAVE2_BUKRS = SAVE_BUKRS.
        SAVE2_BELNR = SAVE_BELNR.
        SAVE2_GJAHR = SAVE_GJAHR.
        PERFORM BVORG_BKPF.
        PERFORM BVORG_BSEG.
        PERFORM RESTORE_BSEG.
      ENDIF.

*-------Beleg splitten f¨¹r Extract--------------------------------------
      PERFORM EXTRACT_SPLIT_3.
*     PERFORM DESCRIBE_TABLES_BSEG.
*     PERFORM SAVE_BSAD.
*     PERFORM SAVE_BSAK.

*-------Debitoren-Kreditorenzuordnung-----------------------------------
      DESCRIBE TABLE HEXTRACTD  LINES KUNLINES.
      DESCRIBE TABLE HEXTRACTK  LINES LIFLINES.
      IF  NOT KUNLINES IS INITIAL
      AND NOT LIFLINES IS INITIAL.
        PERFORM DEBI_KRED_ZUORDNEN_2.
      ENDIF.

*     IF NOT SAVE_RINDKO IS INITIAL.
*       COUNTD = COUNTD + COUNTK.
*       IF COUNTD NE '1'.
*         XKAUSG = 'X'.
*       ENDIF.
*     ENDIF.

*-------Debitoren- und Kreditoren Belegzeilen f¨¹r Extract---------------
*     IF XKAUSG IS INITIAL.
      PERFORM DEBI_KRED_IM_BELEG.
*     ENDIF.
    ENDIF.
  ENDIF.
ENDFORM.

*-----------------------------------------------------------------------
*       FORM EXTRACT_VORBEREITUNG_4
*-----------------------------------------------------------------------
FORM EXTRACT_VORBEREITUNG_4.
* CLEAR   RF140.
* CLEAR   COUNTZ.
  CLEAR   HBKPF.
  REFRESH HBKPF.
  CLEAR   HBSEG.
  REFRESH HBSEG.
* CLEAR   HBUZEI.
* REFRESH HBUZEI.

*-------Beleg einlesen--------------------------------------------------
  IF SAVE_RXBKOR IS INITIAL.
    PERFORM READ_BKPF.
    IF SY-SUBRC NE 0.
      CLEAR FIMSG.
      FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
      FIMSG-MSGNO = '547'.
      FIMSG-MSGV1 = SAVE_BUKRS.
      FIMSG-MSGV2 = SAVE_BELNR.
      FIMSG-MSGV3 = SAVE_GJAHR.
      PERFORM MESSAGE_APPEND.
      XKAUSG = 'X'.
    ENDIF.
  ENDIF.
  IF BKPF-BSTAT = 'V'
  OR BKPF-BSTAT = 'W'
  OR BKPF-BSTAT = 'Z'
  OR BKPF-BSTAT = 'A'.
    CLEAR FIMSG.
    FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
    FIMSG-MSGTY = 'I'.
    FIMSG-MSGNO = '850'.
    FIMSG-MSGV1 = BKPF-BSTAT.
    FIMSG-MSGV2 = BKPF-BUKRS.
    FIMSG-MSGV3 = BKPF-BELNR.
    FIMSG-MSGV4 = BKPF-GJAHR.
    PERFORM MESSAGE_APPEND.
    XKAUSG = 'X'.
  ENDIF.
  IF  SAVE_RINDKO IS INITIAL
  AND SAVE_RXBKOR IS INITIAL.
  ELSE.
    PERFORM PRUEFEN_HTINSO.
    IF XVORH IS INITIAL.
      PERFORM READ_TINSO.
      IF SY-SUBRC = 0.
        HTINSO = TINSO.
        APPEND HTINSO.
      ELSE.
        SAVE2_GJAHR = SAVE_GJAHR.
        CLEAR SAVE_GJAHR.
        PERFORM READ_TINSO.
        IF SY-SUBRC = 0.
          SAVE_GJAHR   = SAVE2_GJAHR.
          TINSO-GJAHR  = SAVE2_GJAHR.
          HTINSO-GJAHR = SAVE2_GJAHR.
          HTINSO = TINSO.
          APPEND HTINSO.
        ELSE.
          CLEAR FIMSG.
          FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
          FIMSG-MSGNO = '557'.
          FIMSG-MSGV1 = SAVE_BUKRS.
          FIMSG-MSGV2 = SAVE_BELNR.
          FIMSG-MSGV3 = SAVE2_GJAHR.
          PERFORM MESSAGE_APPEND.
          XKAUSG = 'X'.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.
  IF TINSO-IDPOS NE '1'.
    XKAUSG = 'X'.
    CLEAR FIMSG.
    FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
    FIMSG-MSGTY = 'I'.
    FIMSG-MSGNO = '551'.
    FIMSG-MSGV1 = SAVE_BUKRS.
    FIMSG-MSGV2 = SAVE_BELNR.
    FIMSG-MSGV3 = SAVE_GJAHR.
    PERFORM MESSAGE_APPEND.
  ENDIF.
*  IF  BKPF-WAERS NE TINSO-WAERS
*  AND TINSO-WAERS NE SPACE.
*  ELSE.
    MOVE-CORRESPONDING BKPF TO HBKPF.
    APPEND HBKPF.
*   RF140-WAERS = HBKPF-WAERS.
*   PERFORM SAVE_BKPF.

*-------Pr¨¹fen ob buchungskreis¨¹bergreifender Vorgang-------------------
    PERFORM PRUEFEN_BVORG.
    IF NOT SAVE_BVORG IS INITIAL.
      CLEAR FIMSG.
      FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
      FIMSG-MSGNO = '550'.
      FIMSG-MSGV1 = SAVE_BUKRS.
      FIMSG-MSGV2 = SAVE_BELNR.
      FIMSG-MSGV3 = SAVE_GJAHR.
      FIMSG-MSGV4 = SAVE_BVORG.
      PERFORM MESSAGE_APPEND.
      XKAUSG = 'X'.
    ENDIF.
    IF XKAUSG IS INITIAL.
      PERFORM READ_BSEG.
      IF SY-SUBRC NE 0.
        CLEAR FIMSG.
        FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
        FIMSG-MSGNO = '554'.
        FIMSG-MSGV1 = SAVE_BUKRS.
        FIMSG-MSGV2 = SAVE_BELNR.
        FIMSG-MSGV3 = SAVE_GJAHR.
        PERFORM MESSAGE_APPEND.
        XKAUSG = 'X'.
      ENDIF.
*   PERFORM SAVE_BSEG.

*-------bei buchungskreis¨¹bergreifendem Vorgang zus#tzliche ------------
*-------Informationen einlesen------------------------------------------
*   IF NOT SAVE_BVORG IS INITIAL.
*     PERFORM READ_BVOR.
*     PERFORM BVORG_BKPF.
*     PERFORM BVORG_BSEG.
*   ENDIF.

*-------Beleg splitten--------------------------------------------------
      PERFORM EXTRACT_SPLIT_4.
*     PERFORM DESCRIBE_TABLES_BSEG.
*     PERFORM SAVE_BSAD.
*     PERFORM SAVE_BSAK.

*-------Zentralen/Filialen pr¨¹fen---------------------------------------
*     PERFORM PRUEFEN_ZENTFIL.

    ENDIF.
*  ENDIF.
ENDFORM.
