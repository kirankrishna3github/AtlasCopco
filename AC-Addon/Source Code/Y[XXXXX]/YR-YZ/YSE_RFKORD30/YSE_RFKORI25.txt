***INCLUDE RFKORI25 .

*-------Includes f¨¹r syntax-check---------------------------------------
*NCLUDE RFKORI00.
*NCLUDE RFKORI80.
*NCLUDE RFKORI90.

*=======================================================================
*       Interne Perform-Routinen
*=======================================================================

*-----------------------------------------------------------------------
*       FORM AUSGABE_INTERNER_BELEG
*-----------------------------------------------------------------------
FORM AUSGABE_INTERNER_BELEG.

  PERFORM FORM_START_IB.
  IF XSTART = 'J'.
    COUNTM = COUNTM + 1.

    CLEAR RF140-SPRAS.
    RF140-SPRAS = LANGUAGE.
    IF SAVE2_LANGU NE LANGUAGE.
      SAVE2_LANGU = LANGUAGE.
      PERFORM READ_TBSLT_2.
      PERFORM READ_T050T_2.
*     SAVE_DOMNAME = 'BSTAT'.
*     PERFORM READ_DD07L_DD07T.
    ENDIF.
    CLEAR COUNT1.
    LOOP AT HBKPF.
      BKPF = HBKPF.
       *BKPF = BKPF.
      ALW_WAERS = BKPF-WAERS.
      PERFORM CURRENCY_GET_SUBSEQUENT
                  USING
                     SAVE_REPID
                     BKPF-BUDAT
                     BKPF-BUKRS
                  CHANGING
                     ALW_WAERS.
      IF ALW_WAERS NE BKPF-WAERS.
        BKPF-WAERS = ALW_WAERS.
      ENDIF.
      SAVE_BUKRS = BKPF-BUKRS.
      SAVE_BELNR = BKPF-BELNR.
      SAVE_GJAHR = BKPF-GJAHR.
      SAVE_BUDAT = BKPF-BUDAT.
      CLEAR SAVE_BLART.
      SAVE_BLART = BKPF-BLART.
      PERFORM READ_T001.
      SAVE_LAND1 = T001-LAND1.
      PERFORM READ_T003T.

      CLEAR SAVE_TXTNR.
      IF NOT BKPF-BSTAT IS INITIAL.
        CASE BKPF-BSTAT.
          WHEN 'D'.
            SAVE_TXTNR = '0011'.
          WHEN 'M'.
            SAVE_TXTNR = '0012'.
          WHEN 'S'.
            SAVE_TXTNR = '0014'.
          WHEN 'V'.
            SAVE_TXTNR = '0015'.
        ENDCASE.
        LOOP AT HT050T
          WHERE MSGID = 'RF'
          AND   TXTNR = SAVE_TXTNR.
          RF140-BEZBSTAT = HT050T-LTEXT.
          EXIT.
        ENDLOOP.
        IF SY-SUBRC NE 0.
          PERFORM READ_T050T.
          CLEAR HT050T.
          MOVE-CORRESPONDING T050T TO HT050T.
          RF140-BEZBSTAT = HT050T-LTEXT.
          COLLECT HT050T.
        ENDIF.
      ENDIF.

      CLEAR RF140-BEZCURT1.
      IF  NOT BKPF-HWAER IS INITIAL.
        CLEAR SAVE_DOMNAME.
        CLEAR SAVE_DOMVALUE.
        CLEAR SAVE_DDTEXT.
        SAVE_DOMNAME  = 'CURTP'.
        SAVE_DOMVALUE = '10'.
        PERFORM READ_DOMVALUETEXT.
        RF140-BEZCURT1 = SAVE_DDTEXT.
      ENDIF.

      CLEAR RF140-BEZCURT2.
      CLEAR RF140-TXTCURT2.
      CLEAR RF140-BEZBASW2.
      CLEAR RF140-BEZUMRD2.
      CLEAR SAVE_TXTNR.
      IF  NOT BKPF-HWAE2 IS INITIAL
      AND NOT BKPF-CURT2 IS INITIAL
      AND NOT BKPF-BASW2 IS INITIAL
      AND NOT BKPF-UMRD2 IS INITIAL.
        CLEAR SAVE_DOMNAME.
        CLEAR SAVE_DOMVALUE.
        CLEAR SAVE_DDTEXT.
        SAVE_DOMNAME  = 'CURTP'.
        SAVE_DOMVALUE = BKPF-CURT2.
        PERFORM READ_DOMVALUETEXT.
        RF140-BEZCURT2 = SAVE_DDTEXT.

        CASE BKPF-CURT2.
          WHEN SPACE.
            SAVE_TXTNR = '0205'.
          WHEN '30'.
            SAVE_TXTNR = '0206'.
          WHEN '40'.
            SAVE_TXTNR = '0207'.
          WHEN '50'.
            SAVE_TXTNR = '0208'.
          WHEN '60'.
            SAVE_TXTNR = '0209'.
        ENDCASE.
        LOOP AT HT050T
          WHERE MSGID = 'RF'
          AND   TXTNR = SAVE_TXTNR.
          RF140-TXTCURT2 = HT050T-LTEXT(12).
          EXIT.
        ENDLOOP.
        IF SY-SUBRC NE 0.
          PERFORM READ_T050T.
          CLEAR HT050T.
          MOVE-CORRESPONDING T050T TO HT050T.
          RF140-TXTCURT2 = HT050T-LTEXT(12).
          COLLECT HT050T.
        ENDIF.

        CLEAR SAVE_DOMNAME.
        CLEAR SAVE_DOMVALUE.
        CLEAR SAVE_DDTEXT.
        SAVE_DOMNAME  = 'CURSR'.
        SAVE_DOMVALUE = BKPF-BASW2.
        PERFORM READ_DOMVALUETEXT.
        RF140-BEZBASW2 = SAVE_DDTEXT.

        CLEAR SAVE_DOMNAME.
        CLEAR SAVE_DOMVALUE.
        CLEAR SAVE_DDTEXT.
        SAVE_DOMNAME  = 'CURDT'.
        SAVE_DOMVALUE = BKPF-UMRD2.
        PERFORM READ_DOMVALUETEXT.
        RF140-BEZUMRD2 = SAVE_DDTEXT.

      ENDIF.

      CLEAR RF140-BEZCURT3.
      CLEAR RF140-TXTCURT3.
      CLEAR RF140-BEZBASW3.
      CLEAR RF140-BEZUMRD3.
      CLEAR SAVE_TXTNR.
      IF  NOT BKPF-HWAE3 IS INITIAL
      AND NOT BKPF-CURT3 IS INITIAL
      AND NOT BKPF-BASW3 IS INITIAL
      AND NOT BKPF-UMRD3 IS INITIAL.
        CLEAR SAVE_DOMNAME.
        CLEAR SAVE_DOMVALUE.
        CLEAR SAVE_DDTEXT.
        SAVE_DOMNAME  = 'CURTP'.
        SAVE_DOMVALUE = BKPF-CURT3.
        PERFORM READ_DOMVALUETEXT.
        RF140-BEZCURT3 = SAVE_DDTEXT.

        CASE BKPF-CURT3.
          WHEN SPACE.
            SAVE_TXTNR = '0205'.
          WHEN '30'.
            SAVE_TXTNR = '0206'.
          WHEN '40'.
            SAVE_TXTNR = '0207'.
          WHEN '50'.
            SAVE_TXTNR = '0208'.
          WHEN '60'.
            SAVE_TXTNR = '0209'.
        ENDCASE.
        LOOP AT HT050T
          WHERE MSGID = 'RF'
          AND   TXTNR = SAVE_TXTNR.
          RF140-TXTCURT3 = HT050T-LTEXT(12).
          EXIT.
        ENDLOOP.
        IF SY-SUBRC NE 0.
          PERFORM READ_T050T.
          CLEAR HT050T.
          MOVE-CORRESPONDING T050T TO HT050T.
          RF140-TXTCURT3 = HT050T-LTEXT(12).
          COLLECT HT050T.
        ENDIF.

        CLEAR SAVE_DOMNAME.
        CLEAR SAVE_DOMVALUE.
        CLEAR SAVE_DDTEXT.
        SAVE_DOMNAME  = 'CURSR'.
        SAVE_DOMVALUE = BKPF-BASW3.
        PERFORM READ_DOMVALUETEXT.
        RF140-BEZBASW3 = SAVE_DDTEXT.

        CLEAR SAVE_DOMNAME.
        CLEAR SAVE_DOMVALUE.
        CLEAR SAVE_DDTEXT.
        SAVE_DOMNAME  = 'CURDT'.
        SAVE_DOMVALUE = BKPF-UMRD3.
        PERFORM READ_DOMVALUETEXT.
        RF140-BEZUMRD3 = SAVE_DDTEXT.

      ENDIF.

**      CALL FUNCTION 'WRITE_FORM'
**        EXPORTING
**          WINDOW = 'PAGE'
**        EXCEPTIONS
**          WINDOW = 1.
***                             UNOPENED  = 3
***                             UNSTARTET = 4.
**      IF SY-SUBRC = 1.
**        WINDOW = 'PAGE'.
**        PERFORM MESSAGE_WINDOW.
**      ENDIF.
*                  IF SY-SUBRC = 3.
*                    PERFORM MESSAGE_UNOPENED.
*                  ENDIF.
*                  IF SY-SUBRC = 4.
*                    PERFORM MESSAGE_UNSTARTED.
*                  ENDIF.
      IF COUNT1 IS INITIAL.
        CLEAR RF140-ELEMENT.
        RF140-ELEMENT = '510'.
**        CALL FUNCTION 'WRITE_FORM'
**          EXPORTING
**            WINDOW  = 'MAIN'
**            ELEMENT = '510'
**          EXCEPTIONS
**            WINDOW  = 1
**            ELEMENT = 2.
**        IF SY-SUBRC = 1.
**          WINDOW = 'MAIN'.
**          PERFORM MESSAGE_WINDOW.
**        ENDIF.
**        IF SY-SUBRC = 2.
**          WINDOW = 'MAIN'.
**          EREIGNIS = '510'.
**          PERFORM MESSAGE_ELEMENT.
**        ENDIF.
      ENDIF.
      COUNT1 = COUNT1 + 1.

      CLEAR RF140-ELEMENT.
      RF140-ELEMENT = '520'.
**      CALL FUNCTION 'WRITE_FORM'
**        EXPORTING
**          WINDOW  = 'MAIN'
**          ELEMENT = '520'
**        EXCEPTIONS
**          WINDOW  = 1
**          ELEMENT = 2.
**      IF SY-SUBRC = 1.
**        WINDOW = 'MAIN'.
**        PERFORM MESSAGE_WINDOW.
**      ENDIF.
**      IF SY-SUBRC = 2.
**        WINDOW = 'MAIN'.
**        EREIGNIS = '520'.
**        PERFORM MESSAGE_ELEMENT.
**      ENDIF.

* IF BKPF-BSTAT = 'D'.
*   CALL FUNCTION 'WRITE_FORM'
*                    EXPORTING  WINDOW    = 'MAIN'
*                               ELEMENT   = '520'
*                    EXCEPTIONS WINDOW    = 1
*                               ELEMENT   = 2.
*                    IF SY-SUBRC = 1.
*                      WINDOW = 'MAIN'.
**                     PERFORM MESSAGE_WINDOW.
*                    ENDIF.
*                    IF SY-SUBRC = 2.
*                      WINDOW = 'MAIN'.
*                      EREIGNIS = '520'.
*                      FTEXT = TEXT-520.
**                     PERFORM MESSAGE_ELEMENT.
*                    ENDIF.
* ENDIF.

      CLEAR XWITH_ITEM.
      REFRESH XWITH_ITEM.
      SELECT * FROM WITH_ITEM APPENDING TABLE XWITH_ITEM
          WHERE BUKRS = SAVE_BUKRS
          AND   BELNR = SAVE_BELNR
          AND   GJAHR = SAVE_GJAHR.


      LOOP AT HBSEG
          WHERE  BELNR = SAVE_BELNR
          AND   GJAHR = SAVE_GJAHR.
*     show all line items for preliminated, cross-company posted docs.
        IF BKPF-BSTAT NE 'V'.                              "note 308409
          CHECK HBSEG-BUKRS = SAVE_BUKRS.                  "note 308409
        ELSE.                                              "note 845133
          SAVE_BUKRS = HBSEG-BUKRS.                        "note 845133
        ENDIF.                                             "note 308409
        CLEAR BSEG.
        MOVE-CORRESPONDING HBSEG TO BSEG.
         *BSEG = BSEG.
        IF BKPF-WAERS NE *BKPF-WAERS.
          PERFORM CURR_DOCUMENT_CONVERT_BSEG
                      USING
                         BKPF-BUDAT
                         *BKPF-WAERS
                         *BKPF-HWAER
                         BKPF-WAERS
                      CHANGING
                         BSEG.
          IF NOT BSEG-PYCUR IS INITIAL.
            ALW_WAERS = BSEG-PYCUR.
            PERFORM CURRENCY_GET_SUBSEQUENT
                        USING
                           SAVE_REPID
                           BKPF-BUDAT
                           BKPF-BUKRS
                        CHANGING
                           ALW_WAERS.
            IF ALW_WAERS NE BSEG-PYCUR.
              BSEG-PYCUR = ALW_WAERS.
              PERFORM CONVERT_FOREIGN_TO_FOREIGN_CUR
                          USING
                             BKPF-BUDAT
                             *BKPF-WAERS
                             *BKPF-HWAER
                             BSEG-PYCUR
                          CHANGING
                             BSEG-PYAMT.
            ENDIF.
          ENDIF.
        ENDIF.
        IF BSEG-HKONT IS INITIAL.
          BSEG-HKONT = BSEG-SAKNR.
          HBSEG-HKONT = HBSEG-SAKNR.
          MODIFY HBSEG.
        ENDIF.
        PERFORM INIT_BELEGZEILE.

        SAVE_ANLN1 = BSEG-ANLN1.
        SAVE_ANLN2 = BSEG-ANLN2.
        SAVE_ANBWA = BSEG-ANBWA.
        SAVE_AUFNR = BSEG-AUFNR.
        SAVE_BEWAR = BSEG-BEWAR.
        SAVE_BLNKZ = BSEG-BLNKZ.
        SAVE_BSCHL = BSEG-BSCHL.
        SAVE_BUZEI = BSEG-BUZEI.
        SAVE_BWTAR = BSEG-BWTAR.
        SAVE_KOART = BSEG-KOART.
        SAVE_FDGRP = BSEG-FDGRP.
        SAVE_FDLEV = BSEG-FDLEV.
        SAVE_HBKID = BSEG-HBKID.
        SAVE_KOKRS = BSEG-KOKRS.
        SAVE_KOSTL = BSEG-KOSTL.
        SAVE_LZBKZ = BSEG-LZBKZ.
        SAVE_MABER = BSEG-MABER.
        SAVE_MANSP = BSEG-MANSP.
        SAVE_MATNR = BSEG-MATNR.
        SAVE_MSCHL = BSEG-MSCHL.
*   SAVE_MWSKZ = BSEG-MWSKZ.
*   SAVE_PRCTR = BSEG-PRCTR.
        SAVE_UMSKZ = BSEG-UMSKZ.
        SAVE_VBUND = BSEG-VBUND.
        SAVE_WERKS = BSEG-WERKS.
        SAVE_QSSKZ = BSEG-QSSKZ.
        SAVE_ZLSCH = BSEG-ZLSCH.
        SAVE_UZAWE = BSEG-UZAWE.
        SAVE_ZLSPR = BSEG-ZLSPR.
        SAVE_VNAME = BSEG-VNAME.
        SAVE_RECID = BSEG-RECID.
        SAVE_EGRUP = BSEG-EGRUP.
        SAVE_TXJCD = BSEG-TXJCD.
        SAVE_VBEWA = BSEG-VBEWA.

        IF BKPF-WAERS NE T001-WAERS.
          RF140-HWAER = T001-WAERS.
        ELSE.
          IF BSEG-WRBTR = BSEG-DMBTR.
            CLEAR BSEG-DMBTR.
          ELSE.
            RF140-HWAER = T001-WAERS.
          ENDIF.
        ENDIF.

        IF NOT BSEG-BLNBT IS INITIAL.
          RF140-HWAER2 = T001-WAERS.
        ENDIF.

        IF NOT BSEG-MWSTS IS INITIAL.
          IF BKPF-WAERS NE T001-WAERS.
            RF140-HWAER4 = T001-WAERS.
          ELSE.
            CLEAR BSEG-MWSTS.
          ENDIF.
        ENDIF.

        IF NOT BSEG-SKNTO IS INITIAL.
          IF BKPF-WAERS NE T001-WAERS.
            RF140-HWAER5 = T001-WAERS.
          ELSE.
            CLEAR BSEG-SKNTO.
          ENDIF.
        ENDIF.

        IF NOT BSEG-NEBTR IS INITIAL.
          RF140-HWAER6 = BKPF-WAERS.
        ENDIF.

        IF NOT BSEG-BDIFF IS INITIAL.
          RF140-HWAER7 = T001-WAERS.
        ENDIF.

        IF NOT BSEG-RDIFF IS INITIAL.
          RF140-HWAER8 = T001-WAERS.
        ENDIF.

        IF NOT BSEG-BDIF2 IS INITIAL.
          RF140-HWAER9  = BKPF-HWAE2.
        ENDIF.

        IF NOT BSEG-RDIF2 IS INITIAL.
          RF140-HWAER10 = BKPF-HWAE2.
        ENDIF.

        IF NOT BSEG-BDIF3 IS INITIAL.
          RF140-HWAER11 = BKPF-HWAE3.
        ENDIF.

        IF NOT BSEG-RDIF3 IS INITIAL.
          RF140-HWAER12 = BKPF-HWAE3.
        ENDIF.

        IF NOT BSEG-DMBE2 IS INITIAL.
          RF140-HWAER13 = BKPF-HWAE2.
        ENDIF.

        IF NOT BSEG-DMBE3 IS INITIAL.
          RF140-HWAER14 = BKPF-HWAE3.
        ENDIF.

        IF NOT BSEG-MWST2 IS INITIAL.
          RF140-HWAER15 = BKPF-HWAE2.
        ENDIF.

        IF NOT BSEG-MWST3 IS INITIAL.
          RF140-HWAER16 = BKPF-HWAE3.
        ENDIF.

        IF NOT BSEG-SKNT2 IS INITIAL.
          RF140-HWAER17 = BKPF-HWAE2.
        ENDIF.

        IF NOT BSEG-SKNT3 IS INITIAL.
          RF140-HWAER18 = BKPF-HWAE3.
        ENDIF.

        IF NOT BSEG-QSSHB IS INITIAL.
          RF140-WAERS = BKPF-WAERS.
        ENDIF.

        IF NOT BSEG-SKFBT IS INITIAL.
          RF140-WAERS2 = BKPF-WAERS.
        ENDIF.

        IF NOT BSEG-WSKTO IS INITIAL.
          RF140-WAERS3 = BKPF-WAERS.
        ENDIF.

        IF NOT BSEG-GBETR IS INITIAL.
          RF140-WAERS5 = BKPF-WAERS.
        ENDIF.

        IF NOT BSEG-WMWST IS INITIAL.
          RF140-WAERS6 = BKPF-WAERS.
        ENDIF.

        IF NOT BSEG-QSFBT IS INITIAL.
          RF140-WAERS7 = BKPF-WAERS.
        ENDIF.

        IF NOT BSEG-BSCHL IS INITIAL.
          LOOP AT HTBSLT
            WHERE BSCHL = SAVE_BSCHL
            AND   UMSKZ = SAVE_UMSKZ.
            MOVE-CORRESPONDING HTBSLT TO TBSLT.
            EXIT.
          ENDLOOP.
          IF SY-SUBRC NE 0.
            PERFORM READ_TBSLT.
            CLEAR HTBSLT.
            MOVE-CORRESPONDING TBSLT TO HTBSLT.
            COLLECT HTBSLT.
          ENDIF.
        ENDIF.

        IF NOT BSEG-UMSKZ IS INITIAL.
          PERFORM READ_T074T.
        ENDIF.

        CLEAR SAVE_TXTNR.
        IF NOT BSEG-SHKZG IS INITIAL.
          CASE BSEG-SHKZG.
            WHEN 'S'.
              SAVE_TXTNR = '0017'.
            WHEN 'H'.
              SAVE_TXTNR = '0018'.
          ENDCASE.
          LOOP AT HT050T
            WHERE MSGID = 'RF'
            AND   TXTNR = SAVE_TXTNR.
            RF140-BEZSHKZG = HT050T-LTEXT.
            EXIT.
          ENDLOOP.
          IF SY-SUBRC NE 0.
            PERFORM READ_T050T.
            CLEAR HT050T.
            MOVE-CORRESPONDING T050T TO HT050T.
            RF140-BEZSHKZG = HT050T-LTEXT.
            COLLECT HT050T.
          ENDIF.
        ENDIF.

        IF NOT BSEG-PARGB IS INITIAL.
          SAVE_GSBER = BSEG-PARGB.
          PERFORM READ_TGSBT.
          MOVE TGSBT TO *TGSBT.
          CLEAR TGSBT.
        ENDIF.
        IF NOT BSEG-GSBER IS INITIAL.
          SAVE_GSBER = BSEG-GSBER.
          PERFORM READ_TGSBT.
        ENDIF.

        IF  NOT BSEG-MWSKZ IS INITIAL
        AND     BSEG-MWSKZ NE '**'.
          SAVE_MWSKZ = BSEG-MWSKZ.
          PERFORM READ_T007S.
          RF140-BEZMWSKZ = T007S-TEXT1.
        ENDIF.

        IF NOT BSEG-QSSKZ IS INITIAL.
          IF T001-WT_NEWWT IS INITIAL.
            PERFORM READ_T059Q.
          ELSE.
            IF BSEG-KOART = 'K'
            OR BSEG-KOART = 'D'.
              CLEAR BSEG-QSSKZ.
              CLEAR BSEG-QSSHB.
              CLEAR BSEG-QSFBT.
            ELSE.
              PERFORM READ_T059P.
              PERFORM READ_T059U.
            ENDIF.
          ENDIF.
        ENDIF.

        IF NOT BSEG-VBUND IS INITIAL.
          PERFORM READ_T880.
        ENDIF.

        IF NOT BSEG-BEWAR IS INITIAL.
          PERFORM READ_T856T.
        ENDIF.

        IF NOT BSEG-FDGRP IS INITIAL.
          PERFORM READ_T035T.
        ENDIF.

        IF NOT BSEG-FDLEV IS INITIAL.
          PERFORM READ_T036T.
        ENDIF.

        IF NOT BSEG-KOKRS IS INITIAL.
          PERFORM READ_TKA01.
        ENDIF.

        IF NOT BSEG-KOSTL IS INITIAL.
          PERFORM READ_CSKT.
        ENDIF.

        IF NOT BSEG-AUFNR IS INITIAL.
          PERFORM READ_AUFK.
        ENDIF.

        IF NOT BSEG-ANLN1 IS INITIAL.
          PERFORM READ_ANLAGEN_TEXT.
        ENDIF.

        IF NOT BSEG-ANBWA IS INITIAL.
          PERFORM READ_TABWT.
        ENDIF.

        IF NOT BSEG-ZLSCH IS INITIAL.
          PERFORM READ_T042Z.
        ENDIF.

        IF NOT BSEG-UZAWE IS INITIAL.
          PERFORM READ_T042H.
        ENDIF.

        IF NOT BSEG-ZLSPR IS INITIAL.
          PERFORM READ_T008T.
        ENDIF.

        IF NOT BSEG-HBKID IS INITIAL.
          PERFORM READ_HAUSBANK_DATEN.
        ENDIF.

*   IF  NOT BSEG-MWSK1 IS INITIAL
*   AND     BSEG-MWSK1 NE '**'.
*     SAVE_MWSKZ = BSEG-MWSK1.
*     PERFORM READ_T007S.
*     RF140-BEZMWSK1 = T007S-TEXT1.
*   ENDIF.
*   IF  NOT BSEG-MWSK2 IS INITIAL
*   AND     BSEG-MWSK2 NE '**'.
*     SAVE_MWSKZ = BSEG-MWSK2.
*     PERFORM READ_T007S.
*     RF140-BEZMWSK2 = T007S-TEXT1.
*   ENDIF.
*   IF  NOT BSEG-MWSK3 IS INITIAL
*   AND     BSEG-MWSK2 NE '**'.
*     SAVE_MWSK3 = BSEG-MWSKZ.
*     PERFORM READ_T007S.
*     RF140-BEZMWSK3 = T007S-TEXT1.
*   ENDIF.

        IF NOT BSEG-LZBKZ IS INITIAL.
          PERFORM READ_T015L.
        ENDIF.

        IF NOT BSEG-BLNKZ IS INITIAL.
          PERFORM READ_T057T.
        ENDIF.

        IF NOT BSEG-MANSP IS INITIAL.
          PERFORM READ_T040T.
        ENDIF.

        IF NOT BSEG-MSCHL IS INITIAL.
          PERFORM READ_T040A.
        ENDIF.

        IF NOT BSEG-MABER IS INITIAL.
          PERFORM READ_T047N.
        ENDIF.

        IF NOT BSEG-MATNR IS INITIAL.
          PERFORM READ_MAKT.
        ENDIF.

        IF NOT BSEG-WERKS IS INITIAL.
          PERFORM READ_T001W.
        ENDIF.

        SAVE_PRCTR = BSEG-PPRCT.
        IF NOT BSEG-PPRCT IS INITIAL.
          PERFORM READ_CEPCT.
           *CEPCT = CEPCT.
          CLEAR CEPCT.
        ENDIF.
        SAVE_PRCTR = BSEG-PRCTR.
        IF NOT BSEG-PRCTR IS INITIAL.
          PERFORM READ_CEPCT.
        ENDIF.

        IF NOT BSEG-BWTAR IS INITIAL.
          PERFORM READ_T156T.
        ENDIF.

        IF NOT BSEG-VNAME IS INITIAL.
          PERFORM READ_T8JVT.
        ENDIF.

        IF NOT BSEG-RECID IS INITIAL.
          PERFORM READ_T8JJT.
        ENDIF.

        IF NOT BSEG-EGRUP IS INITIAL.
          IF NOT BSEG-VNAME IS INITIAL.
            PERFORM READ_T8JFT.
          ELSE.
            CLEAR FIMSG.
            FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
            FIMSG-MSGTY = 'I'.
            FIMSG-MSGNO = '291'.
            FIMSG-MSGV1 = BSEG-BUKRS.
            FIMSG-MSGV2 = BSEG-BELNR.
            FIMSG-MSGV3 = BSEG-GJAHR.
            FIMSG-MSGV4 = BSEG-BUZEI.
            PERFORM MESSAGE_APPEND.
          ENDIF.
        ENDIF.

        IF NOT BSEG-VPTNR IS INITIAL.
          IF BSEG-KOART NE 'D'.
            SAVE_KUNNR = BSEG-VPTNR.
            PERFORM PRUEFEN_HKNA1.
            IF XVORH IS INITIAL.
              PERFORM READ_KNA1.
            ENDIF.

            MOVE-CORRESPONDING KNA1 TO ADRS.
            MOVE T001-LAND1 TO ADRS-INLND.
            MOVE SAVE_ANZZL TO ADRS-ANZZL.
            CALL FUNCTION 'ADDRESS_INTO_PRINTFORM'
              EXPORTING
                ADRSWA_IN  = ADRS
              IMPORTING
                ADRSWA_OUT = ADRS.
          ELSE.
            CLEAR FIMSG.
            FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
            FIMSG-MSGTY = 'I'.
            FIMSG-MSGNO = '292'.
            FIMSG-MSGV1 = BSEG-BUKRS.
            FIMSG-MSGV2 = BSEG-BELNR.
            FIMSG-MSGV3 = BSEG-GJAHR.
            FIMSG-MSGV4 = BSEG-BUZEI.
            PERFORM MESSAGE_APPEND.
          ENDIF.
        ENDIF.

        IF NOT BSEG-TXJCD IS INITIAL.
          PERFORM READ_TTXJT.
        ENDIF.

        IF NOT BSEG-VBEWA IS INITIAL.
          PERFORM READ_TZB0T.
        ENDIF.

        CLEAR RF140-PS_PSP_PNR.
        IF NOT BSEG-PROJK IS INITIAL.
          CALL FUNCTION 'CONVERSION_EXIT_KONPR_OUTPUT'
            EXPORTING
              INPUT  = BSEG-PROJK
            IMPORTING
              OUTPUT = RF140-PS_PSP_PNR.
        ENDIF.

        IF BKPF-BSTAT EQ 'V'.
          LOOP AT HVBSEG
            WHERE BUKRS = BSEG-BUKRS
            AND   BELNR = BSEG-BELNR
            AND   GJAHR = BSEG-GJAHR
            AND   BUZEI = BSEG-BUZEI.
            COBL-VORNR = HVBSEG-VORNR.
          ENDLOOP.
        ELSE.
          IF NOT  BSEG-AUFPL IS INITIAL
          AND NOT BSEG-APLZL IS INITIAL.
            CALL FUNCTION 'CO_SF_AFVG_CHECK_WITH_KEY'
              EXPORTING
                APLZL = BSEG-APLZL
                AUFPL = BSEG-AUFPL
              IMPORTING
                VORNR = COBL-VORNR.
          ENDIF.
        ENDIF.

        CLEAR SAVE_TXTNR.
        IF NOT BSEG-XAUTO IS INITIAL.
          SAVE_TXTNR = '0201'.

          LOOP AT HT050T
            WHERE MSGID = 'RF'
            AND   TXTNR = SAVE_TXTNR.
            RF140-BEZXAUTO = HT050T-LTEXT.
            EXIT.
          ENDLOOP.
          IF SY-SUBRC NE 0.
            PERFORM READ_T050T.
            CLEAR HT050T.
            MOVE-CORRESPONDING T050T TO HT050T.
            RF140-BEZXAUTO = HT050T-LTEXT.
            COLLECT HT050T.
          ENDIF.
        ENDIF.

        IF  NOT BSEG-SAKNR IS INITIAL.
*   AND BSEG-SAKNR NE BSEG-SAKNR.
          SAVE_SAKNR = BSEG-SAKNR.
          PERFORM READ_SKAT.
          MOVE-CORRESPONDING SKAT TO *SKAT.
          CLEAR SKAT.
        ENDIF.
        IF NOT BSEG-HKONT IS INITIAL.
          SAVE_SAKNR = BSEG-HKONT.
          PERFORM READ_SKAT.
        ENDIF.

        CLEAR SAVE_TXTNR.
        CASE BSEG-KOART.
          WHEN 'D'.
            IF NOT BSEG-FILKD IS INITIAL.
              SAVE_KUNNR = BSEG-FILKD.
              PERFORM PRUEFEN_HKNA1.
              MOVE-CORRESPONDING KNA1 TO *KNA1.
              CLEAR KNA1.

              MOVE-CORRESPONDING *KNA1 TO *ADRS.
              MOVE T001-LAND1 TO *ADRS-INLND.
              MOVE SAVE_ANZZL TO *ADRS-ANZZL.
              CALL FUNCTION 'ADDRESS_INTO_PRINTFORM'
                EXPORTING
                  ADRSWA_IN  = *ADRS
                IMPORTING
                  ADRSWA_OUT = *ADRS.
              MOVE-CORRESPONDING *ADRS TO ADDR.
              CLEAR *ADRS.
            ENDIF.
            SAVE_KUNNR = BSEG-KUNNR.
            PERFORM PRUEFEN_HKNA1.

            MOVE-CORRESPONDING KNA1 TO ADRS.
            MOVE T001-LAND1 TO ADRS-INLND.
            MOVE SAVE_ANZZL TO ADRS-ANZZL.
            CALL FUNCTION 'ADDRESS_INTO_PRINTFORM'
              EXPORTING
                ADRSWA_IN  = ADRS
              IMPORTING
                ADRSWA_OUT = ADRS.

            SAVE_TXTNR = '0001'.

            EREIGNIS = '530'.

            IF NOT BSEG-BVTYP IS INITIAL.
              IF KNA1-XCPDK IS INITIAL.
                SAVE_BVTYP = BSEG-BVTYP.
                PERFORM READ_PARTNERBANK.
                RF140-BANKS = *BNKA-BANKS.
                RF140-BANKL = *BNKA-BANKL.
                RF140-ERDAT = *BNKA-ERDAT.
                RF140-ERNAM = *BNKA-ERNAM.
                RF140-BANKA = *BNKA-BANKA.
                RF140-PROVZ = *BNKA-PROVZ.
                RF140-STRAS = *BNKA-STRAS.
                RF140-ORT01 = *BNKA-ORT01.
                RF140-SWIFT = *BNKA-SWIFT.
                RF140-BGRUP = *BNKA-BGRUP.
                RF140-XPGRO = *BNKA-XPGRO.
                RF140-LOEVM = *BNKA-LOEVM.
                RF140-BNKLZ = *BNKA-BNKLZ.
                CLEAR *BNKA.
              ELSE.
                CLEAR FIMSG.
                FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
                FIMSG-MSGTY = 'I'.
                FIMSG-MSGNO = '293'.
                FIMSG-MSGV1 = BSEG-BUKRS.
                FIMSG-MSGV2 = BSEG-BELNR.
                FIMSG-MSGV3 = BSEG-GJAHR.
                FIMSG-MSGV4 = BSEG-BUZEI.
                PERFORM MESSAGE_APPEND.
              ENDIF.
            ENDIF.
          WHEN 'K'.
            IF NOT BSEG-FILKD IS INITIAL.
              SAVE_LIFNR = BSEG-FILKD.
              PERFORM PRUEFEN_HLFA1.
              MOVE-CORRESPONDING LFA1 TO *LFA1.
              CLEAR LFA1.

              MOVE-CORRESPONDING *LFA1 TO *ADRS.
              MOVE T001-LAND1 TO *ADRS-INLND.
              MOVE SAVE_ANZZL TO *ADRS-ANZZL.
              CALL FUNCTION 'ADDRESS_INTO_PRINTFORM'
                EXPORTING
                  ADRSWA_IN  = *ADRS
                IMPORTING
                  ADRSWA_OUT = *ADRS.
              MOVE-CORRESPONDING *ADRS TO ADDR.
              CLEAR *ADRS.
            ENDIF.
            SAVE_LIFNR = BSEG-LIFNR.
            PERFORM PRUEFEN_HLFA1.

            MOVE-CORRESPONDING LFA1 TO ADRS.
            MOVE T001-LAND1 TO ADRS-INLND.
            MOVE SAVE_ANZZL TO ADRS-ANZZL.
            CALL FUNCTION 'ADDRESS_INTO_PRINTFORM'
              EXPORTING
                ADRSWA_IN  = ADRS
              IMPORTING
                ADRSWA_OUT = ADRS.

            SAVE_TXTNR = '0002'.

            EREIGNIS = '540'.

            IF NOT BSEG-BVTYP IS INITIAL.
              IF LFA1-XCPDK IS INITIAL.
                SAVE_BVTYP = BSEG-BVTYP.
                PERFORM READ_PARTNERBANK.
                RF140-BANKS = *BNKA-BANKS.
                RF140-BANKL = *BNKA-BANKL.
                RF140-ERDAT = *BNKA-ERDAT.
                RF140-ERNAM = *BNKA-ERNAM.
                RF140-BANKA = *BNKA-BANKA.
                RF140-PROVZ = *BNKA-PROVZ.
                RF140-STRAS = *BNKA-STRAS.
                RF140-ORT01 = *BNKA-ORT01.
                RF140-SWIFT = *BNKA-SWIFT.
                RF140-BGRUP = *BNKA-BGRUP.
                RF140-XPGRO = *BNKA-XPGRO.
                RF140-LOEVM = *BNKA-LOEVM.
                RF140-BNKLZ = *BNKA-BNKLZ.
                CLEAR *BNKA.
              ELSE.
                CLEAR FIMSG.
                FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'.
                FIMSG-MSGTY = 'I'.
                FIMSG-MSGNO = '293'.
                FIMSG-MSGV1 = BSEG-BUKRS.
                FIMSG-MSGV2 = BSEG-BELNR.
                FIMSG-MSGV3 = BSEG-GJAHR.
                FIMSG-MSGV4 = BSEG-BUZEI.
                PERFORM MESSAGE_APPEND.
              ENDIF.
            ENDIF.
          WHEN 'S'.
            SAVE_TXTNR = '0006'.

            EREIGNIS = '550'.
          WHEN 'A'.
            SAVE_TXTNR = '0004'.

            EREIGNIS = '560'.
          WHEN 'M'.
            SAVE_TXTNR = '0005'.

            EREIGNIS = '570'.
          WHEN 'B'.
            CLEAR SAVE_TXTNR.

            EREIGNIS = '575'.
          WHEN OTHERS.

        ENDCASE.

        IF NOT SAVE_TXTNR IS INITIAL.
          LOOP AT HT050T
            WHERE MSGID = 'RF'
            AND   TXTNR = SAVE_TXTNR.
            RF140-BEZKOART = HT050T-LTEXT.
            EXIT.
          ENDLOOP.
          IF SY-SUBRC NE 0.
            PERFORM READ_T050T.
            CLEAR HT050T.
            MOVE-CORRESPONDING T050T TO HT050T.
            RF140-BEZKOART = HT050T-LTEXT.
            COLLECT HT050T.
          ENDIF.
        ENDIF.

        CLEAR SAVE_TXTNR.
        CASE BSEG-KOART.
          WHEN 'D'.
            SAVE_TXTNR = '0101'.
          WHEN 'K'.
            SAVE_TXTNR = '0102'.
          WHEN 'S'.
            SAVE_TXTNR = '0103'.
          WHEN 'A'.
            SAVE_TXTNR = '0104'.
          WHEN 'M'.
            SAVE_TXTNR = '0105'.
          WHEN 'B'.
            CLEAR SAVE_TXTNR.
          WHEN OTHERS.
        ENDCASE.

        IF NOT SAVE_TXTNR IS INITIAL.
          LOOP AT HT050T
            WHERE MSGID = 'RF'
            AND   TXTNR = SAVE_TXTNR.
            RF140-BEZBLPOS = HT050T-LTEXT.
            EXIT.
          ENDLOOP.
          IF SY-SUBRC NE 0.
            PERFORM READ_T050T.
            CLEAR HT050T.
            MOVE-CORRESPONDING T050T TO HT050T.
            RF140-BEZBLPOS = HT050T-LTEXT.
            COLLECT HT050T.
          ENDIF.
        ENDIF.

        IF BSEG-UMSKS = 'W'.
          RF140-ZFBDW = BSEG-ZFBDT.
          CLEAR BSEG-ZFBDT.

          CLEAR SY-SUBRC.
          PERFORM READ_BSED.
          IF SAVE_SUBRC = 0.

            IF NOT BSED-WINFW IS INITIAL.
              RF140-WAERS4 = BKPF-WAERS.
            ENDIF.

            IF BKPF-WAERS NE T001-WAERS.
              RF140-HWAER3 = T001-WAERS.
            ELSE.
              CLEAR BSED-WINHW.
            ENDIF.

            IF NOT BSED-WEVWV IS INITIAL.
              SAVE_WEVWV = BSED-WEVWV.
              PERFORM READ_WECHSELVERWENDUNG_TEXT.
            ENDIF.

            IF NOT BSED-WGBKZ IS INITIAL.
              CLEAR SAVE_DOMNAME.
              CLEAR SAVE_DOMVALUE.
              CLEAR SAVE_DDTEXT.
              SAVE_DOMNAME  = 'WGBKZ'.
              SAVE_DOMVALUE = BSED-WGBKZ.
              PERFORM READ_DOMVALUETEXT.
              RF140-BEZWGBKZ = SAVE_DDTEXT.
            ENDIF.

            IF NOT BSED-WSTAT IS INITIAL.
              SAVE_WSTAT = BSED-WSTAT.
              PERFORM READ_T031T.
            ENDIF.

            IF  NOT BSED-WMWKZ IS INITIAL
            AND     BSED-WMWKZ NE '**'.
              SAVE_MWSKZ = BSED-WMWKZ.
              PERFORM READ_T007S.
              RF140-BEZWMWKZ = T007S-TEXT1.
            ENDIF.

            IF  NOT BSED-WSTKZ IS INITIAL.
              SAVE_WSTKZ = BSED-WSTKZ.
              PERFORM READ_T046T.
            ENDIF.

            IF BSED-WLZBP(1) = '>'.
              RF140-BANKS2  = BSED-WLZBP+1(3).
              RF140-BANKL2  = BSED-WLZBP+5(15).
              RF140-BANKN2  = BSED-WLZBP+21(18).
              RF140-BKONT2  = BSED-WLZBP+40(2).

              CLEAR SAVE_BANKL.
              CLEAR SAVE_BANKN.
              CLEAR SAVE_BANKS.
              SAVE_BANKL = RF140-BANKL2.
              SAVE_BANKN = RF140-BANKN2.
              SAVE_BANKS = RF140-BANKS2.
              PERFORM READ_BNKA_2.
*         RF140-BANKS2 = *BNKA-BANKS.
*         RF140-BANKL2 = *BNKA-BANKL.
              RF140-ERDAT2 = *BNKA-ERDAT.
              RF140-ERNAM2 = *BNKA-ERNAM.
              RF140-BANKA2 = *BNKA-BANKA.
              RF140-PROVZ2 = *BNKA-PROVZ.
              RF140-STRAS2 = *BNKA-STRAS.
              RF140-ORT012 = *BNKA-ORT01.
              RF140-SWIFT2 = *BNKA-SWIFT.
              RF140-BGRUP2 = *BNKA-BGRUP.
              RF140-XPGRO2 = *BNKA-XPGRO.
              RF140-LOEVM2 = *BNKA-LOEVM.
              RF140-BNKLZ2 = *BNKA-BNKLZ.
              CLEAR *BNKA.
              CLEAR BSED-WLZBP.
              CLEAR BSED-WBANK.
            ENDIF.
          ENDIF.
        ENDIF.

        IF NOT BSEG-XCPDD IS INITIAL.
          IF BKPF-BSTAT = 'V'.
            PERFORM READ_VBSEC.
          ELSE.
            PERFORM READ_BSEC.
          ENDIF.

          MOVE-CORRESPONDING BSEC TO *ADRS.
          MOVE T001-LAND1 TO *ADRS-INLND.
          MOVE SAVE_ANZZL TO *ADRS-ANZZL.
          CALL FUNCTION 'ADDRESS_INTO_PRINTFORM'
            EXPORTING
              ADRSWA_IN  = *ADRS
            IMPORTING
              ADRSWA_OUT = *ADRS.

          IF  BSEC-BANKL IS INITIAL
          AND BSEC-BANKN IS INITIAL
          AND BSEC-BANKS IS INITIAL.
          ELSE.
            CLEAR SAVE_BANKL.
            CLEAR SAVE_BANKN.
            CLEAR SAVE_BANKS.
            SAVE_BANKL = BSEC-BANKL.
            SAVE_BANKN = BSEC-BANKN.
            SAVE_BANKS = BSEC-BANKS.
            PERFORM READ_BNKA_2.
          ENDIF.

          CLEAR SAVE_TXTNR.
          IF NOT BSEC-XCPDK IS INITIAL.
            CASE BSEG-KOART.
              WHEN 'D'.
                SAVE_TXTNR = '0202'.
              WHEN 'K'.
                SAVE_TXTNR = '0203'.
            ENDCASE.
          ELSE.
            SAVE_TXTNR = '0204'.

            RF140-REGUL = 'X'.
          ENDIF.
          LOOP AT HT050T
            WHERE MSGID = 'RF'
            AND   TXTNR = SAVE_TXTNR.
            RF140-BEZXCPDD = HT050T-LTEXT.
            EXIT.
          ENDLOOP.
          IF SY-SUBRC NE 0.
            PERFORM READ_T050T.
            CLEAR HT050T.
            MOVE-CORRESPONDING T050T TO HT050T.
            RF140-BEZXCPDD = HT050T-LTEXT.
            COLLECT HT050T.
          ENDIF.
        ENDIF.

        IF BSEG-UMSKS = 'A'.
          RF140-ZFBDA = BSEG-ZFBDT.
          CLEAR BSEG-ZFBDT.
        ENDIF.

         *RF140 = RF140.
        IF BKPF-WAERS NE *BKPF-WAERS.
          IF NOT RF140-WAERS IS INITIAL.
             *RF140-WAERS = *BKPF-WAERS.
          ENDIF.
          IF NOT RF140-WAERS2 IS INITIAL.
             *RF140-WAERS2 = *BKPF-WAERS.
          ENDIF.
          IF NOT RF140-WAERS3 IS INITIAL.
             *RF140-WAERS3 = *BKPF-WAERS.
          ENDIF.
          IF NOT RF140-WAERS4 IS INITIAL.
             *RF140-WAERS4 = *BKPF-WAERS.
          ENDIF.
          IF NOT RF140-WAERS5 IS INITIAL.
             *RF140-WAERS5 = *BKPF-WAERS.
          ENDIF.
          IF NOT RF140-WAERS6 IS INITIAL.
             *RF140-WAERS6 = *BKPF-WAERS.
          ENDIF.
          IF NOT RF140-WAERS7 IS INITIAL.
             *RF140-WAERS7 = *BKPF-WAERS.
          ENDIF.
          IF NOT RF140-HWAER6 IS INITIAL.
             *RF140-HWAER6 = *BKPF-WAERS.
          ENDIF.
        ENDIF.

        CLEAR RF140-ELEMENT.
        RF140-ELEMENT = EREIGNIS.
**        CALL FUNCTION 'WRITE_FORM'
**          EXPORTING
**            WINDOW  = 'MAIN'
**            ELEMENT = EREIGNIS
**          EXCEPTIONS
**            WINDOW  = 1
**            ELEMENT = 2.
***                               UNOPENED  = 3
***                               UNSTARTED = 4.
**        IF SY-SUBRC = 1.
**          WINDOW = 'MAIN'.
**          PERFORM MESSAGE_WINDOW.
**        ENDIF.
**        IF SY-SUBRC = 2.
**          WINDOW = 'MAIN'.
**          PERFORM MESSAGE_ELEMENT.
**        ENDIF.
*                    IF SY-SUBRC = 3.
*                      PERFORM MESSAGE_UNOPENED.
*                    ENDIF.
*                    IF SY-SUBRC = 4.
*                      PERFORM MESSAGE_UNSTARTED.
*                    ENDIF.

* ------ Loop ¨¹ber with_item ------------------------------
        DATA: SAVE_QSSKZ2 LIKE SAVE_QSSKZ.

        IF NOT T001-WT_NEWWT IS INITIAL.
          IF BSEG-KOART = 'K'
          OR BSEG-KOART = 'D'.
            SAVE_QSSKZ2 = SAVE_QSSKZ.

            LOOP AT XWITH_ITEM
                 WHERE BUZEI = SAVE_BUZEI.
              CLEAR SAVE_QSSKZ.
              CLEAR RF140-WAERS8.
              CLEAR: T059U, T059P, T059Z, T059ZT.
              CLEAR: SAVE_TXTNR, RF140-BEZSHKZG.
              CLEAR WITH_ITEM.

              MOVE-CORRESPONDING XWITH_ITEM TO WITH_ITEM.
               *WITH_ITEM = WITH_ITEM.
              IF BKPF-WAERS NE *BKPF-WAERS.
                PERFORM CURR_DOCUMENT_CONVERT_WITH_I
                            USING
                               BKPF-BUDAT
                               *BKPF-WAERS
                               *BKPF-HWAER
                               BKPF-WAERS
                            CHANGING
                               WITH_ITEM.
              ENDIF.

              IF BKPF-WAERS NE T001-WAERS.
                RF140-WAERS8 = T001-WAERS.
              ELSE.
                CLEAR: WITH_ITEM-WT_QSSHH,
                       WITH_ITEM-WT_QBSHH.
              ENDIF.

              IF WITH_ITEM-WT_QSSHB > 0.
                SAVE_TXTNR = '0017'.
              ELSEIF WITH_ITEM-WT_QSSHB < 0.
                SAVE_TXTNR = '0018'.
              ELSE.
              ENDIF.
              IF NOT SAVE_TXTNR IS INITIAL.
                LOOP AT HT050T
                  WHERE MSGID = 'RF'
                  AND   TXTNR = SAVE_TXTNR.
                  RF140-BEZSHKZG = HT050T-LTEXT.
                  EXIT.
                ENDLOOP.
                IF SY-SUBRC NE 0.
                  PERFORM READ_T050T.
                  CLEAR HT050T.
                  MOVE-CORRESPONDING T050T TO HT050T.
                  RF140-BEZSHKZG = HT050T-LTEXT.
                  COLLECT HT050T.
                ENDIF.
              ENDIF.

              SAVE_QSSKZ = WITH_ITEM-WITHT.
              PERFORM READ_T059P.
              PERFORM READ_T059U.
              IF NOT WITH_ITEM-WT_WITHCD IS INITIAL.
                PERFORM READ_T059Z.
                PERFORM READ_T059ZT.
              ENDIF.
              CLEAR RF140-ELEMENT.
              RF140-ELEMENT = '576'.
              IF NOT T059Z-WT_WITHCD IS INITIAL.
**                CALL FUNCTION 'WRITE_FORM'
**                  EXPORTING
**                    ELEMENT = '576'
**                    WINDOW  = 'MAIN'
**                  EXCEPTIONS
**                    WINDOW  = 1
**                    ELEMENT = 2.
**                IF SY-SUBRC = 1.
**                  WINDOW = 'MAIN'.
**                  PERFORM MESSAGE_WINDOW.
**                ENDIF.
**                IF SY-SUBRC = 2.
**                  WINDOW = 'MAIN'.
**                  EREIGNIS = '576'.
**                  PERFORM MESSAGE_ELEMENT.
**                ENDIF.
              ENDIF.
            ENDLOOP.

            SAVE_QSSKZ = SAVE_QSSKZ2.
            CLEAR SAVE_QSSKZ2.
          ENDIF.
        ENDIF.

      ENDLOOP.
    ENDLOOP.
    CLEAR RF140-ELEMENT.
    RF140-ELEMENT = '580'.
    CLEAR RF140-ELEMENT.
    RF140-ELEMENT = '580'.
**    CALL FUNCTION 'WRITE_FORM'
**      EXPORTING
**        WINDOW  = 'MAIN'
**        ELEMENT = '580'
**      EXCEPTIONS
**        WINDOW  = 1
**        ELEMENT = 2.
**    IF SY-SUBRC = 1.
**      WINDOW = 'MAIN'.
**      PERFORM MESSAGE_WINDOW.
**    ENDIF.
**    IF SY-SUBRC = 2.
**      WINDOW = 'MAIN'.
**      EREIGNIS = '580'.
**      PERFORM MESSAGE_ELEMENT.
**    ENDIF.

    PERFORM FORM_END_2.
    XPRINT = 'X'.
  ENDIF.
ENDFORM.                    "AUSGABE_INTERNER_BELEG
