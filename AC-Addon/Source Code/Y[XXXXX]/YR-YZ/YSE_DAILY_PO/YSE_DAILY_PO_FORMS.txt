*&---------------------------------------------------------------------*
*&  Report  YSE_DAILY_PO_FORMS                                         *
*&---------------------------------------------------------------------*
* PROGRAM ID           : YSE_DAILY_PO_FORMS                            *
* PROGRAM TITLE        : ALV Report on a daily basis                   *
* AUTHOR               : VISHNUPRIYA.N                                 *
* DATE                 : 12/10/2015                                    *
* DEVELOPMENT ID       : CR3737                                        *
* CHANGE REQUEST NUMBER:  CD1K988401                                   *
* PROGRAM DESCRIPTION  : Display ALV Report on a daily basis           *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME                 |CORRECTION NR| CHANGE REF *
*----------------------------------------------------------------------*
*MOD-001  |21.03.2016| Vishnupriya.N        |  CD1K988618 | CR3896     *
*  Adding email functionality with attachment NETPR additional fild in *
*  layout and Email attachment                                         *
*----------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text                                                           *
*----------------------------------------------------------------------*
FORM get_data .
*  fetch data from ekko and ekpo
  SELECT ekko~ebeln   " Purchasing Document Number
         ekpo~ebelp   " Item Number of Purchasing Document
         ekko~aedat   " Purchasing Document Item Change Date
         ekko~lifnr   " Vendor Account Number
         ekko~ekorg   " Purchasing Organization  "+MOD-001
         ekpo~txz01   " Short Text
         ekpo~matnr   " Material Number
         ekpo~werks   " Plant      "+MOD-001
         ekpo~INFNR   " Number of Purchasing Info Record  "+MOD-001
         ekpo~menge   " Purchase Order Quantity
    FROM ekko         " Purchasing Document Header
    INNER JOIN ekpo   " Purchasing Document Item
    ON ekko~ebeln  = ekpo~ebeln
    INTO TABLE gt_ekko_ekpo
    WHERE lifnr IN s_lifnr
    AND ekorg IN s_ekorg.

*    fetch data from ekes
  IF NOT gt_ekko_ekpo[] IS  INITIAL.
* Begin of insertion by MOD-001
  SELECT INFNR   "Number of Purchasing Info Record
         EKORG   "Purchasing Organization
         WERKS   "Plant
         EBELN   "Purchasing Document Number
         EBELP   "Item Number of Purchasing Document
         NETPR FROM EINE
               INTO TABLE gt_eine
               FOR ALL ENTRIES IN gt_ekko_ekpo
               WHERE infnr = gt_ekko_ekpo-infnr
               AND   ekorg = gt_ekko_ekpo-ekorg
               AND   werks = gt_ekko_ekpo-werks.
* End of insertion by MOD-001

    SELECT  ebeln     " Purchasing Document Number
            ebelp     " Item Number of Purchasing Document
            etens     " Sequential Number of Vendor Confirmation
            ebtyp     " Confirmation Category
            erdat     " Creation Date of Confirmation
            xblnr     " Reference Document Number (for Dependencies see Long Text)
            FROM ekes
            INTO TABLE gt_ekes
            FOR ALL ENTRIES IN gt_ekko_ekpo
            WHERE ebeln = gt_ekko_ekpo-ebeln
            AND   ebelp = gt_ekko_ekpo-ebelp
            AND   ebtyp = gc_la
            AND   erdat IN s_erdat.

   SELECT ebeln     " Purchasing Document Number
          ebelp     " Item Number of Purchasing Document
          bewtp     " Purchase order History Category  "+MOD-001
          budat     " Posting Date in the Doc.
          FROM ekbe
          INTO TABLE gt_ekbe
          FOR ALL ENTRIES IN gt_ekko_ekpo
          WHERE ebeln = gt_ekko_ekpo-ebeln
          AND   ebelp = gt_ekko_ekpo-ebelp
          AND   bewtp = gc_e.

    SELECT vbelv      " Preceding sales and distribution document
           posnv      " Preceding item of an SD document
           vbeln      " Subsequent sales and distribution document
           posnn      " Subsequent item of an SD document
          vbtyp_n     " Document category of subsequent document
          FROM vbfa
          INTO TABLE gt_vbfa
          FOR ALL ENTRIES IN gt_ekko_ekpo
          WHERE vbeln = gt_ekko_ekpo-ebeln.

    IF NOT gt_vbfa[] IS INITIAL.
      SELECT vbeln      " Sales and Distribution Document Number
             bstkd      " Customer purchase order number
        FROM vbkd       " Sales Document: Business Data
        INTO TABLE gt_vbkd
         FOR ALL ENTRIES IN gt_vbfa
        WHERE vbeln = gt_vbfa-vbelv
         AND  posnr = gt_vbfa-posnv.
    ENDIF.

    SELECT lifnr      " Account Number of Vendor or Creditor
           name1      " Name
           FROM lfa1
           INTO TABLE gt_lfa1
           FOR ALL ENTRIES IN gt_ekko_ekpo
           WHERE lifnr = gt_ekko_ekpo-lifnr.

  ENDIF.

  SORT gt_ekes BY ebeln
                  ebelp ASCENDING.
  SORT gt_ekbe BY ebeln
                  ebelp
                  bewtp ASCENDING. "+MOD-001
  SORT gt_vbfa BY vbeln ASCENDING.
  SORT gt_vbkd BY vbeln ASCENDING.
  SORT gt_lfa1 BY lifnr ASCENDING.
*  Begin of insertion by MOD-001
  SORT gt_eine by infnr
                  ekorg
                  werks ASCENDING.
*  End of insertion by MOD-001

  LOOP AT  gt_ekko_ekpo INTO wa_ekko_ekpo.
    wa_final-lifnr = wa_ekko_ekpo-lifnr.
    wa_final-ebeln = wa_ekko_ekpo-ebeln.
    wa_final-ebelp = wa_ekko_ekpo-ebelp.
    wa_final-aedat = wa_ekko_ekpo-aedat.
    wa_final-matnr = wa_ekko_ekpo-matnr.
    wa_final-txz01 = wa_ekko_ekpo-txz01.
    wa_final-menge = wa_ekko_ekpo-menge.
* Begin of insertion by MOD-001
    READ TABLE gt_eine INTO wa_eine
                        WITH KEY infnr = wa_ekko_ekpo-infnr
                                 EKORG = wa_ekko_ekpo-ekorg
                                 WERKS = wa_ekko_ekpo-werks
                        BINARY SEARCH.
    IF sy-subrc = 0.
      wa_final-netpr = wa_eine-netpr.
    ENDIF.
* End of insertion by MOD-001

    READ TABLE gt_lfa1 INTO wa_lfa1
                       WITH KEY lifnr = wa_ekko_ekpo-lifnr
                       BINARY SEARCH.
    IF sy-subrc = 0.
      wa_final-name1 = wa_lfa1-name1.
    ENDIF.

     READ TABLE gt_ekbe INTO wa_ekbe
                       WITH  KEY ebeln = wa_ekko_ekpo-ebeln
                                 ebelp = wa_ekko_ekpo-ebelp
                                 bewtp = gc_e    "+MOD-001
                       BINARY SEARCH.
    IF sy-subrc EQ 0.
      wa_final-budat = wa_ekbe-budat.
    ENDIF.

    READ TABLE gt_ekes INTO wa_ekes
                       WITH  KEY ebeln = wa_ekko_ekpo-ebeln
                                 ebelp = wa_ekko_ekpo-ebelp
                       BINARY SEARCH.
    IF sy-subrc EQ 0.
      wa_final-xblnr = wa_ekes-xblnr.
      wa_final-erdat = wa_ekes-erdat.


      READ TABLE gt_vbfa INTO wa_vbfa
                         WITH  KEY vbeln = wa_ekko_ekpo-ebeln
                         BINARY SEARCH.
      IF sy-subrc EQ 0.
        READ TABLE gt_vbkd INTO wa_vbkd
                           WITH KEY vbeln = wa_vbfa-vbelv
                           BINARY SEARCH.
        IF sy-subrc EQ 0.
          wa_final-bstkd = wa_vbkd-bstkd.
        ENDIF.
      ENDIF.
      APPEND wa_final TO gt_final.
    ENDIF.
    CLEAR: wa_final,
           wa_ekko_ekpo,
           wa_ekes,
           wa_ekbe,
           wa_vbfa,
           wa_vbkd,
           wa_lfa1.
  ENDLOOP.

ENDFORM.                    " GET_DATA
*&---------------------------------------------------------------------*
*&      Form  BUILD_FIELDCATELOG
*&---------------------------------------------------------------------*
FORM build_fieldcatelog.

  CLEAR wa_fieldcat.
  wa_fieldcat-col_pos  = 1.
  wa_fieldcat-fieldname = 'LIFNR'.
  wa_fieldcat-tabname = 'GT_FINAL'.
  wa_fieldcat-seltext_m = text-001.
  APPEND wa_fieldcat TO it_fieldcatelog.

  CLEAR wa_fieldcat.
  wa_fieldcat-col_pos  = 2.
  wa_fieldcat-fieldname = 'NAME1'.
  wa_fieldcat-tabname = 'GT_FINAL'.
  wa_fieldcat-seltext_m = text-012.
  APPEND wa_fieldcat TO it_fieldcatelog.

  CLEAR wa_fieldcat.
  wa_fieldcat-col_pos  = 3.
  wa_fieldcat-fieldname = 'EBELN'.
  wa_fieldcat-tabname = 'GT_FINAL'.
  wa_fieldcat-seltext_m = text-002.
  APPEND wa_fieldcat TO it_fieldcatelog.

  wa_fieldcat-col_pos  = 4.
  wa_fieldcat-fieldname = 'EBELP'.
  wa_fieldcat-tabname = 'GT_FINAL'.
  wa_fieldcat-seltext_m = text-011.
  APPEND wa_fieldcat TO it_fieldcatelog.

  CLEAR wa_fieldcat.
  wa_fieldcat-col_pos  = 5.
  wa_fieldcat-fieldname = 'AEDAT'.
  wa_fieldcat-tabname = 'GT_FINAL'.
  wa_fieldcat-seltext_m = text-003.
  APPEND wa_fieldcat TO it_fieldcatelog.

  CLEAR wa_fieldcat.
  wa_fieldcat-col_pos  = 6.
  wa_fieldcat-fieldname = 'MATNR'.
  wa_fieldcat-tabname = 'GT_FINAL'.
  wa_fieldcat-seltext_m = text-004.
  APPEND wa_fieldcat TO it_fieldcatelog.

  CLEAR wa_fieldcat.
  wa_fieldcat-col_pos  = 7.
  wa_fieldcat-fieldname = 'TXZ01'.
  wa_fieldcat-tabname = 'GT_FINAL'.
  wa_fieldcat-seltext_m = text-005.
  APPEND wa_fieldcat TO it_fieldcatelog.

  CLEAR wa_fieldcat.
  wa_fieldcat-col_pos  = 8.
  wa_fieldcat-fieldname = 'MENGE'.
  wa_fieldcat-tabname = 'GT_FINAL'.
  wa_fieldcat-seltext_m = text-006.
  APPEND wa_fieldcat TO it_fieldcatelog.

  CLEAR wa_fieldcat.
  wa_fieldcat-col_pos  = 9.
  wa_fieldcat-fieldname = 'XBLNR'.
  wa_fieldcat-tabname = 'GT_FINAL'.
  wa_fieldcat-seltext_m = text-007.
  APPEND wa_fieldcat TO it_fieldcatelog.

  CLEAR wa_fieldcat.
  wa_fieldcat-col_pos  = 10.
  wa_fieldcat-fieldname = 'ERDAT'.
  wa_fieldcat-tabname = 'GT_FINAL'.
  wa_fieldcat-seltext_m = text-009.
  APPEND wa_fieldcat TO it_fieldcatelog.

  CLEAR wa_fieldcat.
  wa_fieldcat-col_pos  = 11.
  wa_fieldcat-fieldname = 'BUDAT'.
  wa_fieldcat-tabname = 'GT_FINAL'.
  wa_fieldcat-seltext_m = text-008.
  APPEND wa_fieldcat TO it_fieldcatelog.

  CLEAR wa_fieldcat.
  wa_fieldcat-col_pos  = 12.
  wa_fieldcat-fieldname = 'BSTKD'.
  wa_fieldcat-tabname = 'GT_FINAL'.
  wa_fieldcat-seltext_m = text-010.
  APPEND wa_fieldcat TO it_fieldcatelog.
* Begin of insertion by MOD-001
  CLEAR wa_fieldcat.
  wa_fieldcat-col_pos  = 13.
  wa_fieldcat-fieldname = 'NETPR'.
  wa_fieldcat-tabname = 'GT_FINAL'.
  wa_fieldcat-seltext_m = text-017.
  APPEND wa_fieldcat TO it_fieldcatelog.
* End of insertion by MOD-001

  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
    EXPORTING
      i_program_name         = lv_repid
      i_internal_tabname     = 'GT_FINAL'
      i_structure_name       = 'TY_FINAL'
      i_client_never_display = 'X'
      i_inclname             = lv_repid
    CHANGING
      ct_fieldcat            = it_fieldcatelog[]
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.
  IF sy-subrc <> 0.
*    Do Nothing.
  ENDIF.
ENDFORM.                    "BUILD_FIELDCATELOG
*&---------------------------------------------------------------------*
*&      Form  BUILD_LAYOUT
*&---------------------------------------------------------------------*
FORM build_layout.
  gd_layout-colwidth_optimize = 'X'.
ENDFORM.                   "BUILD LAYOUT
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_GRIDREPORT
*&---------------------------------------------------------------------*
FORM display_gridreport.
    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program = lv_repid
      i_structure_name   = 'TY_FINAL'
      is_layout          = gd_layout
      it_fieldcat        = it_fieldcatelog[]
    TABLES
      t_outtab           = gt_final
    EXCEPTIONS
      program_error      = 1
      OTHERS             = 2.
  IF sy-subrc <> 0.
*    Do Nothing.
  ENDIF.
*  ENDIF.
ENDFORM.                    "DISPLAY_GRIDREPORT

*Begin of Insertion by MOD-001
*&---------------------------------------------------------------------*
*&      Form  SEND_EMAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SEND_EMAIL .
TRY.
*     -------- create persistent send request ------------------------
      send_request = cl_bcs=>create_persistent( ).
*     -------- create and set document with attachment ---------------
*     create document object from internal table with text
      APPEND 'Please find the below Daily PO Report'(015) TO main_text. "#EC NOTEXT
      document = cl_document_bcs=>create_document(
        i_type    = 'RAW'
        i_text    = main_text
        i_subject = 'MR Suppliers Invoices'(016) ).         "#EC NOTEXT

*     add the spread sheet as attachment to document object
      document->add_attachment(
        i_attachment_type    = 'XLS'                       "#EC NOTEXT
        i_attachment_subject = 'MR Suppliers Invoices Rpt'(013) "#EC NOTEXT
        i_attachment_size    = size
        i_att_content_hex    = binary_content ).

*     add document object to send request
      send_request->set_document( document ).

*     --------- add recipient (e-mail address) -----------------------
*     create recipient object
      recipient = cl_cam_address_bcs=>create_internet_address( p_email ).

*     add recipient object to send request
      send_request->add_recipient( recipient ).

*     ---------- send document ---------------------------------------
      sent_to_all = send_request->send( i_with_error_screen = 'X' ).

      COMMIT WORK.

      IF sent_to_all IS INITIAL.
        MESSAGE i500(sbcoms) WITH p_email.
      ELSE.
        MESSAGE s022(so).
      ENDIF.

*   ------------ exception handling ----------------------------------
*   replace this rudimentary exception handling with your own one !!!
    CATCH cx_bcs INTO bcs_exception.
      MESSAGE i865(so) WITH bcs_exception->error_type.
  ENDTRY.
ENDFORM.                    " SEND_EMAIL
*&---------------------------------------------------------------------*
*&      Form  CREATE_EXLCONTENT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CREATE_EXLCONTENT .

  DATA: lv_string TYPE string.

* Excel sheet Header line
  CONCATENATE lv_string
              'Vendor No'(001)                 gc_tab
              'Vendor Name'(012)               gc_tab
              'PO Number'(002)                 gc_tab
              'PO Item'(011)                   gc_tab
              'PO Creation Date'(003)          gc_tab
              'Material Number'(004)           gc_tab
              'Description'(005)               gc_tab
              'Quantity'(006)                  gc_tab
              'Reference Number'(007)          gc_tab
              'Inbound Creation'(009)          gc_tab
              'GR Date'(008)                   gc_tab
              'CTP Quotation number'(010)      gc_tab
              'Net Price'(017)                 gc_crlf
              INTO lv_string.

* Excel sheet Data line
  LOOP AT gt_final INTO wa_final.
    WRITE  wa_final-menge To lv_qty.
    WRITE  wa_final-netpr To lv_netpr.
    CONCATENATE wa_final-aedat+6(2) wa_final-aedat+4(2) wa_final-aedat+0(4) INTO lv_date1 SEPARATED BY '.'.
    CONCATENATE wa_final-erdat+6(2) wa_final-erdat+4(2) wa_final-erdat+0(4) INTO lv_date2 SEPARATED BY '.'.
    CONCATENATE wa_final-budat+6(2) wa_final-budat+4(2) wa_final-budat+0(4) INTO lv_date3 SEPARATED BY '.'.
    CONCATENATE lv_string
                 wa_final-lifnr          gc_tab
                 wa_final-name1          gc_tab
                 wa_final-ebeln          gc_tab
                 wa_final-ebelp          gc_tab
                 lv_date1                gc_tab
                 wa_final-matnr          gc_tab
                 wa_final-txz01          gc_tab
                 lv_qty                  gc_tab
                 wa_final-xblnr          gc_tab
                 lv_date2                gc_tab
                 lv_date3                gc_tab
                 wa_final-bstkd          gc_tab
                 lv_netpr                gc_crlf
                 INTO lv_string.
    CLEAR : lv_date1,
            lv_date2,
            lv_date3,
            lv_qty,
            lv_netpr.
  ENDLOOP.

* --------------------------------------------------------------

  TRY.
      cl_bcs_convert=>string_to_solix(
        EXPORTING
          iv_string   = lv_string
          iv_codepage = '4103'  "suitable for MS Excel, leave empty
          iv_add_bom  = 'X'     "for other doc types
        IMPORTING
          et_solix  = binary_content
          ev_size   = size ).
    CATCH cx_bcs.
      MESSAGE e445(so).
  ENDTRY.

ENDFORM.                    " CREATE_EXLCONTENT
*End of Insertion by MOD-001
