*&---------------------------------------------------------------------*
*& Report  YTEST_AIR23640
*&
*&---------------------------------------------------------------------*
*& Test program (user AIR23640)
*&
*&---------------------------------------------------------------------*

REPORT  ytest_air23640.

TABLES: vbak, likp.

TABLES: dd03l.

FIELD-SYMBOLS: <c>, <x>.

FIELD-SYMBOLS: <q>, <ref>.

PARAMETERS: p_file TYPE  rlgrap-filename.
PARAMETER: p_input(10)  TYPE c.
*PARAMETER: p_input  TYPE text256  DEFAULT 'Ab§¨§©§±§¶§ëABf¦¸¦Õ###¡Ì12,3'.
*PARAMETER: p_input  TYPE text256  DEFAULT 'Ab§¨§©§±§¶§ëBf12,3'.
* Input file

TYPES: BEGIN OF t_datatab,
      col1(10)    TYPE c,
      col2(150)   TYPE c,
      col3(3)     TYPE c,
      END OF t_datatab.
DATA: it_datatab type standard table of t_datatab,
      wa_datatab type t_datatab.

types truxs_t_text_data(4096) type c occurs 0.

DATA: it_raw TYPE TRUXS_T_TEXT_DATA.

* At selection screen
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_file.
  CALL FUNCTION 'F4_FILENAME'
    EXPORTING
      field_name = 'P_FILE'
    IMPORTING
      file_name  = p_file.

***********************************************************************
*START-OF-SELECTION.
START-OF-SELECTION.

  CALL FUNCTION 'TEXT_CONVERT_XLS_TO_SAP'
    EXPORTING
*     I_FIELD_SEPERATOR        =
      i_line_header            =  'X'
      i_tab_raw_data           =  it_raw       " WORK TABLE
      i_filename               =  p_file
    TABLES
      i_tab_converted_data     = it_datatab[]    "ACTUAL DATA
   EXCEPTIONS
      conversion_failed        = 1
      OTHERS                   = 2.

  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

stop.

***********************************************************************
* END-OF-SELECTION.
END-OF-SELECTION.
  LOOP AT it_datatab INTO wa_datatab.
    WRITE:/ wa_datatab-col1,
            wa_datatab-col2,
            wa_datatab-col3.
  ENDLOOP.

STOP.

***********************************************************************

DATA: h_output   TYPE wert8.

DATA: h_aufnr    TYPE aufnr,
      h_vornr    TYPE vornr.

DATA: h_object(20) TYPE c.

DATA: h_traztd      TYPE traztd,
      h_dec_n(2)    TYPE n,
      h_dec_i       TYPE i  VALUE 2.

DATA: h_cnt TYPE i.

DATA: h_off  TYPE i.

DATA: BEGIN OF i_tab  OCCURS 0,
        field1(10)   TYPE c,
        field2(10)   TYPE c,
        field3(10)   TYPE c,
      END OF i_tab.

DATA: BEGIN OF i_str,
        field11(10)   TYPE c  VALUE 'Test11',
        field12(15)   TYPE c  VALUE 'Test12*',
        field21(10)   TYPE c  VALUE 'Test21',
        field22(15)   TYPE c  VALUE 'Test22*',
        field31(10)   TYPE c,
        field32(15)   TYPE c,
      END OF i_str.
DATA: h_fld1(10)      TYPE c,
      h_fld2(15)      TYPE c.

CONSTANTS: h_wait  TYPE f  VALUE '0.2',
           h_hex_min(2)  TYPE x  VALUE '0020',
           h_hex_max(2)  TYPE x  VALUE '007E'.

********************
* START-OF-SELECTION.

  FIELD-SYMBOLS: <in>,
                 <out>,
                 <hex>.

  TRANSLATE p_input USING '. '.
  CONDENSE p_input NO-GAPS.
  REPLACE ',' IN p_input WITH '.'.
  h_output = p_input.

** First character
*  ASSIGN p_input(1)  TO <in>.
*  ASSIGN h_output(1) TO <out>.
*
** Process input field (character by character)
*  DO 256 TIMES.
**   Check hexadecimal value of character
*    ASSIGN <in> TO <hex> TYPE 'X'.
*    IF <hex> = lv_hex_lf.
**     Line feed : replace by '.'
*      <out> = '.'.
*    ELSE.
*      <out> = <in>.
*    ENDIF.
*
**   Next character
*    ASSIGN <in>+1(1)  TO <in>.
*    ASSIGN <out>+1(1) TO <out>.
*
*  ENDDO.

*  SELECT count( * ) INTO h_cnt
*         from vbap
*         where vbeln = p_input.
*
*  h_output = h_cnt.

**  SELECT SINGLE k~vbeln INTO h_vbeln
**    FROM likp AS k
**    INNER JOIN lips AS p
**          ON k~vbeln = p~vbeln
**    WHERE k~bolnr = p_input
**      AND p~vgbel = '4500002534'
**       AND p~vgpos = 1.
**
**  SELECT SINGLE xblnr INTO h_xblnr
**    FROM ekes
**    WHERE ebeln = '4500002534'
**      AND ebelp = 1
**      AND vbeln = h_vbeln.
*
*  SELECT SINGLE e~xblnr INTO h_xblnr
*    FROM likp AS k
*    INNER JOIN lips AS p
*          ON k~vbeln = p~vbeln
*    INNER JOIN ekes AS e
*          ON p~vbeln = e~vbeln  AND
*             p~posnr = e~vbelp
*    WHERE k~bolnr = p_input
*      AND e~ebeln = '4500002534'
*      AND e~ebelp = 1.
*
*  h_output = h_xblnr.


*  DO 3 TIMES VARYING h_fld1 FROM i_str-field11 NEXT i_str-field21 RANGE i_str
*             VARYING h_fld2 FROM i_str-field12 NEXT i_str-field22 RANGE i_str.
*    IF h_fld2 IS INITIAL.
*      EXIT.
*    ENDIF.
*    WRITE: / h_fld1, h_fld2.
*  ENDDO.

*FIND FIRST OCCURRENCE OF 'Q' IN p_input MATCH OFFSET h_off.
*ASSIGN p_input+h_off(1) TO <q>.
*ASSIGN h_output(1)      TO <ref>.
**   Quotation nr.
*WHILE <q> NA ' /'.
*  IF <q> CO '0123456789Q'.
*    <ref> = <q>.
*    ASSIGN <ref>+1(1) TO <ref>.
*  ENDIF.
*  ASSIGN <q>+1(1)   TO <q>.
*ENDWHILE.

*  SELECT SINGLE traztd INTO h_traztd
*         FROM tvro
*         WHERE route = p_input.
*
*  CALL FUNCTION 'CONVERSION_EXIT_TSTRG_OUTPUT'
*    EXPORTING
*      input  = h_traztd
*    IMPORTING
*      output = h_dec3_n.

*  h_output = h_dec3_n / 100.

*  h_off = 0.
*  h_output = p_input.
*  FIND '?2' IN h_output MATCH OFFSET h_off.
*  WHILE sy-subrc = 0.
*    h_output+h_off(3) = '***'.
*    REPLACE FIRST OCCURRENCE OF '***' IN h_output WITH ''.
*    h_off = 0.
*    FIND '?2' IN h_output MATCH OFFSET h_off.
*  ENDWHILE.

*  CALL FUNCTION 'YSE_TRANSLATE_SPEC_CHARS'
*    EXPORTING
*      organization            = 'RU'
*      field_in                = p_input
*    IMPORTING
*      field_out               = h_output
*    EXCEPTIONS
*      organization_not_found  = 1
*      no_translation          = 2
*      translation_with_errors = 3
*      OTHERS                  = 4.
*  IF sy-subrc <> 0.
** MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
**         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*  ENDIF.

*  WRITE p_input TO h_output.

  WRITE: / p_input,
         / h_output.
*         / sy-subrc.

*  ASSIGN p_input(1) TO <c>.
*  DO 10 TIMES.
*    ASSIGN <c> TO <x> TYPE 'X'.
*    IF <x> < h_hex_min  OR
*       <x> > h_hex_max.
*      WRITE <c>.
*    ENDIF.
*    ASSIGN <c>+1(1) TO <c>.
*  ENDDO.

**  h_wait = '0.2'.
*
*  WAIT UP TO '0.2' SECONDS.
*  WAIT UP TO h_wait SECONDS.
*
*  h_num = h_wait.

*  WRITE p_input TO p_input NO-ZERO.
*  h_vbeln = p_input.

*  CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
*    EXPORTING
*      input  = p_input
*    IMPORTING
*      output = h_vbeln.
*
*  SELECT SINGLE * FROM vbak
*         WHERE vbeln = h_vbeln.
*
*  WRITE: /01 'Input: ', p_input.
*
*CALL FUNCTION 'DATE_CHECK_PLAUSIBILITY'
*  EXPORTING
*    date                            = p_input
* EXCEPTIONS
*   PLAUSIBILITY_CHECK_FAILED       = 1
*   OTHERS                          = 2
*          .
*IF sy-subrc <> 0.
*  MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*          WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
*ENDIF.
*
*  h_menge = p_input.
*
*  WRITE: /01 'Result:', p_input.

*  CONSTANTS: c_tabname   TYPE tabname   VALUE 'K9RCD11%',
*             c_fieldname TYPE fieldname VALUE 'SOUR1_FROM',
*             c_rollname  TYPE rollname  VALUE 'RKEG_WW003'.
*
*  DATA: h_tabname  TYPE tabname,
*        h_field    TYPE rkeg_ww003,
*        h_type     TYPE rkeg_ww001.
*
*  SELECT tabname INTO h_tabname
*                 FROM dd03l
*                 WHERE tabname LIKE c_tabname
*                   AND fieldname  = c_fieldname
*                   AND rollname   = c_rollname.
*  ENDSELECT.
*
*  SELECT SINGLE sour1_from target1
*         INTO (h_field, h_type)
*         FROM (h_tabname)
*         WHERE sour1_from = p_input.
*  WRITE: /05 h_field, ' ', h_type.

*  ENDSELECT.
*Selection text£º
*P_DATE:        Date
*P_EXACT:        Exact date
*P_FCURR:D       .
*P_INPUT:        Input.
*P_KURST:D       .
*P_TCURR:D       .
