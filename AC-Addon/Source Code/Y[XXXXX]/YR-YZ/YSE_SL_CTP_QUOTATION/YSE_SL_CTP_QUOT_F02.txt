*&---------------------------------------------------------------------*
*&  Include           YSE_SL_CTP_QUOT_F02
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Module  init_9001  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE init_9001 OUTPUT.

  CLEAR ok_code_9001.
  get PARAMETER ID 'VKO' field d9001_vkorg.
  get PARAMETER ID 'VTW' field d9001_vtweg.
  get PARAMETER ID 'SPA' field d9001_spart.
  IMPORT t_rec gt_valerr2 FROM MEMORY ID 'YSE_SL_CTP_QUOT'.

  select single vtext into tvkot-vtext
    from tvkot where spras = sy-langu
                 and vkorg = d9001_vkorg.

  select single vtext into tvtwt-vtext
    from tvtwt where spras = sy-langu
                 and vtweg = d9001_vtweg.

  select single vtext into tspat-vtext
    from tspat where spras = sy-langu
                 and spart = d9001_spart.

ENDMODULE.                 " init_9001  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  STATUS_9001  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE STATUS_9001 OUTPUT.

  SET PF-STATUS '9001'.
  SET TITLEBAR '9001'.

ENDMODULE.                 " STATUS_9001  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  T_TABCT_CHANGE_TC_ATTR  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE T_TABCT_CHANGE_TC_ATTR OUTPUT.

*  DESCRIBE TABLE t_rec LINES t_tabct-lines.
  t_tabct-lines = '999'.

ENDMODULE.                 " T_TABCT_CHANGE_TC_ATTR  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  D9001_FILL_REC  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE D9001_FILL_REC OUTPUT.

* begin of insert MOD-001
  clear gv_vkorg.
  SELECT vkorg into gv_vkorg
    UP TO 1 rows
    FROM YSE_ATP_CONFIG WHERE vkorg = d9001_vkorg
                          AND vtweg = d9001_vtweg.
  ENDSELECT.

  IF sy-subrc = 0.
    LOOP AT SCREEN.
      IF screen-name = 'D9001_WERKS'.
        screen-input = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
* end of insert MOD-001

  d9001_line      = t_rec-line.
  d9001_quotn     = t_rec-quotn.
  d9001_custn     = t_rec-custn.
  d9001_consn     = t_rec-consn.
  d9001_quotd     = t_rec-quotd.
  d9001_reqdt     = t_rec-reqdt.
  d9001_slman     = t_rec-slman.
  d9001_qucur     = t_rec-qucur.
  d9001_delt1     = t_rec-delt1.
  d9001_delt2     = t_rec-delt2.
  d9001_payte     = t_rec-payte.
  d9001_vkbur     = t_rec-vkbur.
  knvv-vsbed      = t_rec-vsbed.
  vbak-kvgr4      = t_rec-kvgr4.
  vbak-kvgr1      = t_rec-kvgr1.
  d9001_partn     = t_rec-partn.
  d9001_netpr     = t_rec-netpr.
  d9001_quant     = t_rec-quant.
  d9001_pstyv     = t_rec-pstyv.
  d9001_werks     = t_rec-werks.
  d9001_relcd     = t_rec-relcd.
* begin of insert MOD-001
  d9001_freight   = t_rec-freight.
* end of insert MOD-001

ENDMODULE.                 " D9001_FILL_REC  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  EXIT_COMMAND_9001  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE EXIT_COMMAND_9001 INPUT.

  CASE ok_code_9001.
    WHEN 'BACK'.
      gv_ucomm = ok_code_9001.
      EXPORT gv_ucomm gt_errmsg TO MEMORY ID 'YSE_SL_CTP_QUOT'.
      LEAVE TO SCREEN 0.
    WHEN 'EXIT'.
      gv_ucomm = ok_code_9001.
      EXPORT gv_ucomm gt_errmsg TO MEMORY ID 'YSE_SL_CTP_QUOT'.
      LEAVE TO SCREEN 0.
    WHEN OTHERS.
  ENDCASE.

ENDMODULE.                 " EXIT_COMMAND_9001  INPUT

*&---------------------------------------------------------------------*
*&      Module  D9001_SAVE_REC  INPUT
*&---------------------------------------------------------------------*
*       Save a record (line) from the screen into the internal table
*----------------------------------------------------------------------*
MODULE D9001_SAVE_REC INPUT.

  READ TABLE t_rec WITH KEY line = d9001_line.
  IF sy-subrc = 0.
    t_rec-vsbed = knvv-vsbed.
    t_rec-kvgr1 = vbak-kvgr1.
    t_rec-kvgr4 = vbak-kvgr4.
* begin of insert MOD-001
    t_rec-werks = d9001_werks.
* end of insert MOD-001
    MODIFY t_rec INDEX d9001_line.
  ENDIF.

ENDMODULE.                 " D9001_SAVE_REC  INPUT

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_9001  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE USER_COMMAND_9001 INPUT.

  data: lv_retcd type sy-subrc,
        lv_field type vbeln,
        wa_rec   like line of t_rec.

  CASE ok_code_9001.
    WHEN 'BACK'.
      gv_ucomm = ok_code_9001.
      EXPORT gv_ucomm gt_errmsg TO MEMORY ID 'YSE_SL_CTP_QUOT'.
      LEAVE.
    WHEN 'EXIT'.
      gv_ucomm = ok_code_9001.
      EXPORT gv_ucomm gt_errmsg TO MEMORY ID 'YSE_SL_CTP_QUOT'.
      LEAVE.
    WHEN 'EXEC'.
      t_rec_det[] = t_rec[].            " copy
      loop at t_rec.
        wa_rec = t_rec.
        at new quotn.
          set PARAMETER ID 'AUN' field c_blanc.
          read table gt_valerr2 with key quotn = t_rec-quotn
                             binary search
                             transporting no fields.
          if sy-subrc = 0.
            continue.              " exists in error table
          endif.
          PERFORM create_sales_order tables gt_mestab
                                      using wa_rec
                                   changing lv_retcd.

          GET PARAMETER ID 'AUN' field lv_field.
          if lv_field is initial.
            loop at gt_mestab where type = 'E' or
                                    type = 'W'.
              gt_errmsg-quotn = t_rec-quotn.
              gt_errmsg-type  = gt_mestab-type.
              gt_errmsg-messg = gt_mestab-message.
              append gt_errmsg.
            endloop.
          else.
            gt_errmsg-quotn = t_rec-quotn.
            gt_errmsg-type  = 'S'.
            concatenate text-s01 lv_field into gt_errmsg-messg.
            append gt_errmsg.
          endif.
        endat.
      endloop.
      gv_ucomm = ok_code_9001.
      EXPORT gv_ucomm gt_errmsg TO MEMORY ID 'YSE_SL_CTP_QUOT'.
      LEAVE TO SCREEN 0.
    WHEN OTHERS.
      EXPORT t_rec TO MEMORY ID 'YSE_SL_CTP_QUOT'.
      SET SCREEN 9001.
      LEAVE SCREEN.
  ENDCASE.

ENDMODULE.                 " USER_COMMAND_9001  INPUT

*&---------------------------------------------------------------------*
*&      Module  D9001_KVGR1  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE D9001_KVGR1 INPUT.

  data: lv_kvgr1 type kvgr1.

  check d9001_partn ne 'GMACH'.
  select single kvgr1
    into lv_kvgr1
    from tvv1 where kvgr1 = vbak-kvgr1.

  if sy-subrc <> 0.
    message e001(00) with text-e51.
  endif.

ENDMODULE.                 " D9001_KVGR1  INPUT

*&---------------------------------------------------------------------*
*&      Module  D9001_KVGR4  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE D9001_KVGR4 INPUT.

  data: lv_kvgr4 type kvgr4.

  check d9001_partn ne 'GMACH'.
  select single kvgr4
    into lv_kvgr4
    from tvv4 where kvgr4 = vbak-kvgr4.

  if sy-subrc <> 0.
    message e001(00) with text-e52.
  endif.

ENDMODULE.                 " D9001_KVGR4  INPUT
*&---------------------------------------------------------------------*
*&      Module  D9001_VSBED  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE D9001_VSBED INPUT.

  data: lv_vsbed type vsbed.

  check d9001_partn ne 'GMACH'.
  select single vsbed
    into lv_vsbed
    from tvsb where vsbed = knvv-vsbed.

  if sy-subrc <> 0.
    message e001(00) with text-e53.
  endif.

ENDMODULE.                 " D9001_VSBED  INPUT
*&---------------------------------------------------------------------*
*&      Module  D9001_WERKS  INPUT               " MOD-001
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE D9001_WERKS INPUT.

  data: lv_werks type werks_ext.

  check d9001_partn ne 'GMACH'.
* begin of insert MOD-001
  CHECK gv_vkorg IS INITIAL.
* end of insert MOD-001
  select single werks
    into lv_werks
    from tvkwz where vkorg = d9001_vkorg
                 AND vtweg = d9001_vtweg
                 AND werks = d9001_werks.

  if sy-subrc <> 0.
    message e001(00) with text-e54.
  endif.

ENDMODULE.                 " D9001_WERKS  INPUT
*&---------------------------------------------------------------------*
*&      Module  D9001_WERKS_F4  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE D9001_WERKS_F4 INPUT.

  data: begin of lt_tvkwz occurs 0,
          werks TYPE tvkwz-werks,
        end of lt_tvkwz.

  check d9001_partn ne 'GMACH'.
  CHECK gv_vkorg IS INITIAL.

  refresh lt_tvkwz.
  clear lt_tvkwz.

  select werks
    from tvkwz
    into corresponding fields of table lt_tvkwz
    where vkorg = d9001_vkorg
      and vtweg = d9001_vtweg.

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
*     DDIC_STRUCTURE         = ' '
      RETFIELD               = 'WERKS'
*     PVALKEY                = ' '
      DYNPPROG               = sy-repid
      DYNPNR                 = '9001'
      DYNPROFIELD            = 'D9001_WERKS'
*     STEPL                  = 0
*     WINDOW_TITLE           =
*     VALUE                  = ' '
      VALUE_ORG              = 'S'
*     MULTIPLE_CHOICE        = ' '
*     DISPLAY                = ' '
*     CALLBACK_PROGRAM       = ' '
*     CALLBACK_FORM          = ' '
*     MARK_TAB               =
*   IMPORTING
*     USER_RESET             =
    TABLES
      VALUE_TAB              = lt_tvkwz
*     FIELD_TAB              =
*     RETURN_TAB             =
*     DYNPFLD_MAPPING        =
*   EXCEPTIONS
*     PARAMETER_ERROR        = 1
*     NO_VALUES_FOUND        = 2
*     OTHERS                 = 3
            .
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDMODULE.                 " D9001_WERKS_F4  INPUT
