*----------------------------------------------------------------------*
***INCLUDE YSE_STOCK_OVERVIEW_ALVSUPP .
*----------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  prepare_alv
*&---------------------------------------------------------------------*
FORM PREPARE_ALV.

* If container is still initial
  IF MY_CONTAINER IS INITIAL.
*   Create container
    CREATE OBJECT MY_CONTAINER
      EXPORTING
        REPID     = SY-REPID
        DYNNR     = SY-DYNNR
        LIFETIME  = CNTL_LIFETIME_DYNPRO
        EXTENSION = 5000.

*   Create the ALV control
    CREATE OBJECT MY_ALV
      EXPORTING
        I_PARENT = MY_CONTAINER.

*   Create the handler object
    CREATE OBJECT MY_HANDLER.
*   Set handler for ALV
    SET HANDLER MY_HANDLER->HANDLE_HOTSPOT_CLICK FOR MY_ALV.

*   Set parameters regarding layout, etc.
    WA_LAYOUT-NO_TOOLBAR = ' '.
    WA_LAYOUT-CWIDTH_OPT = 'X'.
*   Make sure layout variants can be saved (by setting repid
    WA_VARIANT-REPORT = SY-REPID.
*   Create the fieldcatalog e.g. which fields to display
    PERFORM CREATE_FIELDCAT.

*   Display the data in the ALV control
    CALL METHOD MY_ALV->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        I_STRUCTURE_NAME              = 'YSE_STOCK_OVERVIEW_ITEM_V1'
        IS_LAYOUT                     = WA_LAYOUT
        I_SAVE                        = 'A'
        IS_VARIANT                    = WA_VARIANT
      CHANGING
        IT_OUTTAB                     = IT_OUTPUT
        IT_FIELDCATALOG               = IT_FIELDCAT
      EXCEPTIONS
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        OTHERS                        = 4.

* If container already exists
  ELSE.

*   Refresh data without changing the layout -> 'soft'
    CALL METHOD MY_ALV->REFRESH_TABLE_DISPLAY
      EXPORTING
        I_SOFT_REFRESH = C_X.
  ENDIF.

ENDFORM.                    " PREPARE_ALV

*&---------------------------------------------------------------------*
*&      Form  create_fieldcat
*&---------------------------------------------------------------------*
FORM CREATE_FIELDCAT .

  FIELD-SYMBOLS: <WA_FC> LIKE LINE OF IT_FIELDCAT.

* Fetch the field catalog for structure YSE_RENT_EHRSP_OUTPUT
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_BUFFER_ACTIVE  = ' '
      I_STRUCTURE_NAME = 'YSE_STOCK_OVERVIEW_ITEM_V1'
    CHANGING
      CT_FIELDCAT      = IT_FIELDCAT.

* Update field catalog (depending on e.g. selection parameters)
  LOOP AT IT_FIELDCAT ASSIGNING <WA_FC>.

    CASE <WA_FC>-FIELDNAME.

*     Do not display the MRP type, Shipping instructions code, MVGR5 code
      WHEN 'DISMM' OR 'EVERS' OR 'MVGR5'.
        <WA_FC>-NO_OUT = C_X.

    ENDCASE.
  ENDLOOP.

ENDFORM.                    " CREATE_FIELDCAT




*>>>>>>> Start of Insert 011
*&---------------------------------------------------------------------*
*&      Form  WRITESPOOL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM WRITESPOOL .

*   Create the fieldcatalog for fields to display
  PERFORM CREATE_FIELDCAT_BG.

*   Set parameters regarding layout etc.
  WA_LAYOUT_BG-ZEBRA   = 'X'.
  WA_LAYOUT_BG-COLWIDTH_OPTIMIZE = 'X'.

* Call the ALV to display the output.
  CALL FUNCTION 'REUSE_ALV_LIST_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM = SY-REPID
      IS_LAYOUT          = WA_LAYOUT_BG
      I_SAVE             = 'A'
      IT_FIELDCAT        = IT_FIELDCAT_BG
    TABLES
      T_OUTTAB           = IT_OUTPUT_BG[]
    EXCEPTIONS
      PROGRAM_ERROR      = 1
      OTHERS             = 2.

ENDFORM.                    " WRITESPOOL




*&---------------------------------------------------------------------*
*&      Form  CREATE_FIELDCAT_BG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CREATE_FIELDCAT_BG .

*   Clear the field catalog table
  REFRESH: IT_FIELDCAT_BG.

* Check if user wants all the fields to be written to the spool
IF P_ALLCOL = 'X'.
  IT_FIELDCAT_STRUC_BG  = 'YSE_STOCK_OVERVIEW_ITEM_V1_BG'.
ELSE.
  IT_FIELDCAT_STRUC_BG  = 'YSE_STOCK_OVERVIEW_ITEM_V1_BG'.
ENDIF.

* Create the field catalog for structure YSE_STOCK_OVERVIEW_ITEM_BG
  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
    EXPORTING
      I_PROGRAM_NAME         = SY-REPID
      I_STRUCTURE_NAME       = IT_FIELDCAT_STRUC_BG
    CHANGING
      CT_FIELDCAT            = IT_FIELDCAT_BG
    EXCEPTIONS
      INCONSISTENT_INTERFACE = 1
      PROGRAM_ERROR          = 2
      OTHERS                 = 3.

* As we are running the ALV in background,
* Remove the field MEINS from the field catalog. Instead use the new field MEINS_NEW
  DELETE IT_FIELDCAT_BG WHERE FIELDNAME = 'MEINS'.

  LOOP AT IT_OUTPUT INTO WA_OUTPUT.
    MOVE-CORRESPONDING WA_OUTPUT TO WA_OUTPUT_BG.
    WA_OUTPUT_BG-MEINS_NEW = WA_OUTPUT-MEINS.
    APPEND WA_OUTPUT_BG TO IT_OUTPUT_BG.
    CLEAR WA_OUTPUT_BG.
  ENDLOOP.
ENDFORM.                    " CREATE_FIELDCAT_BG
*>>>>>>> END of Insert 011
