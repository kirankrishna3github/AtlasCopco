*&---------------------------------------------------------------------*
*&  Include           YRD_RM08RELEASE_F0A
*&---------------------------------------------------------------------*

*---------------------------------------------------------------------*
*       FORM ALV_LIST                                                 *
*---------------------------------------------------------------------*
* Display ALV-list:                                                   *
* 1. List of blocked invoices for function "Release manually" using   *
*    table T_ARSEG.                                                   *
*                                                                     *
* 2. List of released invoices for function "Release automatically"   *
*    or list of invoices for which blocking reasons have been deleted *
*    using table T_ARBKP                                              *
*---------------------------------------------------------------------*
FORM alv_list USING    i_release_auto TYPE c
                       i_variant LIKE disvariant
              CHANGING t_arbkp TYPE mrm_tab_arbkp
                       t_arseg TYPE mrm_tab_arseg
                       t_released_arbkp TYPE mrm_tab_arbkp.

  DATA: s_arseg TYPE mrm_arseg,
        ti_rbkp_blocked type mrm_tab_rbkp_blocked,
        f_answer,
        tab_fieldcat TYPE slis_t_fieldcat_alv,
        tab_sort     TYPE slis_t_sortinfo_alv,
        s_layout     TYPE slis_layout_alv,
        s_exit_caused_by_user TYPE  slis_exit_by_user,
        lr_badi_release_external type ref to mrm_release_external. "NCF IV

ENHANCEMENT-POINT EHP_RM08RELEASE_01 SPOTS /SAPPSPRO/ES_LPN.


  CONSTANTS:
        c_pf_status_set TYPE slis_formname VALUE 'PF_STATUS_SET',
        c_user_command TYPE slis_formname VALUE 'USER_COMMAND',
        c_tab_color   TYPE slis_tabname  VALUE 'COLINFO',
        c_top_of_list TYPE slis_formname VALUE 'TOP_OF_LIST',
        c_structure_arbkp TYPE slis_tabname  VALUE 'T_ARBKP',
        c_structure_arseg TYPE slis_tabname  VALUE 'T_ARSEG'.

  s_layout-zebra             = 'X'.
  s_layout-group_change_edit = 'X'.
  s_layout-f2code            = 'DISPLAY'.

  CLEAR: s_arseg.

*-- Protokoll f¨¹r automatische Freigabe ------------------------------*
  IF i_release_auto = 'X'.
    PERFORM field_catalog_build_auto TABLES tab_fieldcat.
    PERFORM document_change_update TABLES t_arbkp
                                          t_arseg
                                          ti_rbkp_blocked
                                    USING c_bool_false.
    perform list_of_released_invoices TABLES t_arbkp
                                             ti_rbkp_blocked
                                             t_released_arbkp.
    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
      EXPORTING
        i_buffer_active          = space
        i_callback_program       = c_repid
        i_callback_pf_status_set = c_pf_status_set
        i_callback_user_command  = c_user_command
        i_structure_name         = c_structure_arbkp
        it_fieldcat              = tab_fieldcat[]
        is_layout                = s_layout
        i_save                   = c_save
        is_variant               = i_variant
      TABLES
        t_outtab                 = t_released_arbkp.
  ELSE.                                "  manuelle Freigabe
    s_layout-box_fieldname    = 'BOX'.
    s_layout-coltab_fieldname = c_tab_color.
    PERFORM field_catalog_build_manu TABLES tab_fieldcat.

*   allow change of fieldcatalog                                "NCF IV
    get badi lr_badi_release_external.                          "NCF IV
    if not lr_badi_release_external is initial.                 "NCF IV
      call badi lr_badi_release_external->fieldcatalog_change   "NCF IV
        changing                                                "NCF IV
          arseg    = tab_arseg[]                                "NCF IV
          fieldcat = tab_fieldcat[].                            "NCF IV
    endif.                                                      "NCF IV

    PERFORM invalid_blocking_reason TABLES tab_arseg.
    PERFORM generic_object_services TABLES tab_arbkp.


ENHANCEMENT-POINT EHP_RM08RELEASE_02 SPOTS /SAPPSPRO/ES_LPN.


ENHANCEMENT-SECTION     EHP_RM08RELEASE_0 SPOTS ES_RM08RELEASE.
    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
      EXPORTING
        i_buffer_active          = space
        i_callback_program       = c_repid
        i_callback_pf_status_set = c_pf_status_set
        i_callback_user_command  = c_user_command
        i_structure_name         = c_structure_arseg
        it_fieldcat              = tab_fieldcat[]
        is_layout                = s_layout
        i_save                   = c_save
        is_variant               = i_variant
      IMPORTING
        es_exit_caused_by_user   = s_exit_caused_by_user
      TABLES
        t_outtab                 = t_arseg.
END-ENHANCEMENT-SECTION.


*- leave the list with F3 or F15, ask if the changing must be saved --*
    IF s_exit_caused_by_user-back = 'X' OR                  " F3
       s_exit_caused_by_user-exit = 'X'.                    " F15

      CLEAR s_arseg.
ENHANCEMENT-SECTION     RM08RELEASE_F0A_01 SPOTS ES_RM08RELEASE.
      LOOP AT t_arseg INTO s_arseg.
        IF    ( NOT s_arseg-spgrg IS INITIAL
                AND s_arseg-spgrg_new IS INITIAL )
          OR  ( NOT s_arseg-spgrm IS INITIAL
                AND s_arseg-spgrm_new IS INITIAL )
          OR  ( NOT s_arseg-spgrp IS INITIAL
                AND s_arseg-spgrp_new IS INITIAL )
          OR  ( NOT s_arseg-spgrc IS INITIAL
                AND s_arseg-spgrc_new IS INITIAL )
          OR  ( NOT s_arseg-spgrs IS INITIAL
                AND s_arseg-spgrs_new IS INITIAL )
          OR  ( NOT s_arseg-spgrt IS INITIAL
                AND s_arseg-spgrt_new IS INITIAL )
          OR  ( NOT s_arseg-spgrq IS INITIAL
                AND s_arseg-spgrq_new IS INITIAL )
          OR  ( NOT s_arseg-mrm_zlspr IS INITIAL
                AND s_arseg-mrm_zlspr_new IS INITIAL )
          or  ( not s_arseg-spgrext is initial         "NCF IV
                and s_arseg-spgrext_new is initial ).  "NCF IV
          EXIT.
        ELSE.
          CLEAR s_arseg.
        ENDIF.
      ENDLOOP.
END-ENHANCEMENT-SECTION.

      CHECK: NOT s_arseg-belnr IS INITIAL.
      CALL FUNCTION 'POPUP_TO_CONFIRM_STEP'
        EXPORTING
          textline1 = text-p01
          titel     = text-p01
        IMPORTING
          answer    = f_answer.

      CASE f_answer.
        WHEN 'J'.
          PERFORM document_change_update TABLES t_arbkp
                                                t_arseg
                                                ti_rbkp_blocked
                                          USING c_bool_true.
        WHEN 'A'.
          CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
            EXPORTING
              i_callback_program       = c_repid
              i_callback_pf_status_set = c_pf_status_set
              i_callback_user_command  = c_user_command
              i_structure_name         = c_structure_arseg
              it_fieldcat              = tab_fieldcat[]
              is_layout                = s_layout
              i_save                   = c_save
              is_variant               = i_variant
            IMPORTING
              es_exit_caused_by_user   = s_exit_caused_by_user
            TABLES
              t_outtab                 = t_arseg.

      ENDCASE.
    ENDIF.
  ENDIF.

ENDFORM.                    "alv_list
*&---------------------------------------------------------------------*
*&      Form  F4_VARIA
*&---------------------------------------------------------------------*
FORM f4_varia CHANGING cf_varia LIKE disvariant-variant.

  DATA: f_exit(1)   TYPE c.

  PERFORM variant_init.

  CALL FUNCTION 'REUSE_ALV_VARIANT_F4'
    EXPORTING
      is_variant = s_variant
      i_save     = c_save
    IMPORTING
      e_exit     = f_exit
      es_variant = s_var_usr
    EXCEPTIONS
      not_found  = 2.
  IF sy-subrc = 2.
    MESSAGE ID sy-msgid TYPE 'S'      NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ELSE.
    IF f_exit = space.
      cf_varia = s_var_usr-variant.
    ENDIF.
  ENDIF.

ENDFORM.                                                    " F4_VARIA
*&---------------------------------------------------------------------*
*&      Form  VARIANT_INIT
*&---------------------------------------------------------------------*
FORM variant_init.

  CLEAR s_variant.
  s_variant-report = c_repid.

ENDFORM.                               " VARIANT_INIT
*&---------------------------------------------------------------------*
*&      Form  LIST_OF_RELEASED_INVOICES
*&---------------------------------------------------------------------*
*       Fill T_ARBKP with released invoices
*----------------------------------------------------------------------*
*      -->TI_ARBKP  all invoice header
*      -->T_RBKP_BLOCKED  released invoices
*      <--TE_ARBKP  invoice header of released invoices
*----------------------------------------------------------------------*
FORM LIST_OF_RELEASED_INVOICES TABLES ti_arbkp TYPE mrm_tab_arbkp
                               t_rbkp_blocked TYPE mrm_tab_rbkp_blocked
                               te_arbkp TYPE mrm_tab_arbkp.

  data: s_rbkp_blocked TYPE mrm_rbkp_blocked,
        s_arbkp  type mrm_arbkp.

  loop at t_rbkp_blocked into s_rbkp_blocked.
    read table ti_arbkp into s_arbkp
                       with key     BUKRS = s_rbkp_blocked-BUKRS
                                    Gjahr = s_rbkp_blocked-GJAHR
                                    BELNR = s_rbkp_blocked-BELNR.
    if sy-subrc eq 0.
      append s_arbkp to te_arbkp.
    endif.
  endloop.

ENDFORM.                    " LIST_OF_RELEASED_INVOICES
