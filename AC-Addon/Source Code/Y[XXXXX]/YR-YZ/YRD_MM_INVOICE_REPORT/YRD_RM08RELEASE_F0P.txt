*&---------------------------------------------------------------------*
*&  Include           YRD_RM08RELEASE_F0P
*&---------------------------------------------------------------------*

*---------------------------------------------------------------------*
*       FORM  INVALID_BLOCKING_REASON                                 *
*---------------------------------------------------------------------*
*   nicht g¨¹ltige Sperrgr¨¹nde farbig darstellen                       *
*   unvollst#niger Beleg (wegen Eink#ufergruppe)  farbig darstellen   *
*---------------------------------------------------------------------*
FORM invalid_blocking_reason TABLES t_arseg TYPE mrm_tab_arseg.

  DATA: s_arseg TYPE mrm_arseg,
        t_color TYPE slis_t_specialcol_alv WITH HEADER LINE.

  DATA: l_info_valid TYPE char40,
        l_info_invalid  TYPE char40,
        l_info_err TYPE char40.
  DATA: icon_disp_invalid TYPE icon_release,
        icon_disp_valid TYPE icon_release,
        Enh_switch_active TYPE sfw_switchpos,
        icon_display_err TYPE icon_release.

  l_info_invalid = text-067.
  l_info_valid  = text-071.
  l_info_err   = text-070.

* icon, blocking reason invalid
  CALL FUNCTION 'ICON_CREATE'
    EXPORTING
      name   = 'ICON_NO_STATUS'
      info   = l_info_invalid
    IMPORTING
      RESULT = icon_disp_invalid
    EXCEPTIONS
      OTHERS = 0.
* icon, blocking reason still valid
  CALL FUNCTION 'ICON_CREATE'
    EXPORTING
      name   = 'ICON_NO_STATUS'
      info   = l_info_valid
    IMPORTING
      RESULT = icon_disp_valid
    EXCEPTIONS
      OTHERS = 0.
* icon, status error
  CALL FUNCTION 'ICON_CREATE'
    EXPORTING
      name   = 'ICON_RED_LIGHT'
      info   = l_info_err
    IMPORTING
      RESULT = icon_display_err
    EXCEPTIONS
      OTHERS = 0.

  CLEAR: s_arseg.

  LOOP AT t_arseg INTO s_arseg.
    IF NOT s_arseg-spgrp IS INITIAL.
      s_arseg-icon_spgrp = icon_disp_valid.
    ENDIF.
    IF NOT s_arseg-spgrm IS INITIAL.
      s_arseg-icon_spgrm = icon_disp_valid.
    ENDIF.
    IF NOT s_arseg-spgrt IS INITIAL.
      s_arseg-icon_spgrt = icon_disp_valid.
    ENDIF.
    IF NOT s_arseg-spgrg IS INITIAL.
      s_arseg-icon_spgrg = icon_disp_valid.
    ENDIF.
    IF NOT s_arseg-spgrs IS INITIAL.
      s_arseg-icon_spgrs = icon_disp_valid.
    ENDIF.
    IF NOT s_arseg-spgrc IS INITIAL.
      s_arseg-icon_spgrc = icon_disp_valid.
    ENDIF.
    IF NOT s_arseg-spgrq IS INITIAL.
      s_arseg-icon_spgrq = icon_disp_valid.
    ENDIF.
    CLEAR: t_color.
    REFRESH: t_color.
    IF s_arseg-spgrm_inv = 'X'.
      s_arseg-spgrm_new = 'X'.
      t_color-fieldname = 'SPGRM'.
      t_color-color-col = 3.
      t_color-color-int = 0.
      APPEND t_color.
* background color for icon, if blocking reason is invalid
      t_color-fieldname = 'ICON_SPGRM'.
      t_color-color-col = 3.
      t_color-color-int = 0.
      APPEND t_color.
      s_arseg-icon_spgrm = icon_disp_invalid.
    ENDIF.
    IF s_arseg-spgrp_inv = 'X'.
      s_arseg-spgrp_new = 'X'.
      t_color-fieldname = 'SPGRP'.
      t_color-color-col = 3.
      t_color-color-int = 0.
      APPEND t_color.
* background color for icon, if blocking reason is invalid
      t_color-fieldname = 'ICON_SPGRP'.
      t_color-color-col = 3.
      t_color-color-int = 0.
      APPEND t_color.
      s_arseg-icon_spgrp = icon_disp_invalid.
    ENDIF.
    IF s_arseg-spgrc_inv = 'X'.
      s_arseg-spgrc_new = 'X'.
      t_color-fieldname = 'SPGRC'.
      t_color-color-col = 3.
      t_color-color-int = 0.
      APPEND t_color.
* background color for icon, if blocking reason is invalid
      t_color-fieldname = 'ICON_SPGRC'.
      t_color-color-col = 3.
      t_color-color-int = 0.
      APPEND t_color.
      s_arseg-icon_spgrc = icon_disp_invalid.
    ENDIF.
    IF s_arseg-spgrt_inv = 'X'.
      s_arseg-spgrt_new = 'X'.
      t_color-fieldname = 'SPGRT'.
      t_color-color-col = 3.
      t_color-color-int = 0.
      APPEND t_color.
* background color for icon, if blocking reason is invalid
      t_color-fieldname = 'ICON_SPGRT'.
      t_color-color-col = 3.
      t_color-color-int = 0.
      APPEND t_color.
      s_arseg-icon_spgrt = icon_disp_invalid.
    ENDIF.
*-----Req133493 Ench_MRBR
* Check Status of EnhPack Switch
  CALL METHOD CL_SFW_GET_JFMIPSW_STATUS=>GET_SWITCH_STATUS
    IMPORTING
      STATUS = Enh_switch_active.
    IF Enh_switch_active = 'T'.
      PERFORM vpack_mrmbadi_invalid_block IN PROGRAM saplvpack_mrmbadi IF FOUND
                                              USING icon_disp_invalid
                                           CHANGING s_arseg
                                                    t_color[].
    ENDIF.
*---- Eink#ufergruppe nicht eindeutig -------------------------------- *
    IF s_arseg-x_incomplete = 'X'.
      s_arseg-box = '0'.
      t_color-fieldname = 'BELNR'.
      t_color-color-col = 6.
      t_color-color-int = 0.
      APPEND t_color.
      s_arseg-status = icon_display_err.
    ENDIF.
    s_arseg-colinfo = t_color[].
    MODIFY t_arseg FROM s_arseg.
  ENDLOOP.

ENDFORM.                    "invalid_blocking_reason
