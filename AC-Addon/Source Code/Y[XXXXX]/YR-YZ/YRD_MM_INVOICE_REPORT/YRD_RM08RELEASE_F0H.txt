*&---------------------------------------------------------------------*
*&  Include           YRD_RM08RELEASE_F0H
*&---------------------------------------------------------------------*

*---------------------------------------------------------------------*
*       FORM DOCUMENT_CHANGE_CREATE                                   *
*---------------------------------------------------------------------*
* #nderungen der Belege in einer Tabelle sammeln                      *
*---------------------------------------------------------------------*
FORM document_change_create
                     TABLES t_arbkp TYPE mrm_tab_arbkp
                            t_arseg TYPE mrm_tab_arseg
                            t_upd_arseg TYPE mrm_tab_upd_arseg
                            t_rbkp_blocked TYPE mrm_tab_rbkp_blocked.

  DATA:
    s_arbkp TYPE mrm_arbkp,
    s_arseg TYPE mrm_arseg,
    s_upd_arseg TYPE mrm_upd_arseg,
    s_rbkp_blocked TYPE mrm_rbkp_blocked.

  REFRESH: t_upd_arseg,
           t_rbkp_blocked.

ENHANCEMENT-SECTION     rm08release_f0h_01 SPOTS es_rm08release.
  LOOP AT t_arbkp INTO s_arbkp.
    IF s_arbkp-mrm_zlspr_new IS INITIAL.   " Rechnung wird freigeben
      MOVE-CORRESPONDING s_arbkp TO s_rbkp_blocked.
      MOVE sy-mandt TO s_rbkp_blocked-mandt.
      APPEND s_rbkp_blocked TO t_rbkp_blocked.
      CONTINUE.
    ENDIF.

*-- check ob Sperrgr¨¹nde gel#scht wurden ----------------------------*
    IF  s_arbkp-mrm_zlspr = c_mrm_zlspr_a.
      LOOP AT t_arseg INTO s_arseg
                      WHERE belnr = s_arbkp-belnr
                      AND   gjahr = s_arbkp-gjahr.
        IF    ( NOT s_arseg-spgrg IS INITIAL
                AND s_arseg-spgrg_new IS INITIAL )
          OR  ( NOT s_arseg-spgrm IS INITIAL
                AND s_arseg-spgrm_new IS INITIAL )
          OR  ( NOT s_arseg-spgrp IS INITIAL
                AND s_arseg-spgrp_new IS INITIAL )
          OR  ( NOT s_arseg-spgrc IS INITIAL
                AND s_arseg-spgrc_new IS INITIAL )
          OR  ( NOT s_arseg-spgrs IS INITIAL
                AND s_arseg-spgrs_new IS INITIAL )
          OR  ( NOT s_arseg-spgrt IS INITIAL
                AND s_arseg-spgrt_new IS INITIAL )
          OR  ( NOT s_arseg-spgrq IS INITIAL
                AND s_arseg-spgrq_new IS INITIAL )
          OR  ( NOT s_arseg-spgrext IS INITIAL                   "NCF IV
                AND s_arseg-spgrext_new IS INITIAL ).            "NCF IV
          MOVE-CORRESPONDING s_arseg TO s_upd_arseg.
          MOVE: s_arseg-spgrg_new TO s_upd_arseg-spgrg,
                s_arseg-spgrm_new TO s_upd_arseg-spgrm,
                s_arseg-spgrp_new TO s_upd_arseg-spgrp,
                s_arseg-spgrc_new TO s_upd_arseg-spgrc,
                s_arseg-spgrs_new TO s_upd_arseg-spgrs,
                s_arseg-spgrt_new TO s_upd_arseg-spgrt,
                s_arseg-spgrq_new TO s_upd_arseg-spgrq,
                s_arseg-spgrext_new TO s_upd_arseg-spgrext.      "NCF IV
          APPEND s_upd_arseg TO t_upd_arseg.
        ENDIF.
      ENDLOOP.
* ------------ alle Sperrgr¨¹nde der Zeile gel#scht ? ----------------*
      LOOP AT t_arseg  INTO s_arseg
                      WHERE belnr = s_arbkp-belnr
                      AND   gjahr = s_arbkp-gjahr
                      AND   NOT ( spgrg_new IS INITIAL
                              AND spgrm_new IS INITIAL
                              AND spgrp_new IS INITIAL
                              AND spgrc_new IS INITIAL
                              AND spgrs_new IS INITIAL
                              AND spgrt_new IS INITIAL
                              AND spgrq_new IS INITIAL
                              AND spgrext_new IS INITIAL         "NCF IV
                              AND x_incomplete IS INITIAL ).
        EXIT.
      ENDLOOP.
      IF sy-subrc NE 0.                "alle Sperrgr¨¹nde gel#scht
        MOVE-CORRESPONDING s_arbkp TO s_rbkp_blocked.
        MOVE sy-mandt TO s_rbkp_blocked-mandt.
        APPEND s_rbkp_blocked TO t_rbkp_blocked.
      ENDIF.
    ENDIF.
  ENDLOOP.
END-ENHANCEMENT-SECTION.

ENDFORM.                    "document_change_create
*&---------------------------------------------------------------------*
*&      Form  Changedocuments_create
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_TAB_UPD_ARSEG  text
*----------------------------------------------------------------------*
FORM changedocuments_create TABLES
                                t_arbkp TYPE mrm_tab_arbkp
                                t_rbkp_blocked TYPE mrm_tab_rbkp_blocked
                                ti_arseg TYPE mrm_tab_arseg
                                t_upd_arseg TYPE mrm_tab_upd_arseg.

  DATA: tab_rseg_old LIKE mrmrseg OCCURS 10,
        tab_rseg_new LIKE mrmrseg OCCURS 10,
        tab_rbco_old LIKE mrmrbco OCCURS 10,
        tab_rbco_new LIKE mrmrbco OCCURS 10,
        tab_rbma_old LIKE mrmrbma OCCURS 10,
        tab_rbma_new LIKE mrmrbma OCCURS 10.
  DATA: tab_ivext_old LIKE mrmivext OCCURS 10,                  "NCF IV
        tab_ivext_new LIKE mrmivext OCCURS 10.                  "NCF IV

  DATA: s_upd_arseg             TYPE mrm_upd_arseg,
        s_arseg                 TYPE mrm_arseg,
        s_rseg                  TYPE rseg,
        s_rbco                  TYPE rbco,
        s_rbma                  TYPE rbma,
        s_arbkp                 TYPE mrm_arbkp,
        s_rbkp_blocked          TYPE rbkp_blocked,
        s_item_rbkp_blocked     TYPE mrm_rbkp_blocked,
        f_update_rseg           TYPE c,
        f_update_rbco           TYPE c,
        f_update_rbma           TYPE c,
        f_update_rbkp_blocked   TYPE c.
  DATA: f_update_ivext          TYPE c.                         "NCF IV

  DATA:   objectid  LIKE  cdhdr-objectid,
          x_rbkp LIKE rbkp,
          icdtxt_incominginvoice LIKE cdtxt OCCURS 10,
          xrbco      LIKE  mrmrbco OCCURS 10,
          xrbma      LIKE  mrmrbma OCCURS 10,
          xrbtx      LIKE  mrmrbtx OCCURS 10,
          xrbvs      LIKE  mrmrbvs OCCURS 10,
          xrbws      LIKE  mrmrbws OCCURS 10.


  LOOP AT t_arbkp INTO s_arbkp.

    REFRESH: tab_rseg_old,
             tab_rseg_new,
             tab_rbco_old,
             tab_rbco_new,
             tab_rbma_old,
             tab_rbma_new,
             tab_ivext_old,                                     "NCF IV
             tab_ivext_new.                                     "NCF IV

* -- check whether the invoice will be released
    READ TABLE t_rbkp_blocked INTO s_item_rbkp_blocked
                      WITH KEY belnr = s_arbkp-belnr
                               gjahr = s_arbkp-gjahr.
    IF sy-subrc NE 0 OR s_item_rbkp_blocked-subrc NE 0.
      CLEAR f_update_rbkp_blocked.
    ELSE.
*---- if yes
      MOVE-CORRESPONDING s_item_rbkp_blocked TO s_rbkp_blocked.
      f_update_rbkp_blocked = 'D'.
    ENDIF.
* -- check whether blocking reasons will be deleted
    READ TABLE t_upd_arseg INTO s_upd_arseg
                      WITH KEY belnr = s_arbkp-belnr
                               gjahr = s_arbkp-gjahr.
    IF sy-subrc NE 0.
      CLEAR f_update_rseg.
    ELSE.
*---- if yes : create rseg_old and rseg_newe
      LOOP AT t_upd_arseg INTO s_upd_arseg
                          WHERE belnr = s_arbkp-belnr
                          AND   gjahr = s_arbkp-gjahr.
        READ TABLE ti_arseg INTO s_arseg
                            WITH KEY belnr = s_upd_arseg-belnr
                                     gjahr = s_upd_arseg-gjahr
                                     buzei = s_upd_arseg-buzei
                                     koart = s_upd_arseg-koart.
        IF sy-subrc NE 0.
          MESSAGE x607 WITH 'CHANGEDOCUMENT_CREATE'.
        ENDIF.
        CASE s_arseg-koart.
          WHEN c_koart_b.
            MOVE-CORRESPONDING s_arseg TO s_rseg.
ENHANCEMENT-POINT rm08release_f0h_02 SPOTS es_rm08release.
            MOVE sy-mandt TO s_rseg-mandt.
            APPEND s_rseg TO tab_rseg_old.
            MOVE-CORRESPONDING s_upd_arseg TO s_rseg.
ENHANCEMENT-POINT rm08release_f0h_03 SPOTS es_rm08release.
            MOVE sy-mandt TO s_rseg-mandt.
            APPEND s_rseg TO tab_rseg_new.
            f_update_rseg = 'U'.
          WHEN c_koart_s.
            MOVE-CORRESPONDING s_arseg TO s_rbco.
            MOVE sy-mandt TO s_rbco-mandt.
            APPEND s_rbco TO tab_rbco_old.
            MOVE-CORRESPONDING s_upd_arseg TO s_rbco.
            MOVE sy-mandt TO s_rbco-mandt.
            APPEND s_rbco TO tab_rbco_new.
            f_update_rbco = 'U'.
          WHEN c_koart_m.
            MOVE-CORRESPONDING s_arseg TO s_rbma.
            MOVE sy-mandt TO s_rbma-mandt.
            APPEND s_rbma TO tab_rbma_old.
            MOVE-CORRESPONDING s_upd_arseg TO s_rbma.
            MOVE sy-mandt TO s_rbma-mandt.
            APPEND s_rbma TO tab_rbma_new.
            f_update_rbma = 'U'.
        ENDCASE.

      ENDLOOP.
    ENDIF.

    IF gv_ivext_changed = 'X'.                                 "NCF IV
      f_update_ivext = 'U'.
      PERFORM ivext_changedocuments USING    s_arbkp
                                             ti_arseg[]
                                    CHANGING tab_ivext_new
                                             tab_ivext_old.
    ENDIF.

    MOVE s_arbkp-belnr TO objectid.
    MOVE s_arbkp-gjahr TO objectid+10.
    CALL FUNCTION 'MRM_INVOICE_CHANGEDOC_WRITE'          "NCF IV
      EXPORTING
        objectid               = objectid
        tcode                  = sy-tcode
        utime                  = sy-uzeit
        udate                  = sy-datum
        username               = sy-uname
        upd_rbco               = f_update_rbco
        n_rbkp                 = x_rbkp
        o_rbkp                 = x_rbkp
        n_rbkp_blocked         = s_rbkp_blocked
        o_rbkp_blocked         = s_rbkp_blocked
        upd_rbkp_blocked       = f_update_rbkp_blocked
        upd_rbma               = f_update_rbma
        upd_rseg               = f_update_rseg
        upd_ivext              = f_update_ivext          "NCF IV
      TABLES
        icdtxt_incominginvoice = icdtxt_incominginvoice
        xivext                 = tab_ivext_new           "NCF IV
        yivext                 = tab_ivext_old           "NCF IV
        xrbco                  = tab_rbco_new
        yrbco                  = tab_rbco_old
        xrbma                  = tab_rbma_new
        yrbma                  = tab_rbma_old
        xrbtx                  = xrbtx
        yrbtx                  = xrbtx
        xrbvs                  = xrbvs
        yrbvs                  = xrbvs
        xrbws                  = xrbws
        yrbws                  = xrbws
        xrseg                  = tab_rseg_new
        yrseg                  = tab_rseg_old.

  ENDLOOP.




ENDFORM.                               " Changedocuments_create
