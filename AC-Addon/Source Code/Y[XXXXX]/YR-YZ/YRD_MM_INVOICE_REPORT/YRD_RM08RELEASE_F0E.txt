*&---------------------------------------------------------------------*
*&  Include           YRD_RM08RELEASE_F0E
*&---------------------------------------------------------------------*

*---------------------------------------------------------------------*
*     Form  BLOCKING_REASON_VALIDITY_CHECK
*---------------------------------------------------------------------*
*     Pr¨¹fen, ob die Sperrgr¨¹nde Menge, Preis, Termin und
*     Qualit#t noch g¨¹ltig sind.
*---------------------------------------------------------------------*
FORM  blocking_reason_validity_check
                      USING    i_remng      LIKE       ek08r-remng
                               i_wemng      LIKE       ek08r-wemng
                               i_netwr      LIKE       ek08r-netwr
                               i_bsmng      LIKE       ek08r-bsmng
                               i_bpumz      LIKE       ek08r-bpumz
                               i_bpumn      LIKE       ek08r-bpumn
                               i_peinh      LIKE       ek08r-peinh
                               i_refwr      LIKE       ek08r-refwr
                               i_eindt      LIKE       ek08r-eindt
                               i_pstyp      LIKE       ek08r-pstyp
                               i_wepos      LIKE       ek08r-wepos
                               i_noquantity LIKE       ek08r-noquantity
                               i_arseg      STRUCTURE  arseg
                               i_actvalue   LIKE       ek08r-actvalue
                               i_sumlimit   LIKE       ek08r-sumlimit
                               i_limitwaers LIKE       ek08r-waers
                               i_kdatb      LIKE       ek08r-kdatb
                               i_kdate      LIKE       ek08r-kdate
                      CHANGING e_dmeng      LIKE       arseg-dmeng
                               e_dwert      LIKE       arseg-dwert
                               e_dtage      LIKE       arseg-dtage
                               e_spgrm_inv  LIKE       arseg-spgrm_inv
                               e_spgrp_inv  LIKE       arseg-spgrp_inv
                               e_spgrt_inv  LIKE       arseg-spgrt_inv
                               e_spgrc_inv  LIKE       arseg-spgrc_inv
                               e_spgrm_new  LIKE       arseg-spgrm_new
                               e_spgrp_new  LIKE       arseg-spgrp_new
                               e_spgrt_new  LIKE       arseg-spgrt_new
                               e_spgrc_new  LIKE       arseg-spgrc_new.

  DATA: f_wwert LIKE arseg-wwert,
        f_kurs LIKE arseg-kursf,
        rc LIKE sy-subrc.

  IF NOT i_arseg-wwert IS INITIAL.
    f_wwert = i_arseg-wwert.
  ELSE.
    f_wwert = sy-datum.
  ENDIF.
* ----- Blocking reason M --------------------------------------------*
  IF NOT i_arseg-spgrm IS INITIAL.
    CALL FUNCTION 'MRM_BLOCK_REASON_VAL_CHECK_M'
      EXPORTING
        i_remng     = i_remng
        i_wemng     = i_wemng
        i_netwr     = i_netwr
        i_bsmng     = i_bsmng
        i_bpumz     = i_bpumz
        i_bpumn     = i_bpumn
        i_peinh     = i_peinh
        i_wepos     = i_wepos
        i_tbtkz     = i_arseg-tbtkz
        i_bukrs     = i_arseg-bukrs
        i_waers     = i_arseg-waers
        i_wwert     = f_wwert
        i_kursf     = i_arseg-kursf
        i_hswae     = i_arseg-hswae
      IMPORTING
        e_spgrm_inv = e_spgrm_inv
        e_dmeng     = e_dmeng.
  ENDIF.

* ----- Blocking reason P --------------------------------------------*
  IF NOT i_arseg-spgrp IS INITIAL.
    IF ( i_pstyp = '1' ) AND ( i_arseg-xekbz IS INITIAL ).

* --- Case: Blanket PO without planned freight cost -> Limit check ---*
      IF i_limitwaers = i_arseg-waers.
*       Exchange rate from invoice is still relevant
        f_kurs = i_arseg-kursf.
      ELSE.
*       Current exchange rate will be read from the currency table
        f_kurs = 0.
      ENDIF.
      CALL FUNCTION 'MRM_LIMIT_CHECK'
        EXPORTING
          i_actvalue = i_actvalue
          i_sumlimit = i_sumlimit
          i_bukrs    = i_arseg-bukrs
          i_waers    = i_limitwaers
          i_hswae    = i_arseg-hswae
          i_kursf    = f_kurs
          i_wwert    = i_arseg-wwert
        IMPORTING
          e_rc       = rc.
      e_dwert = i_actvalue - i_sumlimit.
      IF rc NE 0.
        e_spgrp_inv = ' '.
      ELSE.
        e_spgrp_inv = 'X'.
      ENDIF.
    ELSE.

ENHANCEMENT-POINT RM08RELEASE_F0E_01 SPOTS ES_RM08RELEASE.
      CALL FUNCTION 'MRM_BLOCK_REASON_VAL_CHECK_P'
        EXPORTING
          i_remng      = i_remng
          i_refwr      = i_refwr
          i_netwr      = i_netwr
          i_bsmng      = i_bsmng
          i_bpumz      = i_bpumz
          i_bpumn      = i_bpumn
          i_peinh      = i_peinh
          i_bukrs      = i_arseg-bukrs
          i_waers      = i_arseg-waers
          i_wwert      = f_wwert
          i_kursf      = i_arseg-kursf
          i_hswae      = i_arseg-hswae
          i_noquantity = i_noquantity
        IMPORTING
          e_spgrp_inv  = e_spgrp_inv
          e_dwert      = e_dwert.
    ENDIF.
  ENDIF.

* ----- Blocking reason T --------------------------------------------*
  IF NOT i_arseg-spgrt IS INITIAL.
* ------------ no validity check for blanket PO ----------------------*
    IF i_pstyp NE '1'.
      CALL FUNCTION 'MRM_BLOCK_REASON_VAL_CHECK_T'
        EXPORTING
          i_eindt     = i_eindt
          i_wrbtr     = i_arseg-wrbtr
          i_bukrs     = i_arseg-bukrs
          i_waers     = i_arseg-waers
          i_wwert     = f_wwert
          i_kursf     = i_arseg-kursf
          i_hswae     = i_arseg-hswae
        IMPORTING
          e_spgrt_inv = e_spgrt_inv
          e_dtage     = e_dtage.
    ELSE.
      CLEAR e_spgrt_inv.
      CALL FUNCTION 'MRM_VALIDITY_PERIOD_CHECK'
        EXPORTING
          I_KDATB     = i_kdatb
          I_KDATE     = i_kdate
          I_DATE      = i_arseg-budat
          I_WERKS     = i_arseg-werks
        IMPORTING
          E_DAYS      = e_dtage
          E_RC        = rc.
      IF rc EQ 0.
        e_spgrt_inv = 'X'.
      ENDIF.
    ENDIF.
  ENDIF.

* ----- Blocking reason Q --------------------------------------------*
  IF NOT i_arseg-spgrc IS INITIAL.
    CALL FUNCTION 'MRM_BLOCK_REASON_VAL_CHECK_C'
      EXPORTING
        i_ebeln     = i_arseg-ebeln
        i_ebelp     = i_arseg-ebelp
        i_lfgja     = i_arseg-lfgja
        i_lfbnr     = i_arseg-lfbnr
        i_lfpos     = i_arseg-lfpos
        i_ssqss     = i_arseg-ssqss
      IMPORTING
        e_spgrc_inv = e_spgrc_inv.

  ENDIF.

*-- Delete invalid Blocking reasons when releasing automatically ----*
  CHECK NOT release_auto IS INITIAL.
  IF NOT e_spgrm_inv IS INITIAL.
    CLEAR e_spgrm_new.
  ENDIF.
  IF NOT e_spgrp_inv IS INITIAL.
    CLEAR e_spgrp_new.
  ENDIF.
  IF NOT e_spgrt_inv IS INITIAL.
    CLEAR e_spgrt_new.
  ENDIF.
  IF NOT e_spgrc_inv IS INITIAL.
    CLEAR e_spgrc_new.
  ENDIF.

ENDFORM.                               "BLOCKING_REASON_VALIDITY_CHECK
