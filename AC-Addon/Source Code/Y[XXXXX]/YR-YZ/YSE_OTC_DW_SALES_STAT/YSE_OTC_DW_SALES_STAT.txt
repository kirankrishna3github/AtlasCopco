*&---------------------------------------------------------------------*
*& Report  YSE_OTC_DW_SALES_STAT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  YSE_OTC_DW_SALES_STAT.

***************************************************  PROGRAM  INFO

* Program     :                                                        *
* -------------------------------------------------------------------- *
* Author      : Ulf Davidsson TOOUD                   *
* Date        : DD.MM.YYYY                                             *
* Last change : DD.MM.YYYY    (Please adjust date at changes)          *
* -------------------------------------------------------------------- *
* Goal        : Sales statistics in a table                            *
* Process     : OTC                                                    *
* Reference   : ZOTC_JM2B27A_DW_SALES_STAT in ID0                      *
*************************************************   MODIFICATIONS    ***
*  START     10.08.2010  tooud       Delelop chaos,                    *
*                                    hopefully with a good solution    *
*  NOTES:  ztdworstat~matnr   must have an index ! now in comment mode *
*          ztdworstat~r_date  must have  index                         *
*          vbrk~erdat         must have  index                         *
*                                                                      *
* NOTE ! This program YSE_OTC_DW_SALES_STAT fills table ZTDWSALES.     *
*        The data will be stored in the table to next day, but         *
*        it is just to created the statisics you want to have          *
*                                                                      *
* NOTE ! The program YSE_OTC_DW_ORSTAT must have been executed with    *
*        the right data and filled table ztdworstat                    *
*                                                                      *
* NOTE ! Table ZTDWINPUT needs to be updated (via SE16) with TAX       *
*        and COST parameters.                                          *
*                                                                      *
*                                                                      *
*  X00001    14.02.2012  tooud       added MVI or GIN code             *
*                                    Web trade                         *
*                                    Sales person                      *

TABLES: ztdworstat,
        vbak,
        vbkd,
        vbap,
        vbrk.



TYPES: BEGIN OF ts_sorstat,
         vbeln         TYPE ztdworstat-vbeln,  " Pri
         posnr         TYPE ztdworstat-posnr,  " Pri
         tstamps       TYPE ztdworstat-tstamps,  " Pri
         linetype      TYPE ztdworstat-linetype, " Pri
         chngind       TYPE ztdworstat-chngind,
         matnr         TYPE ztdworstat-matnr,   " matnr if text
         bismt         TYPE mara-bismt,         " matnr if num
         maktx         TYPE makt-maktx,                     " descr1
         prodh         TYPE ztdworstat-prodh,
         kzwi1         TYPE ztdworstat-kzwi1,
         netwr         TYPE ztdworstat-netwr,

         r_date        TYPE ztdworstat-r_date,
         r_time        TYPE ztdworstat-r_time,
         stdcost       TYPE ztdworstat-stdcost,
         stdcost_waers TYPE ztdworstat-stdcost_waers,
         r_curr_new    TYPE ztdworstat-r_curr_new,
         r_curr_old    TYPE ztdworstat-r_curr_old,
         kwmeng        TYPE ztdworstat-kwmeng,
         meins         TYPE ztdworstat-meins,
         creation_date TYPE ztdworstat-creation_date,
         creation_time TYPE ztdworstat-creation_time,

         creation_name TYPE ztdworstat-creation_name,
         source        TYPE ztdworstat-source,

         vkorg         TYPE ztdworstat-vkorg,     " Sales org

         VTWEG         TYPE VBAK-VTWEG,           " Dist channel = 01
         SPART         TYPE VBAK-SPART,           " Division 01 = IT
         kunnr         TYPE vbak-kunnr,
         bstnk         TYPE vbak-bstnk,
         BUKRS_VF      TYPE ztdworstat-BUKRS_VF,
         COST          TYPE ztdworstat-COST,
         TAX           TYPE ztdworstat-TAX,

         vkbur         TYPE vbak-vkbur,
         vbtyp         TYPE vbak-vbtyp, " Order type
         vkgrp         TYPE vbak-vkgrp,

         kvgr1         TYPE vbak-kvgr1,
         kvgr2         TYPE vbak-kvgr2,
         kvgr3         TYPE vbak-kvgr3,
         kvgr4         TYPE vbak-kvgr4,
         kvgr5         TYPE vbak-kvgr5,
         auart         TYPE vbak-auart,
         knumv         TYPE vbak-knumv,
         AUGRU         TYPE VBAK-AUGRU,
         kdgrp         TYPE vbkd-kdgrp,
         BZIRK         TYPE vbkd-BZIRK,

         konda         TYPE vbkd-konda,
         KURSK         TYPE VBKD-KURSK,
         INCO1         TYPE VBKD-INCO1,
         bstkd_e       TYPE vbkd-bstkd_e,
         dispr         TYPE marc-dispr,
         begru         TYPE mara-begru,
         werks         TYPE vbap-werks,
         arktx         TYPE vbap-arktx,
         antlf         TYPE vbap-antlf,
         lprio         TYPE vbap-lprio,

         pstyv         TYPE vbap-pstyv,

         ORT01         TYPE T001-ORT01,
         LAND1         TYPE T001-LAND1,
         RCOMP         TYPE T001-RCOMP,
         BUTXT         TYPE T001-BUTXT,
         WAERS         TYPE T001-WAERS,
         name1         TYPE kna1-name1,
         NAME3         TYPE KNA1-NAME3,
         BRAN1         TYPE KNA1-BRAN1,
         VTEXT         TYPE TBRCT-VTEXT,
         LAND2         TYPE KNA1-LAND1  ,

         REGIO         TYPE Kna1-REGIO,
         BSARK	  TYPE VBKD-BSARK,
         IHREZ	  TYPE VBKD-IHREZ,
         PRCTR	  TYPE VBAP-PRCTR,	
         PERNR	  TYPE	vbpa-PERNR,
         VORNA	  TYPE	PA0002-VORNA,
         NACHN	  TYPE	PA0002-NACHN,

         vv_vkgrp      TYPE knvv-vkgrp,
         vv_vkbur      TYPE knvv-vkbur,
         vv_kvgr1      TYPE knvv-kvgr1,
         vv_kvgr2      TYPE knvv-kvgr2,
         vv_kvgr3      TYPE knvv-kvgr3,
         vv_kvgr4      TYPE knvv-kvgr4,
         vv_kvgr5      TYPE knvv-kvgr5,
         mwst          TYPE konv-kbetr,
         po_vbeln      TYPE vbfa-vbeln,
         PO_POSNR      TYPE vbfa-POSNN,
         LIFNR         TYPE ekko-LIFNR,


*         vprs         TYPE konv-kbetr,
*         vprs_waers   TYPE konv-waers,


*   Invoice only fields
         invoice       TYPE vbrk-vbeln,
         inv_posnr     TYPE vbrp-posnr,

*         commcode     TYPE zbapiptdif_jm2b27a-commcode,
         fkdat         TYPE vbrk-fkdat,
         ship_point    TYPE vbap-werks,
         augru_auft    TYPE vbrp-augru_auft,                "+X0019
         lifsk         TYPE vbak-lifsk,                     "+X0020
        shipto_kunnr   TYPE vbpa-kunnr,
* unders#k dessa mera st#da
         type(1)       type c,
         commcode(4)   TYPE c,
         fkart         TYPE vbrk-fkart,

       END OF ts_sorstat,



    BEGIN OF ts_invstat,
         fkart        TYPE vbrk-fkart,
         vbeln        TYPE vbrk-vbeln,    "inv_nr
         posnr        TYPE vbrp-posnr,   "inv_pos


* Also not cancellations should be considered
* as negative values !
* Use field VBRP-SHKZG instead
         sfakn        TYPE vbrk-sfakn,

         fkdat        TYPE vbrk-fkdat,

         bukrs        TYPE vbrk-bukrs,
         COST         TYPE ZTDWINPUT-COST,
         TAX          TYPE ZTDWINPUT-TAX,

         vkorg        TYPE vbrk-vkorg, " Sales Org
         vtweg        TYPE vbrk-vtweg, " Dist channel = 01
         spart        TYPE vbrk-spart, " Division 01 = IT
         vbtyp        TYPE vbrk-vbtyp, " Invoice type
         KURSK        TYPE VBKD-KURSK,


         waerk        TYPE vbrk-waerk,
         erdat        TYPE vbrk-erdat,
         erzet        TYPE vbrk-erzet,
         ernam        TYPE vbrk-ernam,
         knumv        TYPE vbrk-knumv,
         aubel        TYPE vbrp-aubel,   "ord_nr
         aupos        TYPE vbrp-aupos,   "ord_pos
         matnr        TYPE vbrp-matnr,
         bismt         TYPE mara-bismt,         " matnr if num
         maktx        TYPE makt-maktx,                      " descr1
         netwr        TYPE vbrp-netwr,
         kzwi1        TYPE vbrp-kzwi1,
         kzwi4        TYPE vbrp-kzwi4,
         fkimg        TYPE vbrp-fkimg,
         umvkz        TYPE vbrp-umvkz,
         umvkn        TYPE vbrp-umvkn,
         meins        TYPE vbrp-meins,
         shkzg        TYPE vbrp-shkzg,
         augru_auft   TYPE vbrp-augru_auft,                 "+X0019



         kunnr        TYPE vbak-kunnr,
         bstnk        TYPE vbak-bstnk,
         vkbur        TYPE vbak-vkbur,
         vkgrp        TYPE vbak-vkgrp,
         kvgr1        TYPE vbak-kvgr1,
         kvgr2        TYPE vbak-kvgr2,
         kvgr3        TYPE vbak-kvgr3,
         kvgr4        TYPE vbak-kvgr4,
         kvgr5        TYPE vbak-kvgr5,
         auart        TYPE vbak-auart,
         lifsk        TYPE vbak-lifsk,                      "+X0020

         land1        TYPE vbpa-land1,

         shipto_kunnr TYPE vbpa-kunnr,
         kdgrp        TYPE vbkd-kdgrp,
         bstkd_e      TYPE vbkd-bstkd_e,
         BZIRK        TYPE vbkd-BZIRK,
         inco1        TYPE vbkd-inco1,
         dispr        TYPE marc-dispr,
         begru        TYPE mara-begru,

         prodh        TYPE vbap-prodh,
         arktx        TYPE vbap-arktx,                      "+X0013
         werks        TYPE vbap-werks,    "ship-point
         antlf        TYPE vbap-antlf,
         lprio        TYPE vbap-lprio,                      "+X0019
         pstyv        TYPE vbap-pstyv,                      "+X0019
         konda        TYPE vbkd-konda,                      "+X0019

* Separate select
         ORT01       TYPE T001-ORT01,
*         LAND1 TYPE T001-LAND1,
         RCOMP       TYPE T001-RCOMP,
         BUTXT       TYPE T001-BUTXT,
         WAERS         TYPE T001-WAERS,

         name1       TYPE kna1-name1,
         NAME3       TYPE KNA1-NAME3,
         BRAN1       TYPE KNA1-BRAN1,
         VTEXT       TYPE TBRCT-VTEXT,
         LAND2       TYPE KNA1-LAND1  ,

         REGIO       TYPE Kna1-REGIO,
         BSARK	TYPE VBKD-BSARK,
         IHREZ	TYPE VBKD-IHREZ,
         PRCTR	TYPE VBAP-PRCTR,	
         PERNR	TYPE	vbpa-PERNR,
         VORNA	TYPE	PA0002-VORNA,
         NACHN	TYPE	PA0002-NACHN,


         vv_vkgrp    TYPE knvv-vkgrp,
         vv_vkbur    TYPE knvv-vkbur,
         vv_kvgr1    TYPE knvv-kvgr1,
         vv_kvgr2    TYPE knvv-kvgr2,
         vv_kvgr3    TYPE knvv-kvgr3,
         vv_kvgr4    TYPE knvv-kvgr4,
         vv_kvgr5    TYPE knvv-kvgr5,
         mwst        TYPE konv-kbetr,
         po_vbeln    TYPE vbfa-vbeln,
         PO_POSNR    TYPE vbfa-POSNN,
         LIFNR       TYPE ekko-LIFNR,




       END OF ts_invstat.


DATA:
       lt_sorstat  TYPE STANDARD TABLE OF ts_sorstat,
       ls_sorstat  TYPE ts_sorstat,
       lt_sorstat2  TYPE STANDARD TABLE OF ts_sorstat,
       ls_sorstat2  TYPE ts_sorstat,
       lt_invstat  TYPE STANDARD TABLE OF ts_invstat,
       ls_invstat  TYPE ts_invstat,
       lt_invstat2  TYPE STANDARD TABLE OF ts_invstat,
       ls_invstat2  TYPE ts_invstat,

       lt_dwsales  TYPE STANDARD TABLE OF ZTDWSALES,
       ls_dwsales  TYPE ZTDWSALES,

       h_curr_code type c,
       ls_konv TYPE konv,
       ls_rate TYPE TCURR-UKURS,
       ls_VALUE TYPE TCURR-UKURS,

*       ls_VALUE TYPE ZTDWSALES-CC_LIST,
       ls_date TYPE TCURR-GDATU,
       wa_date TYPE vbak-erdat,
       debug(3)    type c value 'no' .


SELECTION-SCREEN BEGIN OF BLOCK bl2 WITH FRAME.
SELECT-OPTIONS: so_crdat FOR ztdworstat-creation_date,

                so_BUKVF FOR VBAK-BUKRS_VF,
                 so_vkorg for ztdworstat-vkorg,
                so_fkart FOR vbrk-fkart,

                so_auart FOR vbak-auart,
                so_vtweg FOR vbak-vtweg,

* List of order types
* ZO01, ZO03, ZOR, ZKE, ZKB  Standard Order
* ZRE, ZRE1                 Returns
* G2, ZRK                   Credit memo req.
* LV, L2, ZD01              Debit memo req.

* KA  Consignment Pick-up
* KB  Consignment Fill-up
* KE  Consignment Issue
* KR  Consignment Returns

* ZFOC  Free of charge order
* ZLOC  L/C sales order
* ZNOB  No Backorder order
* ZSUR  Surplus Order
* ZSVC  Service Order
                so_kunnr FOR vbak-kunnr,
                so_vbeln FOR vbak-vbeln,
                so_posnr FOR vbap-posnr,

* Customer group will be used to take out sales that are made to the
* factory that once delivered the item to PTD
* Default we will exclude customer group 'PC'

                so_kdgrp FOR vbkd-kdgrp.

PARAMETERS: pa_curr TYPE waers,
            pa_debug AS CHECKBOX,

            pa_test AS CHECKBOX,
            pa_clear AS CHECKBOX.
SELECTION-SCREEN END OF BLOCK bl2.


INITIALIZATION.
  PERFORM initialization.

START-OF-SELECTION.
  PERFORM start_of_selection.


*&---------------------------------------------------------------------*
*&      Form  initialization
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM initialization .

* Yesterday created
  CLEAR so_crdat.
  so_crdat-sign = 'I'.
  so_crdat-option = 'EQ'.
  so_crdat-low = sy-datum - 1.
  APPEND so_crdat.

* Customer groups
  CLEAR so_kdgrp.
  so_kdgrp-sign = 'E'.  "exclude !!!
  so_kdgrp-option = 'EQ'.
  so_kdgrp-low = 'PC'.
  APPEND so_kdgrp.


* Sales order document types
  CLEAR so_auart.
  so_auart-sign = 'I'.
  so_auart-option = 'EQ'.

  so_auart-low = 'ZOR'. "AC Std Order
  APPEND so_auart.
  so_auart-low = 'ZOR2'. "AC Std BP Order
  APPEND so_auart.
  so_auart-low = 'Z1CR'.  "AC Credit Memo Request
  APPEND so_auart.
  so_auart-low = 'Z1DR'.  "AC Debet memo Request
  APPEND so_auart.
  so_auart-low = 'ZKE'.  "AC Consign Issue
  APPEND so_auart.

  so_auart-low = 'ZRE1'.  "AC Returns
  APPEND so_auart.
  so_auart-low = 'ZC01'. "AC Service Contract
  APPEND so_auart.

  so_auart-low = 'ZO01'.   "CC Service Sales
  APPEND so_auart.
  so_auart-low = 'ZO03'.  "CC Service Parts
  APPEND so_auart.

  CLEAR so_fkart.
  so_fkart-sign = 'I'.
  so_fkart-option = 'EQ'.
  so_fkart-low = 'ZF4'.  "Invoice
  APPEND so_fkart.

  so_fkart-low = 'ZF4'.  "Invoice
  APPEND so_fkart.
  so_fkart-low = 'ZRE1'.  "Credit for Returns
  APPEND so_fkart.
  so_fkart-low = 'Z1G2'.  "AC Credit Memo
  APPEND so_fkart.
  so_fkart-low = 'Z1L2'.  "AC Debet Memo
  APPEND so_fkart.
  so_fkart-low = 'ZF3'.  "Service Contract
  APPEND so_fkart.
  so_fkart-low = 'S1'.  "Credit Note
  APPEND so_fkart.
  so_fkart-low = 'ZF2'.  "Service Invoice
  APPEND so_fkart.


  CLEAR so_bukvf.
  so_bukvf-sign = 'I'.
*  so_fkart-sign = 'E'.  exclude !!!
  so_bukvf-option = 'EQ'.

  so_bukvf-low = 'HKGA'.
  APPEND so_bukvf.
  so_bukvf-low = 'SHTA'.
  APPEND so_bukvf.
  so_bukvf-low = 'MRUA'.
  APPEND so_bukvf.

  CLEAR so_vkorg.
  so_vkorg-sign = 'I'.
  so_vkorg-option = 'EQ'.

  so_vkorg-low = 'CN03'.
  APPEND so_vkorg.
  so_vkorg-low = 'HK03'.
  APPEND so_vkorg.
  so_vkorg-low = 'RU03'.
  APPEND so_vkorg.


  CLEAR so_vtweg.
  so_vtweg-sign = 'I'.
  so_vtweg-option = 'EQ'.
  so_vtweg-low = '01'. "sales order
  APPEND so_vtweg.
  so_vtweg-low = '11'. "service order
  APPEND so_vtweg.

  pa_curr = 'EUR'.
*  pa_werks = '0101'.
*  pa_vkorg = '0101'.
*  pa_name = 'JM2'.

ENDFORM.                    " initialization


*&---------------------------------------------------------------------*
*&      Form  start_of_selection
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM start_of_selection .

* Clear table if requested, and if not test run
  IF pa_test IS INITIAL.
    IF pa_clear IS NOT INITIAL.
      DELETE FROM ZTDWSALES.
    ENDIF.
  ENDIF.

  IF pa_debug IS not INITIAL.
    debug = 'yes'.
  ENDIF.
  DELETE FROM ZTDWDEBUG.



* picking order data

  IF pa_curr = 'EUR'.
    h_curr_code = 'E'.
  ELSEIF pa_curr = 'SEK'.
    h_curr_code = '1'.
  ELSEIF pa_curr = 'USD'.
    h_curr_code = '8'.
  ELSE.
    h_curr_code = ' '.
  ENDIF.

* Inner join on VBPA is far too slow, that is why we do the
* select afterwards

* Order select
  SELECT
       ztdworstat~vbeln  " Pri
       ztdworstat~posnr  " Pri
       ztdworstat~tstamps  " Pri
       ztdworstat~linetype " Pri
       ztdworstat~chngind

       ztdworstat~matnr   " matnr if text
       mara~bismt         " matnr if num

       ztdworstat~prodh
       ztdworstat~kzwi1
       ztdworstat~netwr
       ztdworstat~r_date
       ztdworstat~r_time
       ztdworstat~stdcost
       ztdworstat~r_curr_old
       ztdworstat~r_curr_new
       ztdworstat~stdcost_waers
       ztdworstat~kwmeng
       ztdworstat~meins

       ztdworstat~vkorg
       ztdworstat~BUKRS_VF
       ztdworstat~COST
       ztdworstat~TAX





       VBAK~VTWEG
       VBAK~SPART

       ztdworstat~creation_date
       ztdworstat~creation_time
       ztdworstat~creation_name
       ztdworstat~source
       vbak~kunnr
       vbak~bstnk
       vbak~vkbur
       vbak~vbtyp " Order type
       vbak~vkgrp
       vbak~kvgr1
       vbak~kvgr2
       vbak~kvgr3
       vbak~kvgr4
       vbak~kvgr5
       vbak~auart
       vbak~knumv


       VBAK~AUGRU

       vbkd~kdgrp
       vbkd~BZIRK
       vbkd~konda
       VBKD~KURSK
       VBKD~INCO1
       vbkd~bstkd_e
       VBKD~BSARK
       VBKD~IHREZ

       marc~dispr
       mara~begru
       vbap~werks
       vbap~arktx
       vbap~antlf
       vbap~lprio
       vbap~pstyv
       vbap~cmkua as kursk
       VBAP~PRCTR

       INTO CORRESPONDING FIELDS OF TABLE lt_sorstat
       FROM ztdworstat
       INNER JOIN vbap
         ON vbap~vbeln = ztdworstat~vbeln
        AND vbap~posnr = ztdworstat~posnr
*   ADD INDEX ON  ztdworstat~matnr !!! or it hangs
*        AND vbap~matnr = ztdworstat~matnr


       INNER JOIN mara
         ON mara~matnr = vbap~matnr

       INNER JOIN marc
         ON marc~matnr = vbap~matnr
        AND marc~werks = vbap~werks
       INNER JOIN vbak
         ON vbak~vbeln = vbap~vbeln
       INNER JOIN vbkd
         ON vbkd~vbeln = vbak~vbeln
        AND vbkd~posnr = '000000'

* lv_vkorg to pa_vkorg /Ud
      WHERE

             vbak~vbeln IN so_vbeln
         AND vbak~auart IN so_auart
         AND vbak~kunnr IN so_kunnr
         AND vbak~BUKRS_VF IN so_BUKVF
         AND vbak~vkorg IN so_vkorg
         AND  VBAK~VTWEG IN so_vtweg

         AND vbap~posnr IN so_posnr
         AND ztdworstat~r_date IN so_crdat
* add index ztdworstat~r_date
         AND vbkd~kdgrp IN so_kdgrp.



  LOOP AT lt_sorstat INTO ls_sorstat.
* Order select
    SELECT SINGLE
         T001~ORT01
         T001~LAND1
         T001~RCOMP
         T001~BUTXT
         T001~WAERS
         INTO CORRESPONDING FIELDS OF ls_sorstat
         FROM T001
         WHERE

         T001~BUKRS = ls_sorstat-BUKRS_VF.

    SELECT SINGLE

       kna1~name1
       KNA1~NAME3
       KNA1~BRAN1
       TBRCT~VTEXT
       KNA1~LAND1 as land2
       Kna1~REGIO

       INTO CORRESPONDING FIELDS OF ls_sorstat
       FROM kna1
       INNER JOIN TBRCT ON
       TBRCT~BRACO = KNA1~BRAN1
       WHERE
       kna1~kunnr = ls_sorstat-kunnr.

    SELECT SINGLE
         knvv~vkbur AS vv_vkbur
         knvv~vkgrp AS vv_vkgrp
         knvv~kvgr1 AS vv_kvgr1
         knvv~kvgr2 AS vv_kvgr2
         knvv~kvgr3 AS vv_kvgr3
         knvv~kvgr4 AS vv_kvgr4
         knvv~kvgr5 AS vv_kvgr5

         INTO CORRESPONDING FIELDS OF ls_sorstat

         FROM knvv
         WHERE

            knvv~kunnr = ls_sorstat-kunnr
        AND knvv~vkorg = ls_sorstat-vkorg
        AND knvv~vtweg = ls_sorstat-vtweg
        AND knvv~spart = ls_sorstat-spart.

    SELECT SINGLE
       makt~maktx                                           " descr1
       INTO CORRESPONDING FIELDS OF ls_sorstat
       FROM makt
       WHERE
           makt~matnr = ls_sorstat-matnr
       AND makt~spras = 'E'.

    SELECT SINGLE
       vbfa~vbeln as po_vbeln vbfa~POSNN as po_posnr ekko~lifnr
       INTO CORRESPONDING FIELDS OF ls_sorstat
       FROM vbfa
       INNER JOIN EKKO ON
       vbfa~vbeln = EKKO~ebeln

       WHERE
           vbfa~vbelv = ls_sorstat-vbeln
       AND vbfa~posnv = ls_sorstat-posnr
       AND vbfa~vbtyp_n = 'V'.



    SELECT SINGLE
        vbpa~PERNR PA0002~VORNA PA0002~NACHN
        INTO CORRESPONDING FIELDS OF ls_sorstat
        FROM vbpa
        INNER JOIN PA0002 ON
        PA0002~PERNR = vbpa~PERNR
       WHERE
                  vbpa~vbeln = ls_sorstat-vbeln
              AND vbpa~posnr = '000000'
              AND vbpa~parvw = 'VE'
              AND PA0002~BEGDA <= ls_sorstat-r_date
              AND PA0002~ENDDA >= ls_sorstat-r_date.
.


*    CLEAR ls_konv.
*    SELECT SINGLE konv~kbetr
*              INTO CORRESPONDING FIELDS OF ls_konv
*     FROM konv
*     WHERE
*         konv~knumv = ls_sorstat-knumv
*     AND konv~kposn = ls_sorstat-posnr
*     AND konv~kappl = 'V'
*     AND konv~kschl = 'MWST'.
*    IF sy-subrc = 0.
*      ls_sorstat-mwst = ls_konv-kbetr.
*    ENDIF.


*    ------------------------------
    CLEAR ls_konv.

    SELECT SINGLE
       konv~kbetr

    INTO CORRESPONDING FIELDS OF ls_konv
      FROM konv
    WHERE konv~knumv = ls_sorstat-knumv
      AND konv~kposn = ls_sorstat-posnr
      AND konv~kappl = 'V'
      AND konv~kschl = ls_sorstat-TAX.

    IF sy-subrc = 0.
      ls_sorstat-mwst = ls_konv-kbetr.
    ENDIF.


* tax shall not be included in CC_SALES.
*    IF ls_sorstat-chngind = 'P'.
    IF ls_sorstat-source ='L'.
      ls_sorstat-NETWR = ( ls_sorstat-NETWR * 1000 ) / ( 1000 + ls_sorstat-mwst ).
    ENDIF.






    IF debug = 'yes'.
      INSERT ZTDWDEBUG  FROM ls_sorstat.
    ENDIF.
    APPEND ls_sorstat TO lt_sorstat2.

  ENDLOOP.


* Invoice select
  SELECT vbrk~fkart
         vbrk~vbeln  "inv_nr
         vbrk~sfakn
         vbrk~fkdat
         vbrk~bukrs
         vbrk~vkorg
         vbrk~vtweg
         vbrk~spart
         vbrk~vbtyp
         vbrk~kurrf as kursk

         vbrk~waerk
         vbrk~erdat
         vbrk~erzet
         vbrk~ernam
         vbrk~knumv

         vbrp~posnr  "inv_pos
         vbrp~matnr
         mara~bismt         " matnr if num

         vbrp~aubel  "ord_nr
         vbrp~aupos  "ord_pos
         vbrp~netwr
         vbrp~kzwi1
         vbrp~kzwi4
         vbrp~fkimg
         vbrp~umvkz
         vbrp~umvkn
         vbrp~meins
         vbrp~shkzg
         vbrp~augru_auft

         vbak~kunnr
         vbak~bstnk
         vbak~vkbur
         vbak~vkgrp
         vbak~kvgr1
         vbak~kvgr2
         vbak~kvgr3
         vbak~kvgr4
         vbak~kvgr5
         vbak~auart
         vbak~lifsk


*         vbpa~land1
         vbpa~kunnr AS shipto_kunnr
         vbkd~kdgrp
         vbkd~bstkd_e
         vbkd~konda
         VBKD~INCO1
         vbkd~BZIRK
         VBKD~BSARK
         VBKD~IHREZ
         marc~dispr
         mara~begru

         vbap~prodh
         vbap~arktx
         vbap~werks "ship-point
         vbap~antlf
         vbap~lprio
         vbap~pstyv
         VBAP~PRCTR


         INTO CORRESPONDING FIELDS OF TABLE lt_invstat
         FROM vbrk
         INNER JOIN vbrp
         ON vbrp~vbeln = vbrk~vbeln
         INNER JOIN vbap
          ON vbap~vbeln = vbrp~aubel
         AND vbap~posnr = vbrp~aupos
         INNER JOIN mara
          ON mara~matnr = vbap~matnr

         INNER JOIN marc
           ON marc~matnr = vbap~matnr
          AND marc~werks = vbap~werks
         INNER JOIN vbak
         ON vbak~vbeln = vbap~vbeln
         INNER JOIN vbkd
           ON vbkd~vbeln = vbak~vbeln
          AND vbkd~posnr = '000000'

         INNER JOIN vbpa
           ON vbpa~vbeln = vbak~vbeln
          AND vbpa~posnr = '000000'
          AND vbpa~parvw = 'WE'

         WHERE vbrk~vkorg IN so_vkorg
           AND vbrk~fkart IN so_fkart
*            Here we use creation date, but in file
*            we give sometimesdocument date
           AND vbrk~erdat IN so_crdat
           AND vbrp~aubel IN so_vbeln
           AND vbrp~aupos IN so_posnr
           AND vbkd~kdgrp IN so_kdgrp
           AND vbak~kunnr IN so_kunnr
           AND vbak~auart IN so_auart
           AND VBAK~VTWEG IN so_vtweg
*???           AND vbrk~bukrs IN so_bukvf.
          AND vbak~bukrs_vf IN so_bukvf.


  LOOP AT lt_invstat INTO ls_invstat.
* Order select
    SELECT SINGLE
         T001~ORT01
         T001~LAND1
         T001~RCOMP
         T001~BUTXT
         T001~WAERS

         INTO CORRESPONDING FIELDS OF ls_invstat
         FROM T001
         WHERE

         T001~BUKRS = ls_invstat-BUKRS.

    SELECT SINGLE

       kna1~name1
       KNA1~NAME3
       KNA1~BRAN1
       TBRCT~VTEXT
       KNA1~LAND1 as land2
       Kna1~REGIO

       INTO CORRESPONDING FIELDS OF ls_invstat
       FROM kna1
       INNER JOIN TBRCT ON
       TBRCT~BRACO = KNA1~BRAN1
       WHERE
       kna1~kunnr = ls_invstat-kunnr.

    SELECT SINGLE
         knvv~vkbur AS vv_vkbur
         knvv~vkgrp AS vv_vkgrp
         knvv~kvgr1 AS vv_kvgr1
         knvv~kvgr2 AS vv_kvgr2
         knvv~kvgr3 AS vv_kvgr3
         knvv~kvgr4 AS vv_kvgr4
         knvv~kvgr5 AS vv_kvgr5

         INTO CORRESPONDING FIELDS OF ls_invstat

         FROM knvv
         WHERE

            knvv~kunnr = ls_invstat-kunnr
        AND knvv~vkorg = ls_invstat-vkorg
        AND knvv~vtweg = ls_invstat-vtweg
        AND knvv~spart = ls_invstat-spart.

    SELECT SINGLE
           makt~maktx                                       " descr1
           INTO CORRESPONDING FIELDS OF ls_invstat
           FROM makt
           WHERE
               makt~matnr = ls_invstat-matnr
           AND makt~spras = 'E'.


    SELECT SINGLE COST TAX
    INTO CORRESPONDING FIELDS OF ls_invstat
    FROM  ZTDWINPUT
    WHERE
        BUKRS_VF = ls_invstat-BUKRS
    AND ORDER_TYPE = ls_invstat-auart.

    SELECT SINGLE
    vbfa~vbeln as po_vbeln vbfa~POSNN as po_posnr ekko~lifnr

    INTO CORRESPONDING FIELDS OF ls_invstat
    FROM vbfa
    INNER JOIN EKKO ON
    vbfa~vbeln = EKKO~ebeln

    WHERE
        vbfa~vbelv = ls_invstat-aubel
    AND vbfa~posnv = ls_invstat-aupos
    AND vbfa~vbtyp_n = 'V'.




    SELECT SINGLE
        vbpa~PERNR PA0002~VORNA PA0002~NACHN
        INTO CORRESPONDING FIELDS OF ls_invstat
        FROM vbpa
        INNER JOIN PA0002 ON
        PA0002~PERNR = vbpa~PERNR
       WHERE
                  vbpa~vbeln = ls_invstat-aubel
              AND vbpa~posnr = '000000'
              AND vbpa~parvw = 'VE'
              AND PA0002~BEGDA <= ls_invstat-erdat
              AND PA0002~ENDDA >= ls_invstat-erdat.

    APPEND ls_invstat TO lt_invstat2.
  ENDLOOP.

  LOOP AT lt_invstat2 INTO ls_invstat2.

    CLEAR ls_sorstat.

    ls_sorstat-vbeln = ls_invstat2-aubel.      "ord_nr
    ls_sorstat-posnr = ls_invstat2-aupos.      "ord_pos

* when to use fkdat ?

    CONVERT DATE ls_invstat2-erdat TIME ls_invstat2-erzet
    INTO TIME STAMP ls_sorstat-tstamps TIME ZONE sy-zonlo.
    ls_sorstat-r_date = ls_invstat2-erdat.
    ls_sorstat-r_time = ls_invstat2-erzet.
    ls_sorstat-creation_date = ls_invstat2-erdat.
    ls_sorstat-creation_time = ls_invstat2-erzet.



    ls_sorstat-matnr = ls_invstat2-matnr.
    ls_sorstat-bismt = ls_invstat2-bismt.
    ls_sorstat-maktx = ls_invstat2-maktx.
    ls_sorstat-prodh = ls_invstat2-prodh.
    ls_sorstat-kzwi1 = ls_invstat2-kzwi1.
    ls_sorstat-netwr = ls_invstat2-netwr.



    ls_sorstat-r_curr_old = ls_invstat2-waerk.
    ls_sorstat-r_curr_new = ls_invstat2-waerk.
    ls_sorstat-kwmeng = ls_invstat2-fkimg
                     * ls_invstat2-umvkz / ls_invstat2-umvkn.
    ls_sorstat-meins = ls_invstat2-meins.


    ls_sorstat-creation_name = ls_invstat2-ernam.
    ls_sorstat-vkorg = ls_invstat2-vkorg.
    ls_sorstat-vtweg = ls_invstat2-vtweg.
    ls_sorstat-spart = ls_invstat2-spart.
    ls_sorstat-kunnr = ls_invstat2-kunnr.
    ls_sorstat-bstnk = ls_invstat2-bstnk.
    ls_sorstat-BUKRS_VF = ls_invstat2-BUKRS.
    ls_sorstat-COST = ls_invstat2-COST.
    ls_sorstat-TAX = ls_invstat2-TAX.

    ls_sorstat-vkbur = ls_invstat2-vkbur.
    ls_sorstat-vbtyp = ls_invstat2-vbtyp.

    ls_sorstat-vkgrp = ls_invstat2-vkgrp.

    ls_sorstat-kvgr1 = ls_invstat2-kvgr1.
    ls_sorstat-kvgr2 = ls_invstat2-kvgr2.
    ls_sorstat-kvgr3 = ls_invstat2-kvgr3.
    ls_sorstat-kvgr4 = ls_invstat2-kvgr4.
    ls_sorstat-kvgr5 = ls_invstat2-kvgr5.
    ls_sorstat-auart = ls_invstat2-auart.
    ls_sorstat-knumv = ls_invstat2-knumv.
    ls_sorstat-AUGRU = ls_invstat2-augru_auft.
    ls_sorstat-kdgrp = ls_invstat2-kdgrp.
    ls_sorstat-BZIRK = ls_invstat2-BZIRK.

    ls_sorstat-konda = ls_invstat2-konda.
    ls_sorstat-KURSK = ls_invstat2-KURSK.
    ls_sorstat-INCO1 = ls_invstat2-INCO1.
    ls_sorstat-bstkd_e = ls_invstat2-bstkd_e.
    ls_sorstat-dispr = ls_invstat2-dispr.
    ls_sorstat-begru = ls_invstat2-begru.
    ls_sorstat-werks = ls_invstat2-werks. " KOLLA MER 2 GR
    ls_sorstat-arktx = ls_invstat2-arktx.
    ls_sorstat-antlf = ls_invstat2-antlf.
    ls_sorstat-lprio = ls_invstat2-lprio.

    ls_sorstat-pstyv =  ls_invstat2-pstyv.


    ls_sorstat-land1 = ls_invstat2-land1.
    ls_sorstat-vkgrp = ls_invstat2-vkgrp.
    ls_sorstat-ORT01 = ls_invstat2-ORT01.
    ls_sorstat-RCOMP = ls_invstat2-RCOMP.
    ls_sorstat-BUTXT = ls_invstat2-BUTXT.
    ls_sorstat-WAERS = ls_invstat2-WAERS.

    ls_sorstat-name1 = ls_invstat2-name1.
    ls_sorstat-NAME3 = ls_invstat2-NAME3.
    ls_sorstat-BRAN1 = ls_invstat2-BRAN1.
    ls_sorstat-VTEXT = ls_invstat2-VTEXT.
    ls_sorstat-LAND2 = ls_invstat2-LAND2.


    ls_sorstat-REGIO = ls_invstat2-REGIO.

    ls_sorstat-BSARK = ls_invstat2-BSARK.
    ls_sorstat-IHREZ	 = ls_invstat2-IHREZ.
    ls_sorstat-PRCTR	 = ls_invstat2-PRCTR.	
    ls_sorstat-PERNR	 = ls_invstat2-PERNR.
    ls_sorstat-VORNA	 = ls_invstat2-VORNA.
    ls_sorstat-NACHN	 = ls_invstat2-NACHN.


    ls_sorstat-vv_vkgrp = ls_invstat2-vv_vkgrp.
    ls_sorstat-vv_vkbur = ls_invstat2-vv_vkbur.
    ls_sorstat-vv_kvgr1 = ls_invstat2-vv_kvgr1.
    ls_sorstat-vv_kvgr2 = ls_invstat2-vv_kvgr2.
    ls_sorstat-vv_kvgr3 = ls_invstat2-vv_kvgr3.
    ls_sorstat-vv_kvgr4 = ls_invstat2-vv_kvgr4.
    ls_sorstat-vv_kvgr5 = ls_invstat2-vv_kvgr5.

    ls_sorstat-po_vbeln = ls_invstat2-po_vbeln.
    ls_sorstat-PO_POSNR = ls_invstat2-PO_POSNR.
    ls_sorstat-LIFNR = ls_invstat2-LIFNR.





*         vprs         TYPE konv-kbetr,
*         vprs_waers   TYPE konv-waers,


* Invoice only fields
    ls_sorstat-invoice = ls_invstat2-vbeln.    "inv_nr
    ls_sorstat-inv_posnr = ls_invstat2-posnr.  "inv_pos
    ls_sorstat-fkdat = ls_invstat2-fkdat.
    ls_sorstat-ship_point = ls_invstat2-werks.  " ship-point
* bort    ls_sorstat-augru_auft =  ls_invstat2-augru_auft.
    ls_sorstat-lifsk = ls_invstat2-lifsk.
    ls_sorstat-shipto_kunnr = ls_invstat2-shipto_kunnr.




* ------------------------
*    CLEAR ls_konv.
*    CASE ls_invstat2-BUKRS.
*      WHEN 'MRUA'.
*        SELECT SINGLE konv~kbetr
*                    konv~kpein
*                    konv~waers
*                    INTO CORRESPONDING FIELDS OF ls_konv
*        FROM konv
*       WHERE konv~knumv = ls_invstat2-knumv
**         AND konv~kposn = ls_invstat2-posnr
*         AND konv~kappl = 'V'
*         AND konv~kschl = 'ZURS'.
*      WHEN OTHERS.
*        SELECT SINGLE konv~kbetr
*                      konv~kpein
*                      konv~waers
*                      INTO CORRESPONDING FIELDS OF ls_konv
*          FROM konv
*         WHERE konv~knumv = ls_invstat2-knumv
*           AND konv~kposn = ls_invstat2-posnr
*           AND konv~kappl = 'V'
*           AND konv~kschl = 'ZPRS'.
*    ENDCASE.

*    IF sy-subrc = 0.
*      ls_sorstat-stdcost = ls_konv-kbetr * ls_sorstat-kwmeng
*                         / ls_konv-kpein.
*      ls_sorstat-stdcost_waers = ls_konv-waers.
*    ENDIF.

*    -----------------
    CLEAR ls_konv.
    SELECT SINGLE
           konv~kbetr
           konv~kwert
           konv~kpein
           konv~waers
           INTO CORRESPONDING FIELDS OF ls_konv
FROM konv
WHERE konv~knumv = ls_invstat2-knumv
AND konv~kposn = ls_invstat2-posnr
AND konv~kappl = 'V'
AND konv~kschl = ls_invstat2-COST.


    IF sy-subrc = 0.

      IF ls_invstat2-AUART = 'ZC01'
        OR ls_invstat2-AUART = 'ZO01'.
        ls_sorstat-stdcost = ls_konv-kwert.
*      ls_sorstat-stdcost = ls_konv-kwert * ls_dw_orstat_wk-kwmeng
*                      / ls_konv-kpein.
        ls_sorstat-stdcost_waers = ls_konv-waers.
      ELSE.
        ls_sorstat-stdcost = ls_konv-kbetr * ls_sorstat-kwmeng
                          / ls_konv-kpein.
        ls_sorstat-stdcost_waers = ls_konv-waers.
      ENDIF.

    ENDIF.


*    ----------------



    ls_sorstat-linetype = 'C'. " for invoice

    IF ls_invstat2-shkzg IS INITIAL.
      ls_sorstat-chngind = '2'.
      ls_sorstat-commcode = ls_invstat2-fkart.
    ELSE.
      ls_sorstat-chngind = 'K'.

*       Take billing type of cancelled invoice as commission code
      SELECT SINGLE fkart
              INTO ls_sorstat-commcode
              FROM vbrk
             WHERE vbeln = ls_invstat2-sfakn.
    ENDIF.

    ls_sorstat-fkart = ls_invstat2-fkart.


    IF debug = 'yes'.
      INSERT ZTDWDEBUG  FROM ls_sorstat.
    ENDIF.
    APPEND ls_sorstat TO lt_sorstat2.




  ENDLOOP.


  LOOP AT lt_sorstat2 INTO ls_sorstat.


    ls_dwsales-TSTAMPS = ls_sorstat-TSTAMPS.
    ls_dwsales-LINETYPE = ls_sorstat-LINETYPE.

    IF ls_sorstat-CHNGIND = '2' OR ls_sorstat-CHNGIND = 'K'.

      ls_dwsales-TRANS = 'OI'.
      ls_dwsales-TRANS_NR = ls_sorstat-INVOICE.
      MOVE ls_sorstat-INV_POSNR TO ls_dwsales-TRANS_POSNR.

      ls_dwsales-ORDER_NR = ls_sorstat-VBELN.
      MOVE ls_sorstat-POSNR TO ls_dwsales-ORDER_POSNR.


    ELSE.
      ls_dwsales-TRANS = 'OR'.
      ls_dwsales-TRANS_NR = ls_sorstat-VBELN.
      MOVE ls_sorstat-POSNR TO ls_dwsales-TRANS_POSNR.



    ENDIF.

* Units and currencies


    ls_dwsales-CC_SALES_CURR = ls_sorstat-R_CURR_NEW.

    IF ls_sorstat-STDCOST_WAERS IS NOT INITIAL.
      ls_dwsales-CC_COGS_CURR = ls_sorstat-STDCOST_WAERS.
    ELSE.
      ls_dwsales-CC_COGS_CURR = ls_sorstat-R_CURR_NEW.
    ENDIF.

    ls_dwsales-UNIT = ls_sorstat-MEINS.

* Values and qty
    ls_dwsales-CC_LIST = ls_sorstat-KZWI1.
    ls_dwsales-CC_SALES = ls_sorstat-NETWR.
    ls_dwsales-CC_COGS = ls_sorstat-STDCOST.
    ls_dwsales-QTY = ls_sorstat-KWMENG.

* ORDER below:

    IF ls_sorstat-VBTYP = 'C'.
      ls_dwsales-TRANS_TYPE = 'Order'.

      IF ls_sorstat-CHNGIND = 'P'.
        ls_dwsales-TRANS_TYPE = 'Price adj'.

      ELSEIF ls_sorstat-CHNGIND = 'C'.
        ls_dwsales-TRANS_TYPE = 'Cancel'.

*    Values * -1 fixed in ZTDWORSTAT

      ELSEIF ls_sorstat-CHNGIND = 'Q'.
        ls_dwsales-TRANS_TYPE = 'Cancel'.
*    Values * -1 fixed in ZTDWORSTAT
      ENDIF.

    ELSEIF ls_sorstat-VBTYP = 'G'.
      ls_dwsales-TRANS_TYPE = 'Contract'.

    ELSEIF ls_sorstat-VBTYP = 'H'.
      ls_dwsales-TRANS_TYPE = 'Returns'.
      ls_dwsales-CC_LIST =  ls_dwsales-CC_LIST * -1.
      ls_dwsales-CC_SALES = ls_dwsales-CC_SALES * -1.
      ls_dwsales-CC_COGS =  ls_dwsales-CC_COGS * -1.
      ls_dwsales-QTY = ls_dwsales-QTY * -1.
      .
    ELSEIF ls_sorstat-VBTYP = 'K'.
      ls_dwsales-TRANS_TYPE = 'Credit memo req'.
      ls_dwsales-CC_LIST =  ls_dwsales-CC_LIST * -1.
      ls_dwsales-CC_SALES = ls_dwsales-CC_SALES * -1.
      ls_dwsales-CC_COGS =  ls_dwsales-CC_COGS * -1.
      ls_dwsales-QTY = ls_dwsales-QTY * -1.

* INVOICE below

    ELSEIF ls_sorstat-VBTYP = 'L'.
      ls_dwsales-TRANS_TYPE = 'Debit memo req'.

    ELSEIF ls_sorstat-VBTYP = 'M'.
      ls_dwsales-TRANS_TYPE = 'Invoice'.
      .
    ELSEIF ls_sorstat-VBTYP = 'N'.
      ls_dwsales-TRANS_TYPE = 'Credit'.
      ls_dwsales-CC_LIST =  ls_dwsales-CC_LIST * -1.
      ls_dwsales-CC_SALES = ls_dwsales-CC_SALES * -1.
      ls_dwsales-CC_COGS =  ls_dwsales-CC_COGS * -1.
      ls_dwsales-QTY = ls_dwsales-QTY * -1.

    ELSEIF ls_sorstat-VBTYP = 'O'.
      ls_dwsales-TRANS_TYPE = 'Credit memo'.
      ls_dwsales-CC_LIST =  ls_dwsales-CC_LIST * -1.
      ls_dwsales-CC_SALES = ls_dwsales-CC_SALES * -1.
      ls_dwsales-CC_COGS =  ls_dwsales-CC_COGS * -1.
      ls_dwsales-QTY = ls_dwsales-QTY * -1.

    ELSEIF ls_sorstat-VBTYP = 'P'.
      ls_dwsales-TRANS_TYPE = 'Debit memo'.

    ELSE.
      ls_dwsales-TRANS_TYPE = ls_sorstat-VBTYP.
    ENDIF.

*COCD CURR

    ls_dwsales-COCD_CURR = ls_sorstat-WAERS.
    ls_date = 99999999 - ls_sorstat-R_DATE.
    wa_date = ls_date.
    ls_VALUE = 1.


    CALL FUNCTION 'Z_CONVERT_TO_FOREIGN_CURRENCY'
      EXPORTING
        iv_date          = wa_date
        iv_currency_from = ls_dwsales-CC_SALES_CURR
        iv_currency_to   = ls_dwsales-COCD_CURR
        iv_type_of_rate  = 'EURX'
      IMPORTING
        ev_exchange_rate = ls_rate
*        es_return        = ls_return
      CHANGING
          cv_value         = ls_VALUE.








    ls_dwsales-COCD_LIST =  ls_dwsales-CC_LIST * ls_VALUE.
    ls_dwsales-COCD_SALES = ls_dwsales-CC_SALES * ls_VALUE.

    ls_VALUE = 1.

    CALL FUNCTION 'Z_CONVERT_TO_FOREIGN_CURRENCY'
      EXPORTING
        iv_date          = wa_date
        iv_currency_from = ls_dwsales-CC_COGS_CURR
        iv_currency_to   = ls_dwsales-COCD_CURR
        iv_type_of_rate  = 'EURX'
      IMPORTING
        ev_exchange_rate = ls_rate
      CHANGING
        cv_value         = ls_VALUE.

    ls_dwsales-COCD_COGS =  ls_dwsales-CC_COGS * ls_VALUE.

* INPUT CURR

    ls_VALUE = 1.

    ls_dwsales-INPUT_CURR = PA_CURR.

    CALL FUNCTION 'Z_CONVERT_TO_FOREIGN_CURRENCY'
      EXPORTING
        iv_date          = wa_date
        iv_currency_from = ls_dwsales-CC_SALES_CURR
        iv_currency_to   = ls_dwsales-INPUT_CURR
        iv_type_of_rate  = 'EURX'
      IMPORTING
        ev_exchange_rate = ls_rate
      CHANGING
        cv_value         = ls_VALUE.

    ls_dwsales-INPUT_LIST =  ls_dwsales-CC_LIST * ls_VALUE.
    ls_dwsales-INPUT_SALES = ls_dwsales-CC_SALES * ls_VALUE.

    ls_VALUE = 1.
    CALL FUNCTION 'Z_CONVERT_TO_FOREIGN_CURRENCY'
      EXPORTING
        iv_date          = wa_date
        iv_currency_from = ls_dwsales-CC_COGS_CURR
        iv_currency_to   = ls_dwsales-INPUT_CURR
        iv_type_of_rate  = 'EURX'
      IMPORTING
        ev_exchange_rate = ls_rate
      CHANGING
        cv_value         = ls_VALUE.

    ls_dwsales-INPUT_COGS =  ls_dwsales-CC_COGS * ls_VALUE.

* ORDER LINES

    IF ls_sorstat-LINETYPE = 'C' AND ls_sorstat-CHNGIND = 'N'.
      ls_dwsales-OR_ROW = 1.
    ELSE.
      ls_dwsales-OR_ROW = 0.
    ENDIF.


    ls_dwsales-CHANGEIND = ls_sorstat-CHNGIND.
    ls_dwsales-PLANT = ls_sorstat-WERKS.


    IF ls_sorstat-BISMT IS NOT INITIAL.
      ls_dwsales-MATNR = ls_sorstat-BISMT.
    ELSE.
      ls_dwsales-MATNR = ls_sorstat-MATNR.
    ENDIF.

    ls_dwsales-DESCR = ls_sorstat-MAKTX.
    ls_dwsales-GAC = ls_sorstat-prodh+0(4).
    ls_dwsales-PGC = ls_sorstat-prodh+4(4).



    ls_dwsales-TRANS_DATE = ls_sorstat-CREATION_DATE.
    ls_dwsales-TRANS_TIME = ls_sorstat-CREATION_TIME.
    ls_dwsales-TRANS_LINE_DATE = ls_sorstat-R_DATE.
    ls_dwsales-TRANS_LINE_TIME = ls_sorstat-R_TIME.
    ls_dwsales-CREATION_NAME = ls_sorstat-CREATION_NAME.
    ls_dwsales-COCD = ls_sorstat-BUKRS_VF.
    ls_dwsales-COST = ls_sorstat-COST.
    ls_dwsales-TAX = ls_sorstat-TAX.
    ls_dwsales-SALESLAND = ls_sorstat-LAND1.
    ls_dwsales-SALESLANDNAME = ls_sorstat-ORT01.
    ls_dwsales-SALESCOMPANY = ls_sorstat-RCOMP.
    ls_dwsales-SALESCOMPANYNAME = ls_sorstat-BUTXT.

    ls_dwsales-SALESCOMP_REFNO = ls_sorstat-po_vbeln.
    ls_dwsales-SALESCOMP_ITEMNO = ls_sorstat-PO_POSNR.
    ls_dwsales-SUPCD = ls_sorstat-LIFNR.


    ls_dwsales-SALES_ORG = ls_sorstat-VKORG.
    ls_dwsales-DIST_CHAN = ls_sorstat-VTWEG.
    ls_dwsales-DIVISION = ls_sorstat-SPART.
    ls_dwsales-SALES_OFFICE = ls_sorstat-VKBUR.
    ls_dwsales-SALES_GRP = ls_sorstat-VKGRP.
    ls_dwsales-CUST_GRP = ls_sorstat-KDGRP.
    ls_dwsales-CUST_GRP1 = ls_sorstat-KVGR1.
    ls_dwsales-CUST_GRP4 = ls_sorstat-KVGR4.
    ls_dwsales-SALES_DIST = ls_sorstat-BZIRK.
    ls_dwsales-SALES_OFFICE2 = ls_sorstat-VV_VKBUR.
    ls_dwsales-CUSTOMERCODE = ls_sorstat-KUNNR.
    ls_dwsales-CUSTOMERNAME1 = ls_sorstat-NAME1.
    ls_dwsales-CUSTOMERNAME3 = ls_sorstat-NAME3.

    IF ls_sorstat-NAME3 IS NOT INITIAL.
      ls_dwsales-CUSTOMERNAME3 = ls_sorstat-NAME3.
    ELSE.
      ls_dwsales-CUSTOMERNAME3 = ls_sorstat-NAME1.
    ENDIF.

    ls_dwsales-SALES_ORD_TYPE = ls_sorstat-BSARK.
    ls_dwsales-SALES_REF_NO = ls_sorstat-IHREZ.
    ls_dwsales-PROFIT_CNTR = ls_sorstat-PRCTR.	
    ls_dwsales-SALES_PER_NO = ls_sorstat-PERNR.
    CONCATENATE ls_sorstat-VORNA ls_sorstat-NACHN INTO ls_dwsales-SALES_PER_NAME SEPARATED BY space.




    ls_dwsales-NAICS = ls_sorstat-BRAN1.
    ls_dwsales-NAICS_DESCR = ls_sorstat-VTEXT.
    ls_dwsales-CUSTOMERLAND = ls_sorstat-LAND2.
    ls_dwsales-CUSTOMERREGION = ls_sorstat-REGIO.
    ls_dwsales-INVOICE_TYPE = ls_sorstat-FKART.
    ls_dwsales-DOC_TYPE = ls_sorstat-VBTYP.

    IF ls_sorstat-FKART = 'ZF4'.
      ls_dwsales-INVOICE_EXP = 'Invoice'.

    ELSEIF ls_sorstat-FKART = 'ZRE1'.
      ls_dwsales-INVOICE_EXP = 'Credit for Returns'.

    ELSEIF ls_sorstat-FKART = 'Z1G2'.
      ls_dwsales-INVOICE_EXP = 'Credit Memo'.

    ELSEIF ls_sorstat-FKART = 'Z1L2'.
      ls_dwsales-INVOICE_EXP = 'Debet Memo'.

    ELSEIF ls_sorstat-FKART = 'ZF3'.
      ls_dwsales-INVOICE_EXP = 'Service Contract'.

    ELSEIF ls_sorstat-FKART = 'S1'.
      ls_dwsales-INVOICE_EXP = 'Credit Note'.

    ELSEIF ls_sorstat-FKART = 'ZF2'.
      ls_dwsales-INVOICE_EXP = 'Service Invoice'.
    ELSE.
      ls_dwsales-INVOICE_EXP = ls_sorstat-FKART.
    ENDIF.

    ls_dwsales-ORDER_TYPE = ls_sorstat-AUART.

    IF ls_sorstat-AUART = 'ZOR'.
      ls_dwsales-ORDER_EXP = 'Std Order'.

    ELSEIF ls_sorstat-AUART = 'ZOR2'.
      ls_dwsales-ORDER_EXP = 'Std BP Order'.

    ELSEIF ls_sorstat-AUART = 'Z1CR'.
      ls_dwsales-ORDER_EXP = 'Credit Memo Request'.

    ELSEIF ls_sorstat-AUART = 'Z1DR'.
      ls_dwsales-ORDER_EXP = 'Debet memo Request'.

    ELSEIF ls_sorstat-AUART = 'ZOR'.
      ls_dwsales-ORDER_EXP = 'Std Order'.

    ELSEIF ls_sorstat-AUART = 'ZKE'.
      ls_dwsales-ORDER_EXP = 'Consign Issue'.

    ELSEIF ls_sorstat-AUART = 'ZRE1'.
      ls_dwsales-ORDER_EXP = 'Returns'.

    ELSEIF ls_sorstat-AUART = 'ZC01'.
      ls_dwsales-ORDER_EXP = 'Service Contract'.

    ELSEIF ls_sorstat-AUART = 'ZO01'.
      ls_dwsales-ORDER_EXP = 'Service Sales'.

    ELSEIF ls_sorstat-AUART = 'ZO03'.
      ls_dwsales-ORDER_EXP = 'Service Parts'.

    ELSE.
      ls_dwsales-ORDER_EXP = ls_sorstat-AUART.
    ENDIF.

    ls_dwsales-ORDER_REASON = ls_sorstat-AUGRU.


    SELECT SINGLE
         TVAUT~BEZEI

         INTO  ls_dwsales-ORDER_REASON_TXT
         FROM TVAUT
         WHERE
             TVAUT~AUGRU = ls_sorstat-AUGRU
         and TVAUT~SPRAS = 'EN'.


    ls_dwsales-CUSTOMER_REFNR = ls_sorstat-BSTNK.
    ls_dwsales-INCO = ls_sorstat-INCO1.
    ls_dwsales-MAX_PART = ls_sorstat-ANTLF.
    ls_dwsales-DEL_PRIO = ls_sorstat-LPRIO.
    ls_dwsales-ITEM_CAT = ls_sorstat-PSTYV.
    ls_dwsales-SHIP_POINT = ls_sorstat-SHIP_POINT.
    ls_dwsales-SHIP_TO = ls_sorstat-SHIPTO_KUNNR.

    INSERT ZTDWSALES FROM ls_dwsales.
    CLEAR ls_dwsales.


  ENDLOOP.

ENDFORM.                    "start_of_selection
