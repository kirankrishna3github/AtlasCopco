*&---------------------------------------------------------------------*
*&  Include           YSE_SDMM_DISPLAY_STOCK_F01
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  CREATEDOCKINGCONTROL
*&---------------------------------------------------------------------*
form createdockingcontrol.
* create container for alv-tree
  create object go_container_object
    exporting
      side      = cl_gui_docking_container=>dock_at_left
      extension = 270
      repid     = gv_repid
      dynnr     = '0100'.
endform.                               " CREATEDOCKINGCONTROL

*&---------------------------------------------------------------------*
*&      Form  CREATETREECONTROL
*&---------------------------------------------------------------------*
form createtreecontrol.
* create Event Receiver
  create object go_tree_event_receiver.
* create tree control
  create object go_tree
    exporting
      i_parent                    = go_container_object
      i_node_selection_mode       = cl_gui_column_tree=>node_sel_mode_single
      i_item_selection            = ''
      i_no_html_header            = ''
      i_no_toolbar                = ''
    exceptions
      cntl_error                  = 1
      cntl_system_error           = 2
      create_error                = 3
      lifetime_error              = 4
      illegal_node_selection_mode = 5
      failed                      = 6
      illegal_column_name         = 7.
  if sy-subrc <> 0.
*
  endif.
* fields for tree
  perform create_fieldcat using c_cat1.
* header for tree
  perform create_header.
* Sorttable for tree
  perform built_sort_table.
* handle for D'n'D
  gs_layout_tree-s_dragdrop-row_ddid = g_handle_tree.
* fill tree with data
  call method go_tree->set_table_for_first_display
    exporting
      it_list_commentary = gt_header[]
      i_background_id    = 'ALV_BACKGROUND'
      is_layout          = gs_layout_tree
    changing
      it_sort            = gt_sort[]
      it_outtab          = gt_mat_werks[]
      it_fieldcatalog    = gt_fieldcat_tree[].
* register events
  perform register_events.
* set handler for go_tree
  set handler go_tree_event_receiver->handle_double_click for go_tree.
  set handler go_tree_event_receiver->handle_on_drag for go_tree.
endform.                               " CREATETREECONTROL

*&---------------------------------------------------------------------*
*&      Form  DISPLAY_STOCK
*&---------------------------------------------------------------------*
form display_stock using p_index type lvc_index.
*                           p_grouplevel type lvc_fname.

  read table gt_mat_werks index p_index.

  if sy-subrc = 0.
    perform get_mdezx using gt_mat_werks-matnr gt_mat_werks-werks.
  endif.

  if gt_mdezx[] is initial and not go_grid is initial.
    message i000(0k) with text-001 space space space.
    perform init_alv_data.
*  else.
*    flg_new = selected.
  endif.
endform.                               " DISPLAY_STOCK
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ELEMENT
*&---------------------------------------------------------------------*
form display_element.
  data: ls_mdez type mdez.
  data: lv_text1 type string,
          lv_text2 type string,
          lv_vbeln type vbak-vbeln,
          lv_ebeln type ekpo-ebeln,
          lv_ebelp type ekpo-ebelp.

  perform get_element changing ls_mdez.

  if ls_mdez is initial.
*  Error handling
  else.
    if ls_mdez-delkz = 'VC'."Sales Order
      split ls_mdez-extra at '/' into lv_text1 lv_text2.
      lv_vbeln = lv_text1.
      perform display_so using lv_vbeln.
    elseif ls_mdez-delkz = 'BE'."Purchase Order
      split ls_mdez-extra at '/' into lv_text1 lv_text2.
      lv_ebeln = lv_text1.
      lv_ebelp = lv_text2.
      perform display_po using lv_ebeln lv_ebelp.
    endif.
  endif.
endform.                               " DISPLAY_ELEMENT
*&---------------------------------------------------------------------*
*&      Form  Change_element
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form change_element .
  data: ls_mdez type mdez.
  data: lv_text1 type string,
          lv_text2 type string,
          lv_vbeln type vbak-vbeln,
          lv_ebeln type ekpo-ebeln,
          lv_ebelp type ekpo-ebelp.

  perform get_element changing ls_mdez.

  if ls_mdez is initial.
*  Error handling
  else.
    if ls_mdez-delkz = 'VC'."Sales Order
      split ls_mdez-extra at '/' into lv_text1 lv_text2.
      lv_vbeln = lv_text1.
      perform change_so using lv_vbeln.
    elseif ls_mdez-delkz = 'BE'."Purchase Order
      split ls_mdez-extra at '/' into lv_text1 lv_text2.
      lv_ebeln = lv_text1.
      lv_ebelp = lv_text2.
      perform change_po using lv_ebeln lv_ebelp.
    endif.
  endif.
endform.                    " Change_element
*&---------------------------------------------------------------------*
*&      Form  CREATE_FIELDCAT
*&---------------------------------------------------------------------*
form create_fieldcat using p_type type c.

  case p_type.
    when c_cat1. "Tree
      perform create_fieldcat_tree.
    when c_cat2. "Detail
      perform create_fieldcat_detail.
    when c_cat3."Summary
      perform create_fieldcat_sum.
    when c_cat4."Daily
      perform create_fieldcat_daily.
    when others.
  endcase.
*  data: ls_fieldcatalog type lvc_s_fcat,
*        lt_fieldcatalog type table of lvc_s_fcat,
*        lv_structure_name type dd02l-tabname.
*
*
*  case p_type.
*    when c_cat1. "Tree
*      lv_structure_name = 'YSE_STOCK_OVERVIEW'.
*    when c_cat2. "Detail
*      lv_structure_name = 'MDEZ'.
*    when c_cat3."Summary
*    when c_cat4."Daily
*    when others.
*  endcase.
*
** get fieldcatalog
*  call function 'LVC_FIELDCATALOG_MERGE'
*    exporting
*      i_structure_name = lv_structure_name
*    changing
*      ct_fieldcat      = lt_fieldcatalog.
*
*  clear: gt_fieldcat_tree[], gt_fieldcat_grid[].
*
*  case p_type.
*    when c_cat1. "Tree
*      append lines of lt_fieldcatalog to gt_fieldcat_tree[].
** change fieldcatalog
*      loop at gt_fieldcat_tree into ls_fieldcatalog.
*        case ls_fieldcatalog-fieldname.
*          when 'MATNR'.
*            ls_fieldcatalog-no_out = selected.
*            ls_fieldcatalog-key    = ''.
*            ls_fieldcatalog-col_pos = 1.
*            modify gt_fieldcat_tree from ls_fieldcatalog.
*          when 'WERKS'.
*            ls_fieldcatalog-no_out = selected.
*            ls_fieldcatalog-key    = ''.
*            ls_fieldcatalog-col_pos = 2.
*            modify gt_fieldcat_tree from ls_fieldcatalog.
*          when 'MAKTX'.
**        ls_fieldcatalog-no_out = selected.
*            ls_fieldcatalog-key    = ''.
*            ls_fieldcatalog-col_pos = 3.
*            modify gt_fieldcat_tree from ls_fieldcatalog.
*          when others.
*            delete gt_fieldcat_tree.
*        endcase.
*      endloop.
*    when c_cat2. "Detail
*      append lines of lt_fieldcatalog to gt_fieldcat_grid[].
*      loop at gt_fieldcat_grid into ls_fieldcatalog.
*        case ls_fieldcatalog-fieldname.
**        when 'DETAIL_ICON'.
**          ls_fieldcatalog-col_pos = 1.
*          when 'DAT00'.
*            ls_fieldcatalog-col_pos = 1.
*            modify gt_fieldcat_grid from ls_fieldcatalog.
*          when 'DELB0'.
*            ls_fieldcatalog-col_pos = 2.
*            modify gt_fieldcat_grid from ls_fieldcatalog.
*          when 'EXTRA'.
*            ls_fieldcatalog-col_pos = 3.
*            modify gt_fieldcat_grid from ls_fieldcatalog.
*          when 'UMDAT'.
*            ls_fieldcatalog-col_pos = 4.
*            modify gt_fieldcat_grid from ls_fieldcatalog.
*          when 'AUSKT'.
*            ls_fieldcatalog-col_pos = 5.
*            modify gt_fieldcat_grid from ls_fieldcatalog.
*          when 'MNG01'.
*            ls_fieldcatalog-col_pos = 6.
*            modify gt_fieldcat_grid from ls_fieldcatalog.
*          when 'MNG02'.
*            ls_fieldcatalog-col_pos = 7.
*            modify gt_fieldcat_grid from ls_fieldcatalog.
*          when 'LGORT'.
*            ls_fieldcatalog-col_pos = 8.
*            modify gt_fieldcat_grid from ls_fieldcatalog.
*          when 'KUNNR'.
*            ls_fieldcatalog-col_pos = 9.
*            ls_fieldcatalog-no_out = ''.
*            modify gt_fieldcat_grid from ls_fieldcatalog.
*          when 'MD4KD'.
*            ls_fieldcatalog-col_pos = 10.
*            ls_fieldcatalog-no_out = ''.
*            modify gt_fieldcat_grid from ls_fieldcatalog.
*          when 'LIFNR'.
*            ls_fieldcatalog-col_pos = 11.
*            ls_fieldcatalog-no_out = ''.
*            modify gt_fieldcat_grid from ls_fieldcatalog.
*          when 'MD4LI'.
*            ls_fieldcatalog-col_pos = 12.
*            ls_fieldcatalog-no_out = ''.
*            modify gt_fieldcat_grid from ls_fieldcatalog.
*          when 'DELKZ'.
*            ls_fieldcatalog-col_pos = 13.
*            ls_fieldcatalog-no_out = 'X'.
*            modify gt_fieldcat_grid from ls_fieldcatalog.
*          when others.
*            delete gt_fieldcat_grid.
*        endcase.
*      endloop.
*    when c_cat3."Summary
*    when c_cat4."Detail
*    when others.
*  endcase.

endform.                               " CREATE_FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  CREATE_HEADER
*&---------------------------------------------------------------------*
form create_header.
*  clear gt_header.
*  gt_header-typ = 'H'.
*  gt_header-info = text-007.
*  append gt_header.
*  clear gt_header.
*  gt_header-typ = 'S'.
*  gt_header-key = text-008.
*  gt_header-info = text-009.
*  append gt_header.
endform.                               " CREATE_HEADER
*&---------------------------------------------------------------------*
*&      Form  REGISTER_EVENTS
*&---------------------------------------------------------------------*
form register_events.
  data: lt_events type cntl_simple_events,
        l_event type cntl_simple_event.
* define the events which will be passed to the backend
  clear l_event.
  l_event-eventid = cl_gui_column_tree=>eventid_node_double_click.
  l_event-appl_event = selected.
  append l_event to lt_events.
  clear l_event.
  l_event-eventid = cl_gui_column_tree=>eventid_expand_no_children.
  append l_event to lt_events.
  clear l_event.
  l_event-eventid = cl_gui_column_tree=>eventid_header_click.
  append l_event to lt_events.
  clear l_event.
* register events
  call method go_tree->set_registered_events
    exporting
      events                    = lt_events
    exceptions
      cntl_error                = 1
      cntl_system_error         = 2
      illegal_event_combination = 3.
  if sy-subrc <> 0.
    message x534(0k).
  endif.
endform.                               " REGISTER_EVENTS
*&---------------------------------------------------------------------*
*&      Form  BUILT_SORT_TABLE
*&---------------------------------------------------------------------*
form built_sort_table.
  data ls_sort_wa type lvc_s_sort.
* MATNR
  ls_sort_wa-spos = 1.
  ls_sort_wa-fieldname = 'MATNR'.
  ls_sort_wa-up = selected.
  ls_sort_wa-subtot = ''.
  append ls_sort_wa to gt_sort.
* WERKS
  ls_sort_wa-spos = 2.
  ls_sort_wa-fieldname = 'WERKS'.
  ls_sort_wa-up = selected.
  ls_sort_wa-subtot = ''.
  append ls_sort_wa to gt_sort.

*MAKTX
*  ls_sort_wa-spos = 1.
*  ls_sort_wa-fieldname = 'MAKTX'.
*  ls_sort_wa-up = selected.
*  ls_sort_wa-subtot = ''.
*  append ls_sort_wa to gt_sort.
endform.                               " BUILT_SORT_TABLE
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form get_data .
  select marc~matnr marc~werks makt~maktx
      into corresponding fields of table gt_mat_werks
      from marc
      inner join makt on makt~matnr = marc~matnr
    where marc~matnr in s_matnr
      and marc~werks in s_werks
      and makt~spras = sy-langu.

  select yse_stock_info~matnr yse_stock_info~werks makt~maktx
      appending corresponding fields of table gt_mat_werks
      from yse_stock_info
      inner join makt on makt~matnr = yse_stock_info~matnr
    where yse_stock_info~werks in s_werks
      and yse_stock_info~matnr in s_matnr
      and makt~spras = sy-langu.

  delete gt_mat_werks[] where werks is initial.

  sort gt_mat_werks by matnr ascending werks ascending.
endform.                    " GET_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_MDEZX
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_INDEX_OUTTAB  text
*      -->P_GROUPLEVEL  text
*----------------------------------------------------------------------*
form get_mdezx  using p_matnr type yse_stock_info-matnr
                      p_werks type yse_stock_info-werks.
  data: lt_bapi_mrp_ind_lines type table of bapi_mrp_ind_lines,
        ls_bapi_mrp_ind_lines type bapi_mrp_ind_lines,
        ls_mdez type mdez,
        ls_yse_stock_info type yse_stock_info.

  clear: gt_mdezx[].

  if    p_werks = 'CN91'
    or  p_werks = 'CN93'.      "CR3229 ADD
    select single * into ls_yse_stock_info from yse_stock_info
                    where werks = p_werks and matnr = p_matnr.
*    ls_mdez-dat00 = ls_bapi_mrp_ind_lines-avail_date.
    ls_mdez-delb0 = 'Stock'.
*    ls_mdez-extra = ls_bapi_mrp_ind_lines-elemnt_data.
*    ls_mdez-UMDAT = ls_bapi_mrp_ind_lines-
*    ls_mdez-AUSKT = ls_bapi_mrp_ind_lines-
*    ls_mdez-mng01 = ls_bapi_mrp_ind_lines-rec_reqd_qty.
    ls_mdez-mng02 = ls_yse_stock_info-aqty.
*    ls_mdez-lgort = ls_bapi_mrp_ind_lines-storage_loc.
*    ls_mdez-kunnr = ls_bapi_mrp_ind_lines-customer.
*    ls_mdez-md4kd = ls_bapi_mrp_ind_lines-cust_name.
*    ls_mdez-lifnr = ls_bapi_mrp_ind_lines-vendor_no.
*    ls_mdez-md4li = ls_bapi_mrp_ind_lines-vend_name.
*    ls_mdez-delkz = ls_bapi_mrp_ind_lines-mrp_element_ind.
    append ls_mdez to gt_mdezx.
  else.
    call function 'BAPI_MATERIAL_STOCK_REQ_LIST'
      exporting
        material      = p_matnr
        plant         = p_werks
      tables
        mrp_ind_lines = lt_bapi_mrp_ind_lines.

    loop at lt_bapi_mrp_ind_lines into ls_bapi_mrp_ind_lines.
*    ls_mdez-DETAIL_ICON =
      ls_mdez-dat00 = ls_bapi_mrp_ind_lines-avail_date.
      ls_mdez-delb0 = ls_bapi_mrp_ind_lines-mrp_elemnt.
      ls_mdez-extra = ls_bapi_mrp_ind_lines-elemnt_data.
*    ls_mdez-UMDAT = ls_bapi_mrp_ind_lines-
*    ls_mdez-AUSKT = ls_bapi_mrp_ind_lines-
      ls_mdez-mng01 = ls_bapi_mrp_ind_lines-rec_reqd_qty.
      ls_mdez-mng02 = ls_bapi_mrp_ind_lines-avail_qty1.
      ls_mdez-lgort = ls_bapi_mrp_ind_lines-storage_loc.
      ls_mdez-kunnr = ls_bapi_mrp_ind_lines-customer.
      ls_mdez-md4kd = ls_bapi_mrp_ind_lines-cust_name.
      ls_mdez-lifnr = ls_bapi_mrp_ind_lines-vendor_no.
      ls_mdez-md4li = ls_bapi_mrp_ind_lines-vend_name.
      ls_mdez-delkz = ls_bapi_mrp_ind_lines-mrp_element_ind.
      append ls_mdez to gt_mdezx.
    endloop.
  endif.
endform.                    " GET_MDEZX
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form display_so using p_vbeln type vbak-vbeln.
  set parameter id 'AUN' field p_vbeln.
  call transaction 'VA03' and skip first screen.
endform.                    " DISPLAY_SO
*&---------------------------------------------------------------------*
*&      Form  change_so
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_VBELN    text
*----------------------------------------------------------------------*
form change_so using p_vbeln type vbak-vbeln.
  set parameter id 'AUN' field p_vbeln.
  call transaction 'VA02' and skip first screen.
endform.                    "change_so
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_PO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form display_po using p_ebeln type ekpo-ebeln
                      p_ebelp type ekpo-ebelp.
  set parameter id 'BES' field p_ebeln.
  set parameter id 'BSP' field p_ebelp.
  call transaction 'ME23N'.
endform.                    " DISPLAY_PO
*&---------------------------------------------------------------------*
*&      Form  change_po
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_EBELN    text
*      -->P_EBELP    text
*----------------------------------------------------------------------*
form change_po using p_ebeln type ekpo-ebeln
                      p_ebelp type ekpo-ebelp.
  set parameter id 'BES' field p_ebeln.
  set parameter id 'BSP' field p_ebelp.
  call transaction 'ME22N'.
endform.                    "change_po
*&---------------------------------------------------------------------*
*&      Form  init_ALV_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form init_alv_data.
  if p_detail = 'X'.
    clear: gt_mdezx[], gt_mdezx.
    append gt_mdezx.
  endif.
endform.                    " init_ALV_DATA
*&---------------------------------------------------------------------*
*&      Form  GET_ELEMENT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form get_element changing p_mdezx type mdez.
  clear: gt_row_table.
  call method go_grid->get_selected_rows
    importing
      et_index_rows = gt_row_table[].
* only one selected row!
  read table gt_row_table index 1.
  if sy-subrc = 0.
    read table gt_mdezx into p_mdezx index gt_row_table-index.
  endif.
endform.                    " GET_ELEMENT
*&---------------------------------------------------------------------*
*&      Form  download_Summary
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form download_summary .
  gt_data_summary-matnr = 'Material'.
  gt_data_summary-werks = 'Plant'.
  gt_data_summary-extsu = 'Period/Segment'.
  gt_data_summary-mng04 = 'Available'.
  gt_data_summary-mng05 = 'ATP'.
  gt_data_summary-clmu_mng01 = 'Clmu Plnd'.
  gt_data_summary-clmu_mng02 = 'Clmu Req'.
  gt_data_summary-clmu_mng03 = 'Clmu Recp'.
  gt_data_summary-clmu_mng04 = 'Clmu Aval'.
  insert  gt_data_summary index 1.

  perform create_xls_file using gt_data_summary[].
endform.                    " download_SUMMARY
*&---------------------------------------------------------------------*
*&      Form  download_Daily
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form download_daily.
  gt_data_daily-matnr = 'Material'.
  gt_data_daily-werks = 'Plant'.
  gt_data_daily-extsu = 'Period/Segment'.
  gt_data_daily-mng01 = 'Plnd ind.reqmts'.
  gt_data_daily-mng02 = 'Requirement'.
  gt_data_daily-mng03 = 'Receipts'.
  gt_data_daily-mng04 = 'Available'.
  gt_data_daily-mng05 = 'ATP'.
  gt_data_daily-clmu_mng01 = 'Clmu Plnd'.
  gt_data_daily-clmu_mng02 = 'Clmu Req'.
  gt_data_daily-clmu_mng03 = 'Clmu Recp'.
  gt_data_daily-clmu_mng04 = 'Clmu Aval'.
  insert gt_data_daily index 1.

  perform create_xls_file using gt_data_daily[].

endform.                    "download_daily
*&---------------------------------------------------------------------*
*&      Form  CREATE_xls_file
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form create_xls_file using p_data_tab type any table.
  constants: lc_sum type string value 'Summary',
             lc_dal type string value 'Daily'.
  data: lv_file type string,
        lv_file_name type string,
        lv_path type string.

  if p_sum = 'X'.
    concatenate lc_sum sy-datum into lv_file separated by '_'.
  endif.

*  if p_daily = 'X'.
*    concatenate lc_dal sy-datum into lv_file separated by '_'.
*  endif.
*
*  concatenate lc_path lv_file  '.xls' into lv_file.

  call method cl_gui_frontend_services=>file_save_dialog
    exporting
      default_extension    = 'XLS'
      default_file_name    = lv_file
      file_filter          = '*.XLS'
    changing
      filename             = lv_file_name
      path                 = lv_path
      fullpath             = lv_file
    exceptions
      cntl_error           = 1
      error_no_gui         = 2
      not_supported_by_gui = 3
      others               = 4.
  if sy-subrc <> 0.
  endif.

  if lv_file is initial.
    return.
  endif.

  call method cl_gui_frontend_services=>gui_download
    exporting
      filename                = lv_file
      filetype                = 'ASC'
      codepage                = '4103'
      write_bom               = 'X'
      write_field_separator   = 'X'
    changing
      data_tab                = p_data_tab
    exceptions
      file_write_error        = 1
      no_batch                = 2
      gui_refuse_filetransfer = 3
      invalid_type            = 4
      no_authority            = 5
      unknown_error           = 6
      header_not_allowed      = 7
      separator_not_allowed   = 8
      filesize_not_allowed    = 9
      header_too_long         = 10
      dp_error_create         = 11
      dp_error_send           = 12
      dp_error_write          = 13
      unknown_dp_error        = 14
      access_denied           = 15
      dp_out_of_memory        = 16
      disk_full               = 17
      dp_timeout              = 18
      file_not_found          = 19
      dataprovider_exception  = 20
      control_flush_error     = 21
      not_supported_by_gui    = 22
      error_no_gui            = 23
      others                  = 24.

  if sy-subrc <> 0.
*   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  endif.
endform.                    "CREATE_xls_file
*&---------------------------------------------------------------------*
*&      Form  alv_display
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form alv_display .
  data: lv_container_name(15) type c,
        lv_cat_type type c.

  if p_detail = 'X'.
    lv_container_name = 'CUSTOM_CONTROL'.
    perform get_data_detail.
    lv_cat_type = c_cat2." Detail
  endif.
  if p_sum = 'X'.
    lv_container_name = 'REPORT_CONTROL'.
    perform get_data_summary.
    lv_cat_type = c_cat3." Summary
  endif.

*  if p_daily = 'X'.
*    lv_container_name = 'REPORT_CONTROL'.
*    perform get_data_daily.
*    lv_cat_type = c_cat4." Daily
*  endif.

  if go_container is initial.
*   create container for ALV grid
    create object go_container
      exporting
        container_name = lv_container_name.
  endif.

  if go_grid is initial.
*   create Event Receiver
    create object go_event_receiver.
*    build field catalog
    perform create_fieldcat using lv_cat_type.
*   create ALV grid
    create object go_grid
      exporting
        i_appl_events = selected      "application event
        i_parent      = go_container.

*    Initialize the ALV data
*    perform init_alv_data.
*   opt. col. width
    gs_layout_alv-cwidth_opt = selected.
*   handle for D'n'D
    gs_layout_alv-s_dragdrop-row_ddid = g_handle_alv.
*   handler for ALV grid
    set handler go_event_receiver->handle_toolbar_set  for go_grid.
    set handler go_event_receiver->handle_user_command for go_grid.
    set handler go_event_receiver->handle_double_click for go_grid.
    set handler go_event_receiver->handle_context_menu for go_grid.
    set handler go_event_receiver->handle_ondrop for go_grid.
  endif.
*   first call with dummy entry
  if p_detail = 'X'.
    perform grid_display using gt_mdezx[].
  endif.

  if p_sum = 'X'.
    perform grid_display using gt_data_summary[].
  endif.

*  if p_daily = 'X'.
*    perform grid_display using gt_data_daily[].
*  endif.
*   flush
  call method cl_gui_control=>set_focus
    exporting
      control = go_grid.
  call method cl_gui_cfw=>flush.

*  if flg_new = selected.
*    clear flg_new.
**   first call with data
*    gs_layout_alv-grid_title = scarr-carrname.
*    call method grid->set_table_for_first_display
*      exporting
*        i_structure_name = 'SFLIGHT'
*        is_layout        = gs_layout_alv
*      changing
*        it_sort          = gt_sort_grid[]
*        it_outtab        = gt_sflight[].
**   reset fields on screen 100
*    clear saplane.
**   flush
*    call method cl_gui_control=>set_focus
*      exporting
*        control = grid.
*    call method cl_gui_cfw=>flush.
*  endif.
endform.                    " alv_display
*&---------------------------------------------------------------------*
*&      Form  FREE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form free .
  if go_tree is not initial.
    call method go_tree->free.
  endif.
  call method go_grid->free.
  call method go_container->free.
  free: go_event_receiver, go_tree_event_receiver.
endform.                    " FREE
*&---------------------------------------------------------------------*
*&      Form  Grid_display
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form grid_display using p_outtab type any table.
  call method go_grid->set_table_for_first_display
      exporting
*        i_structure_name = 'SFLIGHT'
        is_layout        = gs_layout_alv
      changing
*        it_sort          = gt_sort_grid[]
        it_fieldcatalog   = gt_fieldcat_grid[]
        it_outtab        = p_outtab.
endform.                    " Grid_display
*&---------------------------------------------------------------------*
*&      Form  create_fieldcat_tree
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form create_fieldcat_tree .
  data: ls_fieldcatalog type lvc_s_fcat.

* get fieldcatalog
  call function 'LVC_FIELDCATALOG_MERGE'
    exporting
      i_structure_name = 'YSE_STOCK_OVERVIEW'
    changing
      ct_fieldcat      = gt_fieldcat_tree[].

* change fieldcatalog
  loop at gt_fieldcat_tree into ls_fieldcatalog.
    case ls_fieldcatalog-fieldname.
      when 'MATNR'.
        ls_fieldcatalog-no_out = selected.
        ls_fieldcatalog-key    = ''.
        ls_fieldcatalog-col_pos = 1.
        modify gt_fieldcat_tree from ls_fieldcatalog.
      when 'WERKS'.
        ls_fieldcatalog-no_out = selected.
        ls_fieldcatalog-key    = ''.
        ls_fieldcatalog-col_pos = 2.
        modify gt_fieldcat_tree from ls_fieldcatalog.
      when 'MAKTX'.
*        ls_fieldcatalog-no_out = selected.
        ls_fieldcatalog-key    = ''.
        ls_fieldcatalog-col_pos = 3.
        modify gt_fieldcat_tree from ls_fieldcatalog.
      when others.
        delete gt_fieldcat_tree.
    endcase.
  endloop.
endform.                    " create_fieldcat_tree
*&---------------------------------------------------------------------*
*&      Form  create_fieldcat_detail
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form create_fieldcat_detail .
  data: ls_fieldcatalog type lvc_s_fcat.

* get fieldcatalog
  call function 'LVC_FIELDCATALOG_MERGE'
    exporting
      i_structure_name = 'MDEZ'
    changing
      ct_fieldcat      = gt_fieldcat_grid[].

  loop at gt_fieldcat_grid into ls_fieldcatalog.
    case ls_fieldcatalog-fieldname.
*        when 'DETAIL_ICON'.
*          ls_fieldcatalog-col_pos = 1.
      when 'MDMAT'.
        ls_fieldcatalog-col_pos = 1.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when 'MDWRK'.
        ls_fieldcatalog-col_pos = 2.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when 'DAT00'.
        ls_fieldcatalog-col_pos = 3.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when 'DELB0'.
        ls_fieldcatalog-col_pos = 4.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when 'EXTRA'.
        ls_fieldcatalog-col_pos = 5.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when 'UMDAT'.
        ls_fieldcatalog-col_pos = 6.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when 'AUSKT'.
        ls_fieldcatalog-col_pos = 7.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when 'MNG01'.
        ls_fieldcatalog-col_pos = 8.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when 'MNG02'.
        ls_fieldcatalog-col_pos = 9.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when 'LGORT'.
        ls_fieldcatalog-col_pos = 10.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when 'KUNNR'.
        ls_fieldcatalog-col_pos = 11.
        ls_fieldcatalog-no_out = ''.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when 'MD4KD'.
        ls_fieldcatalog-col_pos = 12.
        ls_fieldcatalog-no_out = ''.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when 'LIFNR'.
        ls_fieldcatalog-col_pos = 13.
        ls_fieldcatalog-no_out = ''.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when 'MD4LI'.
        ls_fieldcatalog-col_pos = 14.
        ls_fieldcatalog-no_out = ''.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when 'DELKZ'.
        ls_fieldcatalog-col_pos = 15.
        ls_fieldcatalog-no_out = 'X'.
        modify gt_fieldcat_grid from ls_fieldcatalog.
      when others.
        delete gt_fieldcat_grid.
    endcase.
  endloop.
endform.                    "create_fieldcat_detail
*&---------------------------------------------------------------------*
*&      Form  create_fieldcat_sum
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form create_fieldcat_sum .
  data: ls_fieldcatalog type lvc_s_fcat.

  clear: gt_fieldcat_grid[].
*matnr(18) type c,"
  ls_fieldcatalog-col_pos = 1.
  ls_fieldcatalog-fieldname = 'MATNR'.
  ls_fieldcatalog-scrtext_l = 'Material'.
  ls_fieldcatalog-scrtext_m = 'Material'.
  ls_fieldcatalog-scrtext_s = 'Mat.'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      werks(5)  type c,"Plant
  ls_fieldcatalog-col_pos = 2.
  ls_fieldcatalog-fieldname = 'WERKS'.
  ls_fieldcatalog-scrtext_l = 'Plant'.
  ls_fieldcatalog-scrtext_m = 'Plant'.
  ls_fieldcatalog-scrtext_s = 'Plant'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      extsu(22) type c,"Period/Segment
  ls_fieldcatalog-col_pos = 3.
  ls_fieldcatalog-fieldname = 'EXTSU'.
  ls_fieldcatalog-scrtext_l = 'Period/Segment'.
  ls_fieldcatalog-scrtext_m = 'Period/Segment'.
  ls_fieldcatalog-scrtext_s = 'Prd./Seg'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      mng04(13) type c, "Available
  ls_fieldcatalog-col_pos = 4.
  ls_fieldcatalog-fieldname = 'MNG04'.
  ls_fieldcatalog-scrtext_l = 'Available'.
  ls_fieldcatalog-scrtext_m = 'Available'.
  ls_fieldcatalog-scrtext_s = 'Avail.'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      mng05(13) type c, "ATP
  ls_fieldcatalog-col_pos = 5.
  ls_fieldcatalog-fieldname = 'MNG05'.
  ls_fieldcatalog-scrtext_l = 'ATP'.
  ls_fieldcatalog-scrtext_m = 'ATP'.
  ls_fieldcatalog-scrtext_s = 'ATP'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      clmu_mng01(13) type c,"Clmu Plnd
  ls_fieldcatalog-col_pos = 6.
  ls_fieldcatalog-fieldname = 'CLMU_MNG01'.
  ls_fieldcatalog-scrtext_l = 'Clmu Plnd'.
  ls_fieldcatalog-scrtext_m = 'Clmu Plnd'.
  ls_fieldcatalog-scrtext_s = 'ClmuPlnd'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      clmu_mng02(13) type c,"Clmu Req
  ls_fieldcatalog-col_pos = 7.
  ls_fieldcatalog-fieldname = 'CLMU_MNG02'.
  ls_fieldcatalog-scrtext_l = 'Clmu Req'.
  ls_fieldcatalog-scrtext_m = 'Clmu Req'.
  ls_fieldcatalog-scrtext_s = 'ClmuReq'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      clmu_mng03(13) type c,"Clmu Recp
  ls_fieldcatalog-col_pos = 8.
  ls_fieldcatalog-fieldname = 'CLMU_MNG03'.
  ls_fieldcatalog-scrtext_l = 'ClmuRecp'.
  ls_fieldcatalog-scrtext_m = 'Clmu Recp'.
  ls_fieldcatalog-scrtext_s = 'ClmuRecp'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      clmu_mng04(13) type c,"Clmu Aval
  ls_fieldcatalog-col_pos = 9.
  ls_fieldcatalog-fieldname = 'CLMU_MNG04'.
  ls_fieldcatalog-scrtext_l = 'Clmu Aval'.
  ls_fieldcatalog-scrtext_m = 'Clmu Aval'.
  ls_fieldcatalog-scrtext_s = 'ClmuAval'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

endform.                    "create_fieldcat_sum

*&---------------------------------------------------------------------*
*&      Form  create_fieldcat_daily
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form create_fieldcat_daily .


  data: ls_fieldcatalog type lvc_s_fcat.

  clear: gt_fieldcat_grid[].
*matnr(18) type c,"
  ls_fieldcatalog-col_pos = 1.
  ls_fieldcatalog-fieldname = 'MATNR'.
  ls_fieldcatalog-scrtext_l = 'Material'.
  ls_fieldcatalog-scrtext_m = 'Material'.
  ls_fieldcatalog-scrtext_s = 'Mat.'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      werks(5)  type c,"Plant
  ls_fieldcatalog-col_pos = 2.
  ls_fieldcatalog-fieldname = 'WERKS'.
  ls_fieldcatalog-scrtext_l = 'Plant'.
  ls_fieldcatalog-scrtext_m = 'Plant'.
  ls_fieldcatalog-scrtext_s = 'Plant'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      extsu(22) type c,"Period/Segment
  ls_fieldcatalog-col_pos = 3.
  ls_fieldcatalog-fieldname = 'EXTSU'.
  ls_fieldcatalog-scrtext_l = 'Period/Segment'.
  ls_fieldcatalog-scrtext_m = 'Period/Segment'.
  ls_fieldcatalog-scrtext_s = 'Prd./Seg'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*    mng01(13) type c,"Plnd ind.reqmts
  ls_fieldcatalog-col_pos = 4.
  ls_fieldcatalog-fieldname = 'MNG01'.
  ls_fieldcatalog-scrtext_l = 'Plnd ind.reqmts'.
  ls_fieldcatalog-scrtext_m = 'PlndIndReqmts'.
  ls_fieldcatalog-scrtext_s = 'PlndIndReqmts'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.
*    mng02(13) type c,"Requirement
  ls_fieldcatalog-col_pos = 5.
  ls_fieldcatalog-fieldname = 'MNG02'.
  ls_fieldcatalog-scrtext_l = 'Requirement'.
  ls_fieldcatalog-scrtext_m = 'Requirement'.
  ls_fieldcatalog-scrtext_s = 'Requirement'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.
*    mng03(13) type c,"Receipts
  ls_fieldcatalog-col_pos = 6.
  ls_fieldcatalog-fieldname = 'MNG03'.
  ls_fieldcatalog-scrtext_l = 'Receipts'.
  ls_fieldcatalog-scrtext_m = 'Receipts'.
  ls_fieldcatalog-scrtext_s = 'Receipts'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      mng04(13) type c, "Available
  ls_fieldcatalog-col_pos = 7.
  ls_fieldcatalog-fieldname = 'MNG04'.
  ls_fieldcatalog-scrtext_l = 'Available'.
  ls_fieldcatalog-scrtext_m = 'Available'.
  ls_fieldcatalog-scrtext_s = 'Avail.'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      mng05(13) type c, "ATP
  ls_fieldcatalog-col_pos = 8.
  ls_fieldcatalog-fieldname = 'MNG05'.
  ls_fieldcatalog-scrtext_l = 'ATP'.
  ls_fieldcatalog-scrtext_m = 'ATP'.
  ls_fieldcatalog-scrtext_s = 'ATP'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      clmu_mng01(13) type c,"Clmu Plnd
  ls_fieldcatalog-col_pos = 9.
  ls_fieldcatalog-fieldname = 'CLMU_MNG01'.
  ls_fieldcatalog-scrtext_l = 'Clmu Plnd'.
  ls_fieldcatalog-scrtext_m = 'Clmu Plnd'.
  ls_fieldcatalog-scrtext_s = 'ClmuPlnd'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      clmu_mng02(13) type c,"Clmu Req
  ls_fieldcatalog-col_pos = 10.
  ls_fieldcatalog-fieldname = 'CLMU_MNG02'.
  ls_fieldcatalog-scrtext_l = 'Clmu Req'.
  ls_fieldcatalog-scrtext_m = 'Clmu Req'.
  ls_fieldcatalog-scrtext_s = 'ClmuReq'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      clmu_mng03(13) type c,"Clmu Recp
  ls_fieldcatalog-col_pos = 11.
  ls_fieldcatalog-fieldname = 'CLMU_MNG03'.
  ls_fieldcatalog-scrtext_l = 'ClmuRecp'.
  ls_fieldcatalog-scrtext_m = 'Clmu Recp'.
  ls_fieldcatalog-scrtext_s = 'ClmuRecp'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.

*      clmu_mng04(13) type c,"Clmu Aval
  ls_fieldcatalog-col_pos = 12.
  ls_fieldcatalog-fieldname = 'CLMU_MNG04'.
  ls_fieldcatalog-scrtext_l = 'Clmu Aval'.
  ls_fieldcatalog-scrtext_m = 'Clmu Aval'.
  ls_fieldcatalog-scrtext_s = 'ClmuAval'.
  ls_fieldcatalog-colddictxt = 'M'.
  append ls_fieldcatalog to gt_fieldcat_grid.
endform.                    "create_fieldcat_daily
*&---------------------------------------------------------------------*
*&      Form  download_report
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form download_report .
  if p_sum = 'X'.
    perform download_summary.
*  elseif p_daily = 'X'.
*    perform download_daily.
  endif.
endform.                    " download_report
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_SUMMARY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form get_data_summary .
  data: lt_mrp_total_lines type table of bapi_mrp_total_lines,
        ls_mrp_total_lines type bapi_mrp_total_lines.

  clear: gt_data_summary[],gt_data_summary.
  loop at gt_mat_werks.
    clear: lt_mrp_total_lines.
    call function 'BAPI_MATERIAL_STOCK_REQ_LIST'
        exporting
          material                = gt_mat_werks-matnr
          plant                   = gt_mat_werks-werks
     get_ind_lines           = ''
     get_total_lines         = 'X'
       tables
         mrp_total_lines         = lt_mrp_total_lines
*     EXTENSIONOUT            =
                .
    loop at lt_mrp_total_lines into ls_mrp_total_lines where mrp_element_ind = 'WB'.
      clear: gt_data_summary.
      gt_data_summary-matnr = gt_mat_werks-matnr."(18) type c,"Material
      gt_data_summary-werks = gt_mat_werks-werks."(5)  type c,"Plant
      gt_data_summary-extsu = ls_mrp_total_lines-per_segmt."(22) type c,"Period/Segment
      gt_data_summary-mng04 = ls_mrp_total_lines-avail_qty."(13) type c, "Available
      gt_data_summary-mng05 = ls_mrp_total_lines-atp_qty."(13) type c, "ATP
*    gt_data_summary-clmu_mng01(13) type c,"Clmu Plnd
*    gt_data_summary-clmu_mng02(13) type c,"Clmu Req
*    gt_data_summary-clmu_mng03(13) type c,"Clmu Recp
*    gt_data_summary-clmu_mng04(13) type c,"Clmu Aval
      append gt_data_summary.
    endloop.
  endloop.

endform.                    " GET_DATA_SUMMARY
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_DAILY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form get_data_daily .
  data: lt_mrp_total_lines type table of bapi_mrp_total_lines,
        ls_mrp_total_lines type bapi_mrp_total_lines.

  clear: gt_data_daily[],gt_data_daily.
  loop at gt_mat_werks.
    clear: lt_mrp_total_lines.
    call function 'BAPI_MATERIAL_STOCK_REQ_LIST'
        exporting
          material                = gt_mat_werks-matnr
          plant                   = gt_mat_werks-werks
*     MRP_AREA                =
*     PLAN_SCENARIO           =
*     SELECTION_RULE          =
*     DISPLAY_FILTER          =
*     PERIOD_INDICATOR        =
*     GET_ITEM_DETAILS        =
     get_ind_lines           = ''
     get_total_lines         = 'X'
*     IGNORE_BUFFER           =
*     MATERIAL_EVG            =
*   IMPORTING
*     MRP_LIST                =
*     MRP_CONTROL_PARAM       =
*     MRP_STOCK_DETAIL        =
*     RETURN                  =
       tables
*     MRP_ITEMS               =
*     MRP_IND_LINES           =
         mrp_total_lines         = lt_mrp_total_lines
*     EXTENSIONOUT            =
                .
    loop at lt_mrp_total_lines into ls_mrp_total_lines.
      clear: gt_data_daily.
      gt_data_daily-matnr = gt_mat_werks-matnr."(18) type c,"Material
      gt_data_daily-werks = gt_mat_werks-werks."(5)  type c,"Plant
      gt_data_daily-extsu = ls_mrp_total_lines-per_segmt."(22) type c,"Period/Segment
      if ls_mrp_total_lines-mrp_element_ind <> 'WB'.
        gt_data_daily-mng01 = ls_mrp_total_lines-pld_ind_reqs."(13) type c,"Plnd ind.reqmts
        gt_data_daily-mng02 = ls_mrp_total_lines-reqmts."(13) type c,"Requirement
        gt_data_daily-mng03 = ls_mrp_total_lines-receipts."(13) type c,"Receipts
      endif.
      gt_data_daily-mng04 = ls_mrp_total_lines-avail_qty."(13) type c, "Available
      gt_data_daily-mng05 = ls_mrp_total_lines-atp_qty."(13) type c, "ATP
*    gt_data_daily-clmu_mng01(13) type c,"Clmu Plnd
*    gt_data_daily-clmu_mng02(13) type c,"Clmu Req
*    gt_data_daily-clmu_mng03(13) type c,"Clmu Recp
*    gt_data_daily-clmu_mng04(13) type c,"Clmu Aval
      append gt_data_daily.
    endloop.
  endloop.
endform.                    " GET_DATA_DAILY
*&---------------------------------------------------------------------*
*&      Form  get_data_detail
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form get_data_detail.
  data: lt_bapi_mrp_ind_lines type table of bapi_mrp_ind_lines,
        ls_bapi_mrp_ind_lines type bapi_mrp_ind_lines,
        ls_mdez type mdez,
        ls_yse_stock_info type yse_stock_info.

  clear: gt_mdezx[].
  loop at gt_mat_werks.
    if   gt_mat_werks-werks = 'CN91'
      OR gt_mat_werks-werks = 'CN93'.   "CR3229 add
      clear: ls_yse_stock_info.
      select single * into ls_yse_stock_info from yse_stock_info
                      where werks = gt_mat_werks-werks
                        and matnr = gt_mat_werks-matnr.
      ls_mdez-mdmat = gt_mat_werks-matnr.
      ls_mdez-mdwrk = gt_mat_werks-werks.
*    ls_mdez-dat00 = ls_bapi_mrp_ind_lines-avail_date.
      ls_mdez-delb0 = 'Stock'.
*    ls_mdez-extra = ls_bapi_mrp_ind_lines-elemnt_data.
*    ls_mdez-UMDAT = ls_bapi_mrp_ind_lines-
*    ls_mdez-AUSKT = ls_bapi_mrp_ind_lines-
*    ls_mdez-mng01 = ls_bapi_mrp_ind_lines-rec_reqd_qty.
      ls_mdez-mng02 = ls_yse_stock_info-aqty.
*    ls_mdez-lgort = ls_bapi_mrp_ind_lines-storage_loc.
*    ls_mdez-kunnr = ls_bapi_mrp_ind_lines-customer.
*    ls_mdez-md4kd = ls_bapi_mrp_ind_lines-cust_name.
*    ls_mdez-lifnr = ls_bapi_mrp_ind_lines-vendor_no.
*    ls_mdez-md4li = ls_bapi_mrp_ind_lines-vend_name.
*    ls_mdez-delkz = ls_bapi_mrp_ind_lines-mrp_element_ind.
      append ls_mdez to gt_mdezx.
    else.
      clear: lt_bapi_mrp_ind_lines.
      call function 'BAPI_MATERIAL_STOCK_REQ_LIST'
        exporting
          material      = gt_mat_werks-matnr
          plant         = gt_mat_werks-werks
        tables
          mrp_ind_lines = lt_bapi_mrp_ind_lines.

      loop at lt_bapi_mrp_ind_lines into ls_bapi_mrp_ind_lines.
*    ls_mdez-DETAIL_ICON =
        ls_mdez-mdmat = gt_mat_werks-matnr.
        ls_mdez-mdwrk = gt_mat_werks-werks.
        ls_mdez-dat00 = ls_bapi_mrp_ind_lines-avail_date.
        ls_mdez-delb0 = ls_bapi_mrp_ind_lines-mrp_elemnt.
        ls_mdez-extra = ls_bapi_mrp_ind_lines-elemnt_data.
*    ls_mdez-UMDAT = ls_bapi_mrp_ind_lines-
*    ls_mdez-AUSKT = ls_bapi_mrp_ind_lines-
        ls_mdez-mng01 = ls_bapi_mrp_ind_lines-rec_reqd_qty.
        ls_mdez-mng02 = ls_bapi_mrp_ind_lines-avail_qty1.
        ls_mdez-lgort = ls_bapi_mrp_ind_lines-storage_loc.
        ls_mdez-kunnr = ls_bapi_mrp_ind_lines-customer.
        ls_mdez-md4kd = ls_bapi_mrp_ind_lines-cust_name.
        ls_mdez-lifnr = ls_bapi_mrp_ind_lines-vendor_no.
        ls_mdez-md4li = ls_bapi_mrp_ind_lines-vend_name.
        ls_mdez-delkz = ls_bapi_mrp_ind_lines-mrp_element_ind.
        append ls_mdez to gt_mdezx.
      endloop.
    endif.
  endloop.
endform.                    "get_data_detail
*&---------------------------------------------------------------------*
*&      Form  get_variant
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form get_variant .
  data: lv_exit type c,
        ls_variant type disvariant.

  if p_detail = 'X'.
    ls_variant-report = 'YSE_SDMM_DISPLAY_STOCK_DETAIL'.
  endif.

*  if p_daily = 'X'.
*    ls_variant-report = 'YSE_SDMM_DISPLAY_STOCK_DAILY'.
*  endif.

  if p_sum = 'X'.
    ls_variant-report = 'YSE_SDMM_DISPLAY_STOCK_SUMMARY'.
  endif.

  call function 'REUSE_ALV_VARIANT_F4'
    exporting
      is_variant                = ls_variant
*     I_TABNAME_HEADER          =
*     I_TABNAME_ITEM            =
*     IT_DEFAULT_FIELDCAT       =
     i_save                    = 'A'
*     I_DISPLAY_VIA_GRID        = 'X'
   importing
     e_exit                    = lv_exit
     es_variant                = ls_variant
   exceptions
     not_found                 = 1
     program_error             = 2
     others                    = 3
            .
  if sy-subrc <> 0.
  endif.

  p_var = ls_variant-variant.
endform.                    " get_variant
