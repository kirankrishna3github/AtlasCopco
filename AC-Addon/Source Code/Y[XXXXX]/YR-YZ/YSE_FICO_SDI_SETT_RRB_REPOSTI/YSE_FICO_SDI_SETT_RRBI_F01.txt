*----------------------------------------------------------------------*
***INCLUDE YSE_FICO_SDI_SETT_RRBI_F01
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  copy_chars
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*

FORM copy_chars USING p_item.

  FIELD-SYMBOLS: <fs_field> TYPE ANY.

  DATA: ref_table_des  TYPE REF TO cl_abap_tabledescr,
        structref      TYPE REF TO cl_abap_structdescr,
        idetails       TYPE abap_compdescr_tab,
        xdetails       TYPE abap_compdescr.


  structref ?= cl_abap_typedescr=>describe_by_name( 'CE41000' ).

  idetails[] = structref->components[].


  LOOP AT idetails INTO xdetails WHERE name NE 'MANDT'.
    IF sy-subrc NE 0.
      EXIT.
    ELSEIF xdetails-name = 'AKTBO'
      OR   xdetails-name = 'PAOBJNR'
      OR   xdetails-name = 'PASUBNR'
      OR   xdetails-name = 'BISDAT'
      OR   xdetails-name = 'KNT_FRM_KZ'
      OR   xdetails-name = 'UNUSED_CE3'.
      CONTINUE.
    ELSE.
      CLEAR gs_criteria.
      ASSIGN COMPONENT xdetails-name OF STRUCTURE gs_ce41000 TO <fs_field>.
      MOVE:  p_item         TO   gs_criteria-itemno_acc,
*             xdetails-name  to   gs_criteria-fieldname,
             <fs_field>     TO   gs_criteria-character.
      CASE xdetails-name.
        WHEN 'AUFNR'.
          MOVE 'RKAUFNR' TO gs_criteria-fieldname.
        WHEN 'MEINH'.
          MOVE 'VV010_ME' TO gs_criteria-fieldname.
        WHEN OTHERS.
          MOVE xdetails-name  TO   gs_criteria-fieldname.
      ENDCASE.
      APPEND gs_criteria TO gt_criteria.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " copy_chars

*&---------------------------------------------------------------------*
*&      Form  create_line_10
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM   create_line_10 .

  PERFORM copy_chars USING '10'.              "Copy the chars for item 10

  CLEAR gs_valuefield.
  gs_valuefield-itemno_acc = '10'.
  gs_valuefield-fieldname = 'VV100'.
  gs_valuefield-amt_valcom = gs_dmr-netwr * -1.
  gs_valuefield-currency = gv_waers.
  APPEND gs_valuefield TO gt_valuefield.

  CLEAR: gs_accountgl.
  gs_accountgl-itemno_acc = '10'.
*** MOD-001 * begin ***
*  gs_accountgl-gl_account = p_re_rev.
  gs_accountgl-gl_account = gv_saknr.
*** MOD-001 * end ***
  gs_accountgl-tax_code   = gv_tax_code.
  gs_accountgl-item_text  = 'RRB reposting'.                "#EC *
  gs_accountgl-comp_code  = p_bukrs.
* GS_ACCOUNTGL-FUNC_AREA  = '2051'.          "20100122 EXTUVE CR1223
*** MOD-001 * begin ***
*  gs_accountgl-func_area  = '3111'.          "20100122 EXTUVE CR1223
  gs_accountgl-func_area_long = gv_fkber.
*** MOD-001 * end ***
  gs_accountgl-plant      = gs_ce41000-werks.
  gs_accountgl-fis_period = gv_period.
  gs_accountgl-fisc_year  = p_letja.
  gs_accountgl-pstng_date = gv_doc_date.
  CONCATENATE gs_dmr-vgbel gs_dmr-vgpos INTO gs_accountgl-alloc_nmbr SEPARATED BY space.
  gs_accountgl-profit_ctr = gs_ce41000-ww006.
  APPEND gs_accountgl TO gt_accountgl.

  CLEAR gs_currencyamount.
  gs_currencyamount-itemno_acc = '10'.
  gs_currencyamount-currency = gv_waers.
  gs_currencyamount-amt_doccur = gs_dmr-netwr.
  APPEND gs_currencyamount TO gt_currencyamount.

ENDFORM.                    " create_line_10

*&---------------------------------------------------------------------*
*&      Form  create_line_20
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM create_line_20 .

  PERFORM copy_chars USING '20'.              "Copy the chars for item 20

  CLEAR gs_valuefield.
  gs_valuefield-itemno_acc = '20'.
  gs_valuefield-fieldname = 'VV200'.
  gs_valuefield-amt_valcom = gs_dmr-wavwr * -1.
  gs_valuefield-currency = gs_dmr-waerk.
  APPEND gs_valuefield TO gt_valuefield.

  CLEAR: gs_accountgl.
  gs_accountgl-itemno_acc = '20'.
  gs_accountgl-gl_account = p_re_cos.
  gs_accountgl-item_text  = 'RRB reposting'.
  gs_accountgl-comp_code  = p_bukrs.
* GS_ACCOUNTGL-FUNC_AREA  = '2061'.          "20100122 EXTUVE CR1223
*  gs_accountgl-func_area  = '4111'.          "20100122 EXTUVE CR1223 "-MOD-003
* Begin of insertion by MOD-003
  IF gv_FUNC_AREA1 EQ '41111'.
    gs_accountgl-func_area_long  = '41112'.
  ELSE.
    gs_accountgl-func_area_long  = gv_FUNC_AREA1.
  ENDIF.
* End of insertion by MOD-003
  gs_accountgl-plant      = gs_ce41000-werks.
  gs_accountgl-fis_period = gv_period.
  gs_accountgl-fisc_year  = p_letja.
  gs_accountgl-pstng_date = gv_doc_date.
  CONCATENATE gs_dmr-vgbel gs_dmr-vgpos INTO gs_accountgl-alloc_nmbr SEPARATED BY space.
  gs_accountgl-profit_ctr = gs_ce41000-ww006.
  APPEND gs_accountgl TO gt_accountgl.

  CLEAR gs_currencyamount.
  gs_currencyamount-itemno_acc = '20'.
  gs_currencyamount-currency = gv_waers.
  gs_currencyamount-amt_doccur = gs_dmr-wavwr * -1.
  APPEND gs_currencyamount TO gt_currencyamount.

ENDFORM.                    " create_line_20

*&---------------------------------------------------------------------*
*&      Form  create_line_30
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM create_line_30 .

  PERFORM copy_chars USING '30'.              "Copy the chars for item 30

  PERFORM rrb_pc_derivation USING '30'.

  gs_valuefield-itemno_acc = '30'.
  gs_valuefield-fieldname = 'VV100'.
  gs_valuefield-amt_valcom = gs_dmr-netwr.
  gs_valuefield-currency = gv_waers.
  APPEND gs_valuefield TO gt_valuefield.

  CLEAR: gs_accountgl.
  gs_accountgl-itemno_acc = '30'.
*** MOD-001 * begin ***
*  gs_accountgl-gl_account = p_revs.
  gs_accountgl-gl_account = gv_saknr.
*** MOD-001 * end ***
  gs_accountgl-tax_code   = gv_tax_code.
  gs_accountgl-item_text  = 'RRB reposting'.
  gs_accountgl-comp_code  = p_bukrs.
* GS_ACCOUNTGL-FUNC_AREA  = '2051'.          "20100122 EXTUVE CR1223
*** MOD-001 * begin ***
*  gs_accountgl-func_area  = '3111'.          "20100122 EXTUVE CR1223
  gs_accountgl-func_area_long = gv_fkber.
*** MOD-001 * end ***
  gs_accountgl-plant      = gs_ce41000-werks.
  gs_accountgl-fis_period = gv_period.
  gs_accountgl-fisc_year  = p_letja.
  gs_accountgl-pstng_date = gv_doc_date.
  CONCATENATE gs_dmr-vgbel gs_dmr-vgpos INTO gs_accountgl-alloc_nmbr SEPARATED BY space.
  READ TABLE gt_criteria INTO gs_criteria
  WITH KEY itemno_acc = '30'
       fieldname = 'PRCTR'.
  gs_accountgl-profit_ctr = gs_criteria-character.
  APPEND gs_accountgl TO gt_accountgl.

  CLEAR gs_currencyamount.
  gs_currencyamount-itemno_acc = '30'.
  gs_currencyamount-currency = gv_waers.
  gs_currencyamount-amt_doccur = gs_dmr-netwr * -1.
  APPEND gs_currencyamount TO gt_currencyamount.

ENDFORM.                    " create_line_30

*&---------------------------------------------------------------------*
*&      Form  create_line_40
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM create_line_40 .

  PERFORM copy_chars USING '40'.              "Copy the chars for item 40

  PERFORM rrb_pc_derivation USING '40'.

  CLEAR gs_valuefield.
  gs_valuefield-itemno_acc = '40'.
  gs_valuefield-fieldname = 'VV200'.
  gs_valuefield-amt_valcom = gs_dmr-wavwr.
  gs_valuefield-currency = gs_dmr-waerk.
  APPEND gs_valuefield TO gt_valuefield.

  CLEAR: gs_accountgl.
  gs_accountgl-itemno_acc = '40'.
  gs_accountgl-gl_account = p_costs.
  gs_accountgl-item_text  = 'RRB reposting'.
  gs_accountgl-comp_code  = p_bukrs.
* GS_ACCOUNTGL-FUNC_AREA  = '2061'.          "20100122 EXTUVE CR1223
*  gs_accountgl-func_area  = '4111'.          "20100122 EXTUVE CR1223 "-MOD-003

* Begin of insertion by MOD-003
  IF gv_FUNC_AREA2 EQ '41111'.
    gs_accountgl-func_area_long  = '41112'.
  ELSE.
  gs_accountgl-func_area_long  = gv_FUNC_AREA2.
  ENDIF.
* End of insertion by MOD-003

  gs_accountgl-plant      = gs_ce41000-werks.
  gs_accountgl-fis_period = gv_period.
  gs_accountgl-fisc_year  = p_letja.
  gs_accountgl-pstng_date = gv_doc_date.
  CONCATENATE gs_dmr-vgbel gs_dmr-vgpos INTO gs_accountgl-alloc_nmbr SEPARATED BY space.
  READ TABLE gt_criteria INTO gs_criteria
  WITH KEY itemno_acc = '40'
       fieldname = 'PRCTR'.
  gs_accountgl-profit_ctr = gs_criteria-character.
  APPEND gs_accountgl TO gt_accountgl.

  CLEAR gs_currencyamount.
  gs_currencyamount-itemno_acc = '40'.
  gs_currencyamount-currency = gv_waers.
  gs_currencyamount-amt_doccur = gs_dmr-wavwr.
  APPEND gs_currencyamount TO gt_currencyamount.

ENDFORM.                    " create_line_40

*&---------------------------------------------------------------------*
*&      Form  create_header
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM create_header .

  gs_documentheader-header_txt =  'RRB reposting'.          "#EC *
  gs_documentheader-comp_code  =  p_bukrs.
  gs_documentheader-username   =  sy-uname.
  gs_documentheader-bus_act    =  'RFBU'.
*  gs_documentheader-doc_date   =  gv_doc_date.
*  gs_documentheader-pstng_date =  sy-datum.
*CGEE 03/09/2007 Turn the assignment to these variables around
  gs_documentheader-doc_date   =  sy-datum.
  gs_documentheader-pstng_date =  gv_doc_date.
*------------------------------------------------
  gs_documentheader-fisc_year  =  p_letja.
  gs_documentheader-fis_period =  gv_period.
  gs_documentheader-doc_type   =  'SA'.
  gs_documentheader-ref_doc_no =  gs_dmr-vgbel.

ENDFORM.                    " create_header

*&---------------------------------------------------------------------*
*&      Form  execute_repost
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM execute_repost .

  IF gv_subrc NE 0.
    "Write error log
  ELSE.
    CLEAR: gt_return[], gv_objkey.
    CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
      EXPORTING
        documentheader = gs_documentheader
      IMPORTING
        obj_key        = gv_objkey
        obj_type       = gv_obtype
        obj_sys        = gv_obsys
      TABLES
        accountgl      = gt_accountgl
        currencyamount = gt_currencyamount
        criteria       = gt_criteria
        valuefield     = gt_valuefield
        return         = gt_return.

    LOOP AT gt_return INTO gs_return
                      WHERE type = 'E'  OR
                            type = 'A'.
      "Show error messages
      WRITE: /, gs_return-type, gs_return-message.
    ENDLOOP.

    IF sy-subrc NE 0.      "No error messages, so commit and show success message
      READ TABLE gt_return INTO gs_return INDEX 1.
      WRITE: /, 'S', gs_return-message, gs_dmr-vbeln, gs_dmr-vgbel, gs_dmr-vgpos, 'Reposted'.
      COMMIT WORK AND WAIT.

      LOOP AT gt_rrb_reposti ASSIGNING <fs_rrb_reposti>
                             WHERE invoice = gs_dmr-billing_doc
                               AND item    = gs_dmr-billing_item.
        <fs_rrb_reposti>-reposted = 'X'.
        <fs_rrb_reposti>-obj_key  = gv_objkey.
        <fs_rrb_reposti>-obj_typ  = gv_obtype.
        <fs_rrb_reposti>-obj_sys  = gv_obsys.
        <fs_rrb_reposti>-gjahr    = p_letja.
        <fs_rrb_reposti>-bus_act  = 'RFBU'.
        <fs_rrb_reposti>-redat    = sy-datum.
        <fs_rrb_reposti>-rezet    = sy-timlo.
      ENDLOOP.
    ENDIF.
  ENDIF.

ENDFORM.                    " execute_repost

*&---------------------------------------------------------------------*
*&      Form  reverse_posting
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM reverse_posting.

  DATA: ls_reversal TYPE bapiacrev.
  DATA: lv_bus_act  TYPE glvor.

  CLEAR: ls_reversal, gt_return[].

*Fill reversal structure
  MOVE: <fs_rrb_reposti>-obj_key TO ls_reversal-obj_key,
        <fs_rrb_reposti>-obj_typ TO ls_reversal-obj_type,
        <fs_rrb_reposti>-obj_sys TO ls_reversal-obj_sys,
        <fs_rrb_reposti>-obj_key TO ls_reversal-obj_key_r,
        gv_doc_date TO ls_reversal-pstng_date,
        gv_period TO ls_reversal-fis_period.

  lv_bus_act = <fs_rrb_reposti>-bus_act.

  CALL FUNCTION 'BAPI_ACC_DOCUMENT_REV_POST'
    EXPORTING
      reversal       = ls_reversal
      bus_act        = lv_bus_act
   IMPORTING
*     OBJ_TYPE        =
     obj_key         = <fs_rrb_reposti>-obj_key_rev
*     OBJ_SYS         =
    TABLES
      return         = gt_return
            .

  LOOP AT gt_return INTO gs_return
                    WHERE type = 'E'  OR
                          type = 'A'.
  ENDLOOP.

  IF sy-subrc NE 0.
    <fs_rrb_reposti>-repost_canceled = 'X'.
    WRITE: / 'Reposting for invoice:', <fs_rrb_reposti>-invoice, 'Cancelled'.
    COMMIT WORK AND WAIT.
  ELSE.
    CLEAR: <fs_rrb_reposti>-repost_canceled,
           <fs_rrb_reposti>-obj_key_rev.
  ENDIF.


ENDFORM.                    " reverse_posting

*&---------------------------------------------------------------------*
*&      Form  rrb_pc_derivation
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM rrb_pc_derivation USING p_item.

  DATA: lv_equnr TYPE equnr,
        lv_werks TYPE werks_d,
        lv_kunnr TYPE kunnr,
        lv_gac   TYPE rkeg_ww006,
        lv_pgc   TYPE rkeg_ww007,
        lv_prctr TYPE prctr,
        lv_plc   TYPE rkeg_ww002,
        lv_prodh TYPE prodh_d.

* Get the equnr, plant and customer nr from char table
  READ TABLE gt_criteria INTO gs_criteria
                         WITH KEY itemno_acc = p_item
                                  fieldname = 'EQUNR'.
  IF sy-subrc = 0.
    MOVE gs_criteria-character TO lv_equnr.
  ENDIF.
  READ TABLE gt_criteria INTO gs_criteria
  WITH KEY itemno_acc = p_item
       fieldname = 'WERKS'.
  IF sy-subrc EQ 0.
    MOVE gs_criteria-character TO lv_werks.
  ENDIF.
  READ TABLE gt_criteria INTO gs_criteria
  WITH KEY itemno_acc = p_item
       fieldname = 'KNDNR'.
  IF sy-subrc EQ 0.
    MOVE gs_criteria-character TO lv_kunnr.
  ENDIF.

  CALL METHOD yse_am_derivation=>rrb_reposting_derivation
    EXPORTING
      im_vkorg  = gs_dmr-vkorg
      im_kunnr  = lv_kunnr
      im_spart  = gs_dmr-spart
      im_vtweg  = gs_dmr-vtweg
      im_equnr  = lv_equnr
      im_werks  = lv_werks
      im_matnr  = gs_dmr-matnr
    IMPORTING
      exp_gac   = lv_gac
      exp_pgc   = lv_pgc
      exp_prctr = lv_prctr
      exp_plc   = lv_plc
      exp_prodh = lv_prodh.

* Overwrite prodh
  READ TABLE gt_criteria INTO gs_criteria
                         WITH KEY itemno_acc = p_item
                                  fieldname = 'PRODH'.
  IF sy-subrc EQ 0.
    MOVE lv_prodh TO gs_criteria-character.
    MODIFY gt_criteria FROM gs_criteria
      TRANSPORTING character
      WHERE ( itemno_acc = p_item )
        AND ( fieldname = 'PRODH' ).
  ENDIF.

* Overwrite profitcenter
  READ TABLE gt_criteria INTO gs_criteria
  WITH KEY itemno_acc = p_item
       fieldname = 'PRCTR'.
  IF sy-subrc EQ 0.
    MOVE lv_prctr TO gs_criteria-character.
    MODIFY gt_criteria FROM gs_criteria
      TRANSPORTING character
      WHERE ( itemno_acc = p_item )
        AND ( fieldname = 'PRCTR' ).
  ENDIF.

* Overwrite PLC
  READ TABLE gt_criteria INTO gs_criteria
  WITH KEY itemno_acc = p_item
  fieldname = 'WW002'.
  IF sy-subrc EQ 0.
    MOVE lv_plc TO gs_criteria-character.
    MODIFY gt_criteria FROM gs_criteria
    TRANSPORTING character
    WHERE ( itemno_acc = p_item )
      AND ( fieldname = 'WW002' ).

  ENDIF.

* Overwrite GAC
  READ TABLE gt_criteria INTO gs_criteria
  WITH KEY itemno_acc = p_item
       fieldname = 'WW006'.
  IF sy-subrc EQ 0.
    MOVE lv_gac TO gs_criteria-character.
    MODIFY gt_criteria FROM gs_criteria
      TRANSPORTING character
      WHERE ( itemno_acc = p_item )
        AND ( fieldname = 'WW006' ).
  ENDIF.

* Overwrite PGC
  READ TABLE gt_criteria INTO gs_criteria
  WITH KEY itemno_acc = p_item
       fieldname = 'WW007'.
  IF sy-subrc EQ 0.
    MOVE lv_pgc TO gs_criteria-character.
    MODIFY gt_criteria FROM gs_criteria
      TRANSPORTING character
      WHERE ( itemno_acc = p_item )
        AND ( fieldname = 'WW007' ).
  ENDIF.

ENDFORM.                    " rrb_pc_derivation

*&---------------------------------------------------------------------*
*&      Form  get_last_date_of_period
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM get_last_date_of_period .

  gv_period = p_letpe.

  CONCATENATE p_letja p_letpe INTO gv_perio_copa.

  CALL FUNCTION 'LAST_DAY_IN_PERIOD_GET'
    EXPORTING
      i_gjahr              = p_letja
*     I_MONMIT             = 00
      i_periv              = 'K4'
      i_poper              = p_letpe
    IMPORTING
      e_date               = gv_doc_date
    EXCEPTIONS
      input_false          = 1
      t009_notfound        = 2
      t009b_notfound       = 3
      OTHERS               = 4
            .

ENDFORM.                    " get_last_date_of_period

*&---------------------------------------------------------------------*
*&      Form  CONVERT_AMOUNT_INT
*&---------------------------------------------------------------------*
*       Convert amount via intermediate currency
*----------------------------------------------------------------------*
*      -->P_KWERT_IN  : Given Value
*      -->P_WAERS_IN  : Given Currency
*      -->P_KWERT_OUT : Converted Value
*      -->P_WAERS_RES : Result Currency
*----------------------------------------------------------------------*
FORM convert_amount_int  USING    p_kwert_in
                                  p_waers_in
                                  p_kwert_out
                                  p_waers_res.

  DATA: lv_value_int   TYPE wtgxxx.

* Input Currency = Result currency -> NO conversion
  IF p_waers_in = p_waers_res.
    p_kwert_out = p_kwert_in.
    RETURN.
  ENDIF.

* Intermediate exchange rate
  IF p_waers_in = gv_waers_int.
    lv_value_int = p_kwert_in.
  ELSE.
    CLEAR gt_curr.
    READ TABLE gt_curr WITH TABLE KEY kurst = gv_kurst
                                      fcurr = p_waers_in
                                      tcurr = gv_waers_int.
    CHECK sy-subrc = 0.
*     Calculate ammount in intermediate currency
    IF gt_curr-ukurs = 0.
      gt_curr-ukurs = 1.
    ENDIF.
    lv_value_int = p_kwert_in * gt_curr-ukurs.
  ENDIF.

* Result exchange rate
  IF p_waers_res = gv_waers_int.
    p_kwert_out = lv_value_int.
  ELSE.
    CLEAR gt_curr.
    READ TABLE gt_curr WITH TABLE KEY kurst = gv_kurst
                                      fcurr = p_waers_res
                                      tcurr = gv_waers_int.
    CHECK sy-subrc = 0.
*     Calculate ammount in result currency
    IF gt_curr-ukurs = 0.
      gt_curr-ukurs = 1.
    ENDIF.
    p_kwert_out = lv_value_int / gt_curr-ukurs.
  ENDIF.

ENDFORM.                    " CONVERT_AMOUNT_INT
