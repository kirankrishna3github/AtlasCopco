*----------------------------------------------------------------------*
***INCLUDE YSE_RU_FI_INVOICE_F04 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  ALL_SELECTION
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM ALL_SELECTION .
  data: lv_sav_belnr TYPE BELNR.

  clear gt_BSAD_tmp[].
  clear gt_BSAD_tmp2[].
  SELECT
        belnr
        xref2
        gjahr
        vbeln
        bldat
        zuonr
        dmbtr
   INTO TABLE gt_BSAD_tmp
   FROM BSAD
   WHERE BLART EQ 'RU'
     AND UMSKZ EQ 'A'
* begin of change MOD-004
     AND BUKRS EQ 'XRAA'
*     AND BUKRS EQ 'MRUA'
* end of change MOD-004
     AND BUDAT in S_BUDAT
     AND KUNNR in S_KUNNR.
  SORT gt_BSAD_tmp by belnr xref2 zuonr bldat vbeln.
  DELETE ADJACENT DUPLICATES FROM gt_BSAD_tmp COMPARING belnr.

  SELECT belnr sum( dmbtr ) FROM BSAD
   INTO TABLE gt_BSAD_tmp2
   WHERE BLART EQ 'RU'
     AND UMSKZ EQ 'A'
* begin of change MOD-004
     AND BUKRS EQ 'XRAA'
*     AND BUKRS EQ 'MRUA'
* end of change MOD-004
     AND BUDAT in S_BUDAT
     AND KUNNR in S_KUNNR
  GROUP BY belnr.

  loop at gt_BSAD_tmp.
    loop at gt_BSAD_tmp2
      where belnr = gt_BSAD_tmp-belnr.
      gt_BSAD_tmp-dmbtr = gt_BSAD_tmp2-dmbtr.
      MODIFY gt_BSAD_tmp transporting dmbtr.
    endloop.
  endloop.

  SORT gt_BSAD_tmp by bldat.

  loop at gt_BSAD_tmp.
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        input  = gt_BSAD_tmp-xref2
      IMPORTING
        OUTPUT = gt_BSAD_tmp-xref2.
    gt_BSAD_tmp-xref2 =  gt_BSAD_tmp-xref2+2(10).

    clear gt_BSAD.
    clear lv_waerk.
    clear lv_xblnr.
    select  single waerk xblnr from vbak into (lv_waerk, lv_xblnr)
      where vbeln = gt_BSAD_tmp-xref2.

    if sy-subrc eq 0.
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
        EXPORTING
          input  = gt_BSAD_tmp-xref2
        IMPORTING
          OUTPUT = gt_BSAD_tmp-xref2.

      select single printed from yse_printno into gt_BSAD-printed
        where xref2 = gt_BSAD_tmp-xref2 and belnr = gt_BSAD_tmp-belnr.
      move-corresponding gt_BSAD_tmp to gt_BSAD.
      gt_BSAD-waerk = lv_waerk.
      gt_BSAD-xblnr = lv_xblnr.
      append gt_BSAD.
    else.
      if gt_BSAD_tmp-xref2 is initial.
        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
          EXPORTING
            input  = gt_BSAD_tmp-xref2
          IMPORTING
            OUTPUT = gt_BSAD_tmp-xref2.
        gt_BSAD-printed = 0.
        gt_BSAD-msg = text-A01.
        move-corresponding gt_BSAD_tmp to gt_BSAD.
        append gt_BSAD.
      endif.
    endif.
  endloop.

* Add additional fields to internal table
  LOOP AT gt_BSAD.
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
      EXPORTING
        input  = gt_BSAD-xref2
      IMPORTING
        OUTPUT = gt_BSAD-xref2.

    MODIFY gt_BSAD.
  ENDLOOP.

  clear gt_bsid_tmp[].
  clear gt_bsid_tmp2[].
  SELECT
        belnr
        xref2
        gjahr
        vbeln
        bldat
        zuonr
        dmbtr
   INTO TABLE gt_bsid_tmp
   FROM bsid
   WHERE BLART EQ 'RU'
     AND UMSKZ EQ 'A'
* begin of change MOD-004
     AND BUKRS EQ 'XRAA'
*     AND BUKRS EQ 'MRUA'
* end of change MOD-004
     AND BUDAT in S_BUDAT
     AND KUNNR in S_KUNNR.
  SORT gt_bsid_tmp by belnr xref2 zuonr bldat vbeln.
  DELETE ADJACENT DUPLICATES FROM gt_bsid_tmp COMPARING belnr.

  SELECT belnr sum( dmbtr ) FROM bsid
   INTO TABLE gt_bsid_tmp2
   WHERE BLART EQ 'RU'
     AND UMSKZ EQ 'A'
* begin of change MOD-004
     AND BUKRS EQ 'XRAA'
*     AND BUKRS EQ 'MRUA'
* end of change MOD-004
     AND BUDAT in S_BUDAT
     AND KUNNR in S_KUNNR
  GROUP BY belnr.

  loop at gt_bsid_tmp.
    loop at gt_bsid_tmp2
      where belnr = gt_bsid_tmp-belnr.
      gt_bsid_tmp-dmbtr = gt_bsid_tmp2-dmbtr.
      MODIFY gt_bsid_tmp transporting dmbtr.
    endloop.
  endloop.

  SORT gt_bsid_tmp by bldat.

  loop at gt_bsid_tmp.
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        input  = gt_bsid_tmp-xref2
      IMPORTING
        OUTPUT = gt_bsid_tmp-xref2.
    gt_bsid_tmp-xref2 =  gt_bsid_tmp-xref2+2(10).

    clear gt_bsid.
    clear lv_waerk.
    clear lv_xblnr.
    select  single waerk xblnr from vbak into (lv_waerk, lv_xblnr)
      where vbeln = gt_bsid_tmp-xref2.

    if sy-subrc eq 0.
      CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
        EXPORTING
          input  = gt_bsid_tmp-xref2
        IMPORTING
          OUTPUT = gt_bsid_tmp-xref2.

      select single printed from yse_printno into gt_bsid-printed
        where xref2 = gt_bsid_tmp-xref2 and belnr = gt_bsid_tmp-belnr.
      move-corresponding gt_bsid_tmp to gt_bsid.
      gt_bsid-waerk = lv_waerk.
      gt_bsid-xblnr = lv_xblnr.
      append gt_bsid.
    else.
      if gt_bsid_tmp-xref2 is initial.
        CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
          EXPORTING
            input  = gt_bsid_tmp-xref2
          IMPORTING
            OUTPUT = gt_bsid_tmp-xref2.
        gt_bsid-printed = 0.
        gt_bsid-msg = text-A01.
        move-corresponding gt_bsid_tmp to gt_bsid.
        append gt_bsid.
      endif.
    endif.
  endloop.

* Add additional fields to internal table
  LOOP AT gt_bsid.
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_OUTPUT'
      EXPORTING
        input  = gt_bsid-xref2
      IMPORTING
        OUTPUT = gt_bsid-xref2.

    MODIFY gt_bsid.
  ENDLOOP.
  APPEND LINES OF gt_bsad to gt_bsid.

ENDFORM.                    " ALL_SELECTION
