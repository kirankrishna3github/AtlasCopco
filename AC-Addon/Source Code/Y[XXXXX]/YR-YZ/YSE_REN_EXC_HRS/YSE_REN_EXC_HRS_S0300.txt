*&---------------------------------------------------------------------*
*&  Include           YSE_REN_EXC_HRS_S0300                            *
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& SCREEN LOGIC 0300 --------------------------------------------------*
*&---------------------------------------------------------------------*

************************************************************************
* MODULE 0300_STATUS OUTPUT                                            *
************************************************************************
MODULE 0300_STATUS OUTPUT.
  SET TITLEBAR 'EHRS_BRKDWN'.
  SET PF-STATUS 'STATUS0200'.   " Status from Msr Docum overview can be used
ENDMODULE.                 " 0300_STATUS  OUTPUT

************************************************************************
* MODULE 0300_PREPARE_SCREEN OUTPUT                                    *
************************************************************************
MODULE 0300_PREPARE_SCREEN OUTPUT.

  IF OBJ_CONT_BD IS INITIAL.
    CREATE OBJECT OBJ_CONT_BD
             EXPORTING CONTAINER_NAME = 'BRKDWN'.

    CREATE OBJECT OBJ_ALV_BD
              EXPORTING I_PARENT = OBJ_CONT_BD.

    CREATE OBJECT OBJ_EVENT_HNDL_BD.

*   Enable Line Selection And Double-Clicking
    SET HANDLER OBJ_EVENT_HNDL_BD->HANDLE_DOUBLE_CLICK FOR OBJ_ALV_BD.

    PERFORM 0300_BUILD_ALV.

  ENDIF.

ENDMODULE.                 " 0300_PREPARE_SCREEN  OUTPUT

************************************************************************
* Module 0300_USER_COMMAND INPUT                                       *
************************************************************************
MODULE 0300_USER_COMMAND INPUT.

  CASE OKCODE.
    WHEN 'BACK' OR 'EXIT'.
      CALL METHOD OBJ_ALV_BD->FREE.
      FREE OBJ_ALV_BD.
      CALL METHOD OBJ_CONT_BD->FREE.
      FREE OBJ_CONT_BD.
*      CALL METHOD CL_GUI_CFW=>FLUSH.
      LEAVE TO SCREEN 0.
  ENDCASE.

ENDMODULE.                 " 0300_USER_COMMAND  INPUT

*&---------------------------------------------------------------------*
*&      Form  0300_BUILD_ALV
*&---------------------------------------------------------------------*
*       Build ALV
*----------------------------------------------------------------------*
FORM 0300_BUILD_ALV.

* Clear the field catalog table
  REFRESH: GT_FIELDCAT_MD.

* Fetch the field catalog for structure YSE_RENT_EHRSP_OUTPUT
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_BUFFER_ACTIVE              = ' '
      I_STRUCTURE_NAME             = 'YSE_RENT_EHRSBD_OUTPUT'
    CHANGING
      CT_FIELDCAT                  = GT_FIELDCAT_MD.

* Modify some of the fields
  LOOP AT GT_FIELDCAT_MD ASSIGNING <FIELDCAT>.
    CASE <FIELDCAT>-FIELDNAME.
      WHEN 'BELNR'.
        <FIELDCAT>-NO_OUT = GC_CHAR_X.
    ENDCASE.
  ENDLOOP.

* Set layout variables
* GS_LAYOUT-NO_TOOLBAR = LC_TRUE.
  GS_LAYOUT-SEL_MODE   = 'D'.

* Display the grid
  CALL METHOD OBJ_ALV_BD->SET_TABLE_FOR_FIRST_DISPLAY
    EXPORTING
      I_STRUCTURE_NAME              = 'YSE_RENT_EHRSBD_OUTPUT'
      IS_LAYOUT                     = GS_LAYOUT
    CHANGING
      IT_OUTTAB                     = GT_EHRSBD[]
      IT_FIELDCATALOG               = GT_FIELDCAT_MD
    EXCEPTIONS
      INVALID_PARAMETER_COMBINATION = 1
      PROGRAM_ERROR                 = 2
      TOO_MANY_LINES                = 3
      OTHERS                        = 4.

  IF SY-SUBRC <> 0.
*     MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*     WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.                    " 0300_BUILD_ALV

*&---------------------------------------------------------------------*
*&      Form  0300_DBLCLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM 0300_DBLCLICK  USING    P_ROW
                             P_COLUMN
                             P_ROW_NO.

 CASE P_COLUMN.
   WHEN 'AUFNR'.                                          " Open service order
*     PERFORM 0300_OPEN_IW33 USING P_ROW P_COLUMN P_ROW_NO.
   WHEN 'QMNUM' OR 'AUSVN'.                               " Open notification
     PERFORM 0300_OPEN_IW53 USING P_ROW P_COLUMN P_ROW_NO.
   WHEN 'RUECK' OR 'RMZHL' OR 'IEDD'.                     " Open confirmation
*     PERFORM 0300_OPEN_IW43 USING P_ROW P_COLUMN P_ROW_NO.
 ENDCASE. " P_COLUMN.

ENDFORM.                    " 0300_DBLCLICK

**&---------------------------------------------------------------------*
**&      Form  0300_OPEN_IW33
**&---------------------------------------------------------------------*
**       text
**----------------------------------------------------------------------*
*FORM 0300_OPEN_IW33  USING    P_ROW
*                              P_COLUMN
*                              P_ROW_NO.
*
*  DATA: LS_OPTIONS      TYPE CTU_PARAMS.
*
** Read the selected entry from GT_EHRSK
*  READ TABLE GT_EHRSBD INDEX P_ROW.
*  CHECK SY-SUBRC EQ 0.
*
*  LS_OPTIONS-NOBIEND = 'X'.
*  LS_OPTIONS-DISMODE = 'E'.
*  LS_OPTIONS-UPDMODE = 'S'.
*
** Clear the BDC tables
*  CLEAR: IT_BDCDATA[], IT_BDCMSGS[].
*
** Prepare the first screen
*  PERFORM 9999_BDC_ADD_SCREEN USING 'SAPLCOIH' '0101'.
*  PERFORM 9999_BDC_ADD_FIELD  USING 'CAUFVD-AUFNR' GT_EHRSBD-AUFNR.
*  PERFORM 9999_BDC_ADD_FIELD  USING 'BDC_OKCODE' '/00'.
** Call the transaction
*  CALL TRANSACTION GC_TX_IW33 USING         IT_BDCDATA
*                              OPTIONS  FROM LS_OPTIONS
*                              MESSAGES INTO IT_BDCMSGS.
*
*ENDFORM.                    " 0300_OPEN_IW33

*&---------------------------------------------------------------------*
*&      Form  0300_OPEN_IW53
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM 0300_OPEN_IW53  USING    P_ROW
                              P_COLUMN
                              P_ROW_NO.

  DATA: LS_OPTIONS      TYPE CTU_PARAMS.

* Read the selected entry from GT_EHRSK
  READ TABLE GT_EHRSBD INDEX P_ROW.
  CHECK SY-SUBRC EQ 0.

  LS_OPTIONS-NOBIEND = 'X'.
  LS_OPTIONS-DISMODE = 'E'.
  LS_OPTIONS-UPDMODE = 'S'.

* Clear the BDC tables
  CLEAR: IT_BDCDATA[], IT_BDCMSGS[].

* Prepare the first screen
  PERFORM 9999_BDC_ADD_SCREEN USING 'SAPLIQS0' '0100'.
  PERFORM 9999_BDC_ADD_FIELD  USING 'RIWO00-QMNUM' GT_EHRSBD-QMNUM.
  PERFORM 9999_BDC_ADD_FIELD  USING 'BDC_OKCODE' '/00'.
* Call the transaction
  CALL TRANSACTION GC_TX_IW53 USING         IT_BDCDATA
                              OPTIONS  FROM LS_OPTIONS
                              MESSAGES INTO IT_BDCMSGS.

ENDFORM.                    " 0300_OPEN_IW53

*&---------------------------------------------------------------------*
*&      Form  0300_OPEN_IW43
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*FORM 0300_OPEN_IW43  USING    P_ROW
*                              P_COLUMN
*                              P_ROW_NO.
*
*  DATA: LS_OPTIONS      TYPE CTU_PARAMS.
*
** Read the selected entry from GT_EHRSK
*  READ TABLE GT_EHRSBD INDEX P_ROW.
*  CHECK SY-SUBRC EQ 0.
*
*  LS_OPTIONS-NOBIEND = 'X'.
*  LS_OPTIONS-DISMODE = 'E'.
*  LS_OPTIONS-UPDMODE = 'S'.
*
** Clear the BDC tables
*  CLEAR: IT_BDCDATA[], IT_BDCMSGS[].
*
** Prepare the first screen
*  PERFORM 9999_BDC_ADD_SCREEN USING 'SAPLCORU' '3000'.
*  PERFORM 9999_BDC_ADD_FIELD  USING 'CORUF-RUECK' GT_EHRSBD-RUECK.
*  PERFORM 9999_BDC_ADD_FIELD  USING 'BDC_OKCODE' '=ENTR'.
** Call the transaction
*  CALL TRANSACTION GC_TX_IW43 USING         IT_BDCDATA
*                              OPTIONS  FROM LS_OPTIONS
*                              MESSAGES INTO IT_BDCMSGS.
*
*ENDFORM.                    " 0300_OPEN_IW43
