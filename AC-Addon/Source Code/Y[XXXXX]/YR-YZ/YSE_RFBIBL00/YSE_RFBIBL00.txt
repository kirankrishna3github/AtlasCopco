REPORT YSE_RFBIBL00 MESSAGE-ID FB.

*----------------------------------------------------------------------*
*        Datendeklaration                                              *
*----------------------------------------------------------------------*
TABLES:
    DD02L.

DATA:
    XON         VALUE 'X',
    NO_PROT     VALUE 'X'.

DATA:
    SAPRL       LIKE SY-SAPRL,
    SYSID       LIKE SY-SYSID,
    NEW_GN,
    GDATE       LIKE SY-DATUM,
    GTIME       LIKE SY-UZEIT.



DATA:
    BEGIN OF TABTAB OCCURS 3,
        TABNAME     LIKE DD02L-TABNAME,
        VORHANDEN,
    END OF TABTAB.

DATA:
    BEGIN OF REP OCCURS 700,
        Z(72),
    END OF REP.



*eject
*----------------------------------------------------------------------*
*        Selektionsbild                                                *
*----------------------------------------------------------------------*
*------- Aufbau des Selektionsbildes
************************************************************************
*        Falls 'Call Transaction ... Using ...' gew¨¹nscht, bitte die
*        die NO-DISPLAY-Zeilen bei Parameters ausstenen
*        Vor der Benutzung des 'Call Transaction ... Using ...'
*        bitte die Datei pr¨¹fen.
************************************************************************
SELECTION-SCREEN SKIP 1.

PARAMETERS: DS_NAME     LIKE RFPDO-RFBIFILE.  " Dateiname

SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN ULINE.
SELECTION-SCREEN SKIP 1.

PARAMETERS: FL_CHECK    LIKE RFPDO-RFBICHCK,    " Datei nur pr¨¹fen
            OS_XON      LIKE  RFPDO-RFBIOLDSTR, " Alte Strukturen ?
            XNONUNIC    TYPE  RFPDO-RFBINONUNIC. "Nonunicode File
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN ULINE.
SELECTION-SCREEN SKIP 1.
PARAMETERS: CALLMODE    LIKE RFPDO-RFBIFUNCT OBLIGATORY,
            MAX_COMM(4) TYPE N DEFAULT '1000',  " Max Belege pro Commit
            PA_XPROT(1) TYPE C.                 " erweitertes Protokoll
*                                              NO-DISPLAY.
*           ANZ_MODE:        A=alles N=nichts E=Error
PARAMETERS: ANZ_MODE    LIKE RFPDO-ALLGAZMD    DEFAULT 'N'
                                               NO-DISPLAY.
*           UPDATE:          S=Synchron A=Asynchron
PARAMETERS: UPDATE      LIKE RFPDO-ALLGVBMD    DEFAULT 'S'
                                               NO-DISPLAY.

* info messages as popup, log or no info
SELECTION-SCREEN SKIP 1.
SELECTION-SCREEN BEGIN OF BLOCK BL1 WITH FRAME TITLE TEXT-001.
PARAMETERS: XPOP  TYPE c RADIOBUTTON GROUP RBL1,
            XLOG  type c RADIOBUTTON GROUP RBL1,
            XINF  type c RADIOBUTTON GROUP RBL1.
SELECTION-SCREEN END   OF BLOCK BL1.

AT SELECTION-SCREEN ON CALLMODE.
  IF CALLMODE NA 'BCD'.
    MESSAGE E031.
  ENDIF.


load-of-program.

 class CL_ABAP_CHAR_UTILITIES definition load.
 if CL_ABAP_CHAR_UTILITIES=>charsize = 1.
   XNONUNIC = 'X'.
 endif.



*eject
*---------------------------------------------------------------*
*  START-OF-SELECTION                                           *
*---------------------------------------------------------------*
START-OF-SELECTION.

*----------------------------------------------------------------------*
*        Hauptablauf                                                   *
*----------------------------------------------------------------------*

* Informationen zu Z-Strukturen einlesen
  SELECT * FROM DD02L WHERE ( TABNAME = 'ZBSEG' OR
                              TABNAME = 'ZSELP' )
                      AND   AS4LOCAL = 'A'
                      AND   TABCLASS = 'INTTAB'.
    MOVE-CORRESPONDING DD02L TO TABTAB.
    APPEND TABTAB.
  ENDSELECT.

* Informationen aus RFBIBL02 einlesen
  READ REPORT 'RFBIBL02' INTO REP.
  READ TABLE REP INDEX 5.           "read release
  SAPRL = REP-Z+30.
  READ TABLE REP INDEX 6.
  SYSID = REP-Z+30.
  READ TABLE REP INDEX 12.
  PERFORM TABLES_PRUEFEN.
  READ TABLE REP INDEX 13.
  PERFORM TABLES_PRUEFEN.

  READ TABLE REP INDEX 3.             "read generated date
  GDATE = REP-Z+30.
  READ TABLE REP INDEX 4.             "read generated time
  GTIME = REP-Z+30.
* Informationen zum Include COPABBSEG einlesen
  SELECT * FROM DD02L WHERE TABNAME = 'COPABBSEG'
                             AND   AS4LOCAL = 'A'
                             AND   TABCLASS = 'INTTAB'.
    IF  DD02L-AS4DATE GT GDATE
    OR ( DD02L-AS4DATE EQ GDATE AND DD02L-AS4TIME GT GTIME ).
      MOVE-CORRESPONDING DD02L TO TABTAB.
      APPEND TABTAB.
    ENDIF.
  ENDSELECT.

* Informationen zu BBSEG einlesen
  SELECT * FROM DD02L WHERE TABNAME = 'BBSEG'
                             AND   AS4LOCAL = 'A'
                             AND   TABCLASS = 'INTTAB'.
    IF  DD02L-AS4DATE GT GDATE
    OR ( DD02L-AS4DATE EQ GDATE AND DD02L-AS4TIME GT GTIME ).
      MOVE-CORRESPONDING DD02L TO TABTAB.
      APPEND TABTAB.
    ENDIF.
  ENDSELECT.

  LOOP AT TABTAB WHERE VORHANDEN = SPACE.
    NEW_GN = XON.
    EXIT.
  ENDLOOP.


* Neugenerierung von RFBIBL02 wenn notwendig.
  IF SAPRL <> SY-SAPRL OR SYSID <> SY-SYSID OR NEW_GN = XON.
    SUBMIT RFBIBLG0 AND RETURN.
  ENDIF.


* Report RFBIBL01 aufrufen
  SUBMIT yse_RFBIBL01 WITH  DS_NAME   =   DS_NAME
                  WITH  FL_CHECK  =   FL_CHECK
                  WITH  OS_XON    =   OS_XON
                  WITH  XNONUNIC =    XNONUNIC
                  WITH  CALLMODE  =   CALLMODE
                  WITH  MAX_COMM  =   MAX_COMM
                  WITH  PA_XPROT  =   PA_XPROT
                  WITH  ANZ_MODE  =   ANZ_MODE
                  WITH  UPDATE    =   UPDATE
                  WITH  XPOP      =   XPOP
                  WITH  XLOG      =   XLOG
                  WITH  XINF      =   XINF
                  AND RETURN.
*----------------------------------------------------------------------*
*        FORM TABLES_PRUEFEN                                           *
*----------------------------------------------------------------------*
*        Pr¨¹fen ob zur TABLES-Anweisung Tabelle vorhanden ist          *
*----------------------------------------------------------------------*
FORM TABLES_PRUEFEN.

  IF REP(6) = 'TABLES'.
    TABTAB = SPACE.
    TABTAB-TABNAME = REP+7(6).
    READ TABLE TABTAB.
    IF SY-SUBRC = 0.
      TABTAB-VORHANDEN = XON.
      MODIFY TABTAB INDEX SY-TABIX.
    ELSE.
      NEW_GN = XON.
    ENDIF.
  ENDIF.

ENDFORM.




*----------------------------------------------------------------------*
*Text symbol text£º

*001:Info Messages
*Selection text£º
*ANZ_MODE:        Display mode
*CALLMODE:        Data transfer type
*DS_NAME:        File path name
*FL_CHECK:        Check file only
*MAX_COMM:        No. of docs per commit work
*OS_XON:        Structures from Release < 4.0
*PA_XPROT:        Extended log
*UPDATE:        Update session
*XINF:        No Information Messages
*XLOG:        Log
*XNONUNIC:        File Has Non-Unicode Format
*XPOP:        Dialog Box
