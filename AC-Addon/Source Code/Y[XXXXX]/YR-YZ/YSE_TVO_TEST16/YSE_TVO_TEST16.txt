*&---------------------------------------------------------------------*
*& Report  YSE_TVO_TEST16                                              *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  YSE_TVO_TEST16.

CONSTANTS:
      vrgng_sdr3 LIKE tj01-vrgng VALUE 'SDR3',   " Nummer auftr.-artig
      vrgng_sdap LIKE tj01-vrgng VALUE 'SDAP'.   " Verbucher auftr.artig

DATA: LV_VBELN      TYPE VBELN,
      LV_POSNR      TYPE POSNR,
      LV_ANZSN      TYPE ANZSN,
      LV_ANZSN_OLD  TYPE ANZSN,
      LV_ZIEID      TYPE MSGZEILE,
      LV_SECMT(200) TYPE C,
      WA_RSEROB     TYPE RSEROB,
      LT_RSEROB     TYPE RSEROB OCCURS 0,
      LV_SERNR      TYPE GERNR,
      LV_TABIX      LIKE SY-TABIX,
      LV_MATNR      TYPE MATNR,
      LV_SERNP      TYPE SERAIL.

* Prepare variables for function calls
  LV_VBELN = '0040000274'.
  LV_POSNR = '000010'.
  LV_MATNR = '000000008162057973'.
*  LV_SERNR = 'AIP331953'.
*  LV_SERNR = 'TESTCBL1'.
  LV_SERNR = 'LVA99'.
  LV_SERNP = '0005'.        " comes from table MARC

* Prepare reading existing serial numbers
  WA_RSEROB-TASER   = 'SER02'.
  WA_RSEROB-SDAUFNR = LV_VBELN.
  WA_RSEROB-POSNR   = LV_POSNR.

* First make sure to remove any serial number (change doesn't work)
* Read currently assigned serial numbers (can only be done for whole document)
  CALL FUNCTION 'GET_SERNOS_OF_DOCUMENT'
    EXPORTING
      KEY_DATA            = WA_RSEROB
    TABLES
      SERNOS              = LT_RSEROB
    EXCEPTIONS
      KEY_PARAMETER_ERROR = 1
      NO_SUPPORTED_ACCESS = 2
      NO_DATA_FOUND       = 3
      OTHERS              = 4.
* If numbers already exist for the doc
  IF SY-SUBRC = 0.
    DESCRIBE TABLE LT_RSEROB LINES LV_ANZSN_OLD.
*   Loop over the current item's serial numbers where the serial number is different from BSTKD_E
    LOOP AT LT_RSEROB INTO WA_RSEROB
            WHERE SDAUFNR EQ LV_VBELN
              AND POSNR   EQ LV_POSNR
              AND SERNR   NE LV_SERNR.
*     Delete the serial number
      CALL FUNCTION 'SERNR_DEL_FROM_AU'
        EXPORTING
          SERNR                 = WA_RSEROB-SERNR
          MATERIAL              = WA_RSEROB-MATNR
          DOCUMENT              = LV_VBELN
          ITEM                  = LV_POSNR
        EXCEPTIONS
          SERIALNUMBER_ERRORS   = 1
          SERIALNUMBER_WARNINGS = 2
          OTHERS                = 3.
    ENDLOOP.
  ENDIF.

* Add serial number to your item
  CALL FUNCTION 'SERNR_ADD_TO_AU'
    EXPORTING
      SERNR                       = LV_SERNR
      PROFILE                     = LV_SERNP
      MATERIAL                    = LV_MATNR
      QUANTITY                    = 1
      DOCUMENT                    = LV_VBELN
      ITEM                        = LV_POSNR
      DEBITOR                     = '0101200038'
      VBTYP                       = 'C'        " ~ Order
      SD_AUART                    = 'ZQP'      " ~ Rental contract
      SD_POSTYP                   = 'ZMVN'     " ~ Rental item ZQP
    IMPORTING
      ANZSN                       = LV_ANZSN
      ZEILEN_ID                   = LV_ZIEID
      SERIAL_COMMIT               = LV_SECMT
    EXCEPTIONS
      KONFIGURATIONS_ERROR        = 1
      SERIALNUMBER_ERRORS         = 2
      SERIALNUMBER_WARNINGS       = 3
      NO_PROFILE_OPERATION        = 4
      OTHERS                      = 5.

* Have the serial number checked
  CALL FUNCTION 'SERIALPROFILE_CHECK'
    EXPORTING
      OPERATION                  = VRGNG_SDAP
    EXCEPTIONS
      KONFIGURATIONS_ERROR       = 1
      NO_AUTOMATIC               = 2
      OTHERS                     = 3.

 CALL FUNCTION 'IWOL_WV_POST_OBJECT_LIST'
   EXPORTING
     I_SDAUFNR      = LV_VBELN
   EXCEPTIONS
     NO_OBJECT_LIST = 1.

* Commit
  COMMIT WORK.
