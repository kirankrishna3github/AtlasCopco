*&---------------------------------------------------------------------*
*&  Include           YSE_SDMM_MATERIAL_DESC_FRM
*&---------------------------------------------------------------------*



*&---------------------------------------------------------------------*
*&      Form  UPLOAD_FILE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM UPLOAD_FILE .
  CALL FUNCTION 'WS_UPLOAD'
   EXPORTING
*     CODEPAGE                      = ' '
     FILENAME                      = P_FILE
     FILETYPE                      = P_FTYPE
*     HEADLEN                       = ' '
*     LINE_EXIT                     = ' '
*     TRUNCLEN                      = ' '
*     USER_FORM                     = ' '
*     USER_PROG                     = ' '
*     DAT_D_FORMAT                  = ' '
*   IMPORTING
*     FILELENGTH                    =
    TABLES
      DATA_TAB                      =  IT_UPLOAD
   EXCEPTIONS
     CONVERSION_ERROR              = 1
     FILE_OPEN_ERROR               = 2
     FILE_READ_ERROR               = 3
     INVALID_TYPE                  = 4
     NO_BATCH                      = 5
     UNKNOWN_ERROR                 = 6
     INVALID_TABLE_WIDTH           = 7
     GUI_REFUSE_FILETRANSFER       = 8
     CUSTOMER_ERROR                = 9
     NO_AUTHORITY                  = 10
     OTHERS                        = 11
            .
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.




ENDFORM.                    " UPLOAD_FILE






*&---------------------------------------------------------------------*
*&      Form  UPLOAD_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM UPLOAD_DATA .

  LOOP AT IT_UPLOAD INTO WA_UPLOAD.



    CLEAR WA_BAPIMATHEAD.
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = WA_UPLOAD-MATERIAL
      IMPORTING
        OUTPUT = WA_BAPIMATHEAD-MATERIAL.


    CLEAR  : IT_BAPI_MAKT.
    REFRESH: IT_BAPI_MAKT.

    IT_BAPI_MAKT-LANGU      = WA_UPLOAD-LANGU.
    IT_BAPI_MAKT-MATL_DESC  = WA_UPLOAD-MATL_DESC.
    APPEND IT_BAPI_MAKT.


    CALL FUNCTION 'BAPI_MATERIAL_SAVEDATA'
      EXPORTING
        HEADDATA                   = WA_BAPIMATHEAD
*         CLIENTDATA                 =
*         CLIENTDATAX                =
*         PLANTDATA                  =
*         PLANTDATAX                 =
*         FORECASTPARAMETERS         =
*         FORECASTPARAMETERSX        =
*         PLANNINGDATA               =
*         PLANNINGDATAX              =
*         STORAGELOCATIONDATA        =
*         STORAGELOCATIONDATAX       =
*         VALUATIONDATA              =
*         VALUATIONDATAX             =
*         WAREHOUSENUMBERDATA        =
*         WAREHOUSENUMBERDATAX       =
*         SALESDATA                  =
*         SALESDATAX                 =
*         STORAGETYPEDATA            =
*         STORAGETYPEDATAX           =
*         FLAG_ONLINE                = ' '
*         FLAG_CAD_CALL              = ' '
*         NO_DEQUEUE                 = ' '
*         NO_ROLLBACK_WORK           = ' '
     IMPORTING
       RETURN                     = WA_BAPIRET2
     TABLES
       MATERIALDESCRIPTION        = IT_BAPI_MAKT
*         UNITSOFMEASURE             =
*         UNITSOFMEASUREX            =
*         INTERNATIONALARTNOS        =
*         MATERIALLONGTEXT           =
*         TAXCLASSIFICATIONS         =
*         RETURNMESSAGES             =
*         PRTDATA                    =
*         PRTDATAX                   =
*         EXTENSIONIN                =
*         EXTENSIONINX               =
              .

    IF WA_BAPIRET2-TYPE <> 'S' AND WA_BAPIRET2-TYPE <> 'W' AND WA_BAPIRET2-TYPE <> 'I'.
        WA_FAIL-MATERIAL  = WA_UPLOAD-MATERIAL.
        WA_FAIL-MESSAGE   = WA_BAPIRET2-MESSAGE.
        APPEND WA_FAIL TO IT_FAIL.
    ELSE.
      WA_SUCC-MATERIAL  = WA_UPLOAD-MATERIAL.
      APPEND WA_SUCC TO IT_SUCC.
    ENDIF.


  ENDLOOP.
ENDFORM.                    " UPLOAD_DATA






*&---------------------------------------------------------------------*
*&      Form  DISP_STATUS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISP_STATUS .
  DESCRIBE TABLE IT_UPLOAD LINES V_TOTAL.
  DESCRIBE TABLE IT_SUCC LINES V_SUCC.
  DESCRIBE TABLE IT_FAIL LINES V_FAIL.


  WRITE : /'**********************************************************'.
  WRITE : /'Total Number of records                :  ',  V_TOTAL.
  WRITE : /'Number of records updated successfully :  ',  V_SUCC.
  WRITE : /'Total Number of records not updated    :  ',  V_FAIL.
  WRITE : /'**********************************************************'.

  SKIP 2.
  WRITE : /'**********************************************************'.
  WRITE : /'The Materials successfully updated are :  '.
  LOOP AT IT_SUCC INTO WA_SUCC.
    WRITE /: WA_SUCC-MATERIAL.
  ENDLOOP.
  WRITE : /'**********************************************************'.

  SKIP 2.
  WRITE : /'**********************************************************'.
  WRITE : /'The Materials not updated are :  '.
  LOOP AT IT_FAIL INTO WA_FAIL.
    WRITE /: WA_FAIL-MATERIAL, '  ' , WA_FAIL-MESSAGE.
  ENDLOOP.
  WRITE : /'**********************************************************'.

ENDFORM.                    " DISP_STATUS
