*&---------------------------------------------------------------------*
*&  Include           YSE_FI_OI_LIST_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_data .
*Get the open items from bsik
  SELECT lifnr
         gjahr
         belnr
         buzei
         bldat
         xblnr
         FROM bsik
         INTO TABLE it_bsik
         WHERE bukrs EQ p_bukrs
           AND lifnr IN s_lifnr
           AND belnr IN s_belnr
           AND bldat IN s_bldat.
*Get the required field data from bseg
  IF NOT it_bsik[] IS INITIAL.
    SELECT bukrs
           belnr
           gjahr
           buzei
           mwskz
           wrbtr
           matnr
           menge
           meins
           ebeln
           ebelp
           lifnr
           FROM bseg
           INTO TABLE it_bseg
           FOR ALL ENTRIES IN it_bsik
           WHERE bukrs EQ p_bukrs
             AND belnr EQ it_bsik-belnr
             AND gjahr EQ it_bsik-gjahr.
  ENDIF.
*Consider the data which has only PO number
  SORT it_bseg BY ebeln.
  DELETE it_bseg WHERE ebeln = space.
  IF NOT it_bseg[] IS INITIAL.
    SELECT lifnr
           land1
           name1
           FROM lfa1
           INTO TABLE it_lfa1
           WHERE lifnr IN s_lifnr.
  ENDIF.
*Get vendor information form master data
  SORT it_lfa1 BY lifnr.
  DELETE ADJACENT DUPLICATES FROM it_lfa1 COMPARING lifnr.
  SORT it_bseg BY belnr.
  SORT it_bsik BY belnr.
  SORT it_lfa1 BY lifnr.
  LOOP AT it_bseg INTO wa_bseg.
    READ TABLE it_bsik  INTO wa_bsik WITH KEY belnr = wa_bseg-belnr BINARY SEARCH.
    IF sy-subrc EQ 0.
      READ TABLE it_lfa1 INTO wa_lfa1 WITH KEY lifnr = wa_bsik-lifnr BINARY SEARCH.
      IF sy-subrc EQ 0.
        MOVE  :wa_bseg-belnr TO wa_tax-belnr,
               wa_bsik-lifnr TO wa_tax-lifnr,
               wa_lfa1-land1 TO wa_tax-land1,
               wa_lfa1-name1 TO wa_tax-name1,
               wa_bseg-mwskz TO wa_tax-mwskz.
        APPEND wa_tax TO it_tax.
        CLEAR: wa_lfa1,wa_tax,wa_bsik,wa_bseg.
      ENDIF.
    ENDIF.
  ENDLOOP.
*Get the tax percentage based on country and taxcode.
  IF NOT it_tax[] IS INITIAL.
    SELECT aland
           mwskz
           knumh
           FROM a003
           INTO TABLE it_a003
           FOR ALL ENTRIES IN it_tax
           WHERE aland EQ it_tax-land1
             AND mwskz EQ it_tax-mwskz.
  ENDIF.
  IF NOT it_a003[] IS INITIAL.
    SELECT knumh
           kbetr
           konwa
           FROM konp
           INTO TABLE it_konp
           FOR ALL ENTRIES IN it_a003
           WHERE knumh EQ it_a003-knumh.
  ENDIF.
ENDFORM.                    " GET_DATA
*&---------------------------------------------------------------------*
*&      Form  PREPARE_DISPLAY_LIST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM prepare_display_list .
  DATA:lv_tax_rat TYPE kbetr,
       lv_net_amt TYPE wrbtr,
       lv_tax_amt TYPE wrbtr,
       lv_sup_tot TYPE wrbtr.
  SORT it_bsik BY belnr.
  SORT it_bseg BY belnr.
  SORT it_tax  BY belnr.
  SORT it_a003 BY aland mwskz.
  SORT it_konp BY knumh.
  LOOP AT it_bseg INTO wa_bseg.
    MOVE: wa_bseg-belnr TO wa_final-belnr,
          wa_bseg-wrbtr TO wa_final-wrbtr,
          wa_bseg-matnr TO wa_final-matnr,
          wa_bseg-menge TO wa_final-menge,
          wa_bseg-meins TO wa_final-meins,
          wa_bseg-ebeln TO wa_final-ebeln,
          wa_bseg-ebelp TO wa_final-ebelp.
    READ TABLE it_bsik INTO wa_bsik WITH KEY gjahr = wa_bseg-gjahr
                                             belnr = wa_bseg-belnr BINARY SEARCH.
    IF sy-subrc EQ 0.
      MOVE: wa_bsik-lifnr TO wa_final-lifnr,
            wa_bsik-bldat TO wa_final-bldat,
            wa_bsik-xblnr TO wa_final-xblnr.
    ENDIF.
    READ TABLE it_tax INTO wa_tax WITH KEY  belnr = wa_bsik-belnr
                                            lifnr = wa_bsik-lifnr BINARY SEARCH.
    IF sy-subrc EQ 0.
      READ TABLE it_a003 INTO wa_a003 WITH KEY aland = wa_tax-land1
                                               mwskz = wa_tax-mwskz BINARY SEARCH.
      IF sy-subrc EQ 0.
*Calculate the tax amount,supplier total and net amount
        READ TABLE it_konp INTO wa_konp WITH KEY knumh = wa_a003-knumh BINARY SEARCH.
        IF sy-subrc EQ 0.
          IF NOT wa_konp-kbetr IS INITIAL.
            lv_tax_rat = wa_konp-kbetr / 10.
          ENDIF.
          IF NOT wa_final-wrbtr IS INITIAL.
            lv_net_amt = wa_final-wrbtr / wa_final-menge.
          ENDIF.
          lv_tax_amt = wa_final-wrbtr * ( lv_tax_rat / 100 ).
          lv_sup_tot = wa_final-wrbtr + lv_tax_amt.
          MOVE:lv_tax_rat   TO wa_final-tax,
               lv_net_amt   TO wa_final-netam,
               lv_tax_amt   TO wa_final-taxam,
               lv_sup_tot   TO wa_final-supto,
               wa_tax-name1 TO wa_final-name1.
          APPEND wa_final TO it_final.
        ENDIF.
      ENDIF.
    ENDIF.

    CLEAR:wa_final,wa_bsik,lv_tax_rat,lv_net_amt,lv_tax_amt,lv_sup_tot,wa_a003,wa_konp,wa_bseg,wa_tax.
  ENDLOOP.
ENDFORM.                    " PREPARE_DISPLAY_LIST
*&---------------------------------------------------------------------*
*&      Form  BUILD_FIELD_CATALOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM build_field_catalog .
  REFRESH i_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname   = text-012."'LIFNR'.
  wa_fieldcat-col_pos     = 1.
  wa_fieldcat-seltext_m   = text-001."'Supplier Number'(001).
  wa_fieldcat-tabname     = c_it.
  APPEND wa_fieldcat TO i_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname   = text-013."'NAME1'.
  wa_fieldcat-col_pos     = 2.
  wa_fieldcat-seltext_m   = text-002."'Supplier Name'(002).
  wa_fieldcat-tabname     = c_it.
  APPEND wa_fieldcat TO i_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname   = text-014."'XBLNR'.
  wa_fieldcat-col_pos     = 3.
  wa_fieldcat-seltext_m   = text-003."'Invoice No'(003).
  wa_fieldcat-tabname     = c_it.
  APPEND wa_fieldcat TO i_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname   = text-027."'BELNR'.
  wa_fieldcat-col_pos     = 4.
  wa_fieldcat-seltext_m   = text-028."'Document Number'(013).
  wa_fieldcat-tabname     = c_it.
  APPEND wa_fieldcat TO i_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname   = text-016."'EBELN'.
  wa_fieldcat-col_pos     = 5.
  wa_fieldcat-seltext_m   = text-004."'PO #'(004).
  wa_fieldcat-tabname     = c_it.
  APPEND wa_fieldcat TO i_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname   = text-017."'EBELP'.
  wa_fieldcat-col_pos     = 6.
  wa_fieldcat-seltext_m   = text-005."'PO  Item  #'(005).
  wa_fieldcat-tabname     = c_it.
  APPEND wa_fieldcat TO i_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname   = text-018."'MATNR'.
  wa_fieldcat-col_pos     = 7.
  wa_fieldcat-seltext_m   = text-006."'Part Number'(006).
  wa_fieldcat-tabname     = c_it.
  APPEND wa_fieldcat TO i_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname   = text-019."'BLDAT'.
  wa_fieldcat-col_pos     = 8.
  wa_fieldcat-seltext_m   = text-007."'Invoice Date'(007).
  wa_fieldcat-tabname     = c_it.
  APPEND wa_fieldcat TO i_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname   = text-029."'MENGE'.
  wa_fieldcat-col_pos     = 9.
  wa_fieldcat-seltext_m   = text-030."'Quantity'(014).
  wa_fieldcat-tabname     = c_it.
  APPEND wa_fieldcat TO i_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname   = text-020."'NETAM'.
  wa_fieldcat-col_pos     = 10.
  wa_fieldcat-seltext_m   = text-008."'Net Price'(008).
  wa_fieldcat-tabname     = c_it.
  APPEND wa_fieldcat TO i_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname   = text-021."'WRBTR'.
  wa_fieldcat-col_pos     = 11.
  wa_fieldcat-seltext_m   = text-009."'AMOUNT'(009).
  wa_fieldcat-tabname     = c_it.
  APPEND wa_fieldcat TO i_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname   = text-022."TAX
  wa_fieldcat-col_pos     = 12.
  wa_fieldcat-seltext_m   = text-010."'Tax Rate'(010).
  wa_fieldcat-tabname     = c_it.
  APPEND wa_fieldcat TO i_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname   = text-023."'TAXAM'.
  wa_fieldcat-col_pos     = 13.
  wa_fieldcat-seltext_m   = text-024."'Tax Amount'(011).
  wa_fieldcat-tabname     = c_it.
  APPEND wa_fieldcat TO i_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname   = text-025."'SUPTO'.
  wa_fieldcat-col_pos     = 14.
  wa_fieldcat-seltext_m   = text-011."'Supplier Total'(012).
  wa_fieldcat-tabname     = c_it.
  APPEND wa_fieldcat TO i_fieldcat.



ENDFORM.                    " BUILD_FIELD_CATALOG
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM display_data .
  IF NOT it_final[] IS INITIAL.
    gv_repid = sy-repid.
    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
      EXPORTING
        i_callback_program = gv_repid
        it_fieldcat        = i_fieldcat[]
        i_save             = c_x
        is_variant         = gv_variant
      TABLES
        t_outtab           = it_final
      EXCEPTIONS
        program_error      = 1
        OTHERS             = 2.
    IF sy-subrc <> 0.                                       "#EC NEEDED
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

  ENDIF.
ENDFORM.                    " DISPLAY_DATA
*&---------------------------------------------------------------------*
*&      Form  VALIDATE_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM validate_data .
  DATA:ls_bsik TYPE ty_bsik.
  SELECT SINGLE lifnr                                       "#EC *
                gjahr
                belnr
                buzei
                bldat
                xblnr
                FROM bsik
                INTO ls_bsik
                WHERE bukrs EQ p_bukrs
                  AND lifnr IN s_lifnr
                  AND belnr IN s_belnr
                  AND bldat IN s_bldat.
  IF sy-subrc NE 0.
    MESSAGE text-026  TYPE 'I'.
  ENDIF.
ENDFORM.                    " VALIDATE_DATA
