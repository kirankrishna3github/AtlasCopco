*&---------------------------------------------------------------------*
*& Report  YSE_QUERY_EQUI_IHPA_KNA1
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  yse_query_equi_ihpa_kna1.

**********************************************************************
* Global data declarations
**********************************************************************

TABLES: v_equi, iloa, ihpa.

TYPES: BEGIN OF gty_output,
         equnr TYPE equnr,    "EQUI
         vkorg TYPE vkorg,    "ILOA
         vtweg TYPE vtweg,    "ILOA
         spart TYPE spart,    "ILOA
         parvw TYPE parvw,    "IHPA
         parnr TYPE i_parnr,  "IHPA
         kunnr TYPE kunnr,    "KNA1
         name1 TYPE name1_gp, "KNA1
       END OF gty_output.

DATA: gt_output TYPE TABLE OF gty_output.

**********************************************************************
* Selection screen
**********************************************************************
SELECT-OPTIONS: s_equnr FOR v_equi-equnr,
                s_eqart FOR v_equi-eqart,
                s_vkorg FOR iloa-vkorg,
                s_vtweg FOR iloa-vtweg,
                s_spart FOR iloa-spart,
                s_parvw FOR ihpa-parvw.

**********************************************************************
START-OF-SELECTION.
**********************************************************************
  PERFORM select_data.

**********************************************************************
END-OF-SELECTION.
**********************************************************************
  PERFORM display_data.

**********************************************************************
* Forms
**********************************************************************

*&---------------------------------------------------------------------*
*&      Form  select_data
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM select_data .

  TYPES: BEGIN OF lty_kna1,
           kunnr TYPE kunnr,
           name1 TYPE name1_gp,
         END OF lty_kna1.

  DATA: lt_kna1 TYPE HASHED TABLE OF lty_kna1 WITH UNIQUE KEY kunnr.

  FIELD-SYMBOLS: <ls_output> TYPE gty_output,
                 <ls_kna1>   TYPE lty_kna1.

  CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
    EXPORTING
      percentage = 1
      text       = text-001.

* Select data from V_EQUI joined with IHPA
  SELECT v_equi~equnr v_equi~vkorg v_equi~vtweg v_equi~spart
         ihpa~parvw ihpa~parnr
    INTO CORRESPONDING FIELDS OF TABLE gt_output
    FROM v_equi AS v_equi
    INNER JOIN ihpa AS ihpa
      ON ihpa~objnr EQ v_equi~objnr
    WHERE v_equi~equnr  IN s_equnr
      AND v_equi~eqart  IN s_eqart
      AND v_equi~vkorg  IN s_vkorg
      AND v_equi~vtweg  IN s_vtweg
      AND v_equi~spart  IN s_spart
      AND v_equi~datbi  EQ '99991231'
      AND v_equi~spras  EQ 'EN'
      AND ihpa~parvw    IN s_parvw
      AND ihpa~kzloesch NE 'X'.     "deletion flag!

  CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
    EXPORTING
      percentage = 50
      text       = text-002.

* Delete duplicates
  SORT gt_output.
  DELETE ADJACENT DUPLICATES FROM gt_output.

  CHECK gt_output[] IS NOT INITIAL.

* Convert PARNR to KUNNR
  LOOP AT gt_output ASSIGNING <ls_output>.
    <ls_output>-kunnr = <ls_output>-parnr.
  ENDLOOP.

* Select all partners from KNA1
  SELECT kunnr name1 FROM kna1
    INTO TABLE lt_kna1
    FOR ALL ENTRIES IN gt_output
    WHERE kunnr EQ gt_output-kunnr.

  CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
    EXPORTING
      percentage = 99
      text       = text-003.

* Match the data from V_EQUI, IHPA and KNA1
  LOOP AT gt_output ASSIGNING <ls_output>.
    READ TABLE lt_kna1 ASSIGNING <ls_kna1>
      WITH TABLE KEY kunnr = <ls_output>-kunnr.
    IF sy-subrc EQ 0.
      <ls_output>-name1 = <ls_kna1>-name1.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " SELECT_DATA

*&---------------------------------------------------------------------*
*&      Form  DISPLAY_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM display_data .

  DATA: lo_alv        TYPE REF TO cl_salv_table,
        lo_functions  TYPE REF TO cl_salv_functions,
        lo_columns    TYPE REF TO cl_salv_columns_table,
        lo_column     TYPE REF TO cl_salv_column_table,
        lo_display    TYPE REF TO cl_salv_display_settings.
  DATA: lv_title      TYPE lvc_title.

* Generate LO_ALV
  cl_salv_table=>factory(
    IMPORTING
      r_salv_table = lo_alv
    CHANGING
      t_table = gt_output ).

* Add all functions
  lo_functions = lo_alv->get_functions( ).
  lo_functions->set_all( abap_true ).

* Hide the KUNNR column
  lo_columns = lo_alv->get_columns( ).
  lo_column ?= lo_columns->get_column( 'KUNNR' ).
  lo_column->set_visible( abap_false ).

* Set title
  DESCRIBE TABLE gt_output LINES lv_title.
  SHIFT lv_title LEFT DELETING LEADING space.
  CONCATENATE lv_title 'record(s) found' INTO lv_title SEPARATED BY space.
  lo_display = lo_alv->get_display_settings( ).
  lo_display->set_list_header( lv_title ).

* Display ALV
  lo_alv->display( ).

ENDFORM.                    " DISPLAY_DATA

*Text symbol text£º
*001:Selecting data from V_EQUI and IHPA...
*002:Selecting data from KNA1...

*003:Merging data...
*Selection text£º
*S_EQART:D       .
*S_EQUNR:D       .
*S_PARVW:D       .
*S_SPART:D       .
*S_VKORG:D       .
*S_VTWEG:D       .
