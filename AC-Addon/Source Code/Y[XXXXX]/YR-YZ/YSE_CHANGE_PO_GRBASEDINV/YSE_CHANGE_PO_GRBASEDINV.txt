*&---------------------------------------------------------------------*
*& Report  YSE_CHANGE_PO_GRBASEDINV
*&
*&---------------------------------------------------------------------*
*&                                                                     *
*& Change PO : GR-Based Invoice Indicator                              *
*&                                                                     *
*&---------------------------------------------------------------------*
*  Author                : Jules Smets
*  Date                  : 19.07.2010
*  Change Request Number : CR1295
*  Transport request Nr. : CD1K958186
*----------------------------------------------------------------------*
*                                                                      *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*
* MOD-001 |01.01.9999|          |CD1K9.....       |(Description)       *
*----------------------------------------------------------------------*

************************************************************************

REPORT  yse_change_po_grbasedinv.

TABLES: ekpo.

* Internal table for PO items
DATA: BEGIN OF it_data OCCURS 0,
        ebeln     TYPE ebeln,
        ebelp     TYPE ebelp,
      END OF it_data.

DATA: it_poitem     TYPE bapimepoitem   OCCURS 0  WITH HEADER LINE,
      it_poitemx    TYPE bapimepoitemx  OCCURS 0  WITH HEADER LINE,
      it_return     TYPE bapiret2       OCCURS 0  WITH HEADER LINE.

DATA: wa_poheader    TYPE bapimepoheader,
      wa_poheaderx   TYPE bapimepoheaderx.

DATA: filename TYPE string.


*&---------------------------------------------------------------------*
*&  Selection screen                                                   *
*&---------------------------------------------------------------------*

* Input file
PARAMETERS: p_infile(132) LOWER CASE.
*                 DEFAULT 'C:\PO_ITEM_GRBASEDIV.txt'.


AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_infile.

* Get the filename
  PERFORM get_filename USING p_infile.


*&---------------------------------------------------------------------*
*&  Main program                                                       *
*&---------------------------------------------------------------------*
START-OF-SELECTION.

* Get IDocs
  PERFORM read_file.

* Sort input
  SORT it_data.

* Process input
  PERFORM process_data.


*&---------------------------------------------------------------------*
*&      Form  GET_FILENAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_INFILE : Input file
*----------------------------------------------------------------------*
FORM get_filename  USING    p_infile.

  CALL FUNCTION 'WS_FILENAME_GET'
    EXPORTING
      def_path         = 'C:\'
      mask             = ',*.TXT.'
    IMPORTING
      filename         = p_infile
    EXCEPTIONS
      inv_winsys       = 1
      no_batch         = 2
      selection_cancel = 3
      selection_error  = 4
      OTHERS           = 5.

  IF sy-subrc <> 0.
  ENDIF.

ENDFORM.                    " GET_FILENAME

*&---------------------------------------------------------------------*
*&      Form  READ_FILE
*&---------------------------------------------------------------------*
*       Read input file
*----------------------------------------------------------------------*
FORM read_file .

  filename = p_infile.

  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      filename            = filename
      filetype            = 'ASC'
      has_field_separator = 'X'
    TABLES
      data_tab            = it_data.

  IF sy-subrc <> 0.
    WRITE: / 'Program cannot read file:' , filename.
    RETURN.
  ENDIF.

ENDFORM.                    " READ_FILE

*&---------------------------------------------------------------------*
*&      Form  PROCESS_DATA
*&---------------------------------------------------------------------*
*       Process input data
*----------------------------------------------------------------------*
FORM process_data .

  LOOP AT it_data.

*   New PO number
    AT NEW ebeln.
*     Clear structures and tables for the BAPI
      CLEAR: wa_poheader, wa_poheaderx.
      REFRESH: it_return, it_poitem, it_poitemx.
    ENDAT.

*   For any entry
*   Define item to be updated
    it_poitem-po_item     = it_data-ebelp.
    it_poitemx-po_item    = it_data-ebelp.
*   Set indicator & flag
    it_poitem-gr_basediv  = ' '.
    it_poitemx-gr_basediv = 'X'.
*   Append item and it's flags
    APPEND: it_poitem, it_poitemx.

*   At the end of a PO number
    AT END OF ebeln.
*     Have the update done if any item needs updating
      IF NOT it_poitem[] IS INITIAL.
        CALL FUNCTION 'BAPI_PO_CHANGE'
          EXPORTING
            purchaseorder = it_data-ebeln
*            poheader      = lwa_poheader
*            poheaderx     = lwa_poheaderx
          TABLES
            return        = it_return
            poitem        = it_poitem
            poitemx       = it_poitemx.

*       Error occurred ?
        READ TABLE it_return WITH KEY type = 'E'.
        IF sy-subrc EQ 0. " error found
*         Write list with update failure
          WRITE: / '*** Failed to update GR-based IV indicator for PO',
                   it_data-ebeln, '***'.
        ELSE.
          READ TABLE it_return WITH KEY id = 'ME'
                                        number = '664'.
          IF sy-subrc = 0.
*           Write list with update failure
            WRITE: / '*** Failed to update GR-based IV indicator for PO',
                     it_data-ebeln, '***'.
          ELSE.
*           Write list with updated PO
            WRITE: / 'GR-based IV indicator updated for PO',
                     it_data-ebeln.
*           Commit the PO update
            CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
              EXPORTING
                wait   = 'X'
              IMPORTING
                return = it_return.
          ENDIF.
        ENDIF.
      ENDIF.
    ENDAT.

  ENDLOOP.

ENDFORM.                    " PROCESS_DATA

*Selection text£º
*P_INFILE:        Input file
