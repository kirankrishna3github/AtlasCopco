*----------------------------------------------------------------------*
***INCLUDE YSE_OPCO_REP_SCR0100 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  0100_STATUS  OUTPUT
*&---------------------------------------------------------------------*
MODULE 0100_STATUS OUTPUT.

  SET PF-STATUS '0100'.
  SET TITLEBAR  '0100'.

ENDMODULE.                 " 0100_STATUS  OUTPUT

*&---------------------------------------------------------------------*
*&      Module  0100_PROCESS_OK  INPUT
*&---------------------------------------------------------------------*
MODULE 0100_PROCESS_OK INPUT.

  CASE GV_OK.

    WHEN 'BACK'.
      PERFORM 0100_EXIT.

  ENDCASE.

ENDMODULE.                 " 0100_PROCESS_OK  INPUT

*&---------------------------------------------------------------------*
*&      Module  0100_PBO  OUTPUT
*&---------------------------------------------------------------------*
MODULE 0100_PBO OUTPUT.

  DATA: LS_LAYOUT  TYPE LVC_S_LAYO,
        LS_VARIANT TYPE DISVARIANT.

  IF GO_CC_TAB IS INITIAL.
    LS_VARIANT-REPORT = SY-REPID.
    CREATE OBJECT GO_CC_TAB
           EXPORTING CONTAINER_NAME = 'GC_CC_TAB'.
    CREATE OBJECT GO_GRID_TAB
           EXPORTING I_PARENT = GO_CC_TAB.

    CREATE OBJECT GO_EVT_HNDL.
*   Enable Line Selection And Double-Clicking
    SET HANDLER GO_EVT_HNDL->HANDLE_DOUBLE_CLICK FOR GO_GRID_TAB.

    CALL METHOD GO_GRID_TAB->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        I_SAVE          = 'A'
        IS_VARIANT      = LS_VARIANT
*       IS_LAYOUT       = LS_LAYOUT
      CHANGING
        IT_FIELDCATALOG = GT_FIELDCAT
        IT_OUTTAB       = <GT_TABLE>.
  ENDIF.

ENDMODULE.                 " 0100_PBO  OUTPUT

*&---------------------------------------------------------------------*
*&      Form  0100_EXIT
*&---------------------------------------------------------------------*
FORM 0100_EXIT .

  CALL METHOD GO_GRID_TAB->FREE.
  FREE GO_GRID_TAB.
  CALL METHOD GO_CC_TAB->FREE.
  FREE GO_CC_TAB.
  CALL METHOD CL_GUI_CFW=>FLUSH.
  LEAVE TO SCREEN 0.

ENDFORM.                    " 0100_EXIT

*&---------------------------------------------------------------------*
*&      Form  0100_BDC_IW33
*&---------------------------------------------------------------------*
FORM 0100_BDC_IW33  USING    P_ROW
                             P_COLUMN
                             P_ROW_NO  STRUCTURE LVC_S_ROID.

  DATA: LS_OPTIONS      TYPE CTU_PARAMS,
        LV_AUFNR        TYPE AUFNR.

  FIELD-SYMBOLS: <LS_LINE>,     " Working area for flexible table
                 <LS_FIELD>.

  CHECK P_ROW_NO-ROW_ID GT 0.
  READ TABLE <GT_TABLE> INDEX P_ROW_NO-ROW_ID ASSIGNING <LS_LINE>.
  CHECK SY-SUBRC EQ 0.
  ASSIGN COMPONENT 2 OF STRUCTURE <LS_LINE> TO <LS_FIELD>.
  LV_AUFNR = <LS_FIELD>.

  LS_OPTIONS-NOBIEND = 'X'.
  LS_OPTIONS-DISMODE = 'E'.
  LS_OPTIONS-UPDMODE = 'S'.

* Clear the BDC tables
  CLEAR: IT_BDCDATA[], IT_BDCMSGS[].

* Prepare the first screen of IW32
  PERFORM BDC_ADD_SCREEN USING 'SAPLCOIH'     '0101'.
  PERFORM BDC_ADD_FIELD  USING 'CAUFVD-AUFNR' LV_AUFNR.
  PERFORM BDC_ADD_FIELD  USING 'BDC_OKCODE' '/00'.
* Call the transaction IW32
  CALL TRANSACTION 'IW33'     USING         IT_BDCDATA
                              OPTIONS  FROM LS_OPTIONS
                              MESSAGES INTO IT_BDCMSGS.

ENDFORM.                    " 0100_BDC_IW33
