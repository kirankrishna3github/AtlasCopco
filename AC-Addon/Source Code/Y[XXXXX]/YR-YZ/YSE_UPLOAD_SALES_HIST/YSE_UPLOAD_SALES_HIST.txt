************************************************************************
* PROGRAM ID           : YSE_UPLOAD_SALES_HIST                         *
* PROGRAM TITLE        : Upload sales history from text file           *
* AUTHOR               : Andr¨¦ Blommaert                               *
* DATE                 : 20/03/2007                                    *
* DEVELOPMENT ID       : D186-SDMM-Rebuild ERIC                        *
* PROGRAM DESCRIPTION  : Upload program for sales history              *
*                        Upload from a text file                       *
*----------------------------------------------------------------------*
* CHANGE REQUEST NUMBER: CD1K912678                                    *
************************************************************************
report  yse_upload_sales_hist                   .

*----------------------------------------------------------------------*
* Data declarations                                                    *
*----------------------------------------------------------------------*

*-- Dictionary tables
tables: yse_em_sohistmig.

*-- Types
types: begin of t_hist,
         id(20)     type c,
         period(10) type c,
         matnr      like yse_em_sohistmig-matnr,
         bzirk      like yse_em_sohistmig-bzirk,
         werks      like yse_em_sohistmig-werks,
         zmeng(20)  type c,
         zline(10)  type c.
types: end of t_hist.

*-- Variables
data: lv_count     type i.
data: lv_filesel   like ibipparms-path.
data: lv_file      type string.
data: lv_matnr     like yse_em_sohistmig-matnr.
data: wa_hist      type t_hist.

*-- Constants
constants: c_01    type vbak-vtweg value '01'.
constants: c_open  type c          value '('.
constants: c_close type c          value ')'.
constants: c_dash  type c          value '-'.

*-- Internal tables
data: it_hist      type table of t_hist           with header line.
data: it_hist2     type table of t_hist           with header line.
data: it_tvkwz     like tvkwz            occurs 0 with header line.
data: it_sohistmig like yse_em_sohistmig occurs 0 with header line.

data: begin of it_mara occurs 0,
        matnr      like mara-matnr.
data: end of it_mara.

data: begin of it_marc occurs 0,
        matnr      like marc-matnr,
        werks      like marc-werks.
data: end of it_marc.


*----------------------------------------------------------------------*
* Selection screen                                                     *
*----------------------------------------------------------------------*
selection-screen : begin of block b1 with frame title text-001.
parameters: p_upfile like rlgrap-filename obligatory
                     default 'c:\temp\sales_history.txt'.
parameters: p_vkorg  like vbak-vkorg obligatory default 'CN01'.
parameters: p_vtweg  like vbak-vtweg obligatory default '01'.
selection-screen : end of block b1.


at selection-screen on value-request for p_upfile.
  perform file_lookup using p_upfile.


************************************************************************
* START MAIN PROGRAM                                                   *
************************************************************************
start-of-selection.

  perform upload_history using p_upfile.

  perform get_check_data.

  perform fill_history_table tables it_sohistmig
                                    it_hist.



************************************************************************
* SUBROUTINES  LEVEL 01                                                *
************************************************************************

*----------------------------------------------------------------------*
*   Form  FILE_LOOKUP                                                  *
*----------------------------------------------------------------------*
*   .....                                                              *
*----------------------------------------------------------------------*
form file_lookup using p_p_upfile.

  clear: lv_filesel.
  call function 'F4_FILENAME'
    exporting
      program_name  = syst-repid
      dynpro_number = syst-dynnr
    importing
      file_name     = lv_filesel
    exceptions
      others        = 1.

  p_p_upfile = lv_filesel.

endform.                    " FILE_LOOKUP


*----------------------------------------------------------------------*
*   Form  UPLOAD_HISTORY                                               *
*----------------------------------------------------------------------*
*   .....                                                              *
*----------------------------------------------------------------------*
form upload_history using p_p_upfile.

  clear: lv_file.
  move p_p_upfile to lv_file.

  call function 'GUI_UPLOAD'
    exporting
      filename                = lv_file
      filetype                = 'ASC'
      has_field_separator     = 'X'
*     header_length           = 0
*     read_by_line            = 'X'
*     dat_mode                = ' '
*     codepage                = ' '
*     ignore_cerr             = abap_true
*     replacement             = '#'
*     check_bom               = ' '
*     no_auth_check           = ' '
*   importing
*     filelength              =
*     header                  =
    tables
      data_tab                = it_hist
    exceptions
      file_open_error         = 1
      file_read_error         = 2
      no_batch                = 3
      gui_refuse_filetransfer = 4
      invalid_type            = 5
      no_authority            = 6
      unknown_error           = 7
      bad_data_format         = 8
      header_not_allowed      = 9
      separator_not_allowed   = 10
      header_too_long         = 11
      unknown_dp_error        = 12
      access_denied           = 13
      dp_out_of_memory        = 14
      disk_full               = 15
      dp_timeout              = 16
      others                  = 17.
  if sy-subrc <> 0.
    message id sy-msgid type sy-msgty number sy-msgno
            with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  endif.

endform.                    " UPLOAD_HISTORY


*----------------------------------------------------------------------*
*   Form  GET_CHECK_DATA                                               *
*----------------------------------------------------------------------*
*   .....                                                              *
*----------------------------------------------------------------------*
form get_check_data.

  if not it_hist[] is initial.
    select matnr into table it_mara from mara
                   for all entries in it_hist
                   where bismt eq it_hist-matnr.
    if not it_mara[] is initial.
      select matnr werks into table it_marc from marc
                         for all entries in it_mara
                         where matnr eq it_mara-matnr.
    endif.

    select * into table it_tvkwz from tvkwz
                                 for all entries in it_hist
                                 where vkorg eq p_vkorg
                                   and vtweg eq p_vtweg
                                   and werks eq it_hist-werks.
  endif.

endform.                    " GET_CHECK_DATA


*----------------------------------------------------------------------*
*   Form  FILL_HISTORY_TABLE                                           *
*----------------------------------------------------------------------*
*   .....                                                              *
*----------------------------------------------------------------------*
form fill_history_table tables p_it_sohistmig structure yse_em_sohistmig
                               p_it_hist      structure wa_hist.

*-- Find sales org. via table TVKWZ
*  loop at p_it_hist.
*    p_it_tvkwz-werks = p_it_hist-werks.
*    append p_it_tvkwz.
*  endloop.
*
*  sort p_it_tvkwz.
*  delete adjacent duplicates from p_it_tvkwz comparing werks.
*
*  select vkorg werks into corresponding fields of table p_it_tvkwz
*                     from tvkwz
*                     for all entries in p_it_tvkwz
*                     where werks = p_it_tvkwz-werks
*                       and vtweg = c_01.

  clear: lv_count.
  loop at p_it_hist.

    read table it_tvkwz with key vkorg = p_vkorg
                                 vtweg = p_vtweg
                                 werks = p_it_hist-werks.
    if sy-subrc <> 0.
      write: / text-107, c_open, p_vkorg, c_dash, p_vtweg, c_dash,
               p_it_hist-werks, c_close, text-106.
      continue.
    endif.

    move-corresponding p_it_hist to p_it_sohistmig.

    call function 'CONVERSION_EXIT_MATN1_INPUT'
      exporting
        input        = p_it_sohistmig-matnr
      importing
        output       = p_it_sohistmig-matnr
      exceptions
        length_error = 1
        others       = 2.
    if sy-subrc <> 0.
      write: / text-103, p_it_hist-matnr.
      continue.
*     message id sy-msgid type sy-msgty number sy-msgno
*             with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    else.
      read table it_mara with key matnr = p_it_sohistmig-matnr.
      if sy-subrc <> 0.
        write: / text-104, p_it_sohistmig-matnr, text-106.
        continue.
      endif.
      read table it_marc with key matnr = p_it_sohistmig-matnr
                                  werks = p_it_sohistmig-werks.
      if sy-subrc <> 0.
        write: / text-105, c_open, p_it_sohistmig-matnr, c_dash,
                 p_it_sohistmig-werks, c_close, text-106.
        continue.
      endif.
    endif.

    p_it_sohistmig-vkorg = p_vkorg.
    p_it_sohistmig-vtweg = p_vtweg.

    append p_it_sohistmig.
    add 1 to lv_count.

  endloop.

  skip 2.
  if not lv_count is initial.
    modify yse_em_sohistmig from table  p_it_sohistmig.
    commit work.
    write: / lv_count, text-101.
  else.
    write: / text-102.
  endif.

endform.                    " FILL_HISTORY_TABLE

*Text symbol text£º
*001:Selections
*101:records have been succesfully uploaded !
*102:No upload done !
*103:Conversion failed of material
*104:Material
*105:Combination material-plant
*106:does not exist  !

*107:Combination sales org.-distr.ch.-plant
*Selection text£º
*P_UPFILE:        Upload file
*P_VKORG:        Sales organisation
*P_VTWEG:        Distribution channel
