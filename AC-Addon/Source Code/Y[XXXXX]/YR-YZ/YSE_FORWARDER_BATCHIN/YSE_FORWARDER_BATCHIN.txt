*&---------------------------------------------------------------------*
*&Report        : YSE_FORWARDER_BATCHIN
* PROGRAM TITLE : FORWARDER TABLE BATCH INPUT DATA                     *
* AUTHOR        : LIN SHENG                                            *
* DATE          : 01/08/2014                                           *
*                                                                      *
* CHANGE REQUEST NUMBER:                                               *
*                                                                      *
* Program Description: MASSIVELY UPLOAD DATA INTO FORWARDER TABLE      *
*                                                                      *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
*  DATE    | NAME     |TRANSPORT  | CR# and short Description          *
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*

REPORT  YSE_FORWARDER_BATCHIN.
************************************************************************
* DATA                                                                *
************************************************************************
DATA: IT_DATA TYPE STANDARD TABLE OF STRING,
      WA_DATA LIKE LINE OF IT_DATA.

FIELD-SYMBOLS:<FS_DNY_TAB> TYPE STANDARD  TABLE.
FIELD-SYMBOLS:<DYN_WA> TYPE ANY.
DATA: DYN_TABLE  TYPE REF TO DATA.
DATA: DYN_LINE   TYPE REF TO DATA.
DATA: GV_TABNAME TYPE STRING.
************************************************************************
* SELECTION-SCREEN                                                     *
************************************************************************
SELECTION-SCREEN BEGIN OF BLOCK BLK1 WITH FRAME TITLE TEXT-001.
SELECTION-SCREEN BEGIN OF LINE.
PARAMETER C_1 RADIOBUTTON GROUP C1.
SELECTION-SCREEN COMMENT 4(60) TEXT-002 FOR FIELD C_1 .
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
PARAMETER C_2 RADIOBUTTON GROUP C1.
SELECTION-SCREEN COMMENT 4(60) TEXT-003 FOR FIELD C_2 .
SELECTION-SCREEN END OF LINE.

SELECTION-SCREEN BEGIN OF LINE.
PARAMETER C_3 RADIOBUTTON GROUP C1.
SELECTION-SCREEN COMMENT 4(60) TEXT-004 FOR FIELD C_3 .
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK BLK1.

PARAMETERS: P_FILE TYPE RLGRAP-FILENAME.

*----------------------------------------------------------------------*
* AT SELECTION-SCREEN ON VALUE-REQUEST
*----------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
  DATA:LT_FILE_NAME TYPE FILETABLE,
          WA_FILE_NAME TYPE FILE_TABLE,
          LT_RC TYPE I.

  CALL METHOD CL_GUI_FRONTEND_SERVICES=>FILE_OPEN_DIALOG
    EXPORTING
      WINDOW_TITLE            = 'Open file'
      DEFAULT_FILENAME        = '*.txt'
      FILE_FILTER             = 'Text Files (*.txt)|*.txt'
    CHANGING
      FILE_TABLE              = LT_FILE_NAME
      RC                      = LT_RC
    EXCEPTIONS
      FILE_OPEN_DIALOG_FAILED = 1
      CNTL_ERROR              = 2
      ERROR_NO_GUI            = 3
      NOT_SUPPORTED_BY_GUI    = 4
      OTHERS                  = 5.
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
               WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  READ TABLE LT_FILE_NAME INDEX 1 INTO WA_FILE_NAME.
  MOVE WA_FILE_NAME TO P_FILE.

*----------------------------------------------------------------------*
* START-OF-SELECTION
*----------------------------------------------------------------------*
START-OF-SELECTION.

  PERFORM MAIN_TREATMENT.
  PERFORM MESSAGE_OUTPUT.
*&---------------------------------------------------------------------*
*&      Form  MAIN_TREATMENT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM MAIN_TREATMENT .
  DATA L_FILENAME TYPE STRING.
  DATA L_NUM TYPE I.
  DATA IT_SPLT TYPE STANDARD TABLE OF STRING.
  DATA WA_SPLT TYPE STRING.
  FIELD-SYMBOLS:<FS_STRING> TYPE ANY.

  L_FILENAME = P_FILE.

  CASE 'X'.
    WHEN C_1.
      GV_TABNAME = 'YSE_FORWARDER_MN'.
    WHEN C_2.
      GV_TABNAME = 'YSE_FORWARDER_CN'.
    WHEN C_3.
      GV_TABNAME = 'YSE_FORWARDER_RN'.
  ENDCASE.

  CREATE DATA DYN_TABLE TYPE TABLE OF (GV_TABNAME).
  ASSIGN DYN_TABLE->* TO <FS_DNY_TAB>.

  CREATE DATA DYN_LINE LIKE LINE OF <FS_DNY_TAB>.
  ASSIGN DYN_LINE->* TO <DYN_WA>.

  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      FILENAME                = L_FILENAME
      FILETYPE                = 'ASC'
      CODEPAGE                = '8400'
    TABLES
      DATA_TAB                = IT_DATA
    EXCEPTIONS
      FILE_OPEN_ERROR         = 1
      FILE_READ_ERROR         = 2
      NO_BATCH                = 3
      GUI_REFUSE_FILETRANSFER = 4
      INVALID_TYPE            = 5
      NO_AUTHORITY            = 6
      UNKNOWN_ERROR           = 7
      BAD_DATA_FORMAT         = 8
      HEADER_NOT_ALLOWED      = 9
      SEPARATOR_NOT_ALLOWED   = 10
      HEADER_TOO_LONG         = 11
      UNKNOWN_DP_ERROR        = 12
      ACCESS_DENIED           = 13
      DP_OUT_OF_MEMORY        = 14
      DISK_FULL               = 15
      DP_TIMEOUT              = 16
      OTHERS                  = 17.
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  IF IT_DATA IS  INITIAL.
    MESSAGE ' No data in the file' TYPE 'S' DISPLAY LIKE 'E'.
    LEAVE LIST-PROCESSING.
  ENDIF.

  LOOP AT IT_DATA INTO WA_DATA.
    SPLIT WA_DATA AT CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB INTO TABLE IT_SPLT.

    LOOP AT IT_SPLT INTO WA_SPLT.
      L_NUM = SY-TABIX + 1.
      ASSIGN COMPONENT L_NUM OF STRUCTURE <DYN_WA> TO <FS_STRING>.
      IF <FS_STRING> IS ASSIGNED.
        <FS_STRING> = WA_SPLT.
      ENDIF.
    ENDLOOP.
    APPEND <DYN_WA> TO <FS_DNY_TAB>.
    CLEAR:IT_SPLT,L_NUM,<DYN_WA>,WA_DATA,WA_SPLT.
  ENDLOOP.

ENDFORM.                    " MAIN_TREATMENT
*&---------------------------------------------------------------------*
*&      Form  MESSAGE_OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM MESSAGE_OUTPUT .
  DATA MESSAGE TYPE STRING.
  DATA L_STRING TYPE STRING.
  DATA L_STRING2 TYPE STRING.
  DATA L_NUM TYPE I.

  L_NUM = LINES( <FS_DNY_TAB> ).

  INSERT (GV_TABNAME) FROM TABLE <FS_DNY_TAB> ACCEPTING DUPLICATE KEYS.

  L_STRING = L_NUM - SY-DBCNT.
  L_STRING2 = SY-DBCNT.
  CONCATENATE  'SUCCESS:'L_STRING2 'ERROR:'L_STRING INTO L_STRING SEPARATED BY SPACE.
  WRITE: 'INSERT TABLE:', GV_TABNAME,/,L_STRING.
ENDFORM.                    " MESSAGE_OUTPUT

*Text symbol text£º
*001:Table Choice
*002:Upload main mail No. of forwarder  (YSE_FORWARDER_MN)
*003:Upload child mail No. of forwarder  (YSE_FORWARDER_CN)

*004:Upload tracking No. of Forwarder  (YSE_FORWARDER_RN)
*Selection text£º
*P_FILE:        File name
