report YSE_GEN_DERIVED_ROLE
       no standard page heading line-size 255.

tables: agr_define.

*include bdcrecx1.
load-of-program.
  include yse_bdcrecx1.
*----------------------------------------------------------------------*
*                          SELECTION SCREEN VARIABLES                  *
*----------------------------------------------------------------------*
  parameters: p_trkorr like ko008-trkorr OBLIGATORY.
  select-options: s_role for agr_define-agr_name no intervals OBLIGATORY.
start-of-selection.
  perform set_bdc_para.
  perform open_group.

  "Generate role
  perform generate_role.
  "Transport
  PERFORM transport.

  perform close_group.

form set_bdc_para .
*   Set default call transaction settings
  user = sy-uname.
    ctu = 'X'.
    ctumode = 'N'.
    cupdate = 'L'.

  smalllog = ''.
  nodata = '/'.
endform.                    " SET_BDC_PARA
*&---------------------------------------------------------------------*
*&      Form  generate_role
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
form generate_role.
  data: ls_ctuparams type ctu_params,
        lv_mstring(480) type c,
        lv_subrc like sy-subrc.
  loop at s_role.
    clear: bdcdata[].
    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0121'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'AGR_NAME_NEU'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=AEND'.
    perform bdc_field       using 'AGR_NAME_NEU'
                                  s_role-low.
    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0300'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'S_AGR_TEXTS-TEXT'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=TAB5'.
*perform bdc_field       using 'S_AGR_TEXTS-TEXT'
*                              record-TEXT_002.
    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0300'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'S_AGR_TEXTS-TEXT'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=GEN1'.
*perform bdc_field       using 'S_AGR_TEXTS-TEXT'
*                              record-TEXT_003.
    perform bdc_dynpro      using 'SAPMSSY0' '0120'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=GEN1'.
    perform bdc_dynpro      using 'SAPMSSY0' '0120'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=ABBR'.
    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0300'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'S_AGR_TEXTS-TEXT'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=SAVE'.
*perform bdc_field       using 'S_AGR_TEXTS-TEXT'
*                              record-TEXT_004.
    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0300'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'S_AGR_TEXTS-TEXT'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=BACK'.
*perform bdc_field       using 'S_AGR_TEXTS-TEXT'
*                              record-TEXT_005.
    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0121'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'AGR_NAME_NEU'.
    "Transport end
    perform bdc_field       using 'BDC_OKCODE'
                                  '=BACK'.
    perform bdc_field       using 'AGR_NAME_NEU'
                                  s_role-low.
    "    perform bdc_transaction using 'PFCG'.

    ls_ctuparams-racommit = 'X'.
    ls_ctuparams-dismode = 'N'.
    ls_ctuparams-updmode = 'L'.

    refresh messtab.
    call transaction 'PFCG' using bdcdata
                     options from ls_ctuparams
                     messages into messtab.
    lv_subrc = sy-subrc.
    if smalllog <> 'X'.
      write: / 'CALL_TRANSACTION',
               'PFCG',
               'returncode:'(i05),
               lv_subrc,
               'RECORD:',
               sy-index.
      loop at messtab.
        select single * from t100 where sprsl = messtab-msgspra
                                  and   arbgb = messtab-msgid
                                  and   msgnr = messtab-msgnr.
        if sy-subrc = 0.
          lv_mstring = t100-text.
          if lv_mstring cs '&1'.
            replace '&1' with messtab-msgv1 into lv_mstring.
            replace '&2' with messtab-msgv2 into lv_mstring.
            replace '&3' with messtab-msgv3 into lv_mstring.
            replace '&4' with messtab-msgv4 into lv_mstring.
          else.
            replace '&' with messtab-msgv1 into lv_mstring.
            replace '&' with messtab-msgv2 into lv_mstring.
            replace '&' with messtab-msgv3 into lv_mstring.
            replace '&' with messtab-msgv4 into lv_mstring.
          endif.
          condense lv_mstring.
          write: / messtab-msgtyp, lv_mstring(250).
        else.
          write: / messtab.
        endif.
      endloop.
      skip.
    endif.
  endloop.
endform.                    " generate_role
*&---------------------------------------------------------------------*
*&      Form  transport
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form transport.
  loop at s_role.
    clear: bdcdata[].

    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0121'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'AGR_NAME_NEU'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=TRAN'.
    perform bdc_field       using 'AGR_NAME_NEU'
                                  s_role-low.
    perform bdc_dynpro      using 'PFCG_MASS_TRANSPORT' '1000'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'AGR_NAME-LOW'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=ONLI'.
    perform bdc_field       using 'PROFILES'
                                  'X'.
    perform bdc_field       using 'PERSON'
                                  'X'.
    perform bdc_dynpro      using 'SAPLSTRD' '0300'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'KO008-TRKORR'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=LOCK'.
    perform bdc_field       using 'KO008-TRKORR'
                                  p_trkorr.
    perform bdc_dynpro      using 'SAPMSSY0' '0120'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=&F03'.
    perform bdc_dynpro      using 'PFCG_MASS_TRANSPORT' '1000'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '/EE'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'AGR_NAME-LOW'.
    perform bdc_dynpro      using 'SAPLPRGN_TREE' '0121'.
    perform bdc_field       using 'BDC_CURSOR'
                                  'AGR_NAME_NEU'.
    perform bdc_field       using 'BDC_OKCODE'
                                  '=BACK'.
    perform bdc_field       using 'AGR_NAME_NEU'
                                  s_role-low.
    perform bdc_transaction using 'PFCG'.
  endloop.
endform.                    "transport

*Text symbol text£º
*BK1:BDC Parameters
*E00:Error opening dataset, return code:
*I01:Session name
*I02:Open session
*I03:Insert transaction
*I04:Close Session
*I05:Return code =
*I06:Error session created
*S01:Session name
*S02:User
*S03:Keep session
*S04:Lock date
*S05:Processing Mode
*S06:Update Mode
*S07:Generate session
*S08:Call transaction
*S09:Error sessn
*S10:Nodata indicator

*S11:Short log
*Selection text£º
*P_CTU:        Call transaction
*P_GROUP:        Session Name
*P_SESS:        Generate Session
*P_TRKORR:        Request
*S_ROLE:        Role
