*&---------------------------------------------------------------------*
*&  Include           J_3RF_RATE_CALC_CLASS
*&---------------------------------------------------------------------*
*----------------------------------------------------------------------*
*       CLASS lc_rate_calc_except DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lc_rate_calc_except DEFINITION INHERITING FROM cx_static_check.
  PUBLIC SECTION.
    DATA:
       t100key TYPE scx_t100key.

    METHODS:
      constructor
        IMPORTING
          msgid TYPE sy-msgid OPTIONAL
          msgno TYPE sy-msgno OPTIONAL
          attr1 TYPE sy-msgv1 OPTIONAL
          attr2 TYPE sy-msgv2 OPTIONAL
          attr3 TYPE sy-msgv3 OPTIONAL
          attr4 TYPE sy-msgv4 OPTIONAL,
      raise_message.

ENDCLASS.                    "lc_except DEFINITION
*----------------------------------------------------------------------*
*       CLASS lc_rate_calc_except IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS lc_rate_calc_except IMPLEMENTATION.

  METHOD constructor.
    super->constructor( ).

    t100key-msgid = msgid.
    t100key-msgno = msgno.
    t100key-attr1 = attr1.
    t100key-attr2 = attr2.
    t100key-attr3 = attr3.
    t100key-attr4 = attr4.

  ENDMETHOD.                    "constructor

  METHOD raise_message.
    MESSAGE ID t100key-msgid TYPE 'E' NUMBER t100key-msgno
        WITH t100key-attr1 t100key-attr2 t100key-attr3 t100key-attr4.
  ENDMETHOD.                    "raise_message

ENDCLASS.                    "lc_rate_calc_except IMPLEMENTATION
*&---------------------------------------------------------------------*
*&      Form  HANDLE_EXCEPTION
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->lr_cx_root  text
*----------------------------------------------------------------------*
FORM handle_exception  USING ir_cx_root TYPE REF TO cx_root.
  DATA: lr_except  TYPE REF TO lc_rate_calc_except,
        lr_cx_root TYPE REF TO cx_root.

* search first exception
  lr_cx_root = ir_cx_root.
  DO 3 TIMES.
    IF NOT lr_cx_root->previous IS BOUND.
      EXIT.
    ENDIF.
    lr_cx_root = lr_cx_root->previous.
  ENDDO.

  IF g_bkgrnd IS INITIAL.
    TRY.
        lr_except ?= lr_cx_root.
*           raise message dialog
        lr_except->raise_message( ).
        EXIT.
      CATCH cx_root.
    ENDTRY.
  ENDIF.

  g_err_str = lr_cx_root->get_longtext( ).
  IF g_bkgrnd IS INITIAL.
    MESSAGE e000(9p) WITH g_err_str.
  ELSE.
    WRITE: / g_err_str.
  ENDIF.

ENDFORM.                    " HANDLE_EXCEPTION
