
*&---------------------------------------------------------------------*
*&  Include               YSE_SCC_INI_FIRSTDATE_OPO                     *
*&---------------------------------------------------------------------*
*                                                                      *
*----------------------------------------------------------------------*
*                                                                      *
* PROGRAM ID          : YSE_SCC_INI_FIRSTDATE_OPO                      *
* PROGRAM TITLE       : Initial load First date in table               *
*                       YSE_SCC_FIRSTOPO   ( open Purchase Orders)    *
* AUTHOR              : Geert Rutten                                   *
* DATE                : 10/09/2010                                     *
* DEVELOPMENT ID      : XXXX                                           *
*                                                                      *
* CHANGE REQUEST NUMBER:                                               *
*                                                                      *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE     | NAME     |CORRECTION NUMBER| CHANGE REFERENCE #*
*                                                                      *
*----------------------------------------------------------------------*
*                                                                      *
************************************************************************
*                                                                      *
************************************************************************

PROGRAM yse_scc_ini_firstdate_opo.

tables: msta, marc, ekko, ekpo, ekpv.


SELECTION-SCREEN BEGIN OF BLOCK b06 WITH FRAME TITLE text-s01.
SELECT-OPTIONS:
     s_credac  FOR msta-ersda,
     s_ebelnc FOR ekpo-ebeln.
*     s_ebelnc FOR ekko-ebeln.
 PARAMETERS: p_ekorg TYPE eine-ekorg OBLIGATORY.
 SELECT-OPTIONS: s_werks  FOR marc-werks.
SELECTION-SCREEN END OF BLOCK b06.


DATA: BEGIN OF WA_EKKOCUD,
         BSART  TYPE EKKO-BSART,
         AEDAT  TYPE EKPO-AEDAT,
         EBELN  TYPE EBELN,
         EBELP  TYPE EBELP,
         WERKS  TYPE WERKS_D,
         ROUTE TYPE ROUTE,
      END OF WA_EKKOCUD.

TYPES: BEGIN OF gt_werks,
           WERKS TYPE WERKS_D,
       END OF gt_werks.

DATA: lv_dur           TYPE TRAZTD,
      lv_dur_days      TYPE traztd,
      lv_route         LIKE ekpv-route,
      wa_YSE_SCC_FIRSTOPO TYPE YSE_SCC_FIRSTopo,
      lv_calc_date     LIKE SCAL-DATE,
      lv_eindt         LIKE EKET-EINDT.

DATA: IT_EKKOCUD       LIKE WA_EKKOCUD         OCCURS 0 WITH HEADER LINE,
      it_werks TYPE TABLE OF gt_werks with header line.


      clear it_werks[].
      SELECT t024w~werks into table it_werks FROM T024W
                     WHERE
                     ekorg EQ P_ekorg.

*      SELECT vbap~ERDAT vbap~VBELN vbap~POSNR vbap~werks vbap~route
*       INTO CORRESPONDING FIELDS OF TABLE it_vbakcud
*       FROM vbak
*       INNER JOIN vbap ON vbap~vbeln EQ vbak~vbeln
*        FOR ALL ENTRIES in it_werks
*         WHERE vbap~werks = it_werks-werks
*          and vbap~erdat in s_credac
*          and ( vbak~auart = 'ZOR' or vbak~auart = 'ZO03' )
*          and vbak~vkorg = p_ekorg
*          and vbap~werks in s_werks.
        SELECT  ekko~bsart ekpo~aedat ekpo~ebeln ekpo~ebelp ekpo~werks as werks
         APPENDING CORRESPONDING FIELDS OF TABLE it_ekkocud
         FROM ekko
         INNER JOIN ekpo ON ekpo~ebeln EQ ekko~ebeln
          FOR ALL ENTRIES in it_werks
           WHERE ekpo~werks = it_werks-werks
            and ekpo~aedat in s_credac and
            ( ( ekko~BSART in ('ZNB1', 'ZNB2') and ( ekpo~lgort = '1000' OR ekpo~lgort = ' ' ) )  OR
               ( ekko~BSART eq 'ZUB1' and ekpo~lgort = '1000' )
            )
            and ekko~ekorg = p_ekorg
            and ekpo~werks in s_werks
            and ekpo~ebeln in s_ebelnc.





     LOOP AT it_ekkocud.
     if it_ekkocud-bsart = 'ZNB1' or it_ekkocud-bsart = 'ZNB2'.
      clear: lv_route, lv_calc_date, lv_dur_days, lv_dur, lv_eindt.
      select single route from ekpv into lv_route
        where ebeln = it_ekkocud-ebeln and
              ebelp = it_ekkocud-ebelp.

      clear wa_YSE_SCC_FIRSTOPO.
      select single eindt from eket into lv_eindt
        where ebeln = it_ekkocud-ebeln and
              ebelp = it_ekkocud-ebelp and
              etenr = '0001'.

      wa_YSE_SCC_FIRSTOPO-ebeln = it_ekkocud-ebeln.
      wa_YSE_SCC_FIRSTOPO-ebelp = it_ekkocud-ebelp.
      wa_YSE_SCC_FIRSTOPO-werks = it_ekkocud-werks.

      wa_YSE_SCC_FIRSTOPO-firstd = lv_eindt.



       INSERT YSE_SCC_FIRSTOPO FROM wa_YSE_SCC_FIRSTOPO.
     else.
    clear: lv_route, lv_calc_date, lv_dur_days, lv_dur, lv_eindt.
*      select single route from ekpv into lv_route
*        where ebeln = it_ekkocud-ebeln and
*              ebelp = it_ekkocud-ebelp.

      clear wa_YSE_SCC_FIRSTOPO.
      select single eindt from eket into lv_eindt
        where ebeln = it_ekkocud-ebeln and
              ebelp = it_ekkocud-ebelp and
              etenr = '0001'.

      wa_YSE_SCC_FIRSTOPO-ebeln = it_ekkocud-ebeln.
      wa_YSE_SCC_FIRSTOPO-ebelp = it_ekkocud-ebelp.
      wa_YSE_SCC_FIRSTOPO-werks = it_ekkocud-werks.

** Calculate the GI date
*        SELECT SINGLE traztd
*                 INTO lv_dur
*                 FROM tvro
*                 WHERE route = lv_route.
**   If duration of the route found
*        IF sy-subrc EQ 0.
**           Convert the internal format to days
*          CALL FUNCTION 'YSE_CONVERSION_EXIT_TSTRG_OUT'
*            EXPORTING
*              input  = lv_dur
*            IMPORTING
*              output = lv_dur_days.
*        ENDIF.

       wa_YSE_SCC_FIRSTOPO-firstd = lv_eindt.

*        CALL FUNCTION 'DATE_CONVERT_TO_FACTORYDATE' "Calendar function: Returns factory calendar date for a date
*          EXPORTING
*            correct_option = '-'        " scal-indicator  Flag how workday should be calculated
*            date =       lv_calc_date              " scal-date     Date to be converted into factory calendar date
*            factory_calendar_id =  '99'     " scal-fcalid   Factory calendar ID
*          IMPORTING
*            date =  wa_YSE_SCC_FIRSTOPO-firstd     .              " scal-date     Date to be converted into factory calendar date


       INSERT YSE_SCC_FIRSTOPO FROM wa_YSE_SCC_FIRSTOPO.
     endif.

     ENDLOOP.

*Text symbol text£º

*S01:Selection
*Selection text£º
*P_EKORG:        Purchase Organisation
*S_CREDAC:        Creation Date Sales Order Ln
*S_EBELNC:        Purchase Order Number
*S_WERKS:        Plant
