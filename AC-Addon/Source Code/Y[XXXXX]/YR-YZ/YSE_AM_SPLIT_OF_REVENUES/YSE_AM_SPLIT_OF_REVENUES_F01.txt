*------------------------------------------------------------------*
***INCLUDE YSE_AM_SPLIT_OF_REVENUES_F01 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  get_conditions
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_CONDITIONS .
*Get conditions for each type entered and fill main table
  DATA: LV_RATE TYPE KSTBM,
        LV_DISCOUNT TYPE KBETR_KOND,
        LV_DISC_PERC TYPE STRING.

  CLEAR: LV_RATE, LV_DISCOUNT.

*Get discount 1
  IF NOT P_DISC1 IS INITIAL.
    CALL FUNCTION 'YSE_AM_GET_CONDITION'
      EXPORTING
        IM_COND_TYPE            = P_DISC1
        IM_PRICING_SALES_ORG    = P_P_VORG
        IM_DISTR_CHANNEL        = P_P_VWEG
        IM_SALES_ORDER          = <FS_ORDER_DETAIL>-VBELN
        IM_LINE_NR              = <FS_ORDER_DETAIL>-POSNR
        IM_ACT_DATE             = P_P_DATE
      IMPORTING
        EX_RATE                 = LV_RATE
        EX_DISCOUNT             = LV_DISCOUNT
      EXCEPTIONS
        EXC_NO_SELECT_DATA      = 1
        EXC_NO_ACCESS_SEQ_FOUND = 2
        EXC_NO_RATE_FOUND       = 3
        OTHERS                  = 4.

    IF SY-SUBRC EQ 0.
      <FS_ORDER_DETAIL>-DISC1 = LV_DISCOUNT / ( -1000 ).
      LV_DISC_PERC = <FS_ORDER_DETAIL>-DISC1 * 100.
      CONCATENATE LV_DISC_PERC '%' INTO <FS_ORDER_DETAIL>-DISC1_P SEPARATED BY SPACE.

    ENDIF.
  ENDIF.

  CLEAR: LV_RATE, LV_DISCOUNT.
*Get discount 2
  IF NOT P_DISC1 IS INITIAL.
    CALL FUNCTION 'YSE_AM_GET_CONDITION'
      EXPORTING
        IM_COND_TYPE            = P_DISC2
        IM_PRICING_SALES_ORG    = P_P_VORG
        IM_DISTR_CHANNEL        = P_P_VWEG
        IM_SALES_ORDER          = <FS_ORDER_DETAIL>-VBELN
        IM_LINE_NR              = <FS_ORDER_DETAIL>-POSNR
        IM_ACT_DATE             = P_P_DATE
      IMPORTING
        EX_RATE                 = LV_RATE
        EX_DISCOUNT             = LV_DISCOUNT
      EXCEPTIONS
        EXC_NO_SELECT_DATA      = 1
        EXC_NO_ACCESS_SEQ_FOUND = 2
        EXC_NO_RATE_FOUND       = 3
        OTHERS                  = 4.

    IF SY-SUBRC EQ 0.
      <FS_ORDER_DETAIL>-DISC2 = LV_DISCOUNT / ( -1000 ).
    ENDIF.
  ENDIF.

  CLEAR: LV_RATE, LV_DISCOUNT.
*Get discount 3
  IF NOT P_DISC1 IS INITIAL.
    CALL FUNCTION 'YSE_AM_GET_CONDITION'
      EXPORTING
        IM_COND_TYPE            = P_DISC3
        IM_PRICING_SALES_ORG    = P_P_VORG
        IM_DISTR_CHANNEL        = P_P_VWEG
        IM_SALES_ORDER          = <FS_ORDER_DETAIL>-VBELN
        IM_LINE_NR              = <FS_ORDER_DETAIL>-POSNR
        IM_ACT_DATE             = P_P_DATE
      IMPORTING
        EX_RATE                 = LV_RATE
        EX_DISCOUNT             = LV_DISCOUNT
      EXCEPTIONS
        EXC_NO_SELECT_DATA      = 1
        EXC_NO_ACCESS_SEQ_FOUND = 2
        EXC_NO_RATE_FOUND       = 3
        OTHERS                  = 4.

    IF SY-SUBRC EQ 0.
      <FS_ORDER_DETAIL>-DISC3 = LV_DISCOUNT / ( -1000 ).
    ENDIF.
  ENDIF.


*Get conditions for material revenue type
  IF NOT P_MAT_P IS INITIAL.
    CALL FUNCTION 'YSE_AM_GET_CONDITION'
      EXPORTING
        IM_COND_TYPE            = P_MAT_P
        IM_PRICING_SALES_ORG    = P_P_VORG
        IM_DISTR_CHANNEL        = P_P_VWEG
        IM_SALES_ORDER          = <FS_ORDER_DETAIL>-VBELN
        IM_LINE_NR              = <FS_ORDER_DETAIL>-POSNR
        IM_ACT_DATE             = P_P_DATE
      IMPORTING
        EX_RATE                 = LV_RATE
        EX_DISCOUNT             = LV_DISCOUNT
      EXCEPTIONS
        EXC_NO_SELECT_DATA      = 1
        EXC_NO_ACCESS_SEQ_FOUND = 2
        EXC_NO_RATE_FOUND       = 3
        OTHERS                  = 4.

    IF SY-SUBRC EQ 0.
      <FS_ORDER_DETAIL>-MAT_PRICE = ( <FS_ORDER_DETAIL>-KWMENG * LV_RATE ) * ( 1 - <FS_ORDER_DETAIL>-DISC1 ).

    ENDIF.
  ENDIF.

  CLEAR: LV_RATE, LV_DISCOUNT.
*Get conditions for cust revenue type
  IF NOT P_CUST_P IS INITIAL.
    CALL FUNCTION 'YSE_AM_GET_CONDITION'
      EXPORTING
        IM_COND_TYPE            = P_CUST_P
        IM_PRICING_SALES_ORG    = P_P_VORG
        IM_DISTR_CHANNEL        = P_P_VWEG
        IM_SALES_ORDER          = <FS_ORDER_DETAIL>-VBELN
        IM_LINE_NR              = <FS_ORDER_DETAIL>-POSNR
        IM_ACT_DATE             = P_P_DATE
      IMPORTING
        EX_RATE                 = LV_RATE
        EX_DISCOUNT             = LV_DISCOUNT
      EXCEPTIONS
        EXC_NO_SELECT_DATA      = 1
        EXC_NO_ACCESS_SEQ_FOUND = 2
        EXC_NO_RATE_FOUND       = 3
        OTHERS                  = 4.

    IF SY-SUBRC EQ 0.
      <FS_ORDER_DETAIL>-CUST_PRICE = <FS_ORDER_DETAIL>-KWMENG * LV_RATE.
    ENDIF.
  ENDIF.





ENDFORM.                    " get_conditions
*&---------------------------------------------------------------------*
*&      Form  CREATE_FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CREATE_FIELDCAT .

  CLEAR GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'KUNNR'.
  GS_FIELDCAT-OUTPUTLEN = 12.
  GS_FIELDCAT-COLTEXT = 'Customer'(020).
  GS_FIELDCAT-FIX_COLUMN = 'X'.
  GS_FIELDCAT-EMPHASIZE = 'X'.

  APPEND GS_FIELDCAT TO GT_FIELDCAT.

  CLEAR GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'VKORG'.
  GS_FIELDCAT-OUTPUTLEN = 8.
  GS_FIELDCAT-COLTEXT = 'Sales Org.'(021).
  GS_FIELDCAT-FIX_COLUMN = 'X'.
  GS_FIELDCAT-EMPHASIZE = 'X'.

  APPEND GS_FIELDCAT TO GT_FIELDCAT.

  CLEAR GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'VTWEG'.
  GS_FIELDCAT-OUTPUTLEN = 8.
  GS_FIELDCAT-COLTEXT = 'Distr. Ch.'(022).
  GS_FIELDCAT-FIX_COLUMN = 'X'.
  GS_FIELDCAT-EMPHASIZE = 'X'.

  APPEND GS_FIELDCAT TO GT_FIELDCAT.

  CLEAR GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'VBELN'.
  GS_FIELDCAT-OUTPUTLEN = 11.
  GS_FIELDCAT-COLTEXT = 'Contract'(023).
  GS_FIELDCAT-FIX_COLUMN = 'X'.
  GS_FIELDCAT-EMPHASIZE = 'X'.

  APPEND GS_FIELDCAT TO GT_FIELDCAT.

  CLEAR GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'POSNR'.
  GS_FIELDCAT-OUTPUTLEN = 8.
  GS_FIELDCAT-COLTEXT = 'Line item'(024).
  GS_FIELDCAT-FIX_COLUMN = 'X'.
  GS_FIELDCAT-EMPHASIZE = 'X'.

  APPEND GS_FIELDCAT TO GT_FIELDCAT.

  CLEAR GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'NETWR'.
  GS_FIELDCAT-OUTPUTLEN = 10.
  GS_FIELDCAT-COLTEXT = 'Sales value'(025).

  APPEND GS_FIELDCAT TO GT_FIELDCAT.

  CLEAR GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'WAERK'.
  GS_FIELDCAT-OUTPUTLEN = 6.
  GS_FIELDCAT-COLTEXT = 'Doc. Curr.'(026).

  APPEND GS_FIELDCAT TO GT_FIELDCAT.


  CLEAR GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'COST_PARTS'.
  GS_FIELDCAT-OUTPUTLEN = 10.
  GS_FIELDCAT-COLTEXT = 'Cost parts'(027).

  APPEND GS_FIELDCAT TO GT_FIELDCAT.

  CLEAR GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'COST_LSM'.
  GS_FIELDCAT-OUTPUTLEN = 10.
  GS_FIELDCAT-COLTEXT = 'Cost Lab/Sub/Mil'(028).

  APPEND GS_FIELDCAT TO GT_FIELDCAT.

  CLEAR GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'COST_OTH'.
  GS_FIELDCAT-OUTPUTLEN = 10.
  GS_FIELDCAT-COLTEXT = 'Cost others'(029).

  APPEND GS_FIELDCAT TO GT_FIELDCAT.


**Discount display
*  DATA: LV_DISCOUNT TYPE STRING.
*  CONCATENATE 'Discount'(038) P_DISC1 INTO LV_DISCOUNT SEPARATED BY SPACE.
*
*  CLEAR GS_FIELDCAT.
*  GS_FIELDCAT-FIELDNAME = 'DISC1_P'.
*  GS_FIELDCAT-OUTPUTLEN = 12.
*  GS_FIELDCAT-COLTEXT = LV_DISCOUNT.
*  APPEND GS_FIELDCAT TO GT_FIELDCAT.
*
*  if not p_disc2 is initial.
*    CONCATENATE 'Discount'(038) P_DISC2 INTO LV_DISCOUNT SEPARATED BY SPACE.
*
*    CLEAR GS_FIELDCAT.
*    GS_FIELDCAT-FIELDNAME = 'DISC2_P'.
*    GS_FIELDCAT-OUTPUTLEN = 12.
*    GS_FIELDCAT-COLTEXT = LV_DISCOUNT.
*    APPEND GS_FIELDCAT TO GT_FIELDCAT.
*  endif.
*
*  if not p_disc3 is initial.
*    CONCATENATE 'Discount'(038) P_DISC3 INTO LV_DISCOUNT SEPARATED BY SPACE.
*
*    CLEAR GS_FIELDCAT.
*    GS_FIELDCAT-FIELDNAME = 'DISC3_P'.
*    GS_FIELDCAT-OUTPUTLEN = 12.
*    GS_FIELDCAT-COLTEXT = LV_DISCOUNT.
*    APPEND GS_FIELDCAT TO GT_FIELDCAT.
*  endif.


  CLEAR GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'CUST_PRICE'.
  GS_FIELDCAT-OUTPUTLEN = 12.
  GS_FIELDCAT-COLTEXT = 'Cust price'(030).

  APPEND GS_FIELDCAT TO GT_FIELDCAT.
************************************************************************
  CLEAR GS_FIELDCAT.
  GS_FIELDCAT-FIELDNAME = 'MAT_PRICE'.
  GS_FIELDCAT-OUTPUTLEN = 12.
  GS_FIELDCAT-COLTEXT = 'Mat price'(080).

  APPEND GS_FIELDCAT TO GT_FIELDCAT.


*  CLEAR GS_FIELDCAT.
*  GS_FIELDCAT-FIELDNAME = 'CUST_MARGIN'.
*  GS_FIELDCAT-OUTPUTLEN = 12.
*  GS_FIELDCAT-COLTEXT = 'PL1 price margin on parts'(031).
*
*  APPEND GS_FIELDCAT TO GT_FIELDCAT.
*
*  CLEAR GS_FIELDCAT.
*  GS_FIELDCAT-FIELDNAME = 'CUST_DIFF'.
*  GS_FIELDCAT-OUTPUTLEN = 12.
*  GS_FIELDCAT-COLTEXT = 'PL1 price difference'(032).
*
*  APPEND GS_FIELDCAT TO GT_FIELDCAT.
*
*CLEAR GS_FIELDCAT.
*  GS_FIELDCAT-FIELDNAME = 'MAT_PRICE'.
*  GS_FIELDCAT-OUTPUTLEN = 12.
*  GS_FIELDCAT-COLTEXT = 'PL2 price'(033).
*
*  APPEND GS_FIELDCAT TO GT_FIELDCAT.
*
*  CLEAR GS_FIELDCAT.
*  GS_FIELDCAT-FIELDNAME = 'MAT_MARGIN'.
*  GS_FIELDCAT-OUTPUTLEN = 12.
*  GS_FIELDCAT-COLTEXT = 'PL2 margin on parts'(034).
*
*  APPEND GS_FIELDCAT TO GT_FIELDCAT.
*
*  CLEAR GS_FIELDCAT.
*  GS_FIELDCAT-FIELDNAME = 'MAT_DIFF'.
*  GS_FIELDCAT-OUTPUTLEN = 12.
*  GS_FIELDCAT-COLTEXT = 'PL2 difference'(035).
*
*  APPEND GS_FIELDCAT TO GT_FIELDCAT.
*
*
*  CLEAR GS_FIELDCAT.
*  GS_FIELDCAT-FIELDNAME = 'MAT_COST_LO'.
*  GS_FIELDCAT-OUTPUTLEN = 12.
*  GS_FIELDCAT-COLTEXT = 'PL2 Cost Labor Other'(036).
*
*  APPEND GS_FIELDCAT TO GT_FIELDCAT.
*
*  CLEAR GS_FIELDCAT.
*  GS_FIELDCAT-FIELDNAME = 'CUST_COST_LO'.
*  GS_FIELDCAT-OUTPUTLEN = 12.
*  GS_FIELDCAT-COLTEXT = 'PL1 Cost Labor Other'(037).
*
*  APPEND GS_FIELDCAT TO GT_FIELDCAT.



ENDFORM.                    " CREATE_FIELDCAT
*&---------------------------------------------------------------------*
*&      Form  compute_calculated_fields
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM COMPUTE_CALCULATED_FIELDS .
  if <FS_ORDER_DETAIL>-MAT_PRICE > 0.
*Calculate material margin
    <FS_ORDER_DETAIL>-MAT_MARGIN = <FS_ORDER_DETAIL>-MAT_PRICE - <FS_ORDER_DETAIL>-COST_PARTS.
*Calculate material difference between fixed price and
    <FS_ORDER_DETAIL>-MAT_DIFF = <FS_ORDER_DETAIL>-NETwr - <FS_ORDER_DETAIL>-MAT_PRICE.
  endif.

  if <FS_ORDER_DETAIL>-cust_PRICE > 0.
*Calculate material margin
    <FS_ORDER_DETAIL>-cust_MARGIN = <FS_ORDER_DETAIL>-cust_PRICE - <FS_ORDER_DETAIL>-COST_PARTS.
*Calculate material difference between fixed price and
    <FS_ORDER_DETAIL>-cust_DIFF = <FS_ORDER_DETAIL>-NETwr - <FS_ORDER_DETAIL>-cust_PRICE.
  endif.

*Calculate additional fields
  <FS_ORDER_DETAIL>-mat_cost_lo = <FS_ORDER_DETAIL>-mat_diff + ( <FS_ORDER_DETAIL>-cost_lsm + <FS_ORDER_DETAIL>-cost_oth ).
  <FS_ORDER_DETAIL>-cust_cost_lo = <FS_ORDER_DETAIL>-cust_diff + ( <FS_ORDER_DETAIL>-cost_lsm + <FS_ORDER_DETAIL>-cost_oth ).
ENDFORM.                    " compute_calculated_fields
*&---------------------------------------------------------------------*
*&      Form  get_parts_selling_price
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM get_parts_selling_price .

  constants: lc_ledger type lednr value '00',
             lc_wrttp type CO_WRTTP value '04',
             lc_vrgng type CO_VORGANG value 'COIN'.

  data: begin of lt_cost_mat occurs 0,
          matnr type matnr,
          MBGBTR type MBGXXX,
        end of lt_cost_mat.

  data: ls_cost_mat like line of lt_cost_mat.

  DATA: LV_RATE TYPE KSTBM,
        LV_DISCOUNT TYPE KBETR_KOND,
        LV_DISC_PERC TYPE STRING.


*Select all materials we will use to calculate the parts selling price
  select matnr MBGBTR from coep into corresponding fields of table lt_cost_mat
    where lednr eq lc_ledger
    and objnr eq <fs_order_detail>-objnr
    and wrttp eq lc_wrttp
*  and vrgng eq lc_vrgng
    and matnr is not null
    and matnr ne ' '.

  check sy-subrc eq 0.

*If any material(s) found, start simulating the pricing condition for every material

  loop at lt_cost_mat into ls_cost_mat.
*Get discount 1
    IF NOT P_DISC1 IS INITIAL.
      CLEAR: LV_RATE, LV_DISCOUNT, lv_disc_perc.
      CALL FUNCTION 'YSE_AM_GET_CONDITION'
        EXPORTING
          IM_COND_TYPE            = P_DISC1
          IM_PRICING_SALES_ORG    = P_P_VORG
          IM_DISTR_CHANNEL        = P_P_VWEG
          IM_SALES_ORDER          = <FS_ORDER_DETAIL>-VBELN
          IM_LINE_NR              = <FS_ORDER_DETAIL>-POSNR
          IM_ACT_DATE             = P_P_DATE
          IM_MATNR                = ls_cost_mat-matnr
        IMPORTING
          EX_RATE                 = LV_RATE
          EX_DISCOUNT             = LV_DISCOUNT
        EXCEPTIONS
          EXC_NO_SELECT_DATA      = 1
          EXC_NO_ACCESS_SEQ_FOUND = 2
          EXC_NO_RATE_FOUND       = 3
          OTHERS                  = 4.

      IF SY-SUBRC EQ 0.
        <FS_ORDER_DETAIL>-DISC1 = LV_DISCOUNT / ( -1000 ).
        LV_DISC_PERC = <FS_ORDER_DETAIL>-DISC1 * 100.
        CONCATENATE LV_DISC_PERC '%' INTO <FS_ORDER_DETAIL>-DISC1_P SEPARATED BY SPACE.

      ENDIF.
    ENDIF.

*Get discount 2
    IF NOT P_DISC2 IS INITIAL.
      CLEAR: LV_RATE, LV_DISCOUNT, lv_disc_perc.
      CALL FUNCTION 'YSE_AM_GET_CONDITION'
        EXPORTING
          IM_COND_TYPE            = P_DISC2
          IM_PRICING_SALES_ORG    = P_P_VORG
          IM_DISTR_CHANNEL        = P_P_VWEG
          IM_SALES_ORDER          = <FS_ORDER_DETAIL>-VBELN
          IM_LINE_NR              = <FS_ORDER_DETAIL>-POSNR
          IM_ACT_DATE             = P_P_DATE
          IM_MATNR                = ls_cost_mat-matnr
        IMPORTING
          EX_RATE                 = LV_RATE
          EX_DISCOUNT             = LV_DISCOUNT
        EXCEPTIONS
          EXC_NO_SELECT_DATA      = 1
          EXC_NO_ACCESS_SEQ_FOUND = 2
          EXC_NO_RATE_FOUND       = 3
          OTHERS                  = 4.

      IF SY-SUBRC EQ 0.
        <FS_ORDER_DETAIL>-DISC2 = LV_DISCOUNT / ( -1000 ).
        LV_DISC_PERC = <FS_ORDER_DETAIL>-DISC2 * 100.
        CONCATENATE LV_DISC_PERC '%' INTO <FS_ORDER_DETAIL>-DISC2_P SEPARATED BY SPACE.

      ENDIF.
    ENDIF.

*Get discount 3
    IF NOT P_DISC3 IS INITIAL.
      CLEAR: LV_RATE, LV_DISCOUNT, lv_disc_perc.
      CALL FUNCTION 'YSE_AM_GET_CONDITION'
        EXPORTING
          IM_COND_TYPE            = P_DISC3
          IM_PRICING_SALES_ORG    = P_P_VORG
          IM_DISTR_CHANNEL        = P_P_VWEG
          IM_SALES_ORDER          = <FS_ORDER_DETAIL>-VBELN
          IM_LINE_NR              = <FS_ORDER_DETAIL>-POSNR
          IM_ACT_DATE             = P_P_DATE
          IM_MATNR                = ls_cost_mat-matnr
        IMPORTING
          EX_RATE                 = LV_RATE
          EX_DISCOUNT             = LV_DISCOUNT
        EXCEPTIONS
          EXC_NO_SELECT_DATA      = 1
          EXC_NO_ACCESS_SEQ_FOUND = 2
          EXC_NO_RATE_FOUND       = 3
          OTHERS                  = 4.

      IF SY-SUBRC EQ 0.
        <FS_ORDER_DETAIL>-DISC3 = LV_DISCOUNT / ( -1000 ).
        LV_DISC_PERC = <FS_ORDER_DETAIL>-DISC3 * 100.
        CONCATENATE LV_DISC_PERC '%' INTO <FS_ORDER_DETAIL>-DISC3_P SEPARATED BY SPACE.
      ENDIF.
    ENDIF.

*Get the selling price of the cost material - material price
    IF NOT P_MAT_P IS INITIAL.
      CLEAR: LV_RATE, LV_DISCOUNT.
      CALL FUNCTION 'YSE_AM_GET_CONDITION'
        EXPORTING
          IM_COND_TYPE            = P_MAT_P
          IM_PRICING_SALES_ORG    = P_P_VORG
          IM_DISTR_CHANNEL        = P_P_VWEG
          IM_SALES_ORDER          = <FS_ORDER_DETAIL>-VBELN
          IM_LINE_NR              = <FS_ORDER_DETAIL>-POSNR
          IM_ACT_DATE             = P_P_DATE
          IM_MATNR                = ls_cost_mat-matnr
        IMPORTING
          EX_RATE                 = LV_RATE
          EX_DISCOUNT             = LV_DISCOUNT
        EXCEPTIONS
          EXC_NO_SELECT_DATA      = 1
          EXC_NO_ACCESS_SEQ_FOUND = 2
          EXC_NO_RATE_FOUND       = 3
          OTHERS                  = 4.

*      IF SY-SUBRC EQ 0 and lv_rate <> 0.
*        if not <FS_ORDER_DETAIL>-DISC1 is initial.
*          <FS_ORDER_DETAIL>-MAT_PRICE = ( ( <FS_ORDER_DETAIL>-MAT_PRICE ) + ( lv_rate * ls_cost_mat-mbgbtr ) ) * ( 1 - <FS_ORDER_DETAIL>-DISC1 ).
*        endif.
*        if not <FS_ORDER_DETAIL>-DISC2 is initial.
*          <FS_ORDER_DETAIL>-MAT_PRICE = ( ( <FS_ORDER_DETAIL>-MAT_PRICE ) + ( lv_rate * ls_cost_mat-mbgbtr ) ) * ( 1 - <FS_ORDER_DETAIL>-DISC2 ).
*        endif.
*        if not <FS_ORDER_DETAIL>-DISC3 is initial.
*          <FS_ORDER_DETAIL>-MAT_PRICE = ( ( <FS_ORDER_DETAIL>-MAT_PRICE ) + ( lv_rate * ls_cost_mat-mbgbtr ) ) * ( 1 - <FS_ORDER_DETAIL>-DISC3 ).
*        endif.
*      ENDIF.
    <FS_ORDER_DETAIL>-MAT_PRICE = lv_rate.
    ENDIF.



*Get the selling price of the cost material - customer price
    IF NOT P_cust_P IS INITIAL.
      CLEAR: LV_RATE, LV_DISCOUNT.
      CALL FUNCTION 'YSE_AM_GET_CONDITION'
        EXPORTING
          IM_COND_TYPE            = P_CUST_P
          IM_PRICING_SALES_ORG    = P_P_VORG
          IM_DISTR_CHANNEL        = P_P_VWEG
          IM_SALES_ORDER          = <FS_ORDER_DETAIL>-VBELN
          IM_LINE_NR              = <FS_ORDER_DETAIL>-POSNR
          IM_ACT_DATE             = P_P_DATE
          IM_MATNR                = ls_cost_mat-matnr
        IMPORTING
          EX_RATE                 = LV_RATE
          EX_DISCOUNT             = LV_DISCOUNT
        EXCEPTIONS
          EXC_NO_SELECT_DATA      = 1
          EXC_NO_ACCESS_SEQ_FOUND = 2
          EXC_NO_RATE_FOUND       = 3
          OTHERS                  = 4.


*        if not <FS_ORDER_DETAIL>-DISC1 is initial.
*          <FS_ORDER_DETAIL>-cust_PRICE = ( ( <FS_ORDER_DETAIL>-cust_PRICE ) + ( lv_rate * ls_cost_mat-mbgbtr ) ) * ( 1 - <FS_ORDER_DETAIL>-DISC1 ).
*        endif.
*        if not <FS_ORDER_DETAIL>-DISC2 is initial.
*          <FS_ORDER_DETAIL>-cust_PRICE = ( ( <FS_ORDER_DETAIL>-cust_PRICE ) + ( lv_rate * ls_cost_mat-mbgbtr ) ) * ( 1 - <FS_ORDER_DETAIL>-DISC2 ).
*        endif.
*        if not <FS_ORDER_DETAIL>-DISC3 is initial.
*          <FS_ORDER_DETAIL>-cust_PRICE = ( ( <FS_ORDER_DETAIL>-cust_PRICE ) + ( lv_rate * ls_cost_mat-mbgbtr ) ) * ( 1 - <FS_ORDER_DETAIL>-DISC3 ).
*        endif.
        <FS_ORDER_DETAIL>-cust_PRICE = lv_rate.
      ENDIF.

  endloop.

ENDFORM.                    " get_parts_selling_price
