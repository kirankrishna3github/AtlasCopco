*&---------------------------------------------------------------------*
*& Report  YSE_ZCIQ_FILL_ACT                                           *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*
**********************************************************************
* DEV request       : CD1K974907                                      *
* Descr       :                                                       *
* Author            : Geert Rutten                                    *
* Date              :                                                 *
* Functional spec   :                                                 *
* Description       : Program to change ZCIQ for Act                  *
* Change History Log                                                  *
***********************************************************************

REPORT  YSE_ZCIQ_FILL_ACT.


TYPES: BEGIN  OF t_salesdoc,
         SAL_VBELN    TYPE VBAK-VBELN, " Salesdocument
         SAL_POSNR(6)    TYPE c,
  "VBAP-POSNR, " Salesdocument posnr
         SAL_KBETR(35)    TYPE c,
  "BAPIKBETR1, " ZCIQ value
       END OF t_salesdoc.


DATA: i_salesdoc              TYPE TABLE OF t_salesdoc,
      wa_salesdoc              TYPE t_salesdoc.

CONSTANTS:  c_underscore(1) TYPE c  VALUE '_'.            " Underscore

DATA: HEADER LIKE BAPISDH1.
DATA : HEADERX LIKE BAPISDH1X.
DATA: ILOGIC_SWITCH LIKE BAPISDLS.

DATA: g_directory(29) TYPE c VALUE '/var/load/xxx/UK/read/',
      p_logsys    LIKE tbdlst-logsys.


DATA: T_CONDITION LIKE STANDARD TABLE OF BAPICOND WITH HEADER LINE.
DATA: T_CONDITIONX LIKE STANDARD TABLE OF BAPICONDX WITH HEADER LINE.
DATA: return type standard table of bapiret2 with header line.
DATA: lv_knumv type vbak-knumv,
      lv_kbetr type konv-kbetr,
      lv_posnr type kposn.


DATA : g_retcd     LIKE sy-subrc,               " return code
       g_outrec(800) TYPE c,
       g_ofile     LIKE      /sapdmc/lsoinp-filename.

PARAMETER: P_INP TYPE  STRING DEFAULT 'c:\SAP\SALESDOC.TXT' ,
           P_INPTP(10) TYPE  C DEFAULT 'ASC'.

CONSTANTS: lv_zciq(4) type C value 'ZCIQ'.



START-OF-SELECTION.

CALL FUNCTION 'GUI_UPLOAD'
      EXPORTING
        filename                = P_INP
        filetype                = P_INPTP
        has_field_separator     = 'X'
      TABLES
        data_tab                = i_salesdoc
      EXCEPTIONS
        file_open_error         = 1
        file_read_error         = 2
        no_batch                = 3
        gui_refuse_filetransfer = 4
        invalid_type            = 5
        no_authority            = 6
        unknown_error           = 7
        bad_data_format         = 8
        header_not_allowed      = 9
        separator_not_allowed   = 10
        header_too_long         = 11
        unknown_dp_error        = 12
        access_denied           = 13
        dp_out_of_memory        = 14
        disk_full               = 15
        dp_timeout              = 16.

  IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.



  DESCRIBE TABLE  i_salesdoc  LINES  sy-tfill.
  CHECK sy-tfill NE 0.


 CALL FUNCTION 'OWN_LOGICAL_SYSTEM_GET'
    IMPORTING
      own_logical_system             = p_logsys
    EXCEPTIONS
      own_logical_system_not_defined = 1
      OTHERS                         = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
         WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
* ELSE.
*   REPLACE FIRST OCCURRENCE OF c_clnt IN p_logsys WITH c_wbi  .
  ENDIF.

 PERFORM output_file_contracts.


  CLEAR wa_salesdoc.


  OPEN DATASET g_ofile FOR OUTPUT IN TEXT MODE ENCODING DEFAULT.
  IF sy-subrc <> 0.
    WRITE: / text-e03, g_ofile.
*   message e011(YAM_DC).                      "Open dataset failed
    g_retcd = 4.
    EXIT.
  ENDIF.

  HEADERX-UPDATEFLAG = 'U'.



  LOOP AT i_salesdoc  INTO wa_salesdoc.

    clear lv_knumv.
    select single knumv into lv_knumv from vbak where vbeln = wa_salesdoc-SAL_VBELN.
    if sy-subrc eq 0.
      select single kbetr into lv_kbetr from konv where knumv = lv_knumv and kschl = lv_zciq.
      if sy-subrc eq 0.

* CLEAR t_condition.
* t_condition-ITM_NUMBER = '000010'.
* MOVE 'ZCIQ' TO T_CONDITION-COND_TYPE.
* APPEND t_condition.
*
* CLEAR t_conditionx.
* t_conditionx-ITM_NUMBER = '000010'.
* MOVE 'ZCIQ' TO T_CONDITIONX-COND_TYPE.
* t_conditionx-UPDATEFLAG = 'D'.
* APPEND t_conditionx.
**
 ILOGIC_SWITCH-COND_HANDL = 'X'. "CARRY OUT NEW PRICING
* ILOGIC_SWITCH-PRICING = 'B'. "CARRY OUT NEW PRICING


*   CALL FUNCTION 'BAPI_SALESORDER_CHANGE'
*          EXPORTING
*            salesdocument    = wa_salesdoc-SAL_VBELN
*            order_header_inx = headerx
**           LOGIC_SWITCH   = ILOGIC_SWITCH
*          TABLES
*            return           = return
*            CONDITIONS_IN    = t_condition
*            CONDITIONS_INX   = t_conditionx.
*        LOOP AT RETURN.
*          WRITE : / RETURN-TYPE, RETURN-MESSAGE.
*        ENDLOOP.
*        CALL FUNCTION 'BAPI_TRANSACTION_COMMIT' .

CLEAR lv_posnr.

CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
  EXPORTING
    INPUT = wa_salesdoc-sal_posnr
  IMPORTING
    OUTPUT = lv_posnr.

lv_kbetr = wa_salesdoc-sal_kbetr.
* Insert
CLEAR T_CONDITION[].
  MOVE:
  lv_posnr TO T_CONDITION-ITM_NUMBER,
  'ZCIQ' TO T_CONDITION-COND_TYPE,
*  '690' TO  T_CONDITION-COND_ST_NO,
  '01' TO T_CONDITION-COND_COUNT,
  lv_kbetr TO T_CONDITION-COND_VALUE,
  'EUR' TO T_CONDITION-CURRENCY.
  APPEND T_CONDITION.

  CLEAR T_CONDITIONX[].
  MOVE:
  lv_posnr TO T_CONDITIONX-ITM_NUMBER,
  'ZCIQ' TO T_CONDITIONX-COND_TYPE,
*  '690' TO  T_CONDITION-COND_ST_NO,
  '01' TO T_CONDITIONX-COND_COUNT,
  'X' TO T_CONDITIONX-COND_VALUE,
  'X' TO T_CONDITIONX-CURRENCY,
  'U' TO T_CONDITIONX-UPDATEFLAG.
  APPEND T_CONDITIONX.

        CALL FUNCTION 'BAPI_SALESORDER_CHANGE'
          EXPORTING
            salesdocument    = wa_salesdoc-SAL_VBELN
            ORDER_HEADER_IN  = header
            order_header_inx = headerx
            LOGIC_SWITCH   = ILOGIC_SWITCH
          TABLES
            return           = return
            CONDITIONS_IN    = t_condition
            CONDITIONS_INX   = t_conditionx.
        LOOP AT RETURN.
          WRITE : / RETURN-TYPE, RETURN-MESSAGE.

          PERFORM write_outputfile.
        ENDLOOP.
        CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
          EXPORTING
            wait = 'X'.





      endif.
    endif.
  ENDLOOP.

   CLOSE DATASET g_ofile.

  FORM output_file_contracts.

* write outputfile to application server
  CLEAR g_retcd.

  CONCATENATE sy-datum 'ZCIQ'
            INTO g_ofile SEPARATED BY c_underscore.
  REPLACE 'xxx' IN g_directory WITH p_logsys(3).
  CONCATENATE g_directory g_ofile INTO g_ofile.

ENDFORM.



FORM write_outputfile.





CONCATENATE RETURN-TYPE RETURN-MESSAGE wa_salesdoc-SAL_VBELN
INTO g_outrec SEPARATED BY c_underscore.


    TRANSFER g_outrec(500) TO g_ofile.

ENDFORM.

*Text symbol text£º

*E03:Open dataset failed for :
*Selection text£º
*P_INP:        Filename
*P_INPTP:        FileType
