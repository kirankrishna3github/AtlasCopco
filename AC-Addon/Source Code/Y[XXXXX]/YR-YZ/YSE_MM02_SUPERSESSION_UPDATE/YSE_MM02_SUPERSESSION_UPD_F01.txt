*----------------------------------------------------------------------*
* PROGRAM ID           : YSE_MM02_SUPERSESSION_UPD_F01                 *
* PROGRAM TITLE        : YSE_MM02_SUPERSESSION_UPD_F01                 *
* AUTHOR               : Sridhar Perumalla                             *
* DATE                 : 24/10/2013                                    *
* DEVELOPMENT ID       : CR 3047                                       *
* CHANGE REQUEST NUMBER: CD1K978003                                    *
* PROGRAM DESCRIPTION  : This is a program that updates the material   *
*                        info from BPCS to SAP                         *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME                   | CORR. NR   | CHANGE REF*
*----------------------------------------------------------------------*
*                                                                      *
************************************************************************

*&---------------------------------------------------------------------*
*&  Include           YSE_MM02_SUPERSESSION_UPD_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  READ_FILE
*&---------------------------------------------------------------------*
*  To read data from file in application server
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM read_file .

  DATA : lv_filename TYPE string.
  MOVE p_fname TO lv_filename.

  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      filename                = lv_filename
      filetype                = c_asc
      has_field_separator     = c_hash
    TABLES
      data_tab                = it_inputfile
    EXCEPTIONS
      file_open_error         = 1
      file_read_error         = 2
      no_batch                = 3
      gui_refuse_filetransfer = 4
      invalid_type            = 5
      no_authority            = 6
      unknown_error           = 7
      bad_data_format         = 8
      header_not_allowed      = 9
      separator_not_allowed   = 10
      header_too_long         = 11
      unknown_dp_error        = 12
      access_denied           = 13
      dp_out_of_memory        = 14
      disk_full               = 15
      dp_timeout              = 16
      OTHERS                  = 17.

  IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  LOOP AT it_inputfile INTO wa_inputfile.
    CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
      EXPORTING
        input        = wa_inputfile-mat_nam
      IMPORTING
        output       = wa_inputfile-mat_nam
      EXCEPTIONS
        length_error = 1
        OTHERS       = 2.
    IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.
    CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
      EXPORTING
        input        = wa_inputfile-follow_mat
      IMPORTING
        output       = wa_inputfile-follow_mat
      EXCEPTIONS
        length_error = 1
        OTHERS       = 2.
    IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.
    v_date = wa_inputfile-eff_date.
    CONCATENATE v_date+6(4) v_date+3(2) v_date+0(2) INTO wa_inputfile-eff_date.
    MODIFY it_inputfile FROM wa_inputfile TRANSPORTING mat_nam follow_mat eff_date.
    CLEAR : wa_inputfile.
  ENDLOOP.
  IF it_inputfile[] IS NOT INITIAL.
    SELECT matnr nfmat FROM marc INTO TABLE it_marc
                       FOR ALL ENTRIES IN it_inputfile
                       WHERE nfmat = it_inputfile-mat_nam AND
                             werks IN s_werks.
    IF sy-subrc IS INITIAL.
      SORT it_marc BY matnr.
      DELETE ADJACENT DUPLICATES FROM it_marc COMPARING matnr.
    ENDIF.
  ENDIF.
ENDFORM.                    " READ_FILE
*&---------------------------------------------------------------------*
*&      Form  DATA_UPDATE
*&---------------------------------------------------------------------*
*  To update input data using the Input file
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM data_update .

  LOOP AT it_inputfile INTO wa_inputfile.
*Header data
    wa_headdata-material = wa_inputfile-mat_nam.
    wa_headdata-mrp_view = c_x.
*Plant Material Status
    IF wa_inputfile-plant_sp_mat_stat IS INITIAL.
      wa_plantdata-pur_status = space.
    ELSEIF wa_inputfile-plant_sp_mat_stat EQ c_s.
      wa_plantdata-pur_status = c_a1.
    ELSEIF wa_inputfile-plant_sp_mat_stat EQ c_o.
      wa_plantdata-pur_status = c_a2.
    ENDIF.
*Discontinued Indicator
    IF wa_inputfile-plant_sp_mat_stat EQ c_s.
      wa_plantdata-discontinu = c_1.
    ELSE.
      wa_plantdata-discontinu = space.
    ENDIF.
*Effective Date
    IF wa_inputfile-plant_sp_mat_stat EQ c_s.
      wa_plantdata-eff_o_day = wa_inputfile-eff_date.
      wa_plantdata-pvalidfrom = wa_inputfile-eff_date.
    ENDIF.
*Follow up Material.
    IF wa_inputfile-plant_sp_mat_stat EQ c_s.
      wa_plantdata-follow_up  = wa_inputfile-follow_mat.
    ELSE.
      IF wa_inputfile-follow_mat IS INITIAL.
        wa_plantdata-follow_up = space.
      ELSE.
        wa_plantdata-follow_up = wa_inputfile-follow_mat.
      ENDIF.
    ENDIF.
*PlantX Data
*   wa_plantdatax-plant      = p_werks.             " commented by MOD-001
    wa_plantdatax-plant      = s_werks-low.         " MOD-001
    wa_plantdatax-pur_status = c_x.
    wa_plantdatax-discontinu = c_x.
    wa_plantdatax-pvalidfrom = c_x.
    wa_plantdatax-eff_o_day  = c_x.
    wa_plantdatax-follow_up  = c_x.

*   IF p_werks IS INITIAL.                          " commented by MOD-001
    IF s_werks-low IS INITIAL.
      PERFORM set_update_all_materials USING wa_headdata
                                             wa_plantdata
                                             wa_plantdatax.
      CLEAR : wa_inputfile, wa_headdata, wa_plantdata,
              wa_plantdatax, wa_return.
      REFRESH : it_return[].
    ELSE.
*Plant data
      LOOP AT s_werks.                                     " MOD-001
*     wa_plantdata-plant      = p_werks.                  " commented by MOD-001
        wa_plantdata-plant      = s_werks-low.              " MOD-001
        wa_plantdatax-plant     = s_werks-low.
        CALL FUNCTION 'BAPI_MATERIAL_SAVEDATA'
          EXPORTING
            headdata       = wa_headdata
            plantdata      = wa_plantdata
            plantdatax     = wa_plantdatax
          IMPORTING
            return         = wa_return
          TABLES
            returnmessages = it_return.
        CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
          EXPORTING
            wait = '2'.
        IF wa_return-type = c_e.
          wa_error-material = wa_inputfile-mat_nam.
          APPEND wa_error TO it_error.
          CLEAR : wa_error.

        ELSEIF wa_return-type = c_s.
          wa_success-material = wa_inputfile-mat_nam.
          APPEND wa_success TO it_success.
          CLEAR : wa_success.
        ENDIF.
      ENDLOOP.                                                " MOD-001
      CLEAR : wa_inputfile, wa_headdata, wa_plantdata,
              wa_plantdatax, wa_return.
      REFRESH : it_return[].
    ENDIF.
  ENDLOOP.


ENDFORM.                    " DATA_UPDATE
*&---------------------------------------------------------------------*
*&      Form  WRITE_RESULTS
*&---------------------------------------------------------------------*
* To write the results of the updated and errored materials
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM write_results .

  IF it_error[] IS NOT INITIAL.
    SORT it_error BY material.
    DELETE ADJACENT DUPLICATES FROM it_error COMPARING material.
    WRITE : / text-005 COLOR COL_HEADING.
    LOOP AT it_error INTO wa_error.
      WRITE :/2 wa_error-material.
      CLEAR : wa_error.
    ENDLOOP.
  ELSE.
    WRITE : / text-003.
  ENDIF.

ENDFORM.                    " WRITE_RESULTS
*&---------------------------------------------------------------------*
*&      Form  PLANT_DROPDOWNLIST
*&---------------------------------------------------------------------*
*  Prepare dropdownlist for the plant parameter
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM plant_dropdownlist .
  REFRESH it_list[].                              " MOD-001
  wa_value-key = 'ADEA'.
  wa_value-text = 'ADEA'.
  APPEND wa_value TO it_list.

  wa_value-key = 'AFRA'.
  wa_value-text = 'AFRA'.
  APPEND wa_value TO it_list.

  wa_value-key = 'BGAA'.
  wa_value-text = 'BGAA'.
  APPEND wa_value TO it_list.

  wa_value-key = 'CHAA'.
  wa_value-text = 'CHAA'.
  APPEND wa_value TO it_list.

  wa_value-key = 'CPRA'.
  wa_value-text = 'CPRA'.
  APPEND wa_value TO it_list.

  wa_value-key = 'ESAA'.
  wa_value-text = 'ESAA'.
  APPEND wa_value TO it_list.

  wa_value-key = 'GBAA'.
  wa_value-text = 'GBAA'.
  APPEND wa_value TO it_list.

  wa_value-key = 'GMIX'.
  wa_value-text = 'GMIX'.
  APPEND wa_value TO it_list.

  wa_value-key = 'IYAA'.
  wa_value-text = 'IYAA'.
  APPEND wa_value TO it_list.

  wa_value-key = 'NLAA'.
  wa_value-text = 'NLAA'.
  APPEND wa_value TO it_list.

  wa_value-key = 'NNAA'.
  wa_value-text = 'NNAA'.
  APPEND wa_value TO it_list.

* Begin of Comment by MOD-001
*  CALL FUNCTION 'VRM_SET_VALUES'
*    EXPORTING
*      id              = 'P_WERKS'
*      values          = it_list
*    EXCEPTIONS
*      id_illegal_name = 1
*      OTHERS          = 2.
*  End of Comment by MOD-001
*Begin of insert by MOD-001
  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      retfield        = 'KEY'
      dynpprog        = sy-cprog
      dynpnr          = sy-dynnr
      dynprofield     = 'S_WERKS-LOW'
      value_org       = 'S'
    TABLES
      value_tab       = it_list
    EXCEPTIONS
      parameter_error = 1
      no_values_found = 2
      OTHERS          = 3.
* End of Insert by MOD-001.
  IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
ENDFORM.                    " PLANT_DROPDOWNLIST
*&---------------------------------------------------------------------*
*&      Form  f4_presentation_server_path
*&---------------------------------------------------------------------*
*  F4 help for the presentation server path
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM f4_presentation_server_path .

  CALL FUNCTION 'F4_FILENAME'
    EXPORTING
      program_name  = syst-cprog
      dynpro_number = syst-dynnr
    IMPORTING
      file_name     = p_fname.

ENDFORM.                    " f4_presentation_server_path
*&---------------------------------------------------------------------*
*&      Form  SET_UPDATE_ALL_MATERIALS
*&---------------------------------------------------------------------*
*  If plant on selection-screen is empty in that case this perform
*  will trigger and update the fields for all the 11 plants
*----------------------------------------------------------------------*
*      -->WA_HEADDATA  text
*      -->WA_PLANTDATA  text
*      -->WA_PLANTDATAX  text
*----------------------------------------------------------------------*
FORM set_update_all_materials  USING    wa_headdata TYPE bapimathead
                                        wa_plantdata TYPE bapi_marc
                                        wa_plantdatax TYPE bapi_marcx.
  LOOP AT it_list INTO wa_value.
*Plant data
    wa_plantdata-plant      = wa_value-key.
    wa_plantdatax-plant     = wa_value-key.

    CALL FUNCTION 'BAPI_MATERIAL_SAVEDATA'
      EXPORTING
        headdata       = wa_headdata
        plantdata      = wa_plantdata
        plantdatax     = wa_plantdatax
      IMPORTING
        return         = wa_return
      TABLES
        returnmessages = it_return.

    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
      EXPORTING
        wait = '2'.
    IF wa_return-type = c_e.
      wa_error-material = wa_headdata-material.
      APPEND wa_error TO it_error.
      CLEAR : wa_error.
    ELSEIF wa_return-type = c_s.
      wa_success-material = wa_headdata-material.
      APPEND wa_success TO it_success.
      CLEAR : wa_success.
    ENDIF.
    CLEAR : wa_return, wa_value.
    REFRESH : it_return[].
  ENDLOOP.

ENDFORM.                    " SET_UPDATE_ALL_MATERIALS
*&---------------------------------------------------------------------*
*&      Form  CHECK_FOLLOWUP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM check_followup .
  DATA : lv_idx TYPE sy-tabix,
         wa_inputfile1 TYPE ty_inputfile.

  LOOP AT it_marc INTO wa_marc.
    CLEAR : wa_inputfile.
    READ TABLE it_inputfile INTO wa_inputfile WITH KEY mat_nam = wa_marc-nfmat.
    IF sy-subrc IS INITIAL.
      lv_idx = sy-tabix.
      IF wa_inputfile-plant_sp_mat_stat = c_s.
        wa_inputfile1-mat_nam           = wa_marc-matnr.
        wa_inputfile1-plant_sp_mat_stat = wa_inputfile-plant_sp_mat_stat.
        wa_inputfile1-follow_mat        = wa_inputfile-follow_mat.
        wa_inputfile1-eff_date          = wa_inputfile-eff_date.
      ELSE.
        CONTINUE.
      ENDIF.
    ENDIF.
    INSERT wa_inputfile1 INTO it_inputfile INDEX lv_idx.
    CLEAR : wa_marc, lv_idx, wa_inputfile1.
  ENDLOOP.

ENDFORM.                    " CHECK_FOLLOWUP
