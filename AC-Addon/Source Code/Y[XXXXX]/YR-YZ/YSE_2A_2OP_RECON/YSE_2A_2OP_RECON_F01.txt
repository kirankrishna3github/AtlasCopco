*----------------------------------------------------------------------*
***INCLUDE YSE_2A_2OP_RECON_F01 .
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SELECT_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SELECT_DATA .
  PERFORM 2A_2OP_SELECTIONS.
  PERFORM SDI_NOT_SETT.
  PERFORM SEO_NOT_SETT.
ENDFORM.                    " SELECT_DATA
*&---------------------------------------------------------------------*
*&      Form  CALCULATE_OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CALCULATE_OUTPUT .
  PERFORM 2A_2OP_PROCESS.
  PERFORM SDI_NOT_SETT_PRO.
  PERFORM SEO_NOT_SETT_PRO.
ENDFORM.                    " CALCULATE_OUTPUT
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_RESULT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISPLAY_RESULT .
  PERFORM DISPLAY_2A_2OP.
  PERFORM DISPLAY_SDI_UNSETT.
  PERFORM DISPLAY_SEO_UNSETT.
ENDFORM.                    " DISPLAY_RESULT
*&---------------------------------------------------------------------*
*&      Form  ADD_DETAIL
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM ADD_DETAIL .
  GS_2A_DETAIL-BEMOT = LV_BEMOT.
  GS_2A_DETAIL-KSTAR = LV_KSTAR.
  IF GS_2A_DETAIL-BEMOT IN GR_HIER_2A.
    GS_2A_DETAIL-CAT = 'COGS'.
    MOVE LV_APP_VAL TO GS_2A_DETAIL-AMOUNT.
    IF NOT GS_2A_DETAIL-AMOUNT IS INITIAL.
      APPEND GS_2A_DETAIL TO GT_2A_DETAIL.
    ENDIF.
    CLEAR LV_APP_VAL.
  ELSEIF GS_2A_DETAIL-BEMOT IN GR_HIER_0W.
    GS_2A_DETAIL-CAT = 'WARR'.
    MOVE LV_APP_VAL TO GS_2A_DETAIL-AMOUNT.
    IF NOT GS_2A_DETAIL-AMOUNT IS INITIAL.
      APPEND GS_2A_DETAIL TO GT_2A_DETAIL.
    ENDIF.
    CLEAR LV_APP_VAL.
  ELSEIF GS_2A_DETAIL-BEMOT IN GR_HIER_0G.
    GS_2A_DETAIL-CAT = 'GOOD'.
    MOVE LV_APP_VAL TO GS_2A_DETAIL-AMOUNT.
    IF NOT GS_2A_DETAIL-AMOUNT IS INITIAL.
      APPEND GS_2A_DETAIL TO GT_2A_DETAIL.
    ENDIF.
    CLEAR LV_APP_VAL.
  ENDIF.
  CLEAR GS_2A_DETAIL.
  GS_2A_DETAIL-BEMOT = <FS_CE11000>-WW003.
  GS_2A_DETAIL-KSTAR = <FS_CE11000>-KSTAR.
  LV_BEMOT = <FS_CE11000>-WW003.
  LV_KSTAR = <FS_CE11000>-KSTAR.
ENDFORM.                    " ADD_DETAIL
*&---------------------------------------------------------------------*
*&      Form  2A_2OP_SELECTIONS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM 2A_2OP_SELECTIONS .
*Select COPA entries
  SELECT * FROM CE11000 INTO TABLE GT_CE11000
    WHERE PALEDGER = '02'
      AND VRGAR IN GR_VRGAR
      AND BUKRS IN SO_BUKRS
      AND GJAHR IN SO_GJAHR
      AND PERDE IN SO_PERIO
      AND PRCTR IN SO_PRCTR
      AND VERSI = ' '
      AND KOKRS = '1000'
      AND TIMESTMP BETWEEN GV_CE_TIMESTAMP_FROM AND GC_CE_TIMESTAMP_TO.

*  DELETE GT_CE11000 WHERE NOT VRGAR IN GR_VRGAR.
*  DELETE GT_CE11000 WHERE NOT GJAHR IN SO_GJAHR.
*  DELETE GT_CE11000 WHERE NOT PERDE IN SO_PERIO.
*  DELETE GT_CE11000 WHERE NOT PRCTR IN SO_PRCTR.
*  DELETE GT_CE11000 WHERE NOT VERSI = ' '.
*  DELETE GT_CE11000 WHERE NOT PALEDGER = '02'.

*Select PCA entries
  SELECT * FROM GLPCT INTO TABLE GT_GLPCT
    WHERE RLDNR = '8A'  "PCA
*      AND RRCTY IN ('0', '2')
*      AND RVERS = '000'
      AND RYEAR IN SO_GJAHR
      AND RBUKRS IN SO_BUKRS
      AND RPRCTR IN GR_PRCTR
      AND RPRCTR IN SO_PRCTR
      AND KOKRS = '1000'.
ENDFORM.                    " 2A_2OP_SELECTIONS
*&---------------------------------------------------------------------*
*&      Form  2A_2OP_PROCESS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM 2A_2OP_PROCESS .
  FIELD-SYMBOLS: <FS_2OP_VALUE> TYPE HSLXX_PCA.
*1. 2A
  SORT GT_CE11000 BY KSTAR BEMOT.

  LOOP AT GT_CE11000 ASSIGNING <FS_CE11000>.
    CLEAR LV_TMP.
    IF <FS_CE11000>-WW003 IS INITIAL.
      <FS_CE11000>-WW003 = '1E'.
*      CONTINUE.
    ENDIF.
    IF LV_BEMOT IS INITIAL AND LV_KSTAR IS INITIAL. "First run so bemot is empty
      LV_BEMOT = <FS_CE11000>-WW003.
      LV_KSTAR = <FS_CE11000>-KSTAR.
    ELSEIF LV_BEMOT NE <FS_CE11000>-WW003 OR LV_KSTAR NE <FS_CE11000>-KSTAR.
      PERFORM ADD_DETAIL. "Add an item to the details table
    ENDIF.
    LV_TMP = <FS_CE11000>-VV130       "Unadjusted COS
                     + <FS_CE11000>-VV200     "Parts
                     + <FS_CE11000>-VV300     "Labour
                     + <FS_CE11000>-VV400     "Mileage
                     + <FS_CE11000>-VV600     "Ad Hoc Expenses
                     + <FS_CE11000>-VV500     "Subcontracting
                     + <FS_CE11000>-VV112     "COGS-Contract provis
                     + <FS_CE11000>-VV114     "Fix Price Accruals
                     + <FS_CE11000>-VV140     "Commission - extern
             	       + <FS_CE11000>-VV150.    "Commission - interc

    IF <FS_CE11000>-WW003 IN GR_HIER_2A.
      "Unadjusted COGS
      ADD LV_TMP TO GS_RESULT-2A_UNCOGS.
      ADD LV_TMP TO GS_RESULT-TOTAL_2A.
      ADD LV_TMP TO LV_APP_VAL.

    ELSEIF <FS_CE11000>-WW003 IN GR_HIER_0W.
      "Warranty codt/provisions
*      LV_TMP = LV_TMP + <FS_CE11000>-VV130 + <FS_CE11000>-VV710.
      LV_TMP = LV_TMP + <FS_CE11000>-VV710.
      ADD LV_TMP TO GS_RESULT-2A_WARCOS.
      ADD LV_TMP TO GS_RESULT-TOTAL_2A.
      ADD LV_TMP TO LV_APP_VAL.

    ELSEIF <FS_CE11000>-WW003 IN GR_HIER_0G.
      "Goodwill
*      LV_TMP = LV_TMP + <FS_CE11000>-VV130.
      ADD LV_TMP TO GS_RESULT-2A_GOODCOS.
      ADD LV_TMP TO GS_RESULT-TOTAL_2A.
      ADD LV_TMP TO LV_APP_VAL.

    ENDIF.

  ENDLOOP.
  PERFORM ADD_DETAIL_LAST. "Also for the last item processed add it to the detail table.





*2. 2OP
  CONCATENATE 'HSL' SO_PERIO-LOW+1(2) INTO LV_2OP_VALUE.
  SORT GT_GLPCT BY RFAREA RACCT.
  LOOP AT GT_GLPCT ASSIGNING <FS_GLPCT>.
    "First assign the correct period field
    ASSIGN COMPONENT LV_2OP_VALUE OF STRUCTURE <FS_GLPCT> TO <FS_2OP_VALUE>.
    CLEAR GS_2OP_DETAIL.
    GS_2OP_DETAIL-RFAREA = <FS_GLPCT>-RFAREA.
    GS_2OP_DETAIL-RACCT = <FS_GLPCT>-RACCT.
    GS_2OP_DETAIL-AMOUNT = <FS_2OP_VALUE>.

    "Unadjusted COGS
    IF <FS_GLPCT>-RFAREA IN GR_FAREA_UNCOS.
      ADD <FS_2OP_VALUE> TO GS_RESULT-2OP_UNCOGS.
      ADD <FS_2OP_VALUE> TO GS_RESULT-TOTAL_2OP.
      GS_2OP_DETAIL-CAT = 'COGS'.
      COLLECT GS_2OP_DETAIL INTO GT_2OP_DETAIL.
    ENDIF.
    "Warranty costs
    IF <FS_GLPCT>-RFAREA IN GR_FAREA_WARCOS.
      ADD <FS_2OP_VALUE> TO GS_RESULT-2OP_WARCOS.
      ADD <FS_2OP_VALUE> TO GS_RESULT-TOTAL_2OP.
      GS_2OP_DETAIL-CAT = 'WARR'.
      COLLECT GS_2OP_DETAIL INTO GT_2OP_DETAIL.
    ENDIF.
    "Goodwill
    IF <FS_GLPCT>-RFAREA IN GR_FAREA_GWCOS.
      ADD <FS_2OP_VALUE> TO GS_RESULT-2OP_GWCOS.
      ADD <FS_2OP_VALUE> TO GS_RESULT-TOTAL_2OP.
      GS_2OP_DETAIL-CAT = 'GOOD'.
      COLLECT GS_2OP_DETAIL INTO GT_2OP_DETAIL.
    ENDIF.
  ENDLOOP.

*3. 2A detail
*4. 2OP detail
*5. Difference
  GS_RESULT-DIFF_UNCOGS = GS_RESULT-2A_UNCOGS - GS_RESULT-2OP_UNCOGS.
  GS_RESULT-DIFF_WARCOS = GS_RESULT-2A_WARCOS - GS_RESULT-2OP_WARCOS.
  GS_RESULT-DIFF_GWCOS = GS_RESULT-2A_GOODCOS - GS_RESULT-2OP_GWCOS.

*6. Totals
  GS_RESULT-TOTAL_DIFF = GS_RESULT-TOTAL_2A - GS_RESULT-TOTAL_2OP.


ENDFORM.                    " 2A_2OP_PROCESS
*&---------------------------------------------------------------------*
*&      Form  SDI_NOT_SETT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SDI_NOT_SETT .
* from GLPCA
  SELECT * FROM GLPCA
    WHERE RLDNR = '8A'
      AND RRCTY IN ('0', '2')
      AND RVERS = '000'
      AND RBUKRS IN SO_BUKRS
      AND KOKRS = P_KOKRS
      AND RYEAR IN SO_GJAHR
      AND POPER IN SO_PERIO
      AND RACCT IN S_RACCT
      AND RHOART IN S_RHOART
      AND RSCOPE IN S_RSCOPE
      AND BUDAT IN S_BUDAT
      AND HSL <> 0.
    CLEAR IT_SDI_WIP.
    IT_SDI_WIP-RBUKRS = GLPCA-RBUKRS.
    IF NOT GLPCA-KDPOS IS INITIAL.
      WRITE GLPCA-KDAUF TO G_ORDER NO-ZERO.
      WRITE GLPCA-KDPOS TO G_LINE NO-ZERO.
      CONCATENATE G_ORDER G_LINE INTO
      IT_SDI_WIP-ZUONR SEPARATED BY '/'.
      CONDENSE IT_SDI_WIP-ZUONR NO-GAPS.
    ELSE.
      WRITE GLPCA-REFDOCNR TO G_REFDOCNR NO-ZERO.
      CONCATENATE GLPCA-RYEAR '/' G_REFDOCNR INTO IT_SDI_WIP-REFDOCNR.
    ENDIF.
    IT_SDI_WIP-HSL = GLPCA-HSL.
    COLLECT IT_SDI_WIP.
  ENDSELECT.

* data from BSIS

  SELECT * FROM BSIS
       WHERE BUKRS IN SO_BUKRS
         AND HKONT IN S_HKONT
         AND GJAHR IN SO_GJAHR
         AND MONAT IN SO_PERIO
         AND BUDAT IN S_BUDAT
         AND DMBTR <> 0.
    CLEAR IT_SDI_WIP.
    IT_SDI_WIP-RBUKRS = BSIS-BUKRS.
    FIND '/' IN BSIS-ZUONR MATCH OFFSET G_OFF.
    IF SY-SUBRC = '0'.
      G_LEN1 = G_OFF.
      G_OFF2 = G_OFF + 1.
      G_LEN2 = 18 - ( G_OFF + 1 ) .
      WRITE BSIS-ZUONR+0(G_LEN1) TO G_ORDER NO-ZERO.
      WRITE BSIS-ZUONR+G_OFF2(G_LEN2) TO G_LINE NO-ZERO.
      CONCATENATE G_ORDER G_LINE INTO
      IT_SDI_WIP-ZUONR SEPARATED BY '/'.
      CONDENSE IT_SDI_WIP-ZUONR NO-GAPS.
    ELSE.
      WRITE BSIS-BELNR TO G_REFDOCNR NO-ZERO.
      CONCATENATE BSIS-GJAHR '/' G_REFDOCNR INTO IT_SDI_WIP-REFDOCNR.
    ENDIF.
    IF BSIS-SHKZG = 'H'.
      IT_SDI_WIP-DMBTR = BSIS-DMBTR * -1.
    ELSE.
      IT_SDI_WIP-DMBTR = BSIS-DMBTR.
    ENDIF.
    COLLECT IT_SDI_WIP.
  ENDSELECT.

* data from BSAS

  SELECT * FROM BSAS
       WHERE BUKRS IN SO_BUKRS
         AND HKONT IN S_HKONT
         AND GJAHR IN SO_GJAHR
         AND MONAT IN SO_PERIO
         AND BUDAT IN S_BUDAT
         AND DMBTR <> 0.

    CLEAR IT_SDI_WIP.
    IT_SDI_WIP-RBUKRS = BSAS-BUKRS.
    FIND '/' IN BSAS-ZUONR MATCH OFFSET G_OFF.
    IF SY-SUBRC = '0'.
      G_LEN1 = G_OFF.
      G_OFF2 = G_OFF + 1.
      G_LEN2 = 18 - ( G_OFF + 1 ) .
      WRITE BSAS-ZUONR+0(G_LEN1) TO G_ORDER NO-ZERO.
      WRITE BSAS-ZUONR+G_OFF2(G_LEN2) TO G_LINE NO-ZERO.
      CONCATENATE G_ORDER G_LINE INTO
      IT_SDI_WIP-ZUONR SEPARATED BY '/'.
      CONDENSE IT_SDI_WIP-ZUONR NO-GAPS.
    ELSE.
      WRITE BSAS-BELNR TO G_REFDOCNR NO-ZERO.
      CONCATENATE BSAS-GJAHR '/' G_REFDOCNR INTO IT_SDI_WIP-REFDOCNR.
    ENDIF.
    IF BSAS-SHKZG = 'H'.
      IT_SDI_WIP-DMBTR = BSAS-DMBTR * -1.
    ELSE.
      IT_SDI_WIP-DMBTR = BSAS-DMBTR.
    ENDIF.
    COLLECT IT_SDI_WIP.
  ENDSELECT.

ENDFORM.                    " SDI_NOT_SETT
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_2A_2OP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISPLAY_2A_2OP .
  DATA: LV_CAT(4) TYPE C,
          LV_RFAREA TYPE FKBER,
          LV_ACTIV  TYPE ACTI1,
          COL TYPE I VALUE 0.

  FIELD-SYMBOLS: <FS_2A_DETAIL_CAT> TYPE GTY_2A_DETAIL,
                 <FS_2A_DETAIL_VRGAR> TYPE GTY_2A_DETAIL,
                 <FS_2A_DETAIL_BEMOT> TYPE GTY_2A_DETAIL,
                 <FS_2A_DETAIL_KSTAR> TYPE GTY_2A_DETAIL,
                 <FS_2OP_DETAIL_CAT> TYPE GTY_2OP_DETAIL,
                 <FS_2OP_DETAIL_RFAREA> TYPE GTY_2OP_DETAIL,
                 <FS_2OP_DETAIL_ACTIV> TYPE GTY_2OP_DETAIL,
                 <FS_2OP_DETAIL_RACCT> TYPE GTY_2OP_DETAIL.

  FORMAT COLOR COL_TOTAL.
*Begin with a header

  ULINE /(96).
  FORMAT COLOR COL_TOTAL INTENSIFIED OFF.
  WRITE : / '|','Company Code: ', SO_BUKRS-LOW, 96 '|'.
  WRITE: / '|','Fiscal year : ', SO_GJAHR-LOW, 96 '|'.
  WRITE: / '|','Period      : ', SO_PERIO-LOW, 96 '|'.
  NEW-LINE.

*Header of columns

  WRITE: / '|', 42 '2A', 60 '2OP', 76 'Difference', 96 '|'.
  WRITE: / '|', 96 '|'.


*Start listing the results
  WRITE: / '|', '2A "Unadj COGS"/2OP "206 COGS"',  38 GS_RESULT-2A_UNCOGS LEFT-JUSTIFIED, 56 GS_RESULT-2OP_UNCOGS LEFT-JUSTIFIED.
  IF GS_RESULT-DIFF_UNCOGS <> 0.
    WRITE: 76 GS_RESULT-DIFF_UNCOGS LEFT-JUSTIFIED COLOR COL_NEGATIVE, 96 '|' .
  ELSE.
    WRITE: 76 GS_RESULT-DIFF_UNCOGS LEFT-JUSTIFIED , 96 '|' .
  ENDIF.
  WRITE: / '|', '2A "Warr Cost/Prov"/2OP "20811"'       ,  38 GS_RESULT-2A_WARCOS LEFT-JUSTIFIED, 56 GS_RESULT-2OP_WARCOS LEFT-JUSTIFIED.
  IF GS_RESULT-DIFF_WARCOS <> 0.
    WRITE: 76 GS_RESULT-DIFF_WARCOS LEFT-JUSTIFIED COLOR COL_NEGATIVE, 96 '|' .
  ELSE.
    WRITE: 76 GS_RESULT-DIFF_WARCOS LEFT-JUSTIFIED COLOR COL_POSITIVE, 96 '|' .
  ENDIF.
  WRITE: / '|', '2A "Goodwill"/2OP "20812"'       ,  38 GS_RESULT-2A_GOODCOS LEFT-JUSTIFIED, 56 GS_RESULT-2OP_GWCOS LEFT-JUSTIFIED.
  IF GS_RESULT-DIFF_GWCOS <> 0.
    WRITE: 76 GS_RESULT-DIFF_GWCOS LEFT-JUSTIFIED COLOR COL_NEGATIVE, 96 '|' .
  ELSE.
    WRITE: 76 GS_RESULT-DIFF_GWCOS LEFT-JUSTIFIED COLOR COL_POSITIVE, 96 '|' .
  ENDIF.
  WRITE: / '|', 'Total: '       ,  38 GS_RESULT-TOTAL_2A LEFT-JUSTIFIED, 56 GS_RESULT-TOTAL_2OP LEFT-JUSTIFIED.
  IF GS_RESULT-TOTAL_DIFF <> 0.
    WRITE: 76 GS_RESULT-TOTAL_DIFF LEFT-JUSTIFIED COLOR COL_NEGATIVE, 96 '|' .
  ELSE.
    WRITE: 76 GS_RESULT-TOTAL_DIFF LEFT-JUSTIFIED COLOR COL_POSITIVE, 96 '|' .
  ENDIF.
  ULINE /(96).
  SKIP 3.

*Start details 2A/2OP

  SORT GT_2A_DETAIL BY CAT KSTAR BEMOT.
  SORT GT_2OP_DETAIL BY CAT RACCT RFAREA.

  DO 3 TIMES.
    ULINE /(96).
    CASE SY-INDEX.
      WHEN 1.
        LV_CAT = 'COGS'.
        COL = 5.
      WHEN 2.
        LV_CAT = 'WARR'.
        COL = 6.
      WHEN 3.
        LV_CAT = 'GOOD'.
        COL = 7.
      WHEN OTHERS.
    ENDCASE.


    FORMAT COLOR = COL INTENSIFIED ON.
    WRITE: / '| 2A details', 96 '|'.
    FORMAT COLOR = COL INTENSIFIED OFF.
    WRITE: / '|', 96 '|'.
    CASE LV_CAT.
      WHEN 'COGS'.
        WRITE: / '| 2A "Unadjusted COGS"',56 GS_RESULT-2A_UNCOGS LEFT-JUSTIFIED, 96 '|'.
      WHEN 'WARR'.
        WRITE: / '| 2A "Warr Cost/Prov"',56 GS_RESULT-2A_WARCOS LEFT-JUSTIFIED, 96 '|'.
      WHEN 'GOOD'.
        WRITE: / '| 2A "Goodwill"',56 GS_RESULT-2A_GOODCOS LEFT-JUSTIFIED, 96 '|'.
    ENDCASE.
    WRITE: / '|', 96 '|'.
    WRITE: / '|', 'Account', 13 'Acc Ind', 96 '|'.
*    WRITE: / '|', 96 '|'.
    LOOP AT GT_2A_DETAIL ASSIGNING <FS_2A_DETAIL_KSTAR>
      WHERE CAT EQ LV_CAT.
      AT NEW KSTAR.

        LOOP AT GT_2A_DETAIL ASSIGNING <FS_2A_DETAIL_BEMOT>
          WHERE CAT EQ LV_CAT
            AND KSTAR EQ <FS_2A_DETAIL_KSTAR>-KSTAR.
          ADD <FS_2A_DETAIL_BEMOT>-AMOUNT TO LV_BEMOT_TOTAL.
          ADD <FS_2A_DETAIL_BEMOT>-AMOUNT TO LV_KSTAR_TOTAL.
          AT END OF BEMOT.
            WRITE: / '|', <FS_2A_DETAIL_BEMOT>-KSTAR, <FS_2A_DETAIL_BEMOT>-BEMOT, 56 LV_BEMOT_TOTAL LEFT-JUSTIFIED, 96 '|'.
            CLEAR LV_BEMOT_TOTAL.
          ENDAT.
        ENDLOOP.
      ENDAT.
      AT END OF KSTAR.
        WRITE: / '|', 96 '|'.
        WRITE: / '|', 'TOTAL PER ACCOUNT' COLOR COL_TOTAL,56 LV_KSTAR_TOTAL COLOR COL_TOTAL, 96 '|'.
        WRITE: / '|', 96 '|'.
        CLEAR LV_KSTAR_TOTAL.
      ENDAT.
    ENDLOOP.
    WRITE: / '|', 96 '|'.
*    ENDLOOP.
    "Now the 2OP part

    FORMAT COLOR = COL INTENSIFIED ON.
    WRITE: / '| 2OP details', 96 '|'.
    FORMAT COLOR = COL INTENSIFIED OFF.
    WRITE: / '|', 96 '|'.
    CASE LV_CAT.
      WHEN 'COGS'.
        WRITE: / '| 2OP "206 COGS"=FA 2061,2062,2063,2064',56 GS_RESULT-2OP_UNCOGS LEFT-JUSTIFIED, 96 '|'.
      WHEN 'WARR'.
        WRITE: / '| 2OP "20811 Warr Costs"=FA 208111,208112,208113',56 GS_RESULT-2OP_WARCOS LEFT-JUSTIFIED, 96 '|'.
      WHEN 'GOOD'.
        WRITE: / '| 2OP "20812 Goodwill"=FA 20812', 56 GS_RESULT-2OP_GWCOS LEFT-JUSTIFIED,96 '|'.
    ENDCASE.
    WRITE: / '|', 96 '|'.
    WRITE: / '|', 'Account', 13 'Funct Area', 96 '|'.
    WRITE: / '|', 96 '|'.
    LOOP AT GT_2OP_DETAIL ASSIGNING <FS_2OP_DETAIL_RACCT>
      WHERE AMOUNT <> 0
        AND CAT = LV_CAT.
      WRITE: / '|', <FS_2OP_DETAIL_RACCT>-RACCT, <FS_2OP_DETAIL_RACCT>-RFAREA, 56 <FS_2OP_DETAIL_RACCT>-AMOUNT LEFT-JUSTIFIED, 96 '|'.
      ADD <FS_2OP_DETAIL_RACCT>-AMOUNT TO LV_RACCT_TOTAL.
      AT END OF RACCT.
        WRITE: / '|', 96 '|'.
        WRITE: / '|', 'TOTAL PER ACCOUNT' COLOR COL_TOTAL,56 LV_RACCT_TOTAL COLOR COL_TOTAL, 96 '|'.
        WRITE: / '|', 96 '|'.
        CLEAR LV_RACCT_TOTAL.
      ENDAT.
    ENDLOOP.
    ULINE /(96).
    SKIP 3.
  ENDDO.

ENDFORM.                    " DISPLAY_2A_2OP
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SDI_UNSETT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISPLAY_SDI_UNSETT .
  DATA: LV_TOTAL TYPE DMBTR.
  FORMAT COLOR = 1 INTENSIFIED ON.
  SKIP 3.
  ULINE /(50).
  WRITE: / '|', 20 'Unsettled SDI s.'(005), 50 '|'.
  ULINE /(50).
  FORMAT COLOR = 1 INTENSIFIED OFF.
  IF IT_SDI_WIP[] IS INITIAL.
    WRITE: / '|'  , 50 '|'.
    WRITE: / '|', 'No unsettled SDI s selected.'(I02), 50 '|'.
  ELSE.
    LOOP AT IT_SDI_WIP ASSIGNING <FS_SDI_WIP> WHERE NOT ZUONR IS INITIAL.
      WRITE: / '|', <FS_SDI_WIP>-ZUONR, <FS_SDI_WIP>-DIFF, 50 '|'.
      ADD <FS_SDI_WIP>-DIFF TO LV_TOTAL.
    ENDLOOP.
  ENDIF.
  FORMAT COLOR = 1 INTENSIFIED ON.
  WRITE: / '|', 'Total', 30 LV_TOTAL, 50 '|'.
  ULINE /(50).
ENDFORM.                    " DISPLAY_SDI_UNSETT
*&---------------------------------------------------------------------*
*&      Form  SDI_NOT_SETT_PRO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SDI_NOT_SETT_PRO .
* calculate differences
  LOOP AT IT_SDI_WIP.
    IF IT_SDI_WIP-HSL = 0 AND IT_SDI_WIP-DMBTR = 0.
      DELETE IT_SDI_WIP.
    ELSE.
      IT_SDI_WIP-DIFF = IT_SDI_WIP-HSL - IT_SDI_WIP-DMBTR.
      MODIFY IT_SDI_WIP.
    ENDIF.
  ENDLOOP.

* sort
  SORT IT_SDI_WIP BY ZUONR REFDOCNR.
* totals
  CLEAR : G_DMBTR ,
          G_HSL ,
          G_DIFF.
  LOOP AT IT_SDI_WIP.
    G_DMBTR = G_DMBTR + IT_SDI_WIP-DMBTR.
    G_HSL = G_HSL + IT_SDI_WIP-HSL.
    G_DIFF = G_DIFF + IT_SDI_WIP-DIFF.
  ENDLOOP.

  CLEAR IT_SDI_WIP.
  IT_SDI_WIP-REFDOCNR = 'TOTAL'.
  IT_SDI_WIP-DMBTR = G_DMBTR.
  IT_SDI_WIP-HSL = G_HSL.
  IT_SDI_WIP-DIFF = G_DIFF.
  APPEND IT_SDI_WIP.

* display only differences ?

  LOOP AT IT_SDI_WIP.
    IF NOT IT_SDI_WIP-REFDOCNR = 'TOTAL'.
      IF IT_SDI_WIP-DIFF = 0.
        DELETE IT_SDI_WIP.
      ENDIF.
    ENDIF.
  ENDLOOP.

ENDFORM.                    " SDI_NOT_SETT_PRO
*&---------------------------------------------------------------------*
*&      Form  SEO_NOT_SETT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SEO_NOT_SETT .
  SELECT AUFNR HSL FROM GLPCA
    INTO TABLE GT_GLPCA
    WHERE RLDNR = '8A'
      AND RYEAR IN SO_GJAHR
      AND RBUKRS IN SO_BUKRS
      AND RPRCTR IN GR_PRCTR
      AND KOKRS = '1000'
      AND POPER IN SO_PERIO
      AND AUFNR <> ' '.

ENDFORM.                    " SEO_NOT_SETT
*&---------------------------------------------------------------------*
*&      Form  INIT_VRGAR
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM INIT_VRGAR .
*Record types
  GR_VRGAR-SIGN = 'I'.
  GR_VRGAR-OPTION = 'EQ'.

  GR_VRGAR-LOW = '0'.
  APPEND GR_VRGAR.

  GR_VRGAR-LOW = 'B'.
  APPEND GR_VRGAR.

  GR_VRGAR-LOW = 'C'.
  APPEND GR_VRGAR.

  GR_VRGAR-LOW = 'D'.
  APPEND GR_VRGAR.

  GR_VRGAR-LOW = 'F'.
  APPEND GR_VRGAR.

  GR_VRGAR-LOW = '3'.
  APPEND GR_VRGAR.
ENDFORM.                    " INIT_VRGAR
*&---------------------------------------------------------------------*
*&      Form  INIT_ACC_IND
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM INIT_ACC_IND .
*Accounting indicators for the 2a side
  SELECT * FROM TKCHW INTO TABLE GT_Z2A
    WHERE APPLC = 'KE'
      AND SUBCL = SPACE
      AND ID1   = 'RKEG_WW003'
      AND ID2   = 'Z2A'.

*2A
  GR_HIER_2A-SIGN = 'I'.
  GR_HIER_2A-OPTION = 'EQ'.
  LOOP AT GT_Z2A ASSIGNING <FS_Z2A> WHERE PARNT = 3.
    GR_HIER_2A-LOW = <FS_Z2A>-WERT1.
    APPEND GR_HIER_2A.
  ENDLOOP.

*0G
  GR_HIER_0G-SIGN = 'I'.
  GR_HIER_0G-OPTION = 'EQ'.
  LOOP AT GT_Z2A ASSIGNING <FS_Z2A> WHERE PARNT = 32.
    GR_HIER_0G-LOW = <FS_Z2A>-WERT1.
    APPEND GR_HIER_0G.
  ENDLOOP.

*0W
  GR_HIER_0W-SIGN = 'I'.
  GR_HIER_0W-OPTION = 'EQ'.
  LOOP AT GT_Z2A ASSIGNING <FS_Z2A> WHERE PARNT = 33.
    GR_HIER_0W-LOW = <FS_Z2A>-WERT1.
    APPEND GR_HIER_0W.
  ENDLOOP.
ENDFORM.                    " INIT_ACC_IND
*&---------------------------------------------------------------------*
*&      Form  INIT_PRCTRS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM INIT_PRCTRS .
*Profit centers
  GR_PRCTR-SIGN = 'I'.
  GR_PRCTR-OPTION = 'BT'.

  GR_PRCTR-LOW = '0000000001'.
  GR_PRCTR-HIGH = '0000001909'.
  APPEND GR_PRCTR.

  GR_PRCTR-LOW = '0000001911'.
  GR_PRCTR-HIGH = '0000002909'.
  APPEND GR_PRCTR.

  GR_PRCTR-LOW = '0000002911'.
  GR_PRCTR-HIGH = '0000003909'.
  APPEND GR_PRCTR.

  GR_PRCTR-LOW = '0000003911'.
  GR_PRCTR-HIGH = '0000004909'.
  APPEND GR_PRCTR.

  GR_PRCTR-LOW = '0000004911'.
  GR_PRCTR-HIGH = '0000005909'.
  APPEND GR_PRCTR.

  GR_PRCTR-LOW = '0000005911'.
  GR_PRCTR-HIGH = '0000006909'.
  APPEND GR_PRCTR.

  GR_PRCTR-LOW = '0000006911'.
  GR_PRCTR-HIGH = '0000007909'.
  APPEND GR_PRCTR.

  GR_PRCTR-LOW = '0000007911'.
  GR_PRCTR-HIGH = '0000008909'.
  APPEND GR_PRCTR.

  GR_PRCTR-LOW = '0000008911'.
  GR_PRCTR-HIGH = '0000009909'.
  APPEND GR_PRCTR.

  GR_PRCTR-LOW = '0000009911'.
  GR_PRCTR-HIGH = '0000009999'.
  APPEND GR_PRCTR.

ENDFORM.                    " INIT_PRCTRS
*&---------------------------------------------------------------------*
*&      Form  INIT_FKBER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM INIT_FKBER .
*Functional area's for the 2OP side
*Unassigned COGS
  GR_FAREA_UNCOS-SIGN = 'I'.
  GR_FAREA_UNCOS-OPTION = 'EQ'.

  GR_FAREA_UNCOS-LOW = '2061'.
  APPEND GR_FAREA_UNCOS.

  GR_FAREA_UNCOS-LOW = '2062'.
  APPEND GR_FAREA_UNCOS.

  GR_FAREA_UNCOS-LOW = '2063'.
  APPEND GR_FAREA_UNCOS.

  GR_FAREA_UNCOS-LOW = '2064'.
  APPEND GR_FAREA_UNCOS.

*Warranty
  GR_FAREA_WARCOS-SIGN = 'I'.
  GR_FAREA_WARCOS-OPTION = 'EQ'.

  GR_FAREA_WARCOS-LOW = '208111'.
  APPEND GR_FAREA_WARCOS.

  GR_FAREA_WARCOS-LOW = '208112'.
  APPEND GR_FAREA_WARCOS.

  GR_FAREA_WARCOS-LOW = '208113'.
  APPEND GR_FAREA_WARCOS.

*Goodwill
  GR_FAREA_GWCOS-SIGN = 'I'.
  GR_FAREA_GWCOS-OPTION = 'EQ'.
  GR_FAREA_GWCOS-LOW = '20812'.
  APPEND GR_FAREA_GWCOS.

ENDFORM.                    " INIT_FKBER
*&---------------------------------------------------------------------*
*&      Form  SEO_NOT_SETT_PRO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SEO_NOT_SETT_PRO .
  DATA: LT_TMP TYPE GTTY_GLPCA.

  LT_TMP[] = GT_GLPCA[].
  CLEAR GT_GLPCA[].

  LOOP AT LT_TMP ASSIGNING <FS_GLPCA>.
    COLLECT <FS_GLPCA> INTO GT_GLPCA.
  ENDLOOP.

  DELETE GT_GLPCA WHERE HSL = 0.


ENDFORM.                    " SEO_NOT_SETT_PRO
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_SEO_UNSETT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISPLAY_SEO_UNSETT .
  DATA: LV_TOTAL TYPE DMBTR.
  FORMAT COLOR = 1 INTENSIFIED ON.
  SKIP 3.
  ULINE /(50).
  WRITE: / '|', 20 'Unsettled SEO s.'(007), 50 '|'.
  ULINE /(50).
  FORMAT COLOR = 1 INTENSIFIED OFF.
  IF IT_SDI_WIP[] IS INITIAL.
    WRITE: / '|'  , 50 '|'.
    WRITE: / '|', 'No unsettled SEO s selected.'(I03), 50 '|'.
  ELSE.
    LOOP AT GT_GLPCA ASSIGNING <FS_GLPCA>.
      WRITE: / '|', <FS_GLPCA>-AUFNR, <FS_GLPCA>-HSL, 50 '|'.
      ADD <FS_GLPCA>-HSL TO LV_TOTAL.
    ENDLOOP.
  ENDIF.
  FORMAT COLOR = 1 INTENSIFIED ON.
  WRITE: / '|', 'Total', 30 LV_TOTAL, 50 '|'.
  ULINE /(50).

ENDFORM.                    " DISPLAY_SEO_UNSETT
*&---------------------------------------------------------------------*
*&      Form  CALC_TIME_STAMP
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM CALC_TIME_STAMP .

  DATA:
     LV_PERIV     LIKE T001-PERIV,
     LV_CE_SEL_DATE TYPE SYDATUM.

  CONSTANTS:
     LC_TIME TYPE SYUZEIT VALUE '000001'.

  "First get the fiscal year variant
  SELECT SINGLE PERIV
        INTO LV_PERIV
        FROM T001
       WHERE BUKRS = SO_BUKRS-LOW.

  "Next get the first day of the period in the selection
  CALL FUNCTION 'FIRST_DAY_IN_PERIOD_GET'
    EXPORTING
      I_GJAHR = SO_GJAHR-LOW
      I_PERIV = LV_PERIV
      I_POPER = SO_PERIO-LOW
    IMPORTING
      E_DATE  = LV_CE_SEL_DATE.

  "Now also subtract the 20 days grace period
  LV_CE_SEL_DATE = LV_CE_SEL_DATE - 30.

  "Now calculate the timestamp

  CALL FUNCTION 'RKE_TIMESTAMP_CONVERT_INPUT'
    EXPORTING
      I_DATE     = LV_CE_SEL_DATE
      I_DAYST    = 'X'
      I_TIME     = LC_TIME
      I_TZONE    = SY-TZONE
    IMPORTING
      E_TIMESTMP = GV_CE_TIMESTAMP_FROM.

ENDFORM.                    " CALC_TIME_STAMP
*&---------------------------------------------------------------------*
*&      Form  ADD_DETAIL_LAST
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM ADD_DETAIL_LAST .
  GS_2A_DETAIL-BEMOT = LV_BEMOT.
  GS_2A_DETAIL-KSTAR = LV_KSTAR.
  IF GS_2A_DETAIL-BEMOT IN GR_HIER_2A.
    GS_2A_DETAIL-CAT = 'COGS'.
    MOVE LV_APP_VAL TO GS_2A_DETAIL-AMOUNT.
    IF NOT GS_2A_DETAIL-AMOUNT IS INITIAL.
      APPEND GS_2A_DETAIL TO GT_2A_DETAIL.
    ENDIF.
    CLEAR LV_APP_VAL.
  ELSEIF GS_2A_DETAIL-BEMOT IN GR_HIER_0W.
    GS_2A_DETAIL-CAT = 'WARR'.
    MOVE LV_APP_VAL TO GS_2A_DETAIL-AMOUNT.
    IF NOT GS_2A_DETAIL-AMOUNT IS INITIAL.
      APPEND GS_2A_DETAIL TO GT_2A_DETAIL.
    ENDIF.
    CLEAR LV_APP_VAL.
  ELSEIF GS_2A_DETAIL-BEMOT IN GR_HIER_0G.
    GS_2A_DETAIL-CAT = 'GOOD'.
    MOVE LV_APP_VAL TO GS_2A_DETAIL-AMOUNT.
    IF NOT GS_2A_DETAIL-AMOUNT IS INITIAL.
      APPEND GS_2A_DETAIL TO GT_2A_DETAIL.
    ENDIF.
    CLEAR LV_APP_VAL.
  ENDIF.
  CLEAR GS_2A_DETAIL.

ENDFORM.                    " ADD_DETAIL_LAST
