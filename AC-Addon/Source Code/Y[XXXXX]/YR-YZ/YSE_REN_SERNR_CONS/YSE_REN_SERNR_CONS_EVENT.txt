*&---------------------------------------------------------------------*
*&  Include           YSE_REN_SERNR_CONS_EVENT                         *
*&---------------------------------------------------------------------*

* *******************************************************
* Initialization (set default values on selection screen)
* *******************************************************
INITIALIZATION.

  DATA: lv_now     LIKE sy-datum,
        lv_date    LIKE sy-datum,
        lv_mont(2) TYPE c,
        lv_year(4) TYPE c.

* Set initial dates for "Contract start date"
* *******************************************
* Take current date in a local variable.
  lv_now = sy-datum.
* Put the first of the current month in the "Start date"
  CONCATENATE lv_now(6) '01' INTO lv_date.
  p_fbgdat = lv_date.
* Take out the current month
  lv_mont = lv_now+4(2).
* If it's the last month of the year, go to the first month of next year
  IF lv_mont = 12.
    lv_mont = 1.
    lv_year = lv_now(4).
    lv_year = lv_year + 1.
* Else, just go to the next month of this year
  ELSE.
    lv_year = lv_now(4).
    lv_mont = lv_mont + 1.
  ENDIF.
* Padd the month with a zero at the front if required
  IF lv_mont < 10.
    CONCATENATE '0' lv_mont INTO lv_mont.
  ENDIF.
*Compose a date which is the first of the month following the current
*(be it next year or not)
  CONCATENATE lv_year lv_mont '01' INTO lv_date.
*Subtract 1 of the date calculated, and you now have the end of the
*current month
  lv_date = lv_date - 1.
* Put the end of the current month in the "end date"
  p_tbgdat = lv_date.

* Set contract types to be considered
* ***********************************
  so_auart-sign   = 'I'.
  so_auart-option = 'EQ'.
  so_auart-low    = 'ZQP'.
  APPEND so_auart.
  so_auart-low    = 'ZQP1'.
  APPEND so_auart.
  so_auart-low    = 'ZQP2'.
  APPEND so_auart.
  so_auart-low    = 'ZRIB'.
  APPEND so_auart.
  so_auart-low    = 'ZRE'.
  APPEND so_auart.


* Set item categories to be considered
* ************************************
  so_pstyv-sign   = 'I'.
  so_pstyv-option = 'EQ'.
  so_pstyv-low    = 'ZMVN'.
  APPEND so_pstyv.
  so_pstyv-low    = 'ZMIL'.
  APPEND so_pstyv.
  so_pstyv-low    = 'ZTOR'.
  APPEND so_pstyv.
  so_pstyv-low    = 'ZRVN'.
  APPEND so_pstyv.


* Set delivery types to be considered
* ***********************************
  so_lfart-sign   = 'I'.
  so_lfart-option = 'EQ'.
  so_lfart-low    = 'ZLF'.
  APPEND so_lfart.
  so_lfart-low    = 'LR'.
  APPEND so_lfart.


* *******************************************************
* At selection screen
* *******************************************************
AT SELECTION-SCREEN ON p_tbgdat.
  IF NOT p_tbgdat IS INITIAL AND NOT p_fbgdat IS INITIAL AND p_fbgdat >
  p_tbgdat.
    MESSAGE e047.
  ENDIF.

AT SELECTION-SCREEN ON p_fbgdat.
  IF NOT p_tbgdat IS INITIAL AND NOT p_fbgdat IS INITIAL AND p_fbgdat >
  p_tbgdat.
    MESSAGE e047.
  ENDIF.

AT SELECTION-SCREEN ON p_teddat.
  IF NOT p_teddat IS INITIAL AND NOT p_feddat IS INITIAL AND p_feddat >
  p_teddat.
    MESSAGE e047.
  ENDIF.

AT SELECTION-SCREEN ON p_feddat.
  IF NOT p_teddat IS INITIAL AND NOT p_feddat IS INITIAL AND p_feddat >
  p_teddat.
    MESSAGE e047.
  ENDIF.


AT SELECTION-SCREEN.

  PERFORM check_authorization.


  IF p_teddat IS INITIAL AND p_feddat IS INITIAL AND  p_tbgdat IS
  INITIAL AND p_fbgdat IS INITIAL.
    MESSAGE e060.
  ENDIF.

* *******************************************************
* Start of selection
* *******************************************************
START-OF-SELECTION.

*If enddates are not set, default them to the maximum so that select on
*dates works
  IF p_tbgdat EQ '00000000'.
    p_tbgdat = '99993112'.
  ENDIF.
  IF p_teddat EQ '00000000'.
    p_teddat = '99993112'.
  ENDIF.

* Select all contracts in scope
  SELECT veda~vbegdat
         veda~venddat
         vbak~auart
         vbak~vbeln
         vbak~vkorg
         vbak~vtweg
         vbak~spart
         INTO TABLE it_vbak
         FROM vbak
         JOIN veda
           ON veda~vbeln = vbak~vbeln
        WHERE vbak~vkorg EQ p_vkorg
          AND vbak~vtweg EQ p_vtweg
          AND vbak~spart EQ p_spart
          AND vbak~auart IN so_auart
          AND vbak~vbeln IN so_vbeln
          AND veda~vposn = '000000'
          AND veda~vbegdat GE p_fbgdat AND veda~vbegdat LE p_tbgdat
          AND veda~venddat GE p_feddat AND veda~venddat LE p_teddat.

** Begin INS IVB 09/07/2007
  SELECT  erdat auart vbeln vkorg vtweg spart
          APPENDING CORRESPONDING FIELDS OF TABLE it_vbak
          FROM vbak
         WHERE vkorg EQ p_vkorg
           AND vtweg EQ p_vtweg
           AND spart EQ p_spart
           AND auart IN so_auart
           AND vbeln IN so_vbeln
           AND erdat IN so_erdat.

  DELETE ADJACENT DUPLICATES FROM it_vbak COMPARING vbeln.

** End INS IVB 09/07/2007


* If no result, go to result screen (empty) without selecting other data
*  IF sy-subrc EQ 0.
  IF NOT it_vbak[] IS INITIAL.

*   Select corresponding contract items
    SELECT vbeln
           posnr
           matnr
           arktx
           zzsernr
           pstyv
      INTO TABLE it_vbap
      FROM vbap
       FOR ALL ENTRIES IN it_vbak
     WHERE vbeln = it_vbak-vbeln
       AND posnr IN so_posnr
       AND pstyv IN so_pstyv.

*   Find follow up deliveries for the selected items
    SELECT vbelv
           posnv
           vbeln
           posnn
           vbtyp_n
      INTO TABLE it_vbfa
      FROM vbfa
       FOR ALL ENTRIES IN it_vbap
     WHERE vbelv = it_vbap-vbeln
       AND posnv = it_vbap-posnr
       AND vbtyp_n = 'J'
       AND vbtyp_v = 'C'.

    SELECT vbelv
           posnv
           vbeln
           posnn
           vbtyp_n
      APPENDING TABLE it_vbfa
      FROM vbfa
       FOR ALL ENTRIES IN it_vbap
     WHERE vbelv = it_vbap-vbeln
       AND posnv = it_vbap-posnr
       AND vbtyp_n = 'T'
       AND vbtyp_v = 'H'.


*   Select the delivery headers
    SELECT lfart
           vbeln
      INTO TABLE it_likp
      FROM likp
       FOR ALL ENTRIES IN it_vbfa
     WHERE vbeln = it_vbfa-vbeln
  " Document number should be in the document flow of selected contracts
       AND vbeln IN so_dbeln
       " ¨¢nd in the list of delivery numbers provided on selection screen
       AND lfart IN so_lfart.

*   Select the delivery items with their serial number
    SELECT vbeln
           posnr
           zzsernr
      INTO TABLE it_lips
      FROM lips
       FOR ALL ENTRIES IN it_likp
     WHERE vbeln = it_likp-vbeln.

*   Start looping through the contract items
    LOOP AT it_vbap.

*     Clear working area
      CLEAR it_sernr.

*     Read document flow
      READ TABLE it_vbfa WITH KEY vbelv = it_vbap-vbeln
                                  posnv = it_vbap-posnr.
      IF sy-subrc NE 0.
        CONTINUE.
      ENDIF.

*     Read delivery item
      READ TABLE it_lips WITH KEY vbeln = it_vbfa-vbeln
                                  posnr = it_vbfa-posnn.
      IF sy-subrc NE 0.
        CONTINUE.
      ENDIF.

*     Read delivery header
      READ TABLE it_likp WITH KEY vbeln = it_vbfa-vbeln.
      IF sy-subrc NE 0.
        CONTINUE.
      ENDIF.

*     Read contract header for contract dates
      IF it_vbak-vbeln NE it_vbap-vbeln.
        READ TABLE it_vbak WITH KEY vbeln = it_vbap-vbeln.
      ENDIF.
      it_sernr-vbegdat = it_vbak-vbegdat.
      it_sernr-venddat = it_vbak-venddat.
      it_sernr-erdat   = it_vbak-erdat.
      it_sernr-auart   = it_vbak-auart.
      it_sernr-cvbeln  = it_vbap-vbeln.
      it_sernr-cposnr  = it_vbap-posnr.
      it_sernr-matnr   = it_vbap-matnr.
      it_sernr-maktx   = it_vbap-arktx.
      it_sernr-csernr  = it_vbap-zzsernr.
      it_sernr-cpstyv  = it_vbap-pstyv.
      it_sernr-lfart   = it_likp-lfart.
      it_sernr-dvbeln  = it_lips-vbeln.
      it_sernr-dposnr  = it_lips-posnr.
      it_sernr-dsernr  = it_lips-zzsernr.
      it_sernr-vkorg   = it_vbak-vkorg.
      it_sernr-vtweg   = it_vbak-vtweg.
      it_sernr-spart   = it_vbak-spart.

      IF it_sernr-dsernr NE it_sernr-csernr OR it_sernr-csernr IS INITIAL.
        it_sernr-trlght = '@0A@'.
      ELSE.
        it_sernr-trlght = '@08@'.
      ENDIF.

*     Append completed sernr line
      APPEND it_sernr.

    ENDLOOP.

  ENDIF.

  CALL SCREEN 0100.
