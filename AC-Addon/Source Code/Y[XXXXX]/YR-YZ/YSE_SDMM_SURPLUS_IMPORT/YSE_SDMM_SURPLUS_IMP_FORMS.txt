*&---------------------------------------------------------------------*
*&  Include           YSE_SDMM_SURPLUS_IMP_FORMS                       *
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  READ_FILE
*&---------------------------------------------------------------------*
FORM READ_FILE .

  LV_FNAME_STR = P_FNAME.

* Read the file from the frontend
  CALL METHOD CL_GUI_FRONTEND_SERVICES=>GUI_UPLOAD
    EXPORTING
      FILENAME                = LV_FNAME_STR
      FILETYPE                = 'ASC'
      HAS_FIELD_SEPARATOR     = 'X'
    CHANGING
      DATA_TAB                = IT_FILECT
    EXCEPTIONS
      FILE_OPEN_ERROR         = 1
      FILE_READ_ERROR         = 2
      NO_BATCH                = 3
      GUI_REFUSE_FILETRANSFER = 4
      INVALID_TYPE            = 5
      NO_AUTHORITY            = 6
      UNKNOWN_ERROR           = 7
      BAD_DATA_FORMAT         = 8
      HEADER_NOT_ALLOWED      = 9
      SEPARATOR_NOT_ALLOWED   = 10
      HEADER_TOO_LONG         = 11
      UNKNOWN_DP_ERROR        = 12
      ACCESS_DENIED           = 13
      DP_OUT_OF_MEMORY        = 14
      DISK_FULL               = 15
      DP_TIMEOUT              = 16
      NOT_SUPPORTED_BY_GUI    = 17
      ERROR_NO_GUI            = 18
      OTHERS                  = 19.

  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
               WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

* Delete first row from file if user indicated that a header line is
* included
  IF P_HEADER = 'X'.
    DELETE IT_FILECT INDEX 1.
  ENDIF.

* Convert data if required
*  IF R_POINT = 'X' AND USR01-DCPFM <> 'X'.
*    PERFORM CONVERT_INTO_COMMA.
*  ELSEIF R_COMMA = 'X' AND USR01-DCPFM = 'X'.
*    PERFORM CONVERT_INTO_POINT.
*  ENDIF.
  IF R_COMMA = 'X'.
    PERFORM CONVERT_INTO_POINT.
  ENDIF.

ENDFORM.                    " READ_FILE

*&---------------------------------------------------------------------*
*&      Form  PROCESS_FILE
*&---------------------------------------------------------------------*
FORM PROCESS_FILE.

  DATA:
    LV_LEN      TYPE I,
    lv_i        type i.

* Get length of filename into variable for later use
  COMPUTE LV_LEN = STRLEN( P_FNAME ) - 4.
* Prepare filename of rows which are backed up
  CONCATENATE P_FNAME(LV_LEN) '_BU.txt' INTO LV_FNAME_BU.
* Prepare filename of rows without existing stloc view
  CONCATENATE P_FNAME(LV_LEN) '_NL.txt' INTO LV_FNAME_NL.

* Process the character lines to structured and typed table
* *********************************************************
  CLEAR IT_SURPLUS[].
  LOOP AT IT_FILECT INTO LS_FILECT.
    CLEAR IT_SURPLUS.
    MOVE-CORRESPONDING LS_FILECT TO IT_SURPLUS.
*   Convert material number
    CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'
      EXPORTING
        INPUT              = IT_SURPLUS-MATNR
      IMPORTING
        OUTPUT             = IT_SURPLUS-MATNR.
    APPEND IT_SURPLUS.
  ENDLOOP.

* Check if material views exist
* *****************************
* Select the existing views into IT_MARD
  SELECT      MATNR WERKS LGORT
         INTO TABLE IT_MARD
         FROM MARD
          FOR ALL ENTRIES IN IT_SURPLUS
        WHERE MATNR EQ IT_SURPLUS-MATNR
          AND WERKS EQ IT_SURPLUS-WERKS
          AND LGORT EQ IT_SURPLUS-LGORT.
  SORT IT_MARD BY MATNR WERKS LGORT.


  clear lv_nloaded.
  clear lv_nloaded_zero.

* For all lines to be processed in IT_SURPLUS, check if MARD view exists
  LOOP AT IT_SURPLUS.
* issue
    READ TABLE IT_MARD WITH KEY MATNR = IT_SURPLUS-MATNR
                                WERKS = IT_SURPLUS-WERKS
                                LGORT = IT_SURPLUS-LGORT
                       BINARY SEARCH.
*   If view doesn't exist, move the line to the "Not loaded" table
    IF SY-SUBRC NE 0.
      LV_NLOADED = LV_NLOADED + 1.
      APPEND IT_SURPLUS TO IT_SURPLUS_NL.
      DELETE IT_SURPLUS.
*   If quantity is zero, move the line to the "Not loaded" table
    ELSEIF IT_SURPLUS-MENGE = 0.
      LV_NLOADED_ZERO = LV_NLOADED_ZERO + 1.
      APPEND IT_SURPLUS TO IT_SURPLUS_NL.
      DELETE IT_SURPLUS.
    ENDIF.


  ENDLOOP.

  DESCRIBE TABLE IT_SURPLUS_NL LINES lv_i.
  IF NOT lv_i IS INITIAL.
*   Save file with lines which will not be loaded
    CALL METHOD CL_GUI_FRONTEND_SERVICES=>GUI_DOWNLOAD
      EXPORTING
        FILENAME                  = LV_FNAME_NL
        FILETYPE                  = 'ASC'
        WRITE_FIELD_SEPARATOR     = 'X'
*     IMPORTING
*       FILELENGTH                =
      CHANGING
        DATA_TAB                  = IT_SURPLUS_NL
      EXCEPTIONS
        FILE_WRITE_ERROR          = 1
        NO_BATCH                  = 2
        GUI_REFUSE_FILETRANSFER   = 3
        INVALID_TYPE              = 4
        NO_AUTHORITY              = 5
        UNKNOWN_ERROR             = 6
        HEADER_NOT_ALLOWED        = 7
        SEPARATOR_NOT_ALLOWED     = 8
        FILESIZE_NOT_ALLOWED      = 9
        HEADER_TOO_LONG           = 10
        DP_ERROR_CREATE           = 11
        DP_ERROR_SEND             = 12
        DP_ERROR_WRITE            = 13
        UNKNOWN_DP_ERROR          = 14
        ACCESS_DENIED             = 15
        DP_OUT_OF_MEMORY          = 16
        DISK_FULL                 = 17
        DP_TIMEOUT                = 18
        FILE_NOT_FOUND            = 19
        DATAPROVIDER_EXCEPTION    = 20
        CONTROL_FLUSH_ERROR       = 21
        NOT_SUPPORTED_BY_GUI      = 22
        ERROR_NO_GUI              = 23
        others                    = 24.
    IF SY-SUBRC <> 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                 WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.
  ENDIF.
  CLEAR IT_SURPLUS.

* Complete surplus data with unit of measure from material master
* ***************************************************************
  CHECK NOT IT_SURPLUS[] IS INITIAL.
* Get material's base unit of measures
  SELECT      MATNR MEINS
         INTO TABLE IT_MARA
         FROM MARA
          FOR ALL ENTRIES IN IT_SURPLUS
        WHERE MATNR EQ IT_SURPLUS-MATNR.
  SORT IT_MARA BY MATNR.

* Update base unit of measures in table
  LOOP AT IT_SURPLUS.
    READ TABLE IT_MARA WITH KEY MATNR = IT_SURPLUS-MATNR BINARY SEARCH.
    IF SY-SUBRC EQ 0.
      IT_SURPLUS-MEINS = IT_MARA-MEINS.
    ENDIF.
    MODIFY IT_SURPLUS.
  ENDLOOP.

* Backup old entries from DB table
* ********************************
* Select already existing entries in YSE_SURPLUS_HD01
  SELECT       *
         INTO TABLE IT_SURPLUS_BU
         FROM YSE_SURPLUS_HD01
          FOR ALL ENTRIES IN IT_SURPLUS
        WHERE MATNR EQ IT_SURPLUS-MATNR
          AND WERKS EQ IT_SURPLUS-WERKS
          AND LGORT EQ IT_SURPLUS-LGORT
          AND BUDAT EQ IT_SURPLUS-BUDAT
          AND ZMOVT EQ IT_SURPLUS-ZMOVT.
* If any lines found for backup/deletion
  IF SY-SUBRC EQ 0.
    DESCRIBE TABLE IT_SURPLUS_BU LINES LV_DELETED.
*   Delete old entries from DB
    DELETE YSE_SURPLUS_HD01 FROM TABLE IT_SURPLUS.

*   Save backup file
    CALL METHOD CL_GUI_FRONTEND_SERVICES=>GUI_DOWNLOAD
      EXPORTING
        FILENAME                  = LV_FNAME_BU
        FILETYPE                  = 'ASC'
        WRITE_FIELD_SEPARATOR     = 'X'
*     IMPORTING
*       FILELENGTH                =
      CHANGING
        DATA_TAB                  = IT_SURPLUS_BU
      EXCEPTIONS
        FILE_WRITE_ERROR          = 1
        NO_BATCH                  = 2
        GUI_REFUSE_FILETRANSFER   = 3
        INVALID_TYPE              = 4
        NO_AUTHORITY              = 5
        UNKNOWN_ERROR             = 6
        HEADER_NOT_ALLOWED        = 7
        SEPARATOR_NOT_ALLOWED     = 8
        FILESIZE_NOT_ALLOWED      = 9
        HEADER_TOO_LONG           = 10
        DP_ERROR_CREATE           = 11
        DP_ERROR_SEND             = 12
        DP_ERROR_WRITE            = 13
        UNKNOWN_DP_ERROR          = 14
        ACCESS_DENIED             = 15
        DP_OUT_OF_MEMORY          = 16
        DISK_FULL                 = 17
        DP_TIMEOUT                = 18
        FILE_NOT_FOUND            = 19
        DATAPROVIDER_EXCEPTION    = 20
        CONTROL_FLUSH_ERROR       = 21
        NOT_SUPPORTED_BY_GUI      = 22
        ERROR_NO_GUI              = 23
        others                    = 24.
      IF SY-SUBRC <> 0.
        MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
                   WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      ENDIF.

  ENDIF.

* Insert new entries in DB table
* ******************************
  INSERT YSE_SURPLUS_HD01 FROM TABLE IT_SURPLUS.
  DESCRIBE TABLE IT_SURPLUS LINES LV_INSERTED.

ENDFORM.                    " PROCESS_FILE

*&---------------------------------------------------------------------*
*&      Form  CONVERT_INTO_COMMA
*&---------------------------------------------------------------------*
FORM CONVERT_INTO_COMMA .

  LOOP AT IT_FILECT INTO LS_FILECT.
    REPLACE ALL OCCURRENCES OF '.' IN LS_FILECT-MENGE WITH '/'.
    REPLACE ALL OCCURRENCES OF ',' IN LS_FILECT-MENGE WITH '.'.
    REPLACE ALL OCCURRENCES OF '/' IN LS_FILECT-MENGE WITH ','.
    MODIFY IT_FILECT FROM LS_FILECT.
  ENDLOOP.

ENDFORM.                    " CONVERT_INTO_COMMA

*&---------------------------------------------------------------------*
*&      Form  CONVERT_INTO_POINT
*&---------------------------------------------------------------------*
FORM CONVERT_INTO_POINT .

  LOOP AT IT_FILECT INTO LS_FILECT.
    REPLACE ALL OCCURRENCES OF ',' IN LS_FILECT-MENGE WITH '/'.
    REPLACE ALL OCCURRENCES OF '.' IN LS_FILECT-MENGE WITH ','.
    REPLACE ALL OCCURRENCES OF '/' IN LS_FILECT-MENGE WITH '.'.
    MODIFY IT_FILECT FROM LS_FILECT.
  ENDLOOP.

ENDFORM.                    " CONVERT_INTO_POINT

*&---------------------------------------------------------------------*
*&      Form  PRINT_RESULT
*&---------------------------------------------------------------------*
FORM PRINT_RESULT .

* Write result
  IF NOT LV_NLOADED IS INITIAL.
    WRITE: / LV_NLOADED, 'lines were not loaded since material view'(007),
             'does not exist. Lines saved in'(008) , LV_FNAME_NL.
  ENDIF.
  IF NOT LV_NLOADED_ZERO IS INITIAL.
    WRITE: / LV_NLOADED_ZERO, 'lines were not loaded because of zero quantities.'(005),
             'Lines saved in'(006) , LV_FNAME_NL.
  ENDIF.

  WRITE: / LV_INSERTED, 'lines inserted into YSE_SURPLUS_HD01.'(009).
  IF NOT LV_DELETED IS INITIAL.
    WRITE:   'Of these'(010),
           / LV_DELETED, 'lines were overwritten.'(011),
             'Backup saved in'(012), LV_FNAME_BU.
  ENDIF.

ENDFORM.                    " PRINT_RESULT
