*&---------------------------------------------------------------------*
*& Report  YSE_IMPORT_TO_TABLE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

report  yse_import_to_popic.

types:
  ty_input_file type standard table of yse_popic_tbp.

data:
  gt_lfile        type yse_t_lfile,                 "Local file name
  gt_update       type ty_input_file.

data:
  gs_update       type yse_popic_tbp.

parameters p_file(80)."地址栏"

at selection-screen on value-request for p_file.
  perform open_dialog."调用选择文件函数"

at selection-screen."用于屏幕输入检验"
  if p_file is initial.
    message '文件地址不可为空！' type 'S' display like 'E'.
    stop.
  endif.

start-of-selection.

  perform upload.

end-of-selection.

*&---------------------------------------------------------------------*
*&      Form  OPEN_DIALOG
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form open_dialog."选择文件会话。"
  data:
    lv_title  type string,     "Referrence title
    lt_file   type filetable,  "Internal table of dialog filenames
    ls_file   type file_table, "Working area for IT_FILE,
    lv_rc     type i.          "Return Code

  lv_title = text-001.
  clear: lt_file[],
         ls_file.

* Open local file dialog
  call method cl_gui_frontend_services=>file_open_dialog
    exporting
      window_title            = lv_title
      with_encoding           = 'X'
    changing
      file_table              = lt_file
*      FILE_ENCODING           = lv_ENCODING
      rc                      = lv_rc
    exceptions
      file_open_dialog_failed = 1
      cntl_error              = 2
      error_no_gui            = 3
      not_supported_by_gui    = 4
      others                  = 5.
  if sy-subrc <> 0.
    message id sy-msgid type sy-msgty number sy-msgno
              with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  endif.
  if lv_rc = 1.
    read table lt_file index 1 into ls_file.
    if sy-subrc eq 0.
      p_file = ls_file-filename.
    endif.
  endif.
endform.                    "OPEN_DIALOG


*&---------------------------------------------------------------------*
*&      Form  UPLOAD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
form upload."最后也是最关键的一步"
  data: lv_filename type string.
  data:
    ls_lfile type yse_s_lfile,
    lt_field type table of string,
    ls_field type string.
  data ls_topic type yse_popic_tbp.
  data lv_proc type i.
  data lv_succ type i.
  data lv_erro type i.

* Read file entires
  lv_filename = p_file.

*  PERFORM get_from_pres IN PROGRAM yam_common_routines
*                                    TABLES  gt_lfile
*                                    USING   lv_filename
*                                            ycl_se_utility=>c_ft_asc
*                                            ' '.

  call function 'GUI_UPLOAD'
    exporting
      filename            = lv_filename
      filetype            = ycl_se_utility=>c_ft_asc
      codepage            = '4110'
      has_field_separator = ' '
    tables
      data_tab            = gt_lfile
    exceptions
      others              = 17.
  if sy-subrc <> 0.
    message e010(yam_dc).        "DATA UPLOAD FAILED
  endif.

  delete gt_lfile index 1.
  describe table gt_lfile lines lv_proc.

  loop at gt_lfile into ls_lfile.
    clear lt_field.
    split ls_lfile-text at ',' into table lt_field.

    loop at lt_field into ls_field.
      case sy-tabix.
        when 1.
          gs_update-action = ls_field.
        when 2.
          gs_update-username = ls_field.
        when 3.
          gs_update-matnr_popic = ls_field.
        when 4.
          gs_update-zdcfam = ls_field.
        when 5.
          gs_update-zccfam = ls_field.
        when 6.
          gs_update-erdat = ls_field.
        when 7.
          gs_update-rperr = ls_field.
        when 8.
          gs_update-zgsber = ls_field.
        when 9.
          gs_update-spart = ls_field.
        when 10.
          gs_update-rpdesc = ls_field.
        when 11.
          gs_update-locdes = ls_field.
        when 12.
          gs_update-langu = ls_field.
        when 13.
          call function 'CONVERSION_EXIT_CUNIT_INPUT'
            exporting
              input          = ls_field
            importing
              output         = gs_update-buom
            exceptions
              unit_not_found = 1
              others         = 2.
        when 14.
          gs_update-matkl = ls_field.
        when 15.
          gs_update-rppgc = ls_field.
        when 16.
          gs_update-prodh = ls_field.
        when 17.
          gs_update-rpnwig = ls_field.
        when 18.
          gs_update-gewei = ls_field.
        when 19.
          gs_update-rpsafl = ls_field.
        when 20.
          gs_update-rporig = ls_field.
        when 21.
          gs_update-rprg = ls_field.
        when 22.
          gs_update-rpcusc = ls_field.
        when 23.
          call function 'CONVERSION_EXIT_ALPHA_INPUT'
            exporting
              input  = ls_field
            importing
              output = gs_update-vendor.

        when 24.
          gs_update-plifz = ls_field.
        when 25.
          gs_update-bestm = ls_field.
        when 26.
          gs_update-saccode = ls_field.
        when 27.
          gs_update-rpip = ls_field.
        when 28.
          gs_update-rpipcurr = ls_field.
        when 29.
          gs_update-trprice = ls_field.
        when 30.
          gs_update-tpcurr = ls_field.
        when 31.
          gs_update-stprs = ls_field.
        when 32.
          gs_update-rpcurr = ls_field.
        when 33.
          gs_update-mlprice = ls_field.
        when 34.
          gs_update-mlcurr = ls_field.
        when 35.
          gs_update-overwrite = ls_field.
        when 36.
          gs_update-zgewei = ls_field.
        when 37.
          gs_update-zland = ls_field.
        when 38.
          gs_update-evers = ls_field.
        when others.
      endcase.
    endloop.
    condense gs_update-rppgc.
    append gs_update to gt_update.
    clear gs_update.
  endloop.

  loop at gt_update into gs_update.
    move-corresponding gs_update to ls_topic.
    ls_topic-mandt = sy-mandt.

    modify yse_popic_tbp from ls_topic.
    if sy-subrc = 0.
      lv_succ = lv_succ + 1.
      commit work.
    else.
      rollback work.
    endif.
  endloop.

  lv_erro = lv_proc - lv_succ.

  write:
  /001  'Process count:',
   015  lv_proc,
  /001  'Success count:',
   015  lv_succ,
  /001  'Error count:',
   015  lv_erro.

endform.                    "UPLOAD
