************************************************************************
*   Include           YSE_REN_FLEET_OVERVIEW_EVENT                     *
************************************************************************
************************************************************************
* Initialization (set default values on selection screen)              *
************************************************************************
INITIALIZATION.
*  p_fyear = sy-datum(4).
  p_fyfr  = sy-datum(4).
  p_fyto  = sy-datum(4).
  p_fpfr  = sy-datum+4(2).
  p_fpto  = sy-datum+4(2).

************************************************************************
* At selection screen                                                  *
************************************************************************
AT SELECTION-SCREEN.

  PERFORM check_authorization.

AT SELECTION-SCREEN ON p_fpfr.
  IF p_fpfr > 12.
    MESSAGE e057.
  ELSEIF p_fpfr > p_fpto.
    MESSAGE e058.
  ENDIF.

AT SELECTION-SCREEN ON p_fpto.
  IF p_fpto > 12.
    MESSAGE e059.
  ELSEIF p_fpfr > p_fpto.
    MESSAGE e058.
  ENDIF.

************************************************************************
* Start of selection                                                   *
************************************************************************
START-OF-SELECTION.

* Determine date range in which we are interested to see
* deactivated assets
*  CONCATENATE p_fyear p_fpfr+1(2) '01' INTO gv_datum.
  CONCATENATE p_fyfr p_fpfr+1(2) '01' INTO gv_datum.
  gv_datfr = gv_datum.
* Get last day in month of "closing" period
  CALL FUNCTION 'NUMBER_OF_DAYS_PER_MONTH_GET'
    EXPORTING
      par_month = p_fpto+1(2)
      par_year  = p_fyto                  " p_fyear
    IMPORTING
      par_days  = gv_days.
*  CONCATENATE p_fyear p_fpto+1(2) gv_days INTO gv_datum.
  CONCATENATE p_fyto p_fpto+1(2) gv_days INTO gv_datum.
  gv_datto = gv_datum.

* Get all rental serial numbers
  SELECT      equnr
              sernr
              matnr
         INTO TABLE it_equi
         FROM equi
        WHERE eqtyp EQ 'X'
           OR eqtyp EQ 'Y'.
* Put all rental serial numbers in a range
  gr_equi-sign   = 'I'.
  gr_equi-option = 'EQ'.
  LOOP AT it_equi.
    IF it_equi-sernr NE space.
      gr_equi-low = it_equi-sernr.
      APPEND gr_equi.
    ELSE.
      DELETE it_equi.
    ENDIF.
  ENDLOOP.

* Select all assets that were deactivated in the selected period
* (of the selected company code)
  SELECT      anln1
              anln2
              sernr
              zugdt
              deakt
         INTO TABLE it_anla
         FROM anla
        WHERE bukrs EQ p_bukrs
          AND sernr IN gr_equi
          AND deakt GE gv_datfr
          AND deakt LE gv_datto.
* Put remaining rental serial numbers in a range
  CLEAR: gr_equi, gr_equi[].
  gr_equi-sign   = 'I'.
  gr_equi-option = 'EQ'.
  LOOP AT it_anla.
    gr_equi-low = it_anla-sernr.
    APPEND gr_equi.
  ENDLOOP.

* Remove entries from IT_EQUI for which no match was found with the
* above select clause and conditions
  DELETE it_equi WHERE sernr NOT IN gr_equi.

* Select equipment descriptions
  SELECT      equnr
              eqktx
         INTO TABLE it_eqkt
         FROM eqkt
          FOR ALL ENTRIES IN it_equi
        WHERE equnr EQ it_equi-equnr
          AND spras EQ 'EN'.

* Select material descriptions
  SELECT      matnr
              maktx
         INTO TABLE it_makt
         FROM makt
          FOR ALL ENTRIES IN it_equi
        WHERE matnr EQ it_equi-matnr
          AND spras EQ 'EN'.

* Select material details
  SELECT      matnr
              prdha
         INTO TABLE it_mara
         FROM mara
          FOR ALL ENTRIES IN it_equi
        WHERE matnr EQ it_equi-matnr.

*CVM.sn  Aquisition value (from table anlp
* Select the acquisition values (currency later to be retrieved from T093B)
  SELECT       anln1
               anln2
               bwasl
               anbtr
          INTO TABLE it_anep
          FROM anep
           FOR ALL ENTRIES IN it_anla
         WHERE bukrs EQ p_bukrs
           AND anln1 EQ it_anla-anln1
           AND anln2 EQ it_anla-anln2
           AND afabe EQ '30'
           AND ( bwasl EQ '130' OR
                 bwasl EQ 'Y01' OR
                 bwasl EQ 'Y02' OR
                 bwasl EQ '100').
  SELECT       anln1
               anln2
               answl
          INTO TABLE it_anlp
          FROM anlp
           FOR ALL ENTRIES IN it_anla
         WHERE bukrs EQ p_bukrs
           AND anln1 EQ it_anla-anln1
           AND anln2 EQ it_anla-anln2
           AND afaber EQ '30'.
*CVM.en

* Select the net book value (currency later to be retrieved from T093B)
*  SELECT       anln1
*               anln2
*               knafa
*               nafag
*               kansw
*               nafap
  SELECT    *
            INTO TABLE it_anlc
            FROM anlc
             FOR ALL ENTRIES IN it_anla
           WHERE bukrs EQ p_bukrs
             AND anln1 EQ it_anla-anln1
             AND anln2 EQ it_anla-anln2
*           AND gjahr EQ p_fyear
             AND gjahr BETWEEN p_fyfr AND p_fyto
* begin of change MOD-004
*             AND afabe EQ '30'
             and afabe eq '01'
* end of change MOD-004
             AND zujhr EQ ''
             AND zucod EQ ''.

* Select service costs (per equipment)
  SELECT       equnr
               vserv
          INTO TABLE it_copa
          FROM yse_rent_copa_co
           FOR ALL ENTRIES IN it_equi
         WHERE equnr EQ it_equi-equnr.

* Select the revenue sales from hire fleet (currency later to be retrieved from T093B)
  SELECT       anln1
               anln2
               erlbt
          INTO TABLE it_anea
          FROM anea
           FOR ALL ENTRIES IN it_anla
         WHERE bukrs EQ p_bukrs
           AND anln1 EQ it_anla-anln1
           AND anln2 EQ it_anla-anln2
*           AND gjahr EQ p_fyear
           AND gjahr BETWEEN p_fyfr AND p_fyto
           AND afabe EQ '30'
           AND zujhr EQ ''
           AND zucod EQ ''.

* Select the company code's currency
  SELECT SINGLE waers
           INTO gv_waers
           FROM t093b
          WHERE bukrs EQ p_bukrs
            AND afabe EQ '30'.

* IT_ANLA is the definite list of rental assets which were sold or scrapped
  SORT it_equi BY sernr.
  SORT it_eqkt BY equnr.
  SORT it_makt BY matnr.
  SORT it_mara BY matnr.
  SORT it_anep BY anln1 anln2 bwasl.
  SORT it_anlc BY mandt bukrs anln1 anln2.
  SORT it_anea BY anln1 anln2.
  SORT it_copa BY equnr.
  SORT it_anlp BY anln1 anln2.

  LOOP AT it_anla.

    CLEAR it_ovvw.

*   Copy fields from IT_ANLA
    it_ovvw-anln1 = it_anla-anln1.
    it_ovvw-anln2 = it_anla-anln2.
    it_ovvw-zugdt = it_anla-zugdt.
    it_ovvw-deakt = it_anla-deakt.
    it_ovvw-sernr = it_anla-sernr.
    it_ovvw-waers = gv_waers.

*   Summarize revenue postings (can include reversals)
    READ TABLE it_anea WITH KEY anln1 = it_anla-anln1
                                anln2 = it_anla-anln2
                       BINARY SEARCH.
    IF sy-subrc EQ 0.
      LOOP AT it_anea FROM sy-index.
        CHECK it_anea-anln1 = it_anla-anln1.
        CHECK it_anea-anln2 = it_anla-anln2.
        it_ovvw-revrsfl = it_ovvw-revrsfl + it_anea-erlbt.
      ENDLOOP.
    ENDIF.
*   If no revenue generated, don't keep the line
    IF it_ovvw-revrsfl IS INITIAL.
      CONTINUE.
    ENDIF.

*   Calc number of months in fleet
*   CALL FUNCTION 'FI_PSO_DAYS_MONTHS_YEARS_GET'  " Function rounds up
*     EXPORTING
*       I_DATE_FROM       = IT_ANLA-ZUGDT
*       I_DATE_TO         = IT_ANLA-DEAKT
*     IMPORTING
*       E_MONTHS          = IT_RSFL-INFLEET.
    CALL FUNCTION 'HR_AUPBS_MONTH_DAY'      " Function rounds down
      EXPORTING
        beg_da           = it_anla-zugdt
        end_da           = it_anla-deakt
      IMPORTING
*       NO_DAY           =
        no_month         = it_ovvw-infleet
        no_year          = it_ovvw-age.              " GV_YEARS.
*       NO_CAL_DAY       =.
*   Add the number of years * 12 to the "Months in fleet"
    it_ovvw-infleet = it_ovvw-infleet + ( it_ovvw-age * 12 ).

*   Find IT_EQUI entry
    READ TABLE it_equi WITH KEY sernr = it_anla-sernr BINARY SEARCH.
    IF sy-subrc EQ 0.

      it_ovvw-equnr = it_equi-equnr.
      it_ovvw-matnr = it_equi-matnr.

*     Find equipment description
      READ TABLE it_eqkt WITH KEY equnr = it_equi-equnr BINARY SEARCH.
      IF sy-subrc EQ 0.
        it_ovvw-eqktx = it_eqkt-eqktx.
      ENDIF.

*     Find material description
      READ TABLE it_makt WITH KEY matnr = it_equi-matnr BINARY SEARCH.
      IF sy-subrc EQ 0.
        it_ovvw-maktx = it_makt-maktx.
      ENDIF.

*     Find material GAC/PGC
      READ TABLE it_mara WITH KEY matnr = it_equi-matnr BINARY SEARCH.
      IF sy-subrc EQ 0.
        it_ovvw-pgc = it_mara-prdha.
        it_ovvw-gac = it_mara-prdha(4).
      ENDIF.

*     Summarize service costs
      READ TABLE it_copa WITH KEY equnr = it_equi-equnr BINARY SEARCH.
      IF sy-subrc EQ 0.
        LOOP AT it_copa FROM sy-index.
          CHECK it_copa-equnr = it_equi-equnr.
          it_ovvw-srvct = it_ovvw-srvct + it_copa-vserv.
        ENDLOOP.
      ENDIF.

    ENDIF.

*   Find acquisition value and netbook value
*CVM.sn
    READ TABLE it_anlc WITH KEY mandt = sy-mandt
                                bukrs = p_bukrs
                                anln1 = it_anla-anln1
                                anln2 = it_anla-anln2
                       BINARY SEARCH.
    it_ovvw-acqvl = it_anlc-kansw.

    CLEAR lv_anlcv.
    CALL FUNCTION 'FI_AA_VALUES_CALCULATE'
      EXPORTING
        i_anlc  = it_anlc
      IMPORTING
        e_anlcv = lv_anlcv.
* begin of change MOD-004
*    it_ovvw-nbval = lv_anlcv-lfd_bchwrt.
    it_ovvw-nbval = lv_anlcv-gja_bchwrt.
* end of change MOD-004


***    LOOP AT  it_anep
***    WHERE anln1 = it_anla-anln1
***    AND   anln2 = it_anla-anln2
***    AND   ( bwasl = '130' OR bwasl EQ '100' ).
***      it_ovvw-acqvl = it_anep-anbtr.
***    ENDLOOP.
***    IF sy-subrc EQ '4'.
***      READ TABLE it_anlc WITH KEY anln1 = it_anla-anln1
***                                  anln2 = it_anla-anln2
***                         BINARY SEARCH.
***      IF sy-subrc EQ 0.
***        it_ovvw-acqvl = it_anlc-kansw.
***      ENDIF.
***    ENDIF.

***    READ TABLE it_anep WITH KEY anln1 = it_anla-anln1
***                                anln2 = it_anla-anln2
***                                bwasl = '130'
***                       BINARY SEARCH.
***    IF sy-subrc EQ 4.
***      READ TABLE it_anep WITH KEY anln1 = it_anla-anln1
***                               anln2 = it_anla-anln2
***                               bwasl = '100'
***                      BINARY SEARCH.
***      IF sy-subrc EQ 4.
***        READ TABLE it_anlc WITH KEY anln1 = it_anla-anln1
***                                    anln2 = it_anla-anln2
***                           BINARY SEARCH.
***      ENDIF.
***    IF sy-subrc EQ 0.
******      it_ovvw-acqvl = it_anep-anbtr.
***
****     Calculate net book value (based on acq value - deprec. value)
***      READ TABLE it_anlc WITH KEY anln1 = it_anla-anln1
***                                  anln2 = it_anla-anln2
***                         BINARY SEARCH.
***      IF sy-subrc EQ 0.
***        it_ovvw-nbval = it_ovvw-acqvl + ( it_anlc-knafa + it_anlc-nafap ).
***      ENDIF.
***    ENDIF.
    it_ovvw-rcount = 1.
    it_ovvw-margin = it_ovvw-revrsfl - it_ovvw-nbval.

    APPEND it_ovvw.
  ENDLOOP.

  IF sy-batch = 'X'.
    PERFORM 0100_build_alv.
  ELSE.
    CALL SCREEN 0100.
  ENDIF.
