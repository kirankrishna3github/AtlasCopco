*&---------------------------------------------------------------------*
*&  Include           YSE_REN_FLEET_OVERVIEW_S0100                     *
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  0100_STATUS  OUTPUT
*&---------------------------------------------------------------------*
MODULE 0100_status OUTPUT.
  IF p_rb1 = gc_char_x.                 " Sales from fleet
    SET TITLEBAR 'TITLE0100'.
  ENDIF.
  IF p_rb2 = gc_char_x.                 " Sold by Age
    SET TITLEBAR 'TITLE0101'.
  ENDIF.
  SET PF-STATUS 'STATUS0100'.
ENDMODULE.                 " 0100_STATUS  OUTPUT

*&---------------------------------------------------------------------*
*&      MODULE 0100_PREPARE_SCREEN OUTPUT
*&---------------------------------------------------------------------*
MODULE 0100_prepare_screen OUTPUT.

  IF obj_cont_ov IS INITIAL .
    PERFORM 0100_build_alv.

  ENDIF.

ENDMODULE.                 " 0100_PREPARE_SCREEN OUTPUT

*&---------------------------------------------------------------------*
*&      Module 0100_USER_COMMAND INPUT
*&---------------------------------------------------------------------*
MODULE 0100_user_command INPUT.

  CASE okcode.
    WHEN 'BACK' OR 'EXIT'.
      CALL METHOD obj_alv_ov->free.
      FREE obj_alv_ov.
      CALL METHOD obj_cont_ov->free.
      FREE obj_cont_ov.
*      CALL METHOD CL_GUI_CFW=>FLUSH.
      LEAVE TO SCREEN 0.
    WHEN 'REFR'.
*      PERFORM 0100_REFRESH.
    WHEN 'CLUP'.
*      PERFORM 9999_DELETE_UNLINKED_DATA.
*      PERFORM 0100_REFRESH.

  ENDCASE.

ENDMODULE.                 " 0100_USER_COMMAND INPUT

*&---------------------------------------------------------------------*
*&      Form  0100_BUILD_ALV
*&---------------------------------------------------------------------*
FORM 0100_build_alv.


  DATA:  lv_off TYPE INT4.
  CALL METHOD cl_gui_alv_grid=>offline
     RECEIVING
     e_offline = lv_off.

  IF lv_off IS INITIAL.                          "MOD-004
     IF obj_cont_ov IS INITIAL .
        CREATE OBJECT obj_cont_ov
                 EXPORTING container_name = 'OVERVIEW' .
      ENDIF.
  ENDIF.

  IF obj_alv_ov IS INITIAL.
    CREATE OBJECT obj_alv_ov
              EXPORTING i_parent = obj_cont_ov.

    CREATE OBJECT obj_event_hndl_ov.

*   Enable Line Selection And Double-Clicking
    SET HANDLER obj_event_hndl_ov->handle_double_click FOR obj_alv_ov.
  ENDIF.

* Clear the field catalog table
  REFRESH: gt_fieldcat_ov.

* Fetch the field catalog for structure YSE_RENT_EHRSP_OUTPUT
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_buffer_active  = ' '
      i_structure_name = 'YSE_RENT_OVERVW'
    CHANGING
      ct_fieldcat      = gt_fieldcat_ov.

* Modify some of the fields
  LOOP AT gt_fieldcat_ov ASSIGNING <fieldcat>.
    CASE <fieldcat>-fieldname.
      WHEN 'REVRSFL'.                         " Selling Price
        IF p_rb1 = gc_char_x.                 " Sales from fleet
          <fieldcat>-do_sum = gc_char_x.
        ENDIF.
      WHEN 'RCOUNT'.                          " Item counter
        IF p_rb1 = gc_char_x.                 " Sales from fleet
          <fieldcat>-no_out = gc_char_x.
        ENDIF.
        IF p_rb2 = gc_char_x.                 " Assets sold per Age
          <fieldcat>-do_sum = 'X'.
        ENDIF.
      WHEN 'INFLEET'.                         " Months in fleet
        IF p_rb2 = gc_char_x.                 " Assets sold per age
          <fieldcat>-no_out = gc_char_x.
        ENDIF.
      WHEN 'AGE'.                             " Years in fleet
        IF p_rb1 = gc_char_x.                 " Sales from fleet
          <fieldcat>-no_out = gc_char_x.
        ENDIF.
      WHEN 'SRVCT'.                           " Service Costs
        IF p_rb2 = gc_char_x.                 " Assets sold per age
          <fieldcat>-no_out = gc_char_x.
        ENDIF.
    ENDCASE.
  ENDLOOP.

* Set layout variables
* GS_LAYOUT-NO_TOOLBAR = LC_TRUE.
  gs_layout-sel_mode   = 'D'.
  gs_layout-cwidth_opt = gc_char_x.
* GS_LAYOUT-COL_OPT    = 'X'.

* Sort on fields GAC and  PGC
* GAC
  CLEAR gs_fsort_ov.
  gs_fsort_ov-spos      = '1'.
  gs_fsort_ov-fieldname = 'GAC'.
  gs_fsort_ov-up        = gc_char_x.    " Sort ascending
  APPEND gs_fsort_ov TO gt_fsort_ov.
* PGC
  CLEAR gs_fsort_ov.
  gs_fsort_ov-spos      = '2'.
  gs_fsort_ov-fieldname = 'PGC'.
  gs_fsort_ov-up        = gc_char_x.    " Sort ascending
  IF p_rb1 = gc_char_x.                 " Sales from fleet
    gs_fsort_ov-subtot  = gc_char_x.    " Subtotal
  ENDIF.
  APPEND gs_fsort_ov TO gt_fsort_ov.

* For report Sales from fleet, sort by PGC/GAC and add selling prices
  IF p_rb1 = gc_char_x.                 " Sales from fleet
*   Revenue
    CLEAR gs_fsort_ov.
    gs_fsort_ov-spos      = '3'.
    gs_fsort_ov-fieldname = 'REVRSFL'.
    gs_fsort_ov-subtot    = space.      " Subtotal
    gs_fsort_ov-up        = space.
    gs_fsort_ov-down      = gc_char_x.  " Sort descending
    APPEND gs_fsort_ov TO gt_fsort_ov.
  ENDIF.

* For report Assets sold per age, count # of items per
* amount of years
  IF p_rb2 = gc_char_x.                 " Sold by Age
*   Years in fleet
    CLEAR gs_fsort_ov.
    gs_fsort_ov-fieldname = 'AGE'.
    gs_fsort_ov-down      = gc_char_x.  " Sort descending
    gs_fsort_ov-subtot    = gc_char_x.  " Subtotal
    APPEND gs_fsort_ov TO gt_fsort_ov.
  ENDIF.

* Display the grid
  CALL METHOD obj_alv_ov->set_table_for_first_display
    EXPORTING
      i_structure_name              = 'YSE_RENT_OVERVW'
      is_layout                     = gs_layout
    CHANGING
      it_outtab                     = it_ovvw[]
      it_fieldcatalog               = gt_fieldcat_ov
      it_sort                       = gt_fsort_ov
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.

  IF sy-subrc <> 0.
*     MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*     WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.                    " 0100_BUILD_ALV

*&---------------------------------------------------------------------*
*&      Form  0100_DBLCLICK
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW  text
*      -->P_E_COLUMN  text
*      -->P_ES_ROW_NO  text
*----------------------------------------------------------------------*
FORM 0100_dblclick  USING    p_row
                             p_column
                             p_row_no.

  CASE p_column.
    WHEN 'EQUNR'.
      PERFORM 0100_open_ie03       USING p_row p_column p_row_no.
    WHEN 'ANLN1' OR 'ANLN2'.
      PERFORM 0100_open_as03       USING p_row p_column p_row_no.
  ENDCASE.

ENDFORM.                    " 0100_DBLCLICK

*&---------------------------------------------------------------------*
*&      Form  0100_OPEN_IE03
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM 0100_open_ie03  USING    p_row
                              p_column
                              p_row_no.

  DATA: ls_options      TYPE ctu_params.

* Read the selected entry from GT_EHRSK
  READ TABLE it_ovvw INDEX p_row.
  CHECK sy-subrc EQ 0.
  CHECK it_ovvw-equnr NE space.

  ls_options-nobiend = 'X'.
  ls_options-dismode = 'E'.
  ls_options-updmode = 'S'.

* Clear the BDC tables
  CLEAR: it_bdcdata[], it_bdcmsgs[].

* Prepare the first screen
  PERFORM 9999_bdc_add_screen USING 'SAPMIEQ0' '0100'.
  PERFORM 9999_bdc_add_field  USING 'RM63E-EQUNR' it_ovvw-equnr.
  PERFORM 9999_bdc_add_field  USING 'BDC_OKCODE' '/00'.
* Call the transaction
  CALL TRANSACTION gc_tx_ie03 USING         it_bdcdata
                              OPTIONS  FROM ls_options
                              MESSAGES INTO it_bdcmsgs.

ENDFORM.                    " 0100_OPEN_IE03

*&---------------------------------------------------------------------*
*&      Form  0100_OPEN_AS03
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM 0100_open_as03  USING    p_row
                              p_column
                              p_row_no.

  DATA: ls_options      TYPE ctu_params.

* Read the selected entry from GT_EHRSK
  READ TABLE it_ovvw INDEX p_row.
  CHECK sy-subrc EQ 0.
  CHECK it_ovvw-anln1 NE space.
* CHECK IT_OVVW-ANLN2 NE SPACE.

  ls_options-nobiend = 'X'.
  ls_options-dismode = 'E'.
  ls_options-updmode = 'S'.

* Clear the BDC tables
  CLEAR: it_bdcdata[], it_bdcmsgs[].

* Prepare the first screen
  PERFORM 9999_bdc_add_screen USING 'SAPLAIST' '0100'.
  PERFORM 9999_bdc_add_field  USING 'ANLA-ANLN1' it_ovvw-anln1.
  PERFORM 9999_bdc_add_field  USING 'ANLA-ANLN2' it_ovvw-anln2.
  PERFORM 9999_bdc_add_field  USING 'ANLA-BUKRS' p_bukrs.
  PERFORM 9999_bdc_add_field  USING 'BDC_OKCODE' '/00'.
* Call the transaction
  CALL TRANSACTION gc_tx_as03 USING         it_bdcdata
                              OPTIONS  FROM ls_options
                              MESSAGES INTO it_bdcmsgs.

ENDFORM.                    " 0100_OPEN_AS03

*&---------------------------------------------------------------------*
*&      Form  BDC_ADD_SCREEN
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM 9999_bdc_add_screen USING p_program p_dynpro.
  CLEAR it_bdcdata.
  it_bdcdata-program  = p_program.
  it_bdcdata-dynpro   = p_dynpro.
  it_bdcdata-dynbegin = gc_char_x.
  APPEND it_bdcdata.
ENDFORM.    " BDC_ADD_SCREEN

*&---------------------------------------------------------------------*
*&      Form  BDC_ADD_FIELD
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM 9999_bdc_add_field USING p_fnam p_fval.

  DATA: lv_fval TYPE bdc_fval.

  lv_fval = p_fval.

  IF lv_fval <> gc_char_fs.   " Forward Slash
    CLEAR it_bdcdata.
    it_bdcdata-fnam = p_fnam.
    it_bdcdata-fval = lv_fval.
    APPEND it_bdcdata.
  ENDIF.
ENDFORM.    " BDC_ADD_FIELD
*&---------------------------------------------------------------------*
*&      Form  Check_Authorization
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM check_authorization .

  AUTHORITY-CHECK OBJECT 'F_KNA1_BUK'
                      ID 'BUKRS' FIELD p_bukrs
                      ID 'ACTVT' DUMMY.

  IF sy-subrc = 4.
*   No authorisation to display the data
    MESSAGE ID 'YSE_RENTAL' TYPE 'E' NUMBER '040' WITH p_bukrs.
  ELSEIF sy-subrc <> 0.
*   Error checking authorization.
    MESSAGE ID 'YSE_RENTAL' TYPE 'E' NUMBER '046'.
  ENDIF.

ENDFORM.                    " Check_Authorization
