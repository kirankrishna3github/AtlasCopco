REPORT sapkka12 MESSAGE-ID kj Line-size 080.
*&---------------------------------------------------------------------*
*& Added below comments on request of Stefan Stalmans                  *
*& Reference to: Issue 1290 - Subproject6E. Support Poland - IMPLEMENT *
*& Copied standard report SAPKKA12 to YSE_SAPKKA12.                    *
*& Changed the logic that status CLSD will be checked on the dependent *
*& orders instead of TECO. Remark from developper: Now that we changed *
*& the logic, it's possible that other functionalities of this report  *
*& don't work anymore in this copied version ...                       *
*&---------------------------------------------------------------------*


************************************************************************
TABLES: vbak, vbap, tkkap, cosbd, aufk, tkkas, tka01.
TABLES: t001w, t001k, tka02.                             "99.insk ("org)
TABLES: cepc.                                               "429739


************************************************************************
SELECTION-SCREEN BEGIN OF LINE.                                       "X
SELECTION-SCREEN PUSHBUTTON 1(80) more_sez USER-COMMAND morz.         "X
SELECTION-SCREEN END OF LINE.                                         "X
PARAMETERS: all_sez TYPE c NO-DISPLAY.                           "X "uni

SELECTION-SCREEN SKIP.                                                "X
SELECTION-SCREEN COMMENT 1(75) text-x07 MODIF ID opz.                 "X

SELECTION-SCREEN BEGIN OF LINE.                                       "X
SELECTION-SCREEN PUSHBUTTON 1(80) more_sel USER-COMMAND more          "X
                                           MODIF ID opz.              "X
SELECTION-SCREEN END OF LINE.                                         "X
PARAMETERS: all_sel TYPE c NO-DISPLAY.                           "X "uni

SELECTION-SCREEN BEGIN OF LINE.                                       "X
SELECTION-SCREEN PUSHBUTTON 1(80) more_se1 USER-COMMAND mor1          "X
                                           MODIF ID opz.              "X
SELECTION-SCREEN END OF LINE.                                         "X
PARAMETERS: all_se1 TYPE c NO-DISPLAY.                           "X "uni

SELECTION-SCREEN BEGIN OF LINE.                                       "X
SELECTION-SCREEN PUSHBUTTON 1(80) more_se3 USER-COMMAND mor3          "X
                                           MODIF ID opz.              "X
SELECTION-SCREEN END OF LINE.                                         "X
PARAMETERS: all_se3 TYPE c NO-DISPLAY.                           "X "uni

SELECTION-SCREEN BEGIN OF LINE.                                       "X
SELECTION-SCREEN PUSHBUTTON 1(80) more_se4 USER-COMMAND mor4          "X
                                           MODIF ID opz.              "X
SELECTION-SCREEN END OF LINE.                                         "X
PARAMETERS: all_se4 TYPE c NO-DISPLAY.                           "X "uni

SELECTION-SCREEN BEGIN OF LINE.                                       "X
SELECTION-SCREEN PUSHBUTTON 1(80) more_se2 USER-COMMAND mor2          "X
                                           MODIF ID opz.              "X
SELECTION-SCREEN END OF LINE.                                         "X
PARAMETERS: all_se2 TYPE c NO-DISPLAY.                           "X "uni

SELECTION-SCREEN BEGIN OF LINE.                             "H503958
SELECTION-SCREEN PUSHBUTTON 1(80) more_se5 USER-COMMAND mor5 "H503958
                                           MODIF ID opz.    "H503958
SELECTION-SCREEN END OF LINE.                               "H503958
PARAMETERS: all_se5 TYPE c NO-DISPLAY.                      "H503958

SELECTION-SCREEN SKIP.                                                "X

SELECTION-SCREEN BEGIN OF BLOCK selekt WITH FRAME TITLE text-008.
*ARAMETERS ABGRKOKR LIKE VBAK-KOKRS NO-DISPLAY.                     "46c
PARAMETERS abgrkokr LIKE vbak-kokrs MODIF ID kok.                   "46c
SELECTION-SCREEN BEGIN OF BLOCK mitohn WITH FRAME TITLE text-053. "450841
parameters: mit_abgr as checkbox default 'X' modif id opt,  "H450841
            ohne_abg as checkbox default ' ' modif id opt.  "H450841
SELECTION-SCREEN END OF BLOCK mitohn.                       "H450841
SELECT-OPTIONS: abgraufa FOR vbak-auart MEMORY ID aat MODIF ID opt,   "X
                abgrvbel FOR vbak-vbeln MEMORY ID aun
                                        MATCHCODE OBJECT vmva         "X
                                        MODIF ID opt,                 "X
                abgrposn FOR vbap-posnr MEMORY ID aca MODIF ID opt.
*       abgrschl FOR vbap-abgrs MEMORY ID acs MODIF ID opt.   "X"H450841
SELECTION-SCREEN SKIP.                                      "H450841
SELECTION-SCREEN BEGIN OF BLOCK mitabg WITH FRAME TITLE text-054. "450841
select-options abgrschl FOR vbap-abgrs MEMORY ID acs        "H450841
                                       MODIF ID opt.        "H450841
SELECTION-SCREEN END OF BLOCK mitabg.                       "H450841
*ELECTION-SCREEN END OF BLOCK SELEKT.                               "46c

SELECTION-SCREEN SKIP.                                              "org
*                                                                     "X
*ELECTION-SCREEN BEGIN OF LINE.                                       "X
*ELECTION-SCREEN PUSHBUTTON 1(75) more_sel USER-COMMAND more.         "X
*ELECTION-SCREEN END OF LINE.                                         "X
*ARAMETERS: all_sel TYPE C NO-DISPLAY.                                "X
"org
SELECTION-SCREEN BEGIN OF BLOCK seleo1 WITH FRAME TITLE text-033.   "org
SELECT-OPTIONS: vp_bukrs FOR tka02-bukrs MEMORY ID buk MODIF ID opt,  "X
        vp_werks FOR t001w-werks MEMORY ID wrk MODIF ID opt, "429739
        vp_prctr FOR cepc-prctr MEMORY ID prc MODIF ID opt. "429739
SELECTION-SCREEN END OF BLOCK seleo1.                               "org
"org
SELECTION-SCREEN SKIP.                                              "org
"org
SELECTION-SCREEN BEGIN OF BLOCK seleo2 WITH FRAME TITLE text-034.   "org
SELECT-OPTIONS: vk_vkorg FOR vbak-vkorg MEMORY ID vko MODIF ID opt,   "X
                vk_vtweg FOR vbak-vtweg MEMORY ID vtw MODIF ID opt,   "X
                vk_spart FOR vbak-spart MEMORY ID spa MODIF ID opt,   "X
                vk_vkbur FOR vbak-vkbur MEMORY ID vkb MODIF ID opt,   "X
                vk_vkgrp FOR vbak-vkgrp MEMORY ID vkg MODIF ID opt.   "X
SELECTION-SCREEN END OF BLOCK seleo2.                               "org
SELECTION-SCREEN END OF BLOCK selekt.                               "46c

*ELECTION-SCREEN SKIP.                                                "X
SELECTION-SCREEN COMMENT 1(75) text-xxx MODIF ID opy.                 "X

SELECTION-SCREEN BEGIN OF BLOCK ablauf WITH FRAME TITLE text-032. "99.ins
PARAMETERS: test_lf AS CHECKBOX DEFAULT 'X' MODIF ID op1.             "X
SELECTION-SCREEN END OF BLOCK ablauf.                       "99.ins

*ELECTION-SCREEN SKIP.                                                "X
SELECTION-SCREEN COMMENT 1(75) text-xxx MODIF ID op1.                 "X

SELECTION-SCREEN BEGIN OF BLOCK permax WITH FRAME           "H450841
                                       TITLE text-061.      "H450841
PARAMETERS: maxpso  DEFAULT 'X' RADIOBUTTON GROUP rgpm      "H450841
                                            MODIF ID op1,   "H450841
            maxp12  RADIOBUTTON GROUP rgpm MODIF ID op1.    "H450841
SELECTION-SCREEN END OF BLOCK permax.                       "H450841

SELECTION-SCREEN COMMENT 1(75) text-xxx MODIF ID op1.       "H450841

SELECTION-SCREEN BEGIN OF BLOCK anzeige WITH FRAME TITLE text-028.
PARAMETERS: anz_all DEFAULT 'X' RADIOBUTTON GROUP rg05 MODIF ID op1,  "X
            anz_aend RADIOBUTTON GROUP rg05 MODIF ID op1,             "X
            anz_abhp AS CHECKBOX MODIF ID op1.                        "X
SELECTION-SCREEN END OF BLOCK anzeige.

*REL.3.1 delete:                                                    "uni
SELECTION-SCREEN COMMENT 1(75) text-xxx MODIF ID op1.             "trace

*REL.3.1 replace:                                                   "uni
*data det_anal value ' '.                                           "uni
SELECTION-SCREEN BEGIN OF BLOCK detanal WITH FRAME TITLE text-041."trace
PARAMETERS: det_anal AS CHECKBOX DEFAULT ' ' MODIF ID op1.        "trace
SELECTION-SCREEN END OF BLOCK detanal.                            "trace

*ELECTION-SCREEN SKIP.                                                "X
SELECTION-SCREEN COMMENT 1(75) text-xxx MODIF ID opy.                 "X

SELECTION-SCREEN BEGIN OF BLOCK status WITH FRAME TITLE text-005.

* Endfakturiert?
SELECTION-SCREEN BEGIN OF BLOCK statu1 WITH FRAME TITLE text-006.
PARAMETERS: nc_enfa DEFAULT 'X' RADIOBUTTON GROUP rg02 MODIF ID op2,  "X
            set_enfa RADIOBUTTON GROUP rg02 MODIF ID op2.             "X
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-018 MODIF ID op2.                 "X
SELECTION-SCREEN END OF BLOCK statu1.

*ELECTION-SCREEN SKIP.                                                "X
SELECTION-SCREEN COMMENT 1(75) text-xxx MODIF ID op2.                 "X

* Endgeliefert?
SELECTION-SCREEN BEGIN OF BLOCK statu1b WITH FRAME TITLE text-006.
PARAMETERS: nc_glft DEFAULT 'X' RADIOBUTTON GROUP rg03 MODIF ID op2,  "X
            set_glft RADIOBUTTON GROUP rg03 MODIF ID op2.             "X
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-020 MODIF ID op2.                 "X
SELECTION-SCREEN END OF BLOCK statu1b.

*ELECTION-SCREEN SKIP.                                                "X
SELECTION-SCREEN COMMENT 1(75) text-xxx MODIF ID op2.                 "X

* Periode f¨¹r endgeliefert und endfakturiert                     "99.ins
SELECTION-SCREEN BEGIN OF BLOCK statu1c WITH FRAME TITLE text-031. "99.in
PARAMETERS: sd_mona LIKE kka0100-bis_abgr_m MODIF ID jma,             "X
            sd_jahr LIKE kka0100-bis_abgr_j MODIF ID jma.             "X
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-036 MODIF ID opa.                 "X
*ARAMETERS: SD_SEIT LIKE KKA0100-BIS_ABGR_M.                    "H339356
PARAMETERS: sd_seit(3) TYPE c MODIF ID opa.                           "X
SELECTION-SCREEN END OF BLOCK statu1c.                      "99.ins

*ELECTION-SCREEN SKIP.                                                "X
SELECTION-SCREEN COMMENT 1(75) text-xxx MODIF ID opa.                 "X

* Technisch Abgeschlossen?
SELECTION-SCREEN BEGIN OF BLOCK statu2 WITH FRAME TITLE text-007.
PARAMETERS: nc_tabg DEFAULT 'X' RADIOBUTTON GROUP rg01 MODIF ID op3,  "X
            set_tabg RADIOBUTTON GROUP rg01 MODIF ID op3.             "X
SELECTION-SCREEN BEGIN OF BLOCK statu3 WITH FRAME TITLE text-009.
PARAMETERS: lastmona LIKE kka0100-bis_abgr_m MODIF ID jm3,            "X
            lastjahr LIKE kka0100-bis_abgr_j MODIF ID jm3.            "X
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(71) text-036 MODIF ID op3.                 "X
*ARAMETERS: LASTSEIT LIKE KKA0100-BIS_ABGR_M.                   "H339356
PARAMETERS: lastseit(3) TYPE c MODIF ID op3.                          "X
SELECTION-SCREEN END OF BLOCK statu3.
SELECTION-SCREEN BEGIN OF BLOCK statu4 WITH FRAME TITLE text-010.
PARAMETERS: if_min1 DEFAULT 'X' AS CHECKBOX MODIF ID op3,             "X
            if_enfa AS CHECKBOX MODIF ID op3,                         "X
            if_glft AS CHECKBOX MODIF ID op3.                         "X
SELECTION-SCREEN END OF BLOCK statu4.
SELECTION-SCREEN BEGIN OF BLOCK statu9 WITH FRAME TITLE text-022. "P40C.Y
PARAMETERS: or_tabg AS CHECKBOX MODIF ID op3.                         "X
SELECTION-SCREEN END OF BLOCK statu9.                       "P40C.INSY
SELECTION-SCREEN SKIP.                                              "46c
SELECTION-SCREEN COMMENT 1(75) text-030 MODIF ID op3.                 "X
PARAMETERS: rst_tabg AS CHECKBOX DEFAULT 'X' MODIF ID op3.            "X
SELECTION-SCREEN SKIP.                                      "99.INSA
SELECTION-SCREEN COMMENT 1(75) text-019 MODIF ID op3.                 "X
* Status TABG auf abhaengigen Positionen setzen?
SELECTION-SCREEN SKIP.                                      "H450841
SELECTION-SCREEN BEGIN OF BLOCK statua                      "H450841
                 WITH FRAME TITLE text-029.                 "H450841
PARAMETERS: abh_pos AS CHECKBOX MODIF ID op3.               "H450841
SELECTION-SCREEN SKIP.                                      "H450841
SELECTION-SCREEN COMMENT 1(71) text-038 MODIF ID op3.       "H450841
SELECTION-SCREEN SKIP.                                      "H450841
SELECTION-SCREEN COMMENT 1(71) text-039 MODIF ID op3.       "H450841
SELECTION-SCREEN END OF BLOCK statua.                       "H450841
SELECTION-SCREEN END OF BLOCK statu2.

*ELECTION-SCREEN SKIP.                                                "X
SELECTION-SCREEN COMMENT 1(75) text-xxx MODIF ID opy.                 "X

* Abgeschlossen?
SELECTION-SCREEN BEGIN OF BLOCK statu5 WITH FRAME TITLE text-011.
PARAMETERS: nc_abgs DEFAULT 'X' RADIOBUTTON GROUP rg04 MODIF ID op4,  "X
            set_abgs RADIOBUTTON GROUP rg04 MODIF ID op4.             "X
SELECTION-SCREEN BEGIN OF BLOCK statu6 WITH FRAME TITLE text-012.
PARAMETERS: lastmon1 LIKE kka0100-bis_abgr_m MODIF ID jm4,            "X
            lastjah1 LIKE kka0100-bis_abgr_j MODIF ID jm4.            "X
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(71) text-036 MODIF ID op4.                 "X
*ARAMETERS: LASTSEI1 LIKE KKA0100-BIS_ABGR_M.                   "H339356
PARAMETERS: lastsei1(3) TYPE c MODIF ID op4.                          "X
SELECTION-SCREEN END OF BLOCK statu6.
SELECTION-SCREEN BEGIN OF BLOCK statu8 WITH FRAME TITLE text-010.
* Beginning insertion note 428806
SELECTION-SCREEN BEGIN OF LINE.
PARAMETERS if0saldo AS CHECKBOX MODIF ID op4.
SELECTION-SCREEN COMMENT 3(25) text-051 for field if0saldo MODIF ID op4.
SELECTION-SCREEN COMMENT 28(17) text-052 for field maxsal MODIF ID op4.
PARAMETERS maxsal LIKE cosp-wkg001 MODIF ID op4.
SELECTION-SCREEN COMMENT 68(4) g_waehr MODIF ID op4.
SELECTION-SCREEN END OF LINE.
PARAMETERS if_0_wip AS CHECKBOX MODIF ID op4.
* End insertion note 428806
*PARAMETERS: if0saldo AS CHECKBOX MODIF ID op4,               "X "428806
*            if_0_wip AS CHECKBOX MODIF ID op4.               "X "428806
SELECTION-SCREEN END OF BLOCK statu8.
SELECTION-SCREEN BEGIN OF BLOCK statu7 WITH FRAME TITLE text-010.
PARAMETERS: if_min11 DEFAULT 'X' AS CHECKBOX MODIF ID op4,            "X
            if_enfa1 AS CHECKBOX MODIF ID op4,                        "X
            if_glft1 AS CHECKBOX MODIF ID op4,                        "X
            if_tabg1 AS CHECKBOX MODIF ID op4.                        "X
SELECTION-SCREEN END OF BLOCK statu7.
*election-screen comment 1(75) text-030.                         "99.INS
*ELECTION-SCREEN BEGIN OF BLOCK STATUC WITH FRAME        "99.ins    "46c
*                                      TITLE TEXT-030.   "99.ins    "46c
*ARAMETERS: IF_SDFU1 DEFAULT 'X' RADIOBUTTON GROUP RG06, "99.ins    "46c
*           IF_SDOF1 RADIOBUTTON GROUP RG06.             "99.ins    "46c
*ELECTION-SCREEN END OF BLOCK STATUC.                    "99.ins    "46c
SELECTION-SCREEN BEGIN OF BLOCK statuj WITH FRAME TITLE text-022.   "46c
PARAMETERS: or_tabg1 AS CHECKBOX MODIF ID op4.                        "X
SELECTION-SCREEN END OF BLOCK statuj.                               "46c
SELECTION-SCREEN SKIP.                                              "46c
SELECTION-SCREEN COMMENT 1(75) text-030 MODIF ID op4.                 "X
PARAMETERS: rst_abgs AS CHECKBOX MODIF ID op4.                        "X
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-021 MODIF ID op4.                 "X
* Status ABGS auf abhaengigen Positionen setzen: immer!
SELECTION-SCREEN SKIP.                                      "H450841
SELECTION-SCREEN BEGIN OF BLOCK stataa                      "H450841
                 WITH FRAME TITLE text-066.                 "H450841
SELECTION-SCREEN SKIP.                                      "H450841
SELECTION-SCREEN COMMENT 1(71) text-069 MODIF ID op4.       "H450841
SELECTION-SCREEN SKIP.                                      "H450841
SELECTION-SCREEN COMMENT 1(71) text-070 MODIF ID op4.       "H450841
SELECTION-SCREEN SKIP.                                      "H450841
SELECTION-SCREEN COMMENT 1(71) text-071 MODIF ID op4.       "H450841
SELECTION-SCREEN END OF BLOCK stataa.                       "H450841
SELECTION-SCREEN END OF BLOCK statu5.

SELECTION-SCREEN SKIP.

* SD/CO-Standardpruefung
SELECTION-SCREEN BEGIN OF BLOCK statuc WITH FRAME TITLE text-037.   "46c
PARAMETERS: if_sdfu1 DEFAULT 'X' RADIOBUTTON GROUP rg06 MODIF ID opb, "X
            if_sdof1 RADIOBUTTON GROUP rg06 MODIF ID opb.             "X
SELECTION-SCREEN END OF BLOCK statuc.                               "46c

SELECTION-SCREEN SKIP.                                              "46c

* CO-Standardpr¨¹fung:                                           "H450841
* z.Z. nicht waehlbar, siehe Data-Anweisung weiter unten        "H450841
*ELECTION-SCREEN BEGIN OF BLOCK statuo WITH FRAME               "H450841
*                                      TITLE text-....          "H450841
*ARAMETERS: if_sdcos DEFAULT 'X'                                "H450841
*                    RADIOBUTTON GROUP rg16 MODIF ID op4,       "H450841
*           if_sdcoo RADIOBUTTON GROUP rg16 MODIF ID op4.       "H450841
*ELECTION-SCREEN END OF BLOCK statuo.                           "H450841
*                                                               "H450841
*ELECTION-SCREEN COMMENT 1(75) text-xxx MODIF ID op4.           "H450841

* Status ABGS und TABG auf abhaengigen Positionen setzen?       "H450841
*ELECTION-SCREEN BEGIN OF BLOCK statua                          "H450841
*                WITH FRAME TITLE text-029.                     "H450841
*ARAMETERS: abh_pos AS CHECKBOX MODIF ID opb.                   "H450841
*ELECTION-SCREEN SKIP.                                          "H450841
*ELECTION-SCREEN COMMENT 1(75) text-038 MODIF ID opb.           "H450841
*ELECTION-SCREEN SKIP.                                          "H450841
*ELECTION-SCREEN COMMENT 1(75) text-039 MODIF ID opb.           "H450841
*ELECTION-SCREEN END OF BLOCK statua.                           "H450841
*ELECTION-SCREEN SKIP.                                          "H450841

SELECTION-SCREEN END OF BLOCK status.                       "H503958

SELECTION-SCREEN SKIP.                                      "H503958

SELECTION-SCREEN BEGIN OF BLOCK statu0 WITH FRAME TITLE text-023.
SELECTION-SCREEN COMMENT 1(75) text-024 MODIF ID op5.       "H503958
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-025 MODIF ID op5.       "H503958
SELECTION-SCREEN SKIP.

SELECTION-SCREEN SKIP.                                      "H503958

SELECTION-SCREEN COMMENT 1(75) text-026 MODIF ID op5.       "H503958
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-027 MODIF ID op5.       "H503958
SELECTION-SCREEN SKIP.                                      "H503958

*Beginning insert note                                          "H503958
SELECTION-SCREEN SKIP.

SELECTION-SCREEN COMMENT 1(75) text-z31 MODIF ID op5.
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-z32 MODIF ID op5.
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-z33 MODIF ID op5.
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-z34 MODIF ID op5.
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-z35 MODIF ID op5.
SELECTION-SCREEN SKIP.

SELECTION-SCREEN SKIP.

SELECTION-SCREEN COMMENT 1(75) text-z01 MODIF ID op5.
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-z02 MODIF ID op5.
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-z03 MODIF ID op5.
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-z04 MODIF ID op5.
SELECTION-SCREEN SKIP.

SELECTION-SCREEN SKIP.

SELECTION-SCREEN COMMENT 1(75) text-z41 MODIF ID op5.       "H697387
SELECTION-SCREEN SKIP.                                      "H697387
SELECTION-SCREEN COMMENT 1(75) text-z42 MODIF ID op5.       "H697387
SELECTION-SCREEN SKIP.                                      "H697387
SELECTION-SCREEN COMMENT 1(75) text-z43 MODIF ID op5.       "H697387
SELECTION-SCREEN SKIP.                                      "H697387

SELECTION-SCREEN SKIP.                                      "H697387

SELECTION-SCREEN COMMENT 1(75) text-z11 MODIF ID op5.
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-z12 MODIF ID op5.
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-z13 MODIF ID op5.
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-z14 MODIF ID op5.
SELECTION-SCREEN SKIP.

SELECTION-SCREEN SKIP.

SELECTION-SCREEN COMMENT 1(75) text-z21 MODIF ID op5.
SELECTION-SCREEN SKIP.
SELECTION-SCREEN COMMENT 1(75) text-z22 MODIF ID op5.
SELECTION-SCREEN SKIP.
*End insert note                                                "H503958

SELECTION-SCREEN END OF BLOCK statu0.

*ELECTION-SCREEN END OF BLOCK status.                           "H503958


************************************************************************
TYPE-POOLS: kkblo.

types: kkachr1 type c.

DATA: if_sdcos value ' ',                                   "H450841
      if_sdcoo value 'X'.                                   "H450841

DATA: abh_pos_abgs,                                         "H450841
      abh_pos_tabg.                                         "H450841

RANGES: r_werks FOR vbap-werks.                             "99.insk
DATA: BEGIN OF twb OCCURS 1,                                "99.insk
        werks LIKE t001w-werks,                             "99.insk
        bukrs LIKE tka02-bukrs,                             "99.insk
      END OF twb,                                           "99.insk
      kzvbr_projekt LIKE vbap-kzvbr VALUE 'P',              "99.insk
      v_subrc LIKE sy-subrc.                                "99.insk

INCLUDE YSE_LKKAGF88.
*INCLUDE lkkagf88.

*REL.3.1 insert: data: vbap-kzbws.

DATA: sel_max TYPE i VALUE 200.                             "99.INSS

DATA: yes VALUE 'X',
      maybe VALUE 'M',                                      "H337605
      no VALUE ' '.

DATA: sd_periode LIKE kkalkkag-abgrperiod,                  "99.ins
      pern LIKE kka0100-bis_abgr_m,                         "H339356
      BEGIN OF h_periode,                                   "99.ins
        j(4),                                               "99.ins
        m(3),                                               "99.ins
      END OF h_periode.                                     "99.ins

DATA: aktiv(4) VALUE 'X   ',
      inaktiv(4) VALUE '    ',
      aktiv_zu_inaktiv(4) VALUE 'X-> ',
      inaktiv_zu_aktiv(4) VALUE ' ->X',
      ungeprueft(4) VALUE '*   '.

DATA: BEGIN OF show_auftraege OCCURS 1000,
        vbeln LIKE vbak-vbeln,
        posnr LIKE vbap-posnr,
        abhps LIKE vbap-posnr,                              "P45.INSY
        frei(4),
        glft(4),
        enfa(4),
        tabg(4),
        abgs(4),
*       rcflg(8),                                               "H697387
        rcflg(20),                                          "H697387
      END OF show_auftraege,
      show_auftraege_tabix LIKE sy-tabix.

DATA: BEGIN OF auftraege OCCURS 1000,
        vbeln LIKE vbak-vbeln,
        posnr LIKE vbap-posnr,
        auart LIKE vbak-auart,
        kokrs LIKE vbak-kokrs,
        bukrs LIKE aufk-bukrs,                              "99.insk
        gsber LIKE vbak-gsber,
        abgrs LIKE vbap-abgrs,
        objnr LIKE vbap-objnr,
        kzbws LIKE vbap-kzbws,
        fkrel LIKE vbap-fkrel,                              "P40C.INSX
        vkorg like vbak-vkorg,                              "H697387
        vtweg like vbak-vtweg,                              "H697387
        spart like vbak-spart,                              "H697387
      END OF auftraege.

*Bei der Aenderung von POSNR_TAB ist folgendes zu beachten: In der
*Formroutine GET_OBJEKTE_ZUM_KNDAUF ist der SELECT ... FROM VBAP ...
*anzupassen, da die zu lesenden Felder explizit angesprochen werden.
DATA: BEGIN OF posnr_tab OCCURS 1000,
        vbeln LIKE vbap-vbeln,
        posnr LIKE vbap-posnr,
        abgrs LIKE vbap-abgrs,
        objnr LIKE vbap-objnr,
        werks LIKE vbap-werks,                              "99.insk
        kzbws LIKE vbap-kzbws,
        fkrel LIKE vbap-fkrel,                              "P40C.INSX
        uepos LIKE vbap-uepos,                        "P45A.INSU"99.INSS
        kzvbr like vbap-kzvbr,                              "H663263
        vbelv like vbap-vbelv,                              "H663263
        posnv like vbap-posnv,                              "H663263
      END OF posnr_tab.

DATA: posnr_tab1 LIKE posnr_tab OCCURS 1 WITH HEADER LINE,          "puf
      posnr_tab_puf LIKE posnr_tab OCCURS 1 WITH HEADER LINE,       "puf
      vbap_puffer_vbeln LIKE vbap-vbeln.                            "puf

DATA: BEGIN OF vbeln_tab OCCURS 100,
        vbeln LIKE vbak-vbeln,
        auart LIKE vbak-auart,
        kokrs LIKE vbak-kokrs,
        gsber LIKE vbak-gsber,
        kzbws LIKE vbap-kzbws,
      END OF vbeln_tab.

DATA: BEGIN OF ist_tab OCCURS 1,
        beknz LIKE cosp-beknz,
        beltp LIKE cosp-beltp,
        wrtkg LIKE cosp-wkg001,
        wrtog LIKE cosp-wog001,
      END OF ist_tab.

DATA: BEGIN OF abgr_tab OCCURS 1,
        versn LIKE cosb-versn,
        abkat LIKE cosb-abkat,
        wrtkg LIKE cosb-wkg001,
        wrtog LIKE cosb-wog001,
      END OF abgr_tab.

DATA: BEGIN OF abgrd_tab OCCURS 1,
        versn LIKE cosb-versn,
        abkat LIKE cosb-abkat,
        wrtkg LIKE cosb-wkg001,
        wrtog LIKE cosb-wog001,
      END OF abgrd_tab.

DATA: BEGIN OF abgrs_tab OCCURS 1,
        abgrs LIKE tkkas-abgsl,
        rflg6 LIKE tkkas-rflg6,
      END OF abgrs_tab.

DATA: i TYPE i,
      imax TYPE i VALUE 100.

RANGES abgrvbl FOR vbap-vbeln.

DATA: kndpos_endgeliefert,
      kndpos_endfakturiert,
      kndpos_endgeliefert1,
      kndpos_endfakturiert1,
      kndpos_set_tabg,
      kndpos_tabg,
      kndpos_frei,
      kndpos_abgs_reset,
      kndpos_set_abgs,
      kndpos_set_tabg_all,                                  "H337605
      kndpos_set_abgs_all,                                  "H337605
      j_sel TYPE i,
      j_chg TYPE i,
      i_status_enfa LIKE tkkas-istat VALUE 'I0097',
      I_STATUS_ABGR LIKE tkkas-istat VALUE 'I0082',         "H450841
      i_status_glft LIKE tkkas-istat VALUE 'I0012',
      i_status_frei LIKE tkkas-istat VALUE 'I0002',
      i_status_tabg LIKE tkkas-istat VALUE 'I0045',
      i_status_abgs LIKE tkkas-istat VALUE 'I0046',
      kndpos_info_glft type standard table of hlpext,       "HW556804
      s_kndpos_info_glft type hlpext,                       "HW556804
      kndpos_info_enfa type standard table of hlpext,       "HW556804
      s_kndpos_info_enfa type hlpext,                       "HW556804
      abhpos_info_glft type standard table of hlpext,       "HW556804
      s_abhpos_info_glft type hlpext,                       "HW556804
      abhpos_info_enfa type standard table of hlpext,       "HW556804
      s_abhpos_info_enfa type hlpext.                       "HW556804


DATA: vrgng_change     LIKE tj01-vrgng,                     "99.INS
      vrgng_set_tabg   LIKE tj01-vrgng VALUE 'BTAB',        "99.INS
      vrgng_reset_tabg LIKE tj01-vrgng VALUE 'BUTA',        "99.INS
      vrgng_set_abgs   LIKE tj01-vrgng VALUE 'BABS',        "99.INS
      vrgng_reset_abgs LIKE tj01-vrgng VALUE 'BUAB',        "99.INS
      vrgng_change_subrc LIKE sy-subrc,                     "99.INS
      vrgng_change_repeat.                                  "99.INS

DATA: vrgng_change_1   LIKE tj01-vrgng,                     "H456583A
      vrgng_set_enfa   like tj01-vrgng value 'SDEF',        "H456583A
      vrgng_reset_enfa like tj01-vrgng value 'SDES',        "H456583A
      vrgng_change_1_subrc LIKE sy-subrc,                   "H456583A
      status_change_2_subrc LIKE sy-subrc,                  "H456583A
      error_found.                                          "H456583A

data: begin of msg_tab occurs 0,                            "H456583A
        msgid like sy-msgid,                                "H456583A
        msgty like sy-msgty,                                "H456583A
        msgno like sy-msgno,                                "H456583A
        msgv1 like sy-msgv1,                                "H456583A
        msgv2 like sy-msgv2,                                "H456583A
        msgv3 like sy-msgv3,                                "H456583A
        msgv4 like sy-msgv4,                                "H456583A
      end of msg_tab.                                       "H456583A

data: begin of msg_trace,                                   "H456583A
        msgid like sy-msgid,                                "H456583A
        msgty like sy-msgty,                                "H456583A
        msgno like sy-msgno,                                "H456583A
        msgv1 like sy-msgv1,                                "H456583A
        msgv2 like sy-msgv2,                                "H456583A
        msgv3 like sy-msgv3,                                "H456583A
        msgv4 like sy-msgv4,                                "H456583A
      end of msg_trace.                                     "H456583A

DATA: abgr_obj_total TYPE i,
      abgr_obj_help TYPE i,
      abgr_obj_help1 TYPE i,
      abgr_obj_help_f TYPE f,
      abgr_obj_help_t(50),
      abgr_obj_help_t1(3),
      abgr_obj_help_t2(10),
      abgr_obj_looped TYPE i,
      abgr_obj_to_loop TYPE i,
      abgr_obj_done TYPE i,
      abgr_obj_not_done TYPE i.

DATA: BEGIN OF objnrtab OCCURS 1,
        objnr LIKE vbap-objnr,
        tabg,                                               "P40C.INSY
        glft,                                               "P40C.INSY
        enfa,                                               "P40C.INSY
      END OF objnrtab.

DATA: xstat LIKE jstat OCCURS 2 WITH HEADER LINE,
      ystat LIKE jstat OCCURS 2 WITH HEADER LINE,           "99.ins
      docu_flow_istmenge LIKE vbfa OCCURS 1 WITH HEADER LINE.

DATA: fkrel_not_found,                                      "P40C.INSX
      fkrel_upos_found.                                     "P40C.INSX

DATA: max_jahr_t LIKE kka0100-bis_abgr_j,
      max_period_t LIKE kka0100-bis_abgr_m,
      max_jahr_a LIKE kka0100-bis_abgr_j,
      max_period_a LIKE kka0100-bis_abgr_m.

data: max_jahr_a_ist LIKE kka0100-bis_abgr_j,               "H456583
      max_period_a_ist LIKE kka0100-bis_abgr_m,             "H456583
      max_jahr_a_abgr LIKE kka0100-bis_abgr_j,              "H456583
      max_period_a_abgr LIKE kka0100-bis_abgr_m.            "H456583

DATA: bal_saldo,
      bal_wip,
      bal_wipd,
      bal_rue,
      bal_rued.

data: K_ERWEITERUNG_TABG,                                   "H437839
      K_ERWEITERUNG_ABGS,                                   "H437839
      K_ERWEITERUNG_GLFT_ENFA.                              "H503958

DATA: all_or_tabg,                                          "P40C.INSY
      all_vb_tabg,                                          "P40C.INSY
      all_or_glft,                                          "P40C.INSY
      all_or_tabg_or_glft,                                  "P40C.INSY
      all_vb_glft,                                          "P40C.INSY
      all_vb_enfa.                                          "P40C.INSY

RANGES abgrauty FOR aufk-autyp.
DATA exist_non_pp_order_to_sd.


*.Erster und letzter 'Abgrenzungs-Monat' im Kostenrechnungskreis........
INCLUDE YSE_RKACOPER.
*INCLUDE rkacoper.
DATA: monat_1(3) VALUE '001',
      monat_12(3) VALUE '012',
      monat_13(3) VALUE '013',
      monat_max(3) VALUE '016',
      abgr_monat_max(3) VALUE '016',
      monat_1p TYPE i,
      monat_maxp TYPE i,
      abgr_monat_maxp TYPE i.
DATA: wahl_monat_max VALUE 'A',                     "fest voreingestellt
      wahl_monat_max_12 VALUE 'A',
      wahl_monat_max_sonder_per VALUE 'B'.
DATA: BEGIN OF current_period,
        j(4),
        m(3),
      END OF current_period.
data: authority_subrc like sy-subrc.                        "H697387

DATA: trace_on VALUE ' ',
      trace_max_obj TYPE i VALUE '1000',
      trace_exit,
      trace_level LIKE snodetext-tlevel,
      trace_name LIKE  t090w-objct,
      trace_value LIKE  sy-msgv1,
      trace_long_value(500),
      trace_title LIKE  sy-msgv1,
      trace_text_enfa(5),
      trace_text_glft(5),
      trace_text_frei(5),
      trace_text_tabg(5),
      trace_text_abgs(5),
      BEGIN OF trace_status_tab OCCURS 5,
        istat LIKE tkkas-istat,
      END OF trace_status_tab,
      BEGIN OF trace_status_tab1 OCCURS 5,
        value LIKE trace_value,
      END OF trace_status_tab1,
      BEGIN OF trace_status_tab_up OCCURS 5,
        istat LIKE tkkas-istat,
      END OF trace_status_tab_up,
      BEGIN OF trace_status_tab1_up OCCURS 5,
        value LIKE trace_value,
      END OF trace_status_tab1_up.
DATA g_balance LIKE cosp-wkg001.                            "428806
DATA g_output_header_status_change.                         "435681
DATA: kndpos_set_tabg_alt, kndpos_set_abgs_alt.             "435681

* Beg uni
DATA:
  gd_icon_data_area_expand(40) TYPE c VALUE 'ICON_DATA_AREA_EXPAND',
  gd_icon_data_area_collapse(40) TYPE c VALUE 'ICON_DATA_AREA_COLLAPSE'.
* End uni

DATA: add_selection(72) OCCURS 1 WITH HEADER LINE,          "H450841
      add_selection1(72) OCCURS 1 WITH HEADER LINE,         "H450841
      knd_abgrs_struktur_found,                             "H450841
      posnr_stru_k_found,                                   "H450841
      posnr_stru_a_found,                                   "H450841
      posnr_stru_b_found,                                   "H450841
      auftraege_rflg6 like tkkap-rflg6,                     "H450841
      auftraege_abgr_aktiv,                                 "H450841
      posnr_stru_posnr like vbap-posnr,                     "H450841
      posnr_stru_abgrs like vbap-abgrs,                     "H450841
      posnr_stru_objnr like vbap-objnr,                     "H503958
      exit_from_reset_abgs,                                 "H450841
      exit_from_reset_tabg,                                 "H450841
      posnr_tab_down like posnr_tab occurs 0 with header line, "H450841
      posnr_tab_down1 like posnr_tab occurs 0 with header line, "H450841
      posnr_tab_up like posnr_tab occurs 0 with header line, "H450841
      posnr_tab_up1 like posnr_tab occurs 0 with header line. "H450841


************************************************************************
*
************************************************************************
AT SELECTION-SCREEN ON BLOCK statu2.
  PERFORM prepare_period.                                   "H450841
  PERFORM sel_scr_block_statu2.                                       "X


************************************************************************
*
************************************************************************
AT SELECTION-SCREEN ON BLOCK statu5.
  PERFORM prepare_period.                                   "H450841
  PERFORM sel_scr_block_statu5.                                       "X


************************************************************************
*
************************************************************************
AT SELECTION-SCREEN ON BLOCK statu1c.                       "99.ins
  PERFORM prepare_period.                                   "H450841
  PERFORM sel_scr_block_statu1c.                                      "X


************************************************************************
*
************************************************************************
AT SELECTION-SCREEN OUTPUT.

  if sy-batch eq yes and abgrkokr is initial.               "H547215
    CALL FUNCTION 'K_KOKRS_SET'                             "H547215
            EXPORTING display   = ' '                       "H547215
                      i_kokrs   = ' '                       "H547215
                      popup     = '0'                       "H547215
            IMPORTING e_kokrs   = abgrkokr.                 "H547215
  endif.                                                    "H547215

  LOOP AT SCREEN.
    CHECK screen-group1 CP 'JM+'.                                    "X
    screen-input = '0'.
    MODIFY SCREEN.
  ENDLOOP.
  PERFORM osalor_at_sel_scr_out.                                      "X


************************************************************************
*
************************************************************************
AT SELECTION-SCREEN.                                                  "X
  PERFORM prepare_period.                                   "H450841
  IF mit_abgr eq no and ohne_abg eq no.                     "H450841
    SET CURSOR FIELD 'MIT_ABGR'.                            "H450841
    MESSAGE e000 WITH text-055.                             "H450841
  ENDIF.                                                    "H450841
  PERFORM sel_scr_block_statu1c.                                      "X
  PERFORM sel_scr_block_statu2.                                       "X
  PERFORM sel_scr_block_statu5.                                       "X
  PERFORM osalor_at_sel_screen.                                       "X


************************************************************************
*
************************************************************************
INITIALIZATION.
  IF sy-batch NE yes.
    CALL FUNCTION 'K_KOKRS_SET'
      EXPORTING
        display = ' '
        i_kokrs = ' '
        popup   = ' '
      IMPORTING
        e_kokrs = abgrkokr.
*              EXCEPTIONS NOT_FOUND = 01.
* elseif sy-batch eq yes and abgrkokr is initial.     "H520264, 547215
*   CALL FUNCTION 'K_KOKRS_SET'                       "H520264, 547215
*              EXPORTING display   = ' '              "H520264, 547215
*                        i_kokrs   = ' '              "H520264, 547215
*                        popup     = '0'              "H520264, 547215
*              IMPORTING e_kokrs   = abgrkokr.        "H520264, 547215
  ENDIF.

  IF NOT abgrkokr IS INITIAL.                                       "46c
    LOOP AT SCREEN.                                                 "46c
      IF screen-group1 EQ 'KOK'.                                    "46c
        screen-active = '0'.                                        "46c
        MODIFY SCREEN.                                              "46c
      ENDIF.                                                        "46c
    ENDLOOP.                                                        "46c
  ENDIF.                                                            "46c

  PERFORM prepare_period.

* Beg uni
  IF sy-saprl CP '3*' OR sy-saprl CP '40*' OR sy-saprl CP '45*'.
    gd_icon_data_area_expand = '@3S@'.
    gd_icon_data_area_collapse = '@3T@'.
  ENDIF.
* End uni

************************************************************************
*
************************************************************************
START-OF-SELECTION.
  IF mit_abgr eq no and ohne_abg eq no.                     "H450841
    SET CURSOR FIELD 'MIT_ABGR'.                            "H450841
    MESSAGE e000 WITH text-055.                             "H450841
  ENDIF.                                                    "H450841

  abh_pos_abgs = yes.                                       "H450841
  abh_pos_tabg = abh_pos.                                   "H450841

  PERFORM prepare_period.                                           "46c
  perform perioden_ermitteln.         "Coding in form untergebr."H450841

  trace_on = det_anal.

  PERFORM check_tj06.                                       "99.INS

  perform vorgangsberechtigung.                             "H697387

  CALL FUNCTION 'STATUS_BUFFER_REFRESH'
    EXPORTING
      i_free = yes.
*                exceptions others = 01.

* Lesen Autraege in Formroutine untergebracht                   "H450841
  perform process_ind0.                                     "H450841
  PERFORM auftraege_lesen.                                  "H450841

  PERFORM exist_non_pp_order_to_sd.
  PERFORM get_struktur_info.
  PERFORM trace_get_status_text.
  PERFORM trace_init.
  PERFORM trace_erlaeuterungen.
  perform check_if_user_exit_aktiv.                         "H437839
  perform process_ind1_prep.         "code in form untergebracht"H450841

  SORT auftraege BY vbeln posnr.                                    "puf
  CLEAR vbap_puffer_vbeln.                                          "puf

  CLEAR: j_sel, j_chg.
  LOOP AT auftraege WHERE NOT objnr IS INITIAL.
    PERFORM trace_begin_auftrag.
    perform process_ind1.            "code in form untergebracht"H450841
    PERFORM auftrag_verarbeiten.
    perform clear_obj_ohne_salden_prf.                      "H450841
    perform trace_error.                                    "H456583A
    PERFORM trace_end_auftrag.
    IF trace_on = yes AND trace_exit = yes.
      EXIT.
    ENDIF.
  ENDLOOP.
  perform process_ind2.              "code in form untergebracht"H450841

  IF anz_aend EQ yes.
    LOOP AT show_auftraege.
      IF NOT ( show_auftraege-frei EQ aktiv_zu_inaktiv OR
               show_auftraege-frei EQ inaktiv_zu_aktiv OR
               show_auftraege-glft EQ aktiv_zu_inaktiv OR
               show_auftraege-glft EQ inaktiv_zu_aktiv OR
               show_auftraege-enfa EQ aktiv_zu_inaktiv OR
               show_auftraege-enfa EQ inaktiv_zu_aktiv OR
               show_auftraege-tabg EQ aktiv_zu_inaktiv OR
               show_auftraege-tabg EQ inaktiv_zu_aktiv OR
               show_auftraege-abgs EQ aktiv_zu_inaktiv OR
               show_auftraege-abgs EQ inaktiv_zu_aktiv OR
               show_auftraege-rcflg = text-017 ).           "H450841
        DELETE show_auftraege.
      ENDIF.
    ENDLOOP.
  ENDIF.

  MESSAGE s000 WITH j_sel text-013 j_chg text-014.
  PERFORM trace_display.
  PERFORM show_status_auftraege.


************************************************************************
*
************************************************************************
FORM auftrag_verarbeiten.
  LOCAL: set_tabg,                                          "99.INSA
         nc_tabg.                                           "99.INSA1

  ADD 1 TO j_sel.

  REFRESH posnr_tab.                                        "P45.INSY

  CALL FUNCTION 'STATUS_BUFFER_REFRESH'
    EXPORTING
      i_free = yes
    EXCEPTIONS
      OTHERS = 01.

  clear all_or_tabg.                                        "H547897
  clear all_vb_tabg.                                        "H547897
  clear all_or_glft.                                        "H547897
  clear all_or_tabg_or_glft.                                "H547897
  clear all_vb_glft.                                        "H547897
  clear all_vb_enfa.                                        "H547897

  vrgng_change_subrc = 0.                                   "H827724
  vrgng_change_1_subrc = 0.                                 "H827724

  clear kndpos_set_tabg.                                    "H534965
  clear kndpos_set_abgs.                                    "H534965
  clear kndpos_set_tabg_all.                                "H534965
  clear kndpos_set_abgs_all.                                "H534965

  CLEAR show_auftraege.                                     "P45.INSY
  MOVE-CORRESPONDING auftraege TO show_auftraege.
  show_auftraege-frei = ungeprueft.
  show_auftraege-glft = ungeprueft.
  show_auftraege-enfa = ungeprueft.
  show_auftraege-tabg = ungeprueft.
  show_auftraege-abgs = ungeprueft.
  show_auftraege-rcflg = space.

  CALL FUNCTION 'STATUS_CHECK'
    EXPORTING
      objnr             = auftraege-objnr
      status            = i_status_abgs
    EXCEPTIONS
      object_not_found  = 01
      status_not_active = 02.
  IF sy-subrc EQ 0.
    show_auftraege-abgs = aktiv.
  ELSEIF sy-subrc EQ 01.                                        "trace
    EXIT.                                                       "trace
  ELSEIF sy-subrc EQ 02.
    show_auftraege-abgs = inaktiv.
  ENDIF.
*   CHECK SY-SUBRC NE 0 OR RST_ABGS EQ YES.
  PERFORM trace_current_status USING trace_text_abgs sy-subrc.
  CHECK show_auftraege-abgs = inaktiv OR rst_abgs EQ yes.

  AUTHORITY-CHECK OBJECT 'V_VBAK_VKO'                       "H697387
           ID 'VKORG' FIELD auftraege-vkorg                 "H697387
           ID 'VTWEG' FIELD auftraege-vtweg                 "H697387
           ID 'SPART' FIELD auftraege-spart                 "H697387
           ID 'ACTVT' FIELD '02'.                           "H697387
  authority_subrc = sy-subrc.                               "H697387
  perform trace_auth1 using authority_subrc.                "H697387
  if authority_subrc ne 0.                                  "H697387
    show_auftraege-rcflg = text-074.                        "H697387
    APPEND show_auftraege.                                  "H697387
  endif.                                                    "H697387
  check authority_subrc = 0.                                "H697387

  PERFORM trace_erg_erm.                                    "H450841

  PERFORM check_objekte_up tables posnr_tab_up              "H450841
                           USING auftraege-vbeln            "H450841
                                 auftraege-posnr            "H450841
                                 auftraege-objnr            "H450841
                                 auftraege-abgrs            "H450841
                                 auftraege_rflg6            "H450841
                                 auftraege_abgr_aktiv       "H450841
                                 posnr_stru_k_found         "H450841
                                 posnr_stru_a_found         "H450841
                                 posnr_stru_b_found         "H450841
                                 posnr_stru_posnr           "H450841
                                 posnr_stru_abgrs           "H450841
                                 posnr_stru_objnr.          "H503958
  posnr_tab_up1[] = posnr_tab_up[].                         "H450841
  if posnr_stru_k_found = yes or                            "H450841
     posnr_stru_a_found = yes or                            "H450841
     posnr_stru_b_found = yes and auftraege-abgrs = space or "H450841
     posnr_stru_b_found = yes and                           "H450841
     auftraege-abgrs <> space and auftraege_abgr_aktiv = no. "H450841
    PERFORM trace_ohne_obj_abh.                             "H450841
    exit.                                                   "H450841
  endif.                                                    "H450841

  IF rst_tabg EQ no AND set_tabg = yes.                     "99.INSA
    CALL FUNCTION 'STATUS_CHECK'                            "99.INSA
                   EXPORTING objnr  = auftraege-objnr       "99.INSA
                             status = i_status_tabg         "99.INSA
                   EXCEPTIONS object_not_found  = 01        "99.INSA
                              status_not_active = 02.       "99.INSA
    IF sy-subrc EQ 0.                                       "99.INSA
      set_tabg = no.                                        "99.INSA
      nc_tabg = yes.                                        "99.INSA1
    ENDIF.                                                  "99.INSA
    PERFORM trace_current_status USING trace_text_tabg sy-subrc.
  ENDIF.                                                    "99.INSA

  REFRESH: xstat, ist_tab, abgr_tab, abgrd_tab.

  IF set_tabg EQ yes OR set_abgs EQ yes.
    REFRESH objnrtab.
    objnrtab-objnr = auftraege-objnr.
    APPEND objnrtab.
*REL.3.1 insert: auftraege-kzbws = space.
    if auftraege-abgrs ne space.                            "H450841
      PERFORM get_objekte_zum_kndauf TABLES objnrtab
                                            posnr_tab_down  "H450841
                                     USING auftraege-vbeln
                                           auftraege-posnr
                                           auftraege-abgrs
                                           auftraege-kzbws  "P40C.MODX
                                           yes.             "P40C.INSX
      posnr_tab_down1[] = posnr_tab_down[].                 "H450841
      PERFORM get_status TABLES objnrtab                    "P40C.INSY
                         USING auftraege-objnr.             "P40C.INSY
      PERFORM trace_dependent_obj_fnd.
    endif.                                                  "H450841
    PERFORM get_data_and_last_period TABLES objnrtab
                                     USING auftraege-objnr
                                           auftraege-abgrs  "H450841
                                           max_jahr_t
                                           max_period_t
                                           max_jahr_a
                                           max_period_a
                                           set_tabg                "AS
                                           lastjahr
                                           lastmona
                                           set_abgs                "AS
                                           lastjah1                "AS
                                           lastmon1.               "AS
    PERFORM trace_max_period.
  ELSEIF set_enfa EQ yes OR set_glft EQ yes.                "P40C.INSX
    REFRESH objnrtab.                                       "P40C.INSX
    objnrtab-objnr = auftraege-objnr.                       "P40C.INSX
    APPEND objnrtab.                                        "P40C.INSX
    if auftraege-abgrs ne space.                            "H450841
      PERFORM get_objekte_zum_kndauf TABLES objnrtab        "P40C.INSX
                                            posnr_tab_down  "H450841
                                     USING auftraege-vbeln  "P40C.INSX
                                           auftraege-posnr  "P40C.INSX
                                           auftraege-abgrs  "P40C.INSX
                                           auftraege-kzbws  "P40C.INSX
                                           no.              "P40C.INSX
      posnr_tab_down1[] = posnr_tab_down[].                 "H450841
      PERFORM trace_dependent_obj_fnd.
    endif.                                                  "H450841
  ENDIF.                                                    "P40C.INSX

  IF set_enfa EQ yes OR set_glft EQ yes OR
     if_enfa EQ yes OR if_glft EQ yes OR
     if_enfa1 EQ yes OR if_glft1 EQ yes OR if_tabg1 EQ yes.
    fkrel_not_found = no.                                   "P40C.INSX
    fkrel_upos_found = no.                                  "P40C.INSX
    LOOP AT posnr_tab WHERE NOT fkrel CO ' D'.              "P40C.INSX
      fkrel_upos_found = yes.                               "P40C.INSX
      EXIT.                                                 "P40C.INSX
    ENDLOOP.                                                "P40C.INSX
    IF fkrel_upos_found = no AND auftraege-fkrel CO ' D'.   "P40C.INSX
      fkrel_not_found = yes.                                "P40C.INSX
    ENDIF.                                                  "P40C.INSX

    clear kndpos_info_glft.                                 "HW556804
    clear kndpos_info_enfa.                                 "HW556804

    CALL FUNCTION 'SD_ORDER_GET_DATA'
      EXPORTING
        i_document_number  = auftraege-vbeln
        i_item_number      = auftraege-posnr
        i_periode          = sd_periode                     "99.ins
      IMPORTING
        e_all_issued       = kndpos_endgeliefert
        e_all_posted       = kndpos_endfakturiert
      TABLES
        e_document_flow    = docu_flow_istmenge
        e_docu_all_issued  = kndpos_info_glft               "HW556804
        e_docu_all_posted  = kndpos_info_enfa               "HW556804
      EXCEPTIONS
        document_not_found = 01.
    IF sy-subrc NE 0.
      kndpos_endgeliefert = no.
      kndpos_endfakturiert = no.
    ELSEIF auftraege-fkrel CO ' D' AND                      "P40C.INSX
           fkrel_upos_found = yes.                          "P40C.INSX
      kndpos_endfakturiert = yes.                           "P40C.INSX
    ENDIF.
    PERFORM trace_enfa_glft_status.
    LOOP AT posnr_tab.

      clear abhpos_info_glft.                               "HW556804
      clear abhpos_info_enfa.                               "HW556804

      CALL FUNCTION 'SD_ORDER_GET_DATA'
        EXPORTING
          i_document_number  = auftraege-vbeln
          i_item_number      = posnr_tab-posnr
          i_periode          = sd_periode                   "99.ins
        IMPORTING
          e_all_issued       = kndpos_endgeliefert1
          e_all_posted       = kndpos_endfakturiert1
        TABLES
          e_document_flow    = docu_flow_istmenge
          e_docu_all_issued  = abhpos_info_glft             "HW556804
          e_docu_all_posted  = abhpos_info_enfa             "HW556804
        EXCEPTIONS
          document_not_found = 01.
      IF sy-subrc EQ 0.                                     "P40C.MODX
        IF kndpos_endgeliefert1 EQ no.
          kndpos_endgeliefert = no.
        ENDIF.
        IF kndpos_endfakturiert1 EQ no AND                  "P40C.MODX
           ( fkrel_not_found = yes OR                       "P40C.MODX
             NOT posnr_tab-fkrel CO ' D' ).                 "P40C.INSX
          kndpos_endfakturiert = no.
        ENDIF.
      ENDIF.
      PERFORM trace_enfa_glft_status_upos.
    ENDLOOP.
    PERFORM trace_enfa_glft_status_alles.

    data kndpos_dummy.                                      "H503958
    kndpos_dummy = '1'.                                     "H503958
    IF set_enfa EQ yes and set_glft EQ yes.                 "H503958
      Perform Kundenerweiterung_glft_enfa TABLES objnrtab   "H503958
                                   USING auftraege-vbeln    "H503958
                                         auftraege-posnr    "H503958
                                         auftraege-objnr    "H503958
                                         auftraege-abgrs    "H503958
                                         kndpos_endgeliefert "H503958
                                         kndpos_endfakturiert. "H503958
    ELSEIF set_enfa EQ yes and set_glft EQ no.              "H503958
      Perform Kundenerweiterung_glft_enfa TABLES objnrtab   "H503958
                                   USING auftraege-vbeln    "H503958
                                         auftraege-posnr    "H503958
                                         auftraege-objnr    "H503958
                                         auftraege-abgrs    "H503958
                                         kndpos_dummy       "H503958
                                         kndpos_endfakturiert. "H503958
    ELSEIF set_enfa EQ no and set_glft EQ yes.              "H503958
      Perform Kundenerweiterung_glft_enfa TABLES objnrtab   "H503958
                                   USING auftraege-vbeln    "H503958
                                         auftraege-posnr    "H503958
                                         auftraege-objnr    "H503958
                                         auftraege-abgrs    "H503958
                                         kndpos_endgeliefert "H503958
                                         kndpos_dummy.      "H503958
    ENDIF.                                                  "H503958

    CALL FUNCTION 'STATUS_CHECK'
      EXPORTING
        objnr             = auftraege-objnr
        status            = i_status_enfa
      EXCEPTIONS
        object_not_found  = 01
        status_not_active = 02.
    IF sy-subrc EQ 0.
      show_auftraege-enfa = aktiv.
    ELSEIF sy-subrc EQ 02.
      show_auftraege-enfa = inaktiv.
    ENDIF.
    IF sy-subrc NE 0 AND kndpos_endfakturiert EQ yes.
      xstat-stat = i_status_enfa.
      xstat-inact = no.
      IF set_enfa EQ yes.
        APPEND xstat.
      ENDIF.
    ELSEIF sy-subrc EQ 0 AND kndpos_endfakturiert EQ no.
      xstat-stat = i_status_enfa.
      xstat-inact = yes.
      IF set_enfa EQ yes.
        APPEND xstat.
      ENDIF.
    ENDIF.
    PERFORM trace_current_status USING trace_text_enfa sy-subrc.

    CALL FUNCTION 'STATUS_CHECK'
      EXPORTING
        objnr             = auftraege-objnr
        status            = i_status_glft
      EXCEPTIONS
        object_not_found  = 01
        status_not_active = 02.
    IF sy-subrc EQ 0.
      show_auftraege-glft = aktiv.
    ELSEIF sy-subrc EQ 02.
      show_auftraege-glft = inaktiv.
    ENDIF.
    IF sy-subrc NE 0 AND kndpos_endgeliefert EQ yes.
      xstat-stat = i_status_glft.
      xstat-inact = no.
      IF set_glft EQ yes.
        APPEND xstat.
      ENDIF.
    ELSEIF sy-subrc EQ 0 AND kndpos_endgeliefert EQ no.
      xstat-stat = i_status_glft.
      xstat-inact = yes.
      IF set_glft EQ yes.
        APPEND xstat.
      ENDIF.
    ENDIF.
  ENDIF.
  PERFORM trace_current_status USING trace_text_glft sy-subrc.

  IF set_abgs EQ yes.
    PERFORM check_balance USING bal_saldo
                                bal_wip bal_wipd
                                bal_rue bal_rued.
    PERFORM trace_balance.
  ENDIF.
*?  perform trace_current_status_show.

  IF set_tabg EQ yes.
    IF max_jahr_t EQ '0001' AND if_min1 EQ yes.
      kndpos_set_tabg = no.
    ELSEIF max_jahr_t LT lastjahr OR
           max_jahr_t EQ lastjahr AND max_period_t LT lastmona OR
           max_jahr_t EQ '0001' AND if_min1 EQ no.
      IF if_enfa EQ yes AND kndpos_endfakturiert EQ no.
        kndpos_set_tabg = no.
      ELSEIF if_glft EQ yes AND kndpos_endgeliefert EQ no.
        kndpos_set_tabg = no.

*...Start of note 559713.....
*        ELSEIF or_tabg EQ yes AND all_or_tabg_or_glft EQ no. "P40C.INSY
      ELSEIF or_tabg EQ yes AND all_or_tabg_or_glft EQ no   "HW559713
        AND auftraege-abgrs NE space.                       "HW559713
*...End of note 559713...
        kndpos_set_tabg = no.                               "P40C.INSY
      ELSE.
        kndpos_set_tabg = yes.
      ENDIF.
    ELSE.
      kndpos_set_tabg = no.
    ENDIF.

    perform stru_b_check_for_abgs TABLES posnr_tab_down1    "H450841
                                         posnr_tab_up1      "H450841
                                  USING auftraege-objnr     "H450841
                                        auftraege_rflg6     "H450841
                                        kndpos_set_tabg     "H450841
                                        rst_tabg            "H450841
                                        exit_from_reset_tabg. "H450841

    if rst_tabg = yes and                                   "H450841
       auftraege-abgrs <> space.                            "H450841
      PERFORM trace_exit_from_reset_tabg.                   "H450841
      check exit_from_reset_tabg = no.                      "H450841
    endif.                                                  "H450841

    Perform Kundenerweiterung_tabg TABLES objnrtab          "H437839
                                   USING auftraege-vbeln    "H437839
                                         auftraege-posnr    "H437839
                                         auftraege-objnr    "H437839
                                         auftraege-abgrs    "H450841
                                         kndpos_set_tabg.   "H437839
  ENDIF.                                                    "H337605

  IF set_abgs EQ yes.            "Nach oben verschoben, Beginn"H337605
    CALL FUNCTION 'STATUS_CHECK'
      EXPORTING
        objnr             = auftraege-objnr
        status            = i_status_tabg
      EXCEPTIONS
        object_not_found  = 01
        status_not_active = 02.
    IF sy-subrc EQ 0.
      show_auftraege-tabg = aktiv.
    ELSEIF sy-subrc EQ 02.
      show_auftraege-tabg = inaktiv.
    ENDIF.
    IF sy-subrc EQ 0.
      kndpos_tabg = yes.
    ELSE.
      kndpos_tabg = no.
    ENDIF.
    PERFORM trace_current_status USING trace_text_abgs sy-subrc.

*     IF max_jahr_a EQ '0001' AND if_min11 EQ yes.              "H456583
    IF max_jahr_a_ist EQ '0001' AND if_min11 EQ yes.        "H456583
      kndpos_set_abgs = no.
    ELSEIF max_jahr_a LT lastjah1 OR
           max_jahr_a EQ lastjah1 AND max_period_a LT lastmon1 OR
           max_jahr_a EQ '0001' AND if_min11 EQ no.
      IF if_enfa1 EQ yes AND kndpos_endfakturiert EQ no.
        kndpos_set_abgs = no.
      ELSEIF if_glft1 EQ yes AND kndpos_endgeliefert EQ no.
        kndpos_set_abgs = no.
      ELSEIF if_tabg1 EQ yes AND kndpos_tabg EQ no.
        kndpos_set_abgs = no.
*...Start of note 559713...
*        ELSEIF or_tabg1 EQ yes AND all_or_tabg_or_glft EQ no.      "46c
      ELSEIF or_tabg1 EQ yes AND all_or_tabg_or_glft EQ no  "HW559713
         AND auftraege-abgrs NE space.                      "HW559713
*...End of note 559713...
        kndpos_set_abgs = no.                                     "46c
      ELSEIF if0saldo EQ yes AND bal_saldo EQ yes.
        kndpos_set_abgs = no.
*       ELSEIF if_0_wip EQ yes AND ( bal_wip EQ yes OR          "H450841
      ELSEIF auftraege-abgrs ne space and                   "H450841
             if_0_wip EQ yes AND ( bal_wip EQ yes OR        "H450841
                                   bal_wipd EQ yes OR
                                   bal_rue EQ yes OR
                                   bal_rued EQ yes ).
        kndpos_set_abgs = no.
      ELSE.
        kndpos_set_abgs = yes.
      ENDIF.
    ELSE.
      kndpos_set_abgs = no.
    ENDIF.

    perform stru_b_check_for_abgs TABLES posnr_tab_down     "H450841
                                         posnr_tab_up       "H450841
                                  USING auftraege-objnr     "H450841
                                        auftraege_rflg6     "H450841
                                        kndpos_set_abgs     "H450841
                                        rst_abgs            "H450841
                                        exit_from_reset_abgs. "H450841

    if rst_abgs = yes and                                   "H450841
       auftraege-abgrs <> space.                            "H450841
      PERFORM trace_exit_from_reset_abgs.                   "H450841
      check exit_from_reset_abgs = no.                      "H450841
    endif.                                                  "H450841

    Perform Kundenerweiterung_abgs TABLES objnrtab          "H437839
                                   USING auftraege-vbeln    "H437839
                                         auftraege-posnr    "H437839
                                         auftraege-objnr    "H437839
                                         auftraege-abgrs    "H450841
                                         kndpos_set_abgs.   "H437839

  ENDIF.                                               "Nach oben vers

  IF set_tabg EQ yes OR set_abgs EQ yes.                        "trace
    PERFORM trace_tabg_abgs_status.
  ENDIF.                                                        "trace

  perform export_obj_ohne_salden_prf.                       "H450841

*    IF abh_pos EQ yes.                                 "H337605 "448915
* Beginning insertion note 448915
*   IF abh_pos = yes AND
  IF ( abh_pos_tabg = yes AND
       auftraege-abgrs ne space and                         "H450841
       set_tabg = yes AND
       ( kndpos_set_tabg = yes OR
         kndpos_set_tabg = no AND rst_tabg = yes ) ) OR     "H450841
*          kndpos_set_tabg = no AND rst_tabg = yes ) OR         "H450841
     ( abh_pos_abgs = yes AND                               "H450841
       auftraege-abgrs ne space and                         "H450841
       set_abgs = yes AND
       ( kndpos_set_abgs = yes OR
         kndpos_set_abgs = no AND rst_abgs = yes ) ).
* End insertion note 448915
    PERFORM abh_positionen_verarb USING abh_pos_tabg        "H450841
                                        abh_pos_abgs        "H450841
                                        kndpos_set_tabg     "H337605
                                        kndpos_set_abgs     "H337605
                                        kndpos_set_tabg_all "H337605
                                        kndpos_set_abgs_all. "H337605
    kndpos_set_tabg_alt = kndpos_set_tabg.                  "435681
    kndpos_set_abgs_alt = kndpos_set_abgs.                  "435681
*     IF kndpos_set_tabg_all = no.                      "H337605"H450841
    IF abh_pos_tabg = yes and                               "H450841
       kndpos_set_tabg_all = no.                            "H450841
      kndpos_set_tabg = no.                                 "H337605
    ENDIF.                                                  "H337605
*     IF kndpos_set_abgs_all = no.                      "H337605"H450841
    IF abh_pos_abgs = yes and                               "H450841
       kndpos_set_abgs_all = no.                            "H450841
      kndpos_set_abgs = no.                                 "H337605
    ENDIF.                                                  "H337605
    CLEAR show_auftraege-abhps.                             "H337605

    IF set_tabg EQ yes OR set_abgs EQ yes.                      "trace
      PERFORM trace_tabg_abgs_status_alles.
    ENDIF.                                                      "trace
  ENDIF.                                                    "H337605

  IF set_tabg EQ yes.                                       "H337605
    CALL FUNCTION 'STATUS_CHECK'
      EXPORTING
        objnr             = auftraege-objnr
        status            = i_status_tabg
      EXCEPTIONS
        object_not_found  = 01
        status_not_active = 02.
    IF sy-subrc EQ 0.
      show_auftraege-tabg = aktiv.
    ELSEIF sy-subrc EQ 02.
      show_auftraege-tabg = inaktiv.
    ENDIF.
    IF sy-subrc NE 0 AND kndpos_set_tabg EQ yes.
      xstat-stat = i_status_tabg.
      xstat-inact = no.
      APPEND xstat.
    ELSEIF sy-subrc EQ 0 AND kndpos_set_tabg EQ no.
      xstat-stat = i_status_tabg.
      xstat-inact = yes.
      APPEND xstat.
    ENDIF.
    PERFORM trace_current_status USING trace_text_tabg sy-subrc.

    CALL FUNCTION 'STATUS_CHECK'
      EXPORTING
        objnr             = auftraege-objnr
        status            = i_status_frei
      EXCEPTIONS
        object_not_found  = 01
        status_not_active = 02.
    IF sy-subrc EQ 0.
      show_auftraege-frei = aktiv.
    ELSEIF sy-subrc EQ 02.
      show_auftraege-frei = inaktiv.
    ENDIF.
    IF sy-subrc NE 0 AND kndpos_set_tabg EQ no.
      xstat-stat = i_status_frei.
      xstat-inact = no.
      APPEND xstat.
    ELSEIF sy-subrc EQ 0 AND kndpos_set_tabg EQ yes.
      xstat-stat = i_status_frei.
      xstat-inact = yes.
      APPEND xstat.
    ENDIF.
    PERFORM trace_current_status USING trace_text_frei sy-subrc.
  ENDIF.

  IF set_abgs EQ yes.                                       "H337605
    CALL FUNCTION 'STATUS_CHECK'
      EXPORTING
        objnr             = auftraege-objnr
        status            = i_status_abgs
      EXCEPTIONS
        object_not_found  = 01
        status_not_active = 02.
    IF sy-subrc EQ 0.
      show_auftraege-abgs = aktiv.
    ELSEIF sy-subrc EQ 02.
      show_auftraege-abgs = inaktiv.
    ENDIF.
    kndpos_abgs_reset = no.
    IF sy-subrc NE 0 AND kndpos_set_abgs EQ yes.
      xstat-stat = i_status_abgs.
      xstat-inact = no.
      APPEND xstat.
    ELSEIF rst_abgs EQ yes AND
           sy-subrc EQ 0 AND kndpos_set_abgs EQ no.
      xstat-stat = i_status_abgs.
      xstat-inact = yes.
      APPEND xstat.
      kndpos_abgs_reset = yes.
    ENDIF.
    PERFORM trace_current_status USING trace_text_abgs sy-subrc.

    ystat[] = xstat[].                                      "99.INS
    IF kndpos_set_abgs EQ yes.
      DELETE xstat WHERE stat EQ i_status_frei.
      CALL FUNCTION 'STATUS_CHECK'
        EXPORTING
          objnr             = auftraege-objnr
          status            = i_status_frei
        EXCEPTIONS
          object_not_found  = 01
          status_not_active = 02.
      IF sy-subrc EQ 0.
        show_auftraege-frei = aktiv.
      ELSEIF sy-subrc EQ 02.
        show_auftraege-frei = inaktiv.
      ENDIF.
      IF sy-subrc EQ 0.
        xstat-stat = i_status_frei.
        xstat-inact = yes.
        APPEND xstat.
      ENDIF.
      PERFORM trace_current_status USING trace_text_frei sy-subrc.

      DELETE xstat WHERE stat EQ i_status_tabg.
      IF kndpos_tabg EQ yes.
        xstat-stat = i_status_tabg.
        xstat-inact = yes.
        APPEND xstat.
      ENDIF.
    ELSEIF kndpos_abgs_reset EQ yes AND set_tabg EQ no.
      DELETE xstat WHERE stat EQ i_status_frei.
      CALL FUNCTION 'STATUS_CHECK'
        EXPORTING
          objnr             = auftraege-objnr
          status            = i_status_frei
        EXCEPTIONS
          object_not_found  = 01
          status_not_active = 02.
      IF sy-subrc EQ 0.
        show_auftraege-frei = aktiv.
      ELSEIF sy-subrc EQ 02.
        show_auftraege-frei = inaktiv.
      ENDIF.
      IF sy-subrc EQ 0.
        kndpos_frei = yes.
      ELSE.
        kndpos_frei = no.
      ENDIF.
      PERFORM trace_current_status USING trace_text_frei sy-subrc.

      DELETE xstat WHERE stat EQ i_status_tabg.
      IF kndpos_tabg EQ no AND kndpos_frei EQ no.
        xstat-stat = i_status_tabg.
        xstat-inact = no.
        APPEND xstat.
      ENDIF.
    ENDIF.
  ENDIF.

* Beginning insertion note 435681
* Always trace status REL in order that we can display actual state
* before status change.
  IF trace_on = yes.
    CALL FUNCTION 'STATUS_CHECK'
      EXPORTING
        objnr             = auftraege-objnr
        status            = i_status_frei
      EXCEPTIONS
        object_not_found  = 01
        status_not_active = 02.
    PERFORM trace_current_status USING trace_text_frei sy-subrc.
    PERFORM trace_current_status_show.
  ENDIF.
  g_output_header_status_change = 'X'.
* End insertion note 435681

  LOOP AT xstat WHERE stat = i_status_tabg                  "H450841
                   OR stat = i_status_abgs.                 "H450841
    CALL FUNCTION 'SD_ITEM_CHANGE_STATUS_INIT'.             "H450841
    EXIT.                                                   "H450841
  ENDLOOP.                                                  "H450841

  CLEAR vrgng_change.                                       "99.INS
  vrgng_change_repeat = no.                                 "99.INS
  LOOP AT xstat WHERE stat = i_status_tabg                  "99.INS
                   OR stat = i_status_abgs.                 "99.INS
    IF xstat-stat = i_status_tabg AND                       "99.INS
       xstat-inact = yes.                                   "99.INS
      IF vrgng_change <> vrgng_set_abgs AND                 "99.INS
         vrgng_change <> vrgng_reset_abgs.                  "99.INS
        vrgng_change = vrgng_reset_tabg.                    "99.INS
      ENDIF.                                                "99.INS
    ELSEIF xstat-stat = i_status_tabg AND                   "99.INS
           xstat-inact = no.                                "99.INS
      IF vrgng_change <> vrgng_set_abgs.                    "99.INS
        vrgng_change = vrgng_set_tabg.                      "99.INS
      ENDIF.                                                "99.INS
    ELSEIF xstat-stat = i_status_abgs AND                   "99.INS
           xstat-inact = yes.                               "99.INS
      IF vrgng_change <> vrgng_set_tabg.                    "99.INS
        vrgng_change = vrgng_reset_abgs.                    "99.INS
      ENDIF.                                                "99.INS
    ELSEIF xstat-stat = i_status_abgs AND                   "99.INS
           xstat-inact = no.                                "99.INS
      vrgng_change = vrgng_set_abgs.                        "99.INS
    ENDIF.                                                  "99.INS
  ENDLOOP.                                                  "99.INS
  IF NOT vrgng_change IS INITIAL.                           "99.INS
    CALL FUNCTION 'SD_ITEM_CHANGE_STATUS'                   "99.INS
       EXPORTING i_vrgng           = vrgng_change           "99.INS
                 i_document_number = auftraege-vbeln        "99.INS
                 i_item_number     = auftraege-posnr        "99.INS
                 i_external_call   = yes                    "99.INS
*.......i_sloppy_check = yes -> Fertigungsauftraege nicht checken"99.INS
                 i_sloppy_check    = if_sdof1               "99.INS
                 i_check_only      = test_lf                "99.INS
       EXCEPTIONS not_allowed = 1                           "99.INS
                  fatal_error = 2                           "99.INS
                    ERROR_MESSAGE = 2                       "H697602
                  OTHERS = 2.                               "H456583A
    vrgng_change_subrc = sy-subrc.                          "99.INS
    move-corresponding sy to msg_trace.                     "H456583A
    PERFORM trace_vrgng_change USING vrgng_change sy-subrc no.
    sy-subrc = vrgng_change_subrc.                              "trace
    IF sy-subrc = 1.                                        "99.INS
      IF vrgng_change = vrgng_set_abgs.                     "99.INS
        vrgng_change_repeat = yes.                          "99.INS
        xstat[] = ystat[].                                  "99.INS
        DELETE xstat WHERE stat = i_status_abgs.            "99.INS
      ELSEIF vrgng_change = vrgng_set_tabg AND              "99.INS
             kndpos_abgs_reset EQ yes.                      "99.INS
        vrgng_change_repeat = yes.                          "99.INS
        xstat[] = ystat[].                                  "99.INS
        DELETE xstat WHERE stat EQ i_status_tabg OR         "99.INS
                           stat EQ i_status_frei.           "99.INS
        CALL FUNCTION 'STATUS_CHECK'                        "99.INS
                   EXPORTING objnr  = auftraege-objnr       "99.INS
                             status = i_status_frei         "99.INS
                   EXCEPTIONS object_not_found  = 01        "99.INS
                              status_not_active = 02.       "99.INS
        IF sy-subrc EQ 0.                                   "99.INS
          show_auftraege-frei = aktiv.                      "99.INS
        ELSEIF sy-subrc EQ 02.                              "99.INS
          show_auftraege-frei = inaktiv.                    "99.INS
        ENDIF.                                              "99.INS
*   PERFORM trace_current_status USING trace_text_frei sy-subrc. "435681
        IF show_auftraege-frei = inaktiv.                       "trace
*         IF SY-SUBRC NE 0.                                "99.INS"trace
          xstat-stat = i_status_frei.                       "99.INS
          xstat-inact = no.                                 "99.INS
          APPEND xstat.                                     "99.INS
        ENDIF.                                              "99.INS
      ELSE.                                                 "99.INS
        DELETE xstat WHERE stat = i_status_tabg             "99.INS
                        OR stat = i_status_abgs             "99.INS
                        OR stat = i_status_frei.            "99.INS
      ENDIF.                                                "99.INS
    ELSEIF sy-subrc = 2.                                    "99.INS
      perform trace_collect_error.                          "H456583A
*       MESSAGE ID sy-msgid                                    "H456583A
*               TYPE sy-msgty                                  "H456583A
*               NUMBER sy-msgno                                "H456583A
*               WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.      "H456583A
    ENDIF.                                                  "99.INS
  ELSE.                                                     "99.INS
    vrgng_change_subrc = 0.                                 "99.INS
  ENDIF.                                                    "99.INS

  IF vrgng_change_repeat = yes.                             "99.INS
    CLEAR vrgng_change.                                     "99.INS
    vrgng_change_repeat = no.                               "99.INS
    LOOP AT xstat WHERE stat = i_status_tabg                "99.INS
                     OR stat = i_status_abgs.               "99.INS
      IF xstat-stat = i_status_tabg AND                     "99.INS
         xstat-inact = yes.                                 "99.INS
        IF vrgng_change <> vrgng_set_abgs AND               "99.INS
           vrgng_change <> vrgng_reset_abgs.                "99.INS
          vrgng_change = vrgng_reset_tabg.                  "99.INS
        ENDIF.                                              "99.INS
      ELSEIF xstat-stat = i_status_tabg AND                 "99.INS
             xstat-inact = no.                              "99.INS
        IF vrgng_change <> vrgng_set_abgs.                  "99.INS
          vrgng_change = vrgng_set_tabg.                    "99.INS
        ENDIF.                                              "99.INS
      ELSEIF xstat-stat = i_status_abgs AND                 "99.INS
             xstat-inact = yes.                             "99.INS
        IF vrgng_change <> vrgng_set_tabg.                  "99.INS
          vrgng_change = vrgng_reset_abgs.                  "99.INS
        ENDIF.                                              "99.INS
      ELSEIF xstat-stat = i_status_abgs AND                 "99.INS
             xstat-inact = no.                              "99.INS
        vrgng_change = vrgng_set_abgs.                      "99.INS
      ENDIF.                                                "99.INS
    ENDLOOP.                                                "99.INS
    IF NOT vrgng_change IS INITIAL.                         "99.INS
      CALL FUNCTION 'SD_ITEM_CHANGE_STATUS'                 "99.INS
         EXPORTING i_vrgng           = vrgng_change         "99.INS
                   i_document_number = auftraege-vbeln      "99.INS
                   i_item_number     = auftraege-posnr      "99.INS
                   i_external_call   = yes                  "99.INS
                   i_sloppy_check    = if_sdof1             "99.INS
                   i_check_only      = test_lf              "99.INS
         EXCEPTIONS not_allowed = 1                         "99.INS
                    fatal_error = 2                         "99.INS
                      ERROR_MESSAGE = 2                     "H697602
                    OTHERS = 2.                             "H456583A
      vrgng_change_subrc = sy-subrc.                        "99.INS
      move-corresponding sy to msg_trace.                   "H456583A
      PERFORM trace_vrgng_change USING vrgng_change sy-subrc no.
      sy-subrc = vrgng_change_subrc.                            "trace
      IF sy-subrc = 1.                                      "99.INS
        DELETE xstat WHERE stat = i_status_tabg             "99.INS
                        OR stat = i_status_abgs             "99.INS
                        OR stat = i_status_frei.            "99.INS
      ELSEIF sy-subrc = 2.                                  "99.INS
        perform trace_collect_error.                        "H456583A
*         MESSAGE ID sy-msgid                                  "H456583A
*                 TYPE sy-msgty                                "H456583A
*                 NUMBER sy-msgno                              "H456583A
*                 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.    "H456583A
      ENDIF.                                                "99.INS
    ELSE.                                                   "99.INS
      vrgng_change_subrc = 0.                               "99.INS
    ENDIF.                                                  "99.INS
  ENDIF.                                                    "99.INS

  CLEAR vrgng_change_1.                                     "H456583A
  LOOP AT xstat WHERE stat = i_status_enfa.                 "H456583A
    IF xstat-stat = i_status_enfa AND                       "H456583A
       xstat-inact = yes.                                   "H456583A
      vrgng_change_1 = vrgng_reset_enfa.                    "H456583A
    ELSEIF xstat-stat = i_status_enfa AND                   "H456583A
           xstat-inact = no.                                "H456583A
      vrgng_change_1 = vrgng_set_enfa.                      "H456583A
    ENDIF.                                                  "H456583A
  ENDLOOP.                                                  "H456583A
  if not vrgng_change_1 is initial.                         "H456583A
    CALL FUNCTION 'STATUS_CHANGE_FOR_ACTIVITY'              "H456583A
      EXPORTING                                             "H456583A
        OBJNR                      = auftraege-objnr        "H456583A
        VRGNG                      = vrgng_change_1         "H456583A
*         ERROR_OCCURRED             = error_found             "H456583A
        CHECK_ONLY                 = test_lf                "H456583A
      importing
        ERROR_OCCURRED             = error_found
      EXCEPTIONS                                            "H456583A
        ACTIVITY_NOT_ALLOWED       = 1                      "H456583A
        OBJECT_NOT_FOUND           = 2                      "H456583A
        STATUS_INCONSISTENT        = 1                      "H456583A
        STATUS_NOT_ALLOWED         = 1                      "H456583A
        WRONG_INPUT                = 2                      "H456583A
        WARNING_OCCURED            = 0                      "H456583A
        OTHERS                     = 2.                     "H456583A
    vrgng_change_1_subrc = sy-subrc.                        "H456583A
    move-corresponding sy to msg_trace.                     "H456583A
    PERFORM trace_vrgng_change_1 USING vrgng_change_1       "H456583A
                                       sy-subrc             "H456583A
                                       no.                  "H456583A
    if error_found = yes and vrgng_change_1_subrc = 0.      "H456583A
      vrgng_change_1_subrc = 3.                             "H456583A
    ENDIF.                                                  "H456583A
    if vrgng_change_1_subrc <> 0.                           "H456583A
      DELETE xstat WHERE stat = i_status_enfa.              "H456583A
    endif.                                                  "H456583A
    IF vrgng_change_1_subrc = 2.                            "H456583A
      perform trace_collect_error.                          "H456583A
    endif.                                                  "H456583A
  else.                                                     "H456583A
    vrgng_change_1_subrc = 0.                               "H456583A
  endif.                                                    "H456583A

*    PERFORM trace_current_status_show.                          "435681

  LOOP AT xstat.
    CASE xstat-stat.
      WHEN i_status_frei.
        IF xstat-inact EQ yes.
          show_auftraege-frei = aktiv_zu_inaktiv.
        ELSE.
          show_auftraege-frei = inaktiv_zu_aktiv.
        ENDIF.
      WHEN i_status_glft.
        IF xstat-inact EQ yes.
          show_auftraege-glft = aktiv_zu_inaktiv.
        ELSE.
          show_auftraege-glft = inaktiv_zu_aktiv.
        ENDIF.
      WHEN i_status_enfa.
        IF xstat-inact EQ yes.
          show_auftraege-enfa = aktiv_zu_inaktiv.
        ELSE.
          show_auftraege-enfa = inaktiv_zu_aktiv.
        ENDIF.
      WHEN i_status_tabg.
        IF xstat-inact EQ yes.
          show_auftraege-tabg = aktiv_zu_inaktiv.
        ELSE.
          show_auftraege-tabg = inaktiv_zu_aktiv.
        ENDIF.
      WHEN i_status_abgs.
        IF xstat-inact EQ yes.
          show_auftraege-abgs = aktiv_zu_inaktiv.
        ELSE.
          show_auftraege-abgs = inaktiv_zu_aktiv.
        ENDIF.
    ENDCASE.
  ENDLOOP.
  APPEND show_auftraege.
  show_auftraege_tabix = sy-tabix.

  DESCRIBE TABLE xstat LINES i.
  IF i GT 0.
    READ TABLE show_auftraege INDEX show_auftraege_tabix.
    ADD 1 TO j_chg.
    IF NOT vrgng_change IS INITIAL.                         "99.INS
      DELETE xstat WHERE stat = i_status_tabg               "99.INS
                      OR stat = i_status_abgs               "99.INS
                      OR stat = i_status_frei.              "99.INS
      DESCRIBE TABLE xstat LINES i.                         "99.INS
    ENDIF.
    IF NOT vrgng_change_1 IS INITIAL.                       "H456583A
      DELETE xstat WHERE stat = i_status_enfa.              "H456583A
      DESCRIBE TABLE xstat LINES i.                         "H456583A
    ENDIF.                                                  "H456583A
    IF i GT 0 AND test_lf EQ no.                            "99.INS
      CALL FUNCTION 'STATUS_CHANGE_INTERN'
       EXPORTING
            objnr               = auftraege-objnr
       importing                                            "H456583A
            error_occurred      = error_found               "H456583A
*             object_not_found    =
*             status_inconsistent =
*             status_not_allowed  =
       TABLES
            status              = xstat
       EXCEPTIONS
            object_not_found    = 1
            status_inconsistent = 2
            status_not_allowed  = 3
            OTHERS              = 4.
      status_change_2_subrc = sy-subrc.                     "H456583A
      if sy-subrc ne 0.                                     "H456583A
        perform trace_collect_error.                        "H456583A
      endif.                                                "H456583A
      if error_found = yes.                                 "H456583A
        status_change_2_subrc = 5.                          "H456583A
      endif.                                                "H456583A
    ELSE.                                                   "H456583A
      status_change_2_subrc = 0.                            "H456583A
    ENDIF.                                                  "H456583A
    IF status_change_2_subrc EQ 0                           "H456583A
       AND ( vrgng_change_subrc EQ 0 OR                     "H456583A
             vrgng_change_subrc EQ 1 )                      "H456583A
       AND ( vrgng_change_1_subrc EQ 0 OR                   "H456583A
             vrgng_change_1_subrc EQ 1 ).                   "H456583A
      show_auftraege-rcflg = text-016.
    ELSE.
      show_auftraege-rcflg = text-017.
    ENDIF.
    PERFORM trace_status_direkt USING no.
    MODIFY show_auftraege INDEX show_auftraege_tabix.
    COMMIT WORK.
    CALL FUNCTION 'SD_ITEM_CHANGE_STATUS_INIT'.
  ENDIF.

* Beginning note 442023
  IF test_lf = 'X'.
*     Remove all locks that are set when checking if deletion flag can
*     be set for an assembly order
    CALL FUNCTION 'DEQUEUE_ALL'.
  ENDIF.
* End note 442023

*   IF ABH_POS EQ YES.                                 "P45.INSY"H337605
*     PERFORM ABH_POSITIONEN_VERARB USING KNDPOS_SET_TABG  "P45."H337605
*                                         KNDPOS_SET_ABGS. "P45."H337605
*   ENDIF.                                             "P45.INSY"H337605
ENDFORM.                    "auftrag_verarbeiten


************************************************************************
*
************************************************************************
FORM get_data_and_last_period
                     TABLES objektnummern STRUCTURE objnrtab
                     USING top_objnr like vbap-objnr
                           top_abgrs like vbap-abgrs        "H450841
                           max_jahr like MAX_JAHR_T
                           max_period like MAX_period_t
                           max_jah2 like MAX_JAHR_A
                           max_perio2 like MAX_period_a
                           st type kkachr1
                           ref_jah1 like LASTJAHR
                           ref_perio1 like LASTmona
                           sa type kkachr1
                           ref_jah2 like LASTJAH1
                           ref_perio2 like LASTmon1.
  DATA: seltab LIKE cosel OCCURS 1 WITH HEADER LINE,
        cospatab LIKE cospa OCCURS 1 WITH HEADER LINE,
        cossatab LIKE cossa OCCURS 1 WITH HEADER LINE,
        cosbatab LIKE cosba OCCURS 1 WITH HEADER LINE,
        cosbdtab LIKE cosbd OCCURS 1 WITH HEADER LINE,
      cosbdtab1 LIKE cosbd OCCURS 1 WITH HEADER LINE.       "99.INSS
  DATA: x LIKE cospa-wkg001,
        y LIKE cospa-wkg001,
        z LIKE cospa-wkg001,
        i TYPE i.
*ATA: REF_JAHR LIKE KKA0100-BIS_ABGR_J,                              "AS
*     REF_PERIOD LIKE KKA0100-BIS_ABGR_M.                            "AS
  RANGES: robjnr FOR cosbd-objnr,
        robjnr1 FOR cosbd-objnr,                            "99.INSS
          rversn FOR cosbd-versn.

  INCLUDE YSE_RKACOPER.
*  INCLUDE rkacoper.

* CLEAR: REF_JAHR, REF_PERIOD.                                       "AS
* IF ST EQ YES AND SA EQ NO.                                         "AS
*   REF_JAHR = REF_JAH1.                                             "AS
*   REF_PERIOD = REF_PERIO1.                                         "AS
* ELSEIF ST EQ NO AND SA EQ YES.                                     "AS
*   REF_JAHR = REF_JAH2.                                             "AS
*   REF_PERIOD = REF_PERIO2.                                         "AS
* ELSEIF ST EQ YES AND SA EQ YES.                                    "AS
*   IF REF_JAH1 GT REF_JAH2.                                         "AS
*     REF_JAHR = REF_JAH2.                                           "AS
*     REF_PERIOD = REF_PERIO2.                                       "AS
*   ELSEIF REF_JAH1 LT REF_JAH2.                                     "AS
*     REF_JAHR = REF_JAH1.                                           "AS
*     REF_PERIOD = REF_PERIO1.                                       "AS
*   ELSEIF REF_JAH1 EQ REF_JAH2.                                     "AS
*     REF_JAHR = REF_JAH1.                                           "AS
*     IF REF_PERIO1 LE REF_PERIO2.                                   "AS
*       REF_PERIOD = REF_PERIO1.                                     "AS
*     ELSE.                                                          "AS
*       REF_PERIOD = REF_PERIO2.                                     "AS
*     ENDIF.                                                         "AS
*   ENDIF.                                                           "AS
* ENDIF.                                                             "AS

  REFRESH: seltab, cospatab, cossatab.

  seltab-sign = 'I'.
  seltab-option = 'EQ'.
  seltab-high = space.
  seltab-field = 'LEDNR'.
  seltab-low = '00'.
  APPEND seltab.
  seltab-field = 'OBJNR'.
  LOOP AT objektnummern.
    seltab-low = objektnummern-objnr.
    APPEND seltab.
  ENDLOOP.
  seltab-field = 'WRTTP'.
  seltab-low = '04'.
  APPEND seltab.
  seltab-field = 'VERSN'.
  seltab-low = '000'.
  APPEND seltab.

  CALL FUNCTION 'K_COSPA_READ_MULTI'
      EXPORTING von_periode = 001
                bis_periode = generated_periods
                modus       = 1
*               PROGNAME    =
*               FORMNAME    =
      TABLES t_cosel     = seltab
             t_cospa     = cospatab
*            T_FGR       =
      EXCEPTIONS OTHERS      = 1.

  IF st EQ yes OR sa EQ yes.
    SORT cospatab BY gjahr DESCENDING.                      "99.insa
  ENDIF.

  IF st EQ yes.
    max_jahr = '0001'.
    max_period = '001'.
    LOOP AT cospatab.
      CHECK NOT ( cospatab-objnr EQ top_objnr AND
                  cospatab-beknz EQ 'A' ).
      IF NOT ( max_jahr LT ref_jah1 OR
               max_jahr EQ ref_jah1 AND max_period LT ref_perio1 ).
        EXIT.
      ENDIF.
      CHECK cospatab-gjahr GE max_jahr.
      i = 0.
      DO generated_periods TIMES
         VARYING x FROM cospatab-wkg001 NEXT cospatab-wkg002
         VARYING y FROM cospatab-wkf001 NEXT cospatab-wkf002
         VARYING z FROM cospatab-wog001 NEXT cospatab-wog002.
        ADD 1 TO i.
        CHECK x NE 0 OR y NE 0 OR Z NE 0.
        IF cospatab-gjahr GT max_jahr.
          max_jahr = cospatab-gjahr.
          max_period = i.
        ELSEIF i GT max_period.
          max_period = i.
        ENDIF.
      ENDDO.
    ENDLOOP.
  ENDIF.

  IF sa EQ yes.
    max_jah2 = '0001'.
    max_perio2 = '001'.
    LOOP AT cospatab.
      IF NOT ( max_jah2 LT ref_jah2 OR
               max_jah2 EQ ref_jah2 AND max_perio2 LT ref_perio2 ).
        EXIT.
      ENDIF.
      CHECK cospatab-gjahr GE max_jah2.
      i = 0.
      DO generated_periods TIMES
         VARYING x FROM cospatab-wkg001 NEXT cospatab-wkg002
         VARYING y FROM cospatab-wkf001 NEXT cospatab-wkf002
         VARYING z FROM cospatab-wog001 NEXT cospatab-wog002.
        ADD 1 TO i.
        CHECK x NE 0 OR y NE 0 OR Z NE 0.
        IF cospatab-gjahr GT max_jah2.
          max_jah2 = cospatab-gjahr.
          max_perio2 = i.
        ELSEIF i GT max_perio2.
          max_perio2 = i.
        ENDIF.
      ENDDO.
    ENDLOOP.
  ENDIF.

  IF NOT ( st EQ yes AND
           ( max_jahr LT ref_jah1 OR
             max_jahr EQ ref_jah1 AND max_period LT ref_perio1 ) OR
           sa EQ yes AND
           ( max_jah2 LT ref_jah2 OR
             max_jah2 EQ ref_jah2 AND max_perio2 LT ref_perio2 ) OR
           if0saldo EQ yes OR
           if_0_wip EQ yes ).
    EXIT.
  ENDIF.

  IF if0saldo EQ yes.
    LOOP AT cospatab.
      ist_tab-beknz = cospatab-beknz.
      ist_tab-beltp = cospatab-beltp.
      ADD cospatab-wkg001 THEN
          cospatab-wkg002 UNTIL
          cospatab-wkg016 GIVING ist_tab-wrtkg.
      ADD cospatab-wog001 THEN
          cospatab-wog002 UNTIL
          cospatab-wog016 GIVING ist_tab-wrtog.
      COLLECT ist_tab.
    ENDLOOP.
  ENDIF.

  REFRESH cospatab.
  FREE cospatab.

  CALL FUNCTION 'K_COSSA_READ_MULTI'
      EXPORTING von_periode = 001
                bis_periode = generated_periods
                modus       = 1
*               PROGNAME    =
*               FORMNAME    =
      TABLES t_cosel     = seltab
             t_cossa     = cossatab
*            T_FGR       =
      EXCEPTIONS OTHERS      = 1.

  IF st EQ yes OR sa EQ yes.
    SORT cossatab BY gjahr DESCENDING.                      "99.insa
  ENDIF.

  IF st EQ yes.
    LOOP AT cossatab.
      CHECK NOT ( cossatab-objnr EQ top_objnr AND
                  cossatab-beknz EQ 'A' ).
      IF NOT ( max_jahr LT ref_jah1 OR
               max_jahr EQ ref_jah1 AND max_period LT ref_perio1 ).
        EXIT.
      ENDIF.
      CHECK cossatab-gjahr GE max_jahr.
      i = 0.
      DO generated_periods TIMES
         VARYING x FROM cossatab-wkg001 NEXT cossatab-wkg002
         VARYING y FROM cossatab-wkf001 NEXT cossatab-wkf002
         VARYING z FROM cossatab-wog001 NEXT cossatab-wog002.
        ADD 1 TO i.
        CHECK x NE 0 OR y NE 0 OR Z NE 0.
        IF cossatab-gjahr GT max_jahr.
          max_jahr = cossatab-gjahr.
          max_period = i.
        ELSEIF i GT max_period.
          max_period = i.
        ENDIF.
      ENDDO.
    ENDLOOP.
  ENDIF.

  IF sa EQ yes.
    LOOP AT cossatab.
      IF NOT ( max_jah2 LT ref_jah2 OR
               max_jah2 EQ ref_jah2 AND max_perio2 LT ref_perio2 ).
        EXIT.
      ENDIF.
      CHECK cossatab-gjahr GE max_jah2.
      i = 0.
      DO generated_periods TIMES
         VARYING x FROM cossatab-wkg001 NEXT cossatab-wkg002
         VARYING y FROM cossatab-wkf001 NEXT cossatab-wkf002
         VARYING z FROM cossatab-wog001 NEXT cossatab-wog002.
        ADD 1 TO i.
        CHECK x NE 0 OR y NE 0 OR Z NE 0.
        IF cossatab-gjahr GT max_jah2.
          max_jah2 = cossatab-gjahr.
          max_perio2 = i.
        ELSEIF i GT max_perio2.
          max_perio2 = i.
        ENDIF.
      ENDDO.
    ENDLOOP.
  ENDIF.
  max_jahr_a_ist = max_jah2.                                "H456583
  max_period_a_ist = max_perio2.                            "H456583

  IF if0saldo EQ yes.
    LOOP AT cossatab.
      ist_tab-beknz = cossatab-beknz.
      ist_tab-beltp = cossatab-beltp.
      ADD cossatab-wkg001 THEN
          cossatab-wkg002 UNTIL
          cossatab-wkg016 GIVING ist_tab-wrtkg.
      ADD cossatab-wog001 THEN
          cossatab-wog002 UNTIL
          cossatab-wog016 GIVING ist_tab-wrtog.
      COLLECT ist_tab.
    ENDLOOP.
  ENDIF.

  REFRESH cossatab.
  FREE cossatab.

  check top_abgrs ne space.                                 "H450841

* CHECK if_0_wip EQ yes.                                        "H456583

  REFRESH: seltab, cosbatab, robjnr, rversn, cosbdtab,
           cosbdtab1.                                       "99.INSS

  seltab-sign = 'I'.
  seltab-option = 'EQ'.
  seltab-high = space.
  seltab-field = 'LEDNR'.
  seltab-low = '00'.
  APPEND seltab.
  seltab-field = 'OBJNR'.
  robjnr-sign = 'I'.
  robjnr-option = 'EQ'.
  robjnr-high = space.
  LOOP AT objektnummern.
    seltab-low = objektnummern-objnr.
    APPEND seltab.
    robjnr-low = objektnummern-objnr.
    APPEND robjnr.
  ENDLOOP.
  seltab-field = 'WRTTP'.
  seltab-low = '32'.
  APPEND seltab.
  seltab-field = 'VERSN'.
  seltab-low = '000'.
  APPEND seltab.
  rversn-sign = 'I'.
  rversn-option = 'EQ'.
  rversn-high = space.
  rversn-low = '000'.
  APPEND rversn.
  SELECT * FROM tkkap WHERE kokrs EQ abgrkokr
                        AND versa NE '000'
                        AND rflg3 EQ yes.
    seltab-low = tkkap-versa.
    APPEND seltab.
    rversn-low = tkkap-versa.
    APPEND rversn.
  ENDSELECT.

  CALL FUNCTION 'K_COSBA_READ_MULTI'
      EXPORTING von_periode = 001
                bis_periode = generated_periods
                modus       = 1
*               PROGNAME    =
*               FORMNAME    =
      TABLES t_cosel     = seltab
             t_cosba     = cosbatab
*            T_FGR       =
      EXCEPTIONS OTHERS      = 1.

  IF sa EQ yes.                                             "H456583
    LOOP AT cosbatab.                                       "H456583
      IF NOT ( max_jah2 LT ref_jah2 OR                      "H456583
               max_jah2 EQ ref_jah2 AND                     "H456583
                           max_perio2 LT ref_perio2 ).      "H456583
        EXIT.                                               "H456583
      ENDIF.                                                "H456583
      CHECK cosbatab-gjahr GE max_jah2.                     "H456583
      i = 0.                                                "H456583
      DO generated_periods TIMES                            "H456583
         VARYING x FROM cosbatab-wkg001 NEXT cosbatab-wkg002 "H456583
         VARYING y FROM cosbatab-wkf001 NEXT cosbatab-wkf002 "H456583
         VARYING z FROM cosbatab-wog001 NEXT cosbatab-wog002. "H456583
        ADD 1 TO i.                                         "H456583
        CHECK x NE 0 OR y NE 0 OR Z NE 0.                   "H456583
        IF cosbatab-gjahr GT max_jah2.                      "H456583
          max_jah2 = cosbatab-gjahr.                        "H456583
          max_perio2 = i.                                   "H456583
        ELSEIF i GT max_perio2.                             "H456583
          max_perio2 = i.                                   "H456583
        ENDIF.                                              "H456583
      ENDDO.                                                "H456583
    ENDLOOP.                                                "H456583
  ENDIF.                                                    "H456583

  data: max_jah3 like max_jahr_a_abgr,                      "H456583
        max_perio3 like max_period_a_abgr.                  "H456583
  IF sa EQ yes.                                             "H456583
    max_jah3 = '0001'.                                      "H456583
    max_perio3 = '001'.                                     "H456583
    LOOP AT cosbatab.                                       "H456583
      IF NOT ( max_jah3 LT ref_jah2 OR                      "H456583
               max_jah3 EQ ref_jah2 AND                     "H456583
                           max_perio3 LT ref_perio2 ).      "H456583
        EXIT.                                               "H456583
      ENDIF.                                                "H456583
      CHECK cosbatab-gjahr GE max_jah3.                     "H456583
      i = 0.                                                "H456583
      DO generated_periods TIMES                            "H456583
         VARYING x FROM cosbatab-wkg001 NEXT cosbatab-wkg002 "H456583
         VARYING y FROM cosbatab-wkf001 NEXT cosbatab-wkf002 "H456583
         VARYING z FROM cosbatab-wog001 NEXT cosbatab-wog002. "H456583
        ADD 1 TO i.                                         "H456583
        CHECK x NE 0 OR y NE 0 OR Z NE 0.                   "H456583
        IF cosbatab-gjahr GT max_jah3.                      "H456583
          max_jah3 = cosbatab-gjahr.                        "H456583
          max_perio3 = i.                                   "H456583
        ELSEIF i GT max_perio3.                             "H456583
          max_perio3 = i.                                   "H456583
        ENDIF.                                              "H456583
      ENDDO.                                                "H456583
    ENDLOOP.                                                "H456583
    max_jahr_a_abgr = max_jah3.                             "H456583
    max_period_a_abgr = max_perio3.                         "H456583
  ENDIF.                                                    "H456583

  IF if_0_wip EQ yes.
    LOOP AT cosbatab.
      abgr_tab-versn = cosbatab-versn.
      abgr_tab-abkat = cosbatab-abkat.
      ADD cosbatab-wkg001 THEN
          cosbatab-wkg002 UNTIL
          cosbatab-wkg016 GIVING abgr_tab-wrtkg.
      ADD cosbatab-wog001 THEN
          cosbatab-wog002 UNTIL
          cosbatab-wog016 GIVING abgr_tab-wrtog.
      COLLECT abgr_tab.
    ENDLOOP.
  ENDIF.

  REFRESH cosbatab.
  FREE cosbatab.

  CHECK if_0_wip EQ yes.                                    "H456583

  DESCRIBE TABLE robjnr LINES i.                            "99.INSS
  IF i LT sel_max.                                          "99.INSS
    SELECT * FROM cosbd INTO TABLE cosbdtab
             WHERE lednr EQ '00'
               AND wrttp EQ '34'
               AND versn IN rversn
               AND objnr IN robjnr.
  ELSE.                                                     "99.INSS
    REFRESH robjnr1.                                        "99.INSS
    i = 0.                                                  "99.INSS
    LOOP AT robjnr INTO robjnr1.                            "99.INSS
      APPEND robjnr1.                                       "99.INSS
      ADD 1 TO i.                                           "99.INSS
      IF i GE sel_max.                                      "99.INSS
        SELECT * FROM cosbd INTO TABLE cosbdtab1            "99.INSS
                 WHERE lednr EQ '00'                        "99.INSS
                   AND wrttp EQ '34'                        "99.INSS
                   AND versn IN rversn                      "99.INSS
                   AND objnr IN robjnr1.                    "99.INSS
        APPEND LINES OF cosbdtab1 TO cosbdtab.              "99.INSS
        REFRESH: robjnr1, cosbdtab1.                        "99.INSS
        i = 0.                                              "99.INSS
      ENDIF.                                                "99.INSS
    ENDLOOP.                                                "99.INSS
    IF i GE 1.                                              "99.INSS
      SELECT * FROM cosbd INTO TABLE cosbdtab1              "99.INSS
               WHERE lednr EQ '00'                          "99.INSS
                 AND wrttp EQ '34'                          "99.INSS
                 AND versn IN rversn                        "99.INSS
                 AND objnr IN robjnr1.                      "99.INSS
      APPEND LINES OF cosbdtab1 TO cosbdtab.                "99.INSS
    ENDIF.                                                  "99.INSS
  ENDIF.                                                    "99.INSS

  IF if_0_wip EQ yes.
    LOOP AT cosbdtab.
      abgrd_tab-versn = cosbdtab-versn.
      abgrd_tab-abkat = cosbdtab-abkat.
      abgrd_tab-wrtkg = cosbdtab-wkgabg.
      abgrd_tab-wrtog = cosbdtab-wogabg.
      COLLECT abgrd_tab.
    ENDLOOP.
  ENDIF.

  REFRESH: cosbdtab, cosbdtab1, robjnr, robjnr1.            "99.MODS
  FREE: cosbdtab, cosbdtab1, robjnr, robjnr1.               "99.MODS
ENDFORM.                    "get_data_and_last_period


************************************************************************
*
************************************************************************
FORM get_objekte_zum_kndauf TABLES
                             objektnummern STRUCTURE objnrtab
                             posnr_tab_down structure posnr_tab "H450841
                            USING vbeln like vbap-vbeln
                                  posnr like vbap-posnr
                                  abgrs like vbap-abgrs
                                  kzbws like vbap-kzbws
                                  get_aufk type kkachr1.
  DATA: ord_objlist_sd LIKE ordlist_sd OCCURS 1 WITH HEADER LINE,
      BEGIN OF zaufk OCCURS 1,                              "99.INSS
        objnr LIKE aufk-objnr,                              "99.INSS
        kdpos LIKE aufk-kdpos,                              "99.INSS
      END OF zaufk,                                         "99.INSS
      i TYPE i, i1 TYPE i,                                  "99.INSS
        found.
  RANGES: xobjnr FOR aufk-objnr,
          xposnr FOR aufk-kdpos,
          yposnr FOR vbap-posnr,
          yuepos FOR vbap-uepos.
  DATA: BEGIN OF del_pos,                                   "P45A.INSU
          posnr LIKE vbap-posnr,                            "P45A.INSU
          uepos LIKE vbap-uepos,                            "P45A.INSU
        END OF del_pos.                                     "P45A.INSU

  REFRESH: zaufk,                                           "99.MODS
           xobjnr, xposnr, yposnr, yuepos,
           posnr_tab_down,                                  "H450841
           posnr_tab, posnr_tab1.

  IF kzbws EQ space AND get_aufk EQ yes.                    "P40C.MODX
    CALL FUNCTION 'CO_SF_GET_ORDERS_SD'
      EXPORTING
        kdauf_imp      = vbeln
        kdpos_imp      = posnr
      TABLES
        ord_tab        = ord_objlist_sd
      EXCEPTIONS
        no_order_found = 01
        no_sd_number   = 02.
    IF sy-subrc EQ 0.
      xobjnr-sign = 'E'.                                    "P40C.MODZ
      xobjnr-option = 'EQ'.
      xobjnr-high = space.
      LOOP AT ord_objlist_sd.
        CHECK ord_objlist_sd-loekz IS INITIAL.              "411945
        objektnummern-objnr = ord_objlist_sd-objnr.
        APPEND objektnummern.
        xobjnr-low = ord_objlist_sd-objnr.
        APPEND xobjnr.
      ENDLOOP.
    ENDIF.
  ENDIF.

  CLEAR xposnr.
  xposnr-sign = 'I'.
  xposnr-option = 'EQ'.

  READ TABLE abgrs_tab WITH KEY abgrs.

  IF sy-subrc NE 0.                                                 "puf
    CLEAR abgrs_tab.                                                "puf
  ENDIF.                                                            "puf

  IF abgrs_tab-rflg6 CO 'ABK'.                                      "puf
    perform positionen_lesen using vbeln.                   "H450841
  ENDIF.                                                            "puf
  "puf
  IF abgrs_tab-rflg6 EQ 'K'.                                        "puf
    posnr_tab[] = posnr_tab_puf[].                                  "puf
    DELETE posnr_tab WHERE posnr EQ posnr.                          "puf
    DELETE posnr_tab WHERE objnr IS initial.                "P45.INSY
  ELSEIF abgrs_tab-rflg6 CO 'AB'.                                   "puf
    CLEAR: yuepos, yposnr.
    yposnr-sign = 'E'.
    yposnr-option = 'EQ'.
    yposnr-low = posnr.
    APPEND yposnr.
    yuepos-sign = 'I'.
    yuepos-option = 'EQ'.
    yuepos-low = posnr.
    APPEND yuepos.
    found = yes.
    WHILE found EQ yes.
      found = no.
      REFRESH posnr_tab1.
      DESCRIBE TABLE: yposnr LINES i,                       "99.INSS
                      yuepos LINES i1.                      "99.INSS
      i = i + i1.                                           "99.INSS
      IF i LE sel_max.                                      "99.INSS
        posnr_tab1[] = posnr_tab_puf[].                             "puf
        DELETE posnr_tab1 WHERE NOT ( posnr IN yposnr AND           "puf
                                     uepos IN yuepos ).             "puf
      ELSE.                                                 "99.INSS
        posnr_tab1[] = posnr_tab_puf[].                             "puf
        DELETE posnr_tab1                                   "99.INSS
               WHERE NOT posnr IN yposnr                    "99.INSS
                  OR NOT uepos IN yuepos.                   "99.INSS
      ENDIF.                                                "99.INSS
      LOOP AT posnr_tab1.                                   "P40C.MODX
        found = yes.
        posnr_tab = posnr_tab1.
        APPEND posnr_tab.
        yposnr-low = posnr_tab-posnr.
        APPEND yposnr.
        yuepos-low = posnr_tab-posnr.
        APPEND yuepos.
      ENDLOOP.
    ENDWHILE.
    DELETE posnr_tab WHERE objnr IS initial.                "P45A.INSU
* ELSE.                                                         "H767211
*   xposnr-low = posnr.                                         "H767211
*   APPEND xposnr.                                              "H767211
  ENDIF.

  posnr_tab_down[] = posnr_tab[].                           "H450841
  delete posnr_tab_down where vbeln = vbeln                 "H450841
                          and posnr = posnr.                "H450841

  xposnr-low = posnr.                                       "H767211
  APPEND xposnr.                                            "H767211
  LOOP AT posnr_tab.
    xposnr-low = posnr_tab-posnr.
    APPEND xposnr.
    objektnummern-objnr = posnr_tab-objnr.
    APPEND objektnummern.
    IF posnr_tab-kzbws EQ space AND get_aufk EQ yes.        "P40C.MODX
      CALL FUNCTION 'CO_SF_GET_ORDERS_SD'
        EXPORTING
          kdauf_imp      = vbeln
          kdpos_imp      = posnr
        TABLES
          ord_tab        = ord_objlist_sd
        EXCEPTIONS
          no_order_found = 01
          no_sd_number   = 02.
      IF sy-subrc EQ 0.
        xobjnr-sign = 'E'.                                  "P40C.MODZ
        xobjnr-option = 'EQ'.
        xobjnr-high = space.
        LOOP AT ord_objlist_sd.
          CHECK ord_objlist_sd-loekz IS INITIAL.            "411945
          objektnummern-objnr = ord_objlist_sd-objnr.
          APPEND objektnummern.
          xobjnr-low = ord_objlist_sd-objnr.
          APPEND xobjnr.
        ENDLOOP.
      ENDIF.
    ENDIF.
  ENDLOOP.

  CHECK exist_non_pp_order_to_sd EQ yes AND get_aufk EQ yes. "P40C.MODX

  DESCRIBE TABLE: xposnr LINES i,                           "99.INSS
                  xobjnr LINES i1.                          "99.INSS
  i = i + i1.                                               "99.INSS
  IF i LE sel_max.                                          "99.INSS
    SELECT objnr kdpos                                      "99.INSS
           FROM aufk INTO TABLE zaufk                       "99.INSS
           WHERE kdauf EQ vbeln
             AND kdpos IN xposnr
             AND autyp IN abgrauty
             AND loekz EQ space                             "411945
             AND objnr IN xobjnr.                           "P40C.MODZ
  ELSE.                                                     "99.INSS
    SELECT objnr kdpos                                      "99.INSS
           FROM aufk INTO TABLE zaufk                       "99.INSS
           WHERE kdauf EQ vbeln                             "99.INSS
             AND loekz EQ space                             "411945
             AND autyp IN abgrauty.                         "99.INSS
    DELETE zaufk                                            "99.INSS
           WHERE NOT kdpos IN xposnr                        "99.INSS
              OR NOT objnr IN xobjnr.                       "99.INSS
  ENDIF.                                                    "99.INSS

  LOOP AT zaufk.                                            "99.MODS
    objektnummern-objnr = zaufk-objnr.                      "99.MODS
    APPEND objektnummern.
  ENDLOOP.
ENDFORM.                    "get_objekte_zum_kndauf


************************************************************************
*
************************************************************************
FORM check_balance USING saldo type kkachr1
                         wip type kkachr1
                         wipd type kkachr1
                         rue type kkachr1
                         rued type kkachr1.
  DATA: xg LIKE cospa-wkg001,
        xg_abs LIKE xg,                                     "428806
        yg LIKE cospa-wkg001.

  xg = 0.
  LOOP AT ist_tab.
    xg = xg + ist_tab-wrtkg.
  ENDLOOP.
*  IF xg EQ 0.                                                   "428806
  g_balance = xg.                                           "428806
  xg_abs = abs( xg ).                                       "428806
  IF xg_abs <= maxsal.                                      "428806
    saldo = no.
  ELSE.
    saldo = yes.
  ENDIF.

  wip = no.
  LOOP AT abgr_tab WHERE abkat BETWEEN '51' AND '53'
                      OR abkat EQ      '62'
                      OR abkat EQ      '68'.
    IF abgr_tab-wrtkg NE 0.
      wip = yes.
      EXIT.
    ENDIF.
  ENDLOOP.

  rue = no.
  LOOP AT abgr_tab WHERE abkat BETWEEN '54' AND '61'
                      OR abkat EQ      '69'.
    IF abgr_tab-wrtkg NE 0.
      rue = yes.
      EXIT.
    ENDIF.
  ENDLOOP.
  IF rue EQ no.
    xg = 0.
    LOOP AT abgr_tab WHERE abkat BETWEEN '71' AND '72'.
      xg = xg + abgr_tab-wrtkg.
    ENDLOOP.
    IF xg NE 0.
      rue = yes.
    ENDIF.
  ENDIF.

  wipd = no.
  LOOP AT abgrd_tab WHERE abkat BETWEEN '51' AND '53'
                       OR abkat EQ      '62'
                       OR abkat EQ      '68'.
    IF abgrd_tab-wrtkg NE 0.
      wipd = yes.
      EXIT.
    ENDIF.
  ENDLOOP.

  rue = no.
  LOOP AT abgrd_tab WHERE abkat BETWEEN '54' AND '61'
                       OR abkat EQ      '69'.
    IF abgrd_tab-wrtkg NE 0.
      rue = yes.
      EXIT.
    ENDIF.
  ENDLOOP.
  IF rued EQ no.
    xg = 0.
    LOOP AT abgrd_tab WHERE abkat BETWEEN '71' AND '72'.
      xg = xg + abgrd_tab-wrtkg.
    ENDLOOP.
    IF xg NE 0.
      rue = yes.
    ENDIF.
  ENDIF.
ENDFORM.                    "check_balance


************************************************************************
*
************************************************************************
FORM exist_non_pp_order_to_sd.

  REFRESH abgrauty.
  CLEAR abgrauty.
  abgrauty-sign = 'E'.
  abgrauty-option = 'EQ'.
  abgrauty-high = space.
  abgrauty-low = auftragstyp-fert.
  APPEND abgrauty.
  abgrauty-low = auftragstyp-einz.
  APPEND abgrauty.

  exist_non_pp_order_to_sd = no.
  SELECT * FROM aufk up to 1 rows                           "H548538
                     WHERE kokrs EQ abgrkokr                "H548538
                       AND autyp IN abgrauty
                       AND loekz EQ space                   "411945
                       AND kdauf NE space.
    exist_non_pp_order_to_sd = yes.
    EXIT.
  ENDSELECT.
ENDFORM.                    "exist_non_pp_order_to_sd


************************************************************************
*
************************************************************************
FORM get_struktur_info.
  RANGES: rabgsl FOR tkkas-abgsl.

  REFRESH: rabgsl, abgrs_tab.

  CLEAR rabgsl.
  rabgsl-sign = 'E'.
  rabgsl-option = 'EQ'.

  SELECT * FROM tkkas WHERE kokrs EQ abgrkokr
                        AND versa EQ '000'
                        AND abgsl IN rabgsl
                        AND rflg6 EQ 'K'.
    CHECK tkkas-abgsl IN rabgsl.
    abgrs_tab-abgrs = tkkas-abgsl.
    abgrs_tab-rflg6 = tkkas-rflg6.
    APPEND abgrs_tab.
    rabgsl-low = tkkas-abgsl.
    APPEND rabgsl.
  ENDSELECT.
  SELECT * FROM tkkas WHERE kokrs EQ abgrkokr
                        AND versa EQ '000'
                        AND abgsl IN rabgsl
                        AND ( rflg6 EQ 'A' OR rflg6 EQ 'B' ).
    CHECK tkkas-abgsl IN rabgsl.
    abgrs_tab-abgrs = tkkas-abgsl.
    abgrs_tab-rflg6 = tkkas-rflg6.
    APPEND abgrs_tab.
    rabgsl-low = tkkas-abgsl.
    APPEND rabgsl.
  ENDSELECT.
  SELECT * FROM tkkas WHERE kokrs EQ abgrkokr
                        AND versa EQ '000'
                        AND abgsl IN rabgsl
                        AND rflg6 NE 'A' AND rflg6 NE 'B'
                                         AND rflg6 NE 'K'.
    CHECK tkkas-abgsl IN rabgsl.
    abgrs_tab-abgrs = tkkas-abgsl.
    abgrs_tab-rflg6 = tkkas-rflg6.
    APPEND abgrs_tab.
    rabgsl-low = tkkas-abgsl.
    APPEND rabgsl.
  ENDSELECT.

  SELECT * FROM tkkas WHERE kokrs EQ abgrkokr
                        AND versa NE '000'
                        AND abgsl IN rabgsl
                        AND rflg6 EQ 'K'.
    CHECK tkkas-abgsl IN rabgsl.
    abgrs_tab-abgrs = tkkas-abgsl.
    abgrs_tab-rflg6 = tkkas-rflg6.
    APPEND abgrs_tab.
    rabgsl-low = tkkas-abgsl.
    APPEND rabgsl.
  ENDSELECT.
  SELECT * FROM tkkas WHERE kokrs EQ abgrkokr
                        AND versa NE '000'
                        AND abgsl IN rabgsl
                        AND ( rflg6 EQ 'A' OR rflg6 EQ 'B' ).
    CHECK tkkas-abgsl IN rabgsl.
    abgrs_tab-abgrs = tkkas-abgsl.
    abgrs_tab-rflg6 = tkkas-rflg6.
    APPEND abgrs_tab.
    rabgsl-low = tkkas-abgsl.
    APPEND rabgsl.
  ENDSELECT.
  SELECT * FROM tkkas WHERE kokrs EQ abgrkokr
                        AND versa NE '000'
                        AND abgsl IN rabgsl
                        AND rflg6 NE 'A' AND rflg6 NE 'B'
                                         AND rflg6 NE 'K'.
    CHECK tkkas-abgsl IN rabgsl.
    abgrs_tab-abgrs = tkkas-abgsl.
    abgrs_tab-rflg6 = tkkas-rflg6.
    APPEND abgrs_tab.
    rabgsl-low = tkkas-abgsl.
    APPEND rabgsl.
  ENDSELECT.

  SORT abgrs_tab.

  knd_abgrs_struktur_found = no.                            "H450841
  loop at abgrs_tab where rflg6 CO 'ABK'.                   "H450841
    knd_abgrs_struktur_found = yes.                         "H450841
    exit.                                                   "H450841
  endloop.                                                  "H450841
ENDFORM.                    "get_struktur_info


************************************************************************
*
************************************************************************
FORM show_status_auftraege.
  DATA: lt_field TYPE kkblo_t_fieldcat,
        ls_field TYPE kkblo_fieldcat.
  data: es_layout type KKBLO_LAYOUT.                        "H450841

  es_layout-KEY_HOTSPOT = yes.                    "del Rel.3.1  "H450841

  REFRESH lt_field.

  CLEAR ls_field.
  ls_field-fieldname     = 'VBELN'.
  ls_field-col_pos       = 1.
  ls_field-ref_fieldname = 'VBELN'.
  ls_field-ref_tabname   = 'VBAK'.
  ls_field-key = yes.                                       "H450841
* ls_field-outputlen     =
  APPEND ls_field TO lt_field.

  CLEAR ls_field.
  ls_field-fieldname     = 'POSNR'.
  ls_field-col_pos       = 5.
  ls_field-ref_fieldname = 'POSNR'.
  ls_field-ref_tabname   = 'VBAP'.
  ls_field-key = yes.                                       "H450841
* ls_field-outputlen     =
  APPEND ls_field TO lt_field.

  CLEAR ls_field.                                           "P45.INS5
  ls_field-fieldname     = 'ABHPS'.                         "P45.INS5
  ls_field-col_pos       = 6.                               "P45.INS5
  ls_field-ref_fieldname = 'POSNR'.                         "P45.INS5
  ls_field-ref_tabname   = 'VBAP'.                          "P45.INS5
* ls_field-outputlen     = 6.                                  "P45.INS5
  ls_field-reptext       = text-u07.                        "P45.INS5
  ls_field-seltext       = text-u57.                        "P45.INS5
  APPEND ls_field TO lt_field.                              "P45.INS5

  CLEAR ls_field.
  ls_field-fieldname     = 'FREI'.
  ls_field-col_pos       = 10.
* ls_field-ref_fieldname =
* ls_field-ref_tabname   =
  ls_field-outputlen     = 4.
  ls_field-reptext       = text-u01.
  ls_field-seltext       = text-u51.
  APPEND ls_field TO lt_field.

  CLEAR ls_field.
  ls_field-fieldname     = 'GLFT'.
  ls_field-col_pos       = 15.
* ls_field-ref_fieldname =
* ls_field-ref_tabname   =
  ls_field-outputlen     = 4.
  ls_field-reptext       = text-u02.
  ls_field-seltext       = text-u52.
  APPEND ls_field TO lt_field.

  CLEAR ls_field.
  ls_field-fieldname     = 'ENFA'.
  ls_field-col_pos       = 20.
* ls_field-ref_fieldname =
* ls_field-ref_tabname   =
  ls_field-outputlen     = 4.
  ls_field-reptext       = text-u03.
  ls_field-seltext       = text-u53.
  APPEND ls_field TO lt_field.

  CLEAR ls_field.
  ls_field-fieldname     = 'TABG'.
  ls_field-col_pos       = 25.
* ls_field-ref_fieldname =
* ls_field-ref_tabname   =
  ls_field-outputlen     = 4.
  ls_field-reptext       = text-u04.
  ls_field-seltext       = text-u54.
  APPEND ls_field TO lt_field.

  CLEAR ls_field.
  ls_field-fieldname     = 'ABGS'.
  ls_field-col_pos       = 30.
* ls_field-ref_fieldname =
* ls_field-ref_tabname   =
  ls_field-outputlen     = 4.
  ls_field-reptext       = text-u05.
  ls_field-seltext       = text-u55.
  APPEND ls_field TO lt_field.

  CLEAR ls_field.
  ls_field-fieldname     = 'RCFLG'.
  ls_field-col_pos       = 80.
* ls_field-ref_fieldname =
* ls_field-ref_tabname   =
* ls_field-outputlen     = 8.                                   "H697387
  ls_field-outputlen     = 20.                              "H697387
  ls_field-reptext       = text-u06.
  ls_field-seltext       = text-u56.
  APPEND ls_field TO lt_field.

  SORT show_auftraege BY vbeln posnr abhps.                 "P45.MODY

  CALL FUNCTION 'K_KKB_LIST_DISPLAY'
        EXPORTING
             i_callback_program       = 'YSE_SAPKKA12'
             i_callback_user_command  = 'SHOW_DETAIL'       "H456583A
             i_callback_top_of_page   = 'LIST_TOP'
*            i_callback_pf_status_set =
*            i_callback_layout_save   =
*            i_callback_fieldcat_save =
             i_tabname                = 'SHOW_AUFTRAEGE'
             is_layout                = es_layout  "del Rel.3.1 "H450841
             it_fieldcat              = lt_field
             i_fctype                 = 'R'
*            it_special_groups        =
*            it_sort                  =
*            is_sel_hide              =
*            i_screen_start_column    = 0
*            i_screen_start_line      = 0
*            i_screen_end_column      = 0
*            i_screen_end_line        = 0
         TABLES
              t_outtab                 = show_auftraege
         EXCEPTIONS
              OTHERS                   = 1.
ENDFORM.                    "show_status_auftraege


************************************************************************
*
************************************************************************
FORM list_top.
  DATA: text(70), i TYPE i, c.
  text = text-015.
  i = 69.
  c = text+i(1).
  WHILE i GT 10 AND c EQ space.
    i = i - 1.
    c = text+i(1).
  ENDWHILE.
  i = i + 1.
  IF test_lf = yes.                                               "trace
    WRITE: AT /(i) text,                                          "trace
           sy-datlo,                                              "trace
           text-040.                                              "trace
  ELSE.                                                           "trace
    WRITE: AT /(i) text,
           sy-datlo.
  ENDIF.                                                          "trace
ENDFORM.                    "list_top


**************************************************************"P40C.INSY
*                                                             "P40C.INSY
**************************************************************"P40C.INSY
FORM get_status TABLES objektnummern STRUCTURE objnrtab     "P40C.INSY
                       USING top_objnr like vbap-objnr.     "P40C.INSY
  DATA: tix LIKE sy-tabix.

  all_or_tabg = yes.
  all_vb_tabg = yes.
  all_or_glft = yes.
  all_or_tabg_or_glft = yes.
  LOOP AT objektnummern WHERE objnr NE top_objnr.
    tix = sy-tabix.
    CALL FUNCTION 'STATUS_CHECK'
      EXPORTING
        objnr             = objektnummern-objnr
        status            = 'I0046'    "i_status_tabg
      EXCEPTIONS
        object_not_found  = 01
        status_not_active = 02.



    IF sy-subrc EQ 0.
      objektnummern-tabg = yes.
    ELSEIF sy-subrc EQ 02.
      objektnummern-tabg = no.
      IF objektnummern-objnr(2) EQ 'OR'.
        all_or_tabg = no.
      ELSE.
        all_vb_tabg = no.
      ENDIF.
    ENDIF.

    IF objektnummern-objnr(2) EQ 'OR'.
      CALL FUNCTION 'STATUS_CHECK'
        EXPORTING
          objnr             = objektnummern-objnr
          status            = i_status_glft
        EXCEPTIONS
          object_not_found  = 01
          status_not_active = 02.



      IF sy-subrc EQ 0.
        objektnummern-glft = yes.
      ELSEIF sy-subrc EQ 02.
        objektnummern-glft = no.
        all_or_glft = no.
      ENDIF.
    ENDIF.

    IF objektnummern-objnr(2) EQ 'OR'.
      IF objektnummern-glft EQ no AND objektnummern-tabg EQ no.
        all_or_tabg_or_glft = no.
      ENDIF.
    ENDIF.

    MODIFY objektnummern INDEX tix.
  ENDLOOP.
ENDFORM.                    "get_status


***************************************************************"P45.INSY
*                                                              "P45.INSY
***************************************************************"P45.INSY
FORM abh_positionen_verarb USING p_abh_pos_tabg type kkachr1 "H450841
                                 p_abh_pos_abgs type kkachr1 "H450841
                                 i_set_tabg type kkachr1    "H450841
                                 i_set_abgs type kkachr1    "H450841
                                 p_tabg_all type kkachr1    "H337605
                                 p_abgs_all type kkachr1.   "H337605
  LOCAL: kndpos_set_tabg,                                   "H337605
         kndpos_set_abgs.                                   "H337605
 LOCAL: kndpos_abgs_reset.                                  "H337605trace
  DATA: xstat LIKE jstat OCCURS 2 WITH HEADER LINE.         "H337605b
  data: p_set_tabg,                                         "H450841
        p_set_abgs.                                         "H450841
  Local: vrgng_change_subrc.                                "H827724

  vrgng_change_subrc = 0.                                   "H827724

  if p_abh_pos_tabg = yes.                                  "H450841
    p_set_tabg = i_set_tabg.                                "H450841
  else.                                                     "H450841
    p_set_tabg = no.                                        "H450841
  endif.                                                    "H450841
  if p_abh_pos_abgs = yes.                                  "H450841
    p_set_abgs = i_set_abgs.                                "H450841
  else.                                                     "H450841
    p_set_abgs = no.                                        "H450841
  endif.                                                    "H450841

  IF p_set_tabg EQ yes.                                     "H337605
    p_tabg_all = yes.                                       "H337605
  ELSE.                                                     "H337605
    p_tabg_all = maybe.                                     "H337605
  ENDIF.                                                    "H337605

  IF p_set_abgs EQ yes.                                     "H337605
    p_abgs_all = yes.                                       "H337605
  ELSE.                                                     "H337605
    p_abgs_all = maybe.                                     "H337605
  ENDIF.                                                    "H337605

  PERFORM trace_begin_abh_obj_bl.

  LOOP AT posnr_tab.
    if posnr_tab-kzvbr ne 'E'.                              "H676494
      PERFORM trace_begin_abh_obj.                          "H676494
      PERFORM trace_abh_obj_skip_kzvbr.                     "H676494
      PERFORM trace_end_abh_obj.                            "H676494
      continue.                                             "H676494
    endif.                                                  "H676494

    if p_abh_pos_tabg = yes.                                "H450841
      p_set_tabg = i_set_tabg.                              "H450841
    else.                                                   "H450841
      p_set_tabg = no.                                      "H450841
    endif.                                                  "H450841
    if p_abh_pos_abgs = yes.                                "H450841
      p_set_abgs = i_set_abgs.                              "H450841
    else.                                                   "H450841
      p_set_abgs = no.                                      "H450841
    endif.                                                  "H450841

    REFRESH trace_status_tab_up.
    REFRESH trace_status_tab1_up.
    PERFORM trace_begin_abh_obj.

*   READ TABLE auftraege WITH KEY vbeln = auftraege-vbeln       "H450841
*                                 posnr = posnr_tab-posnr.      "H450841
*   CHECK SY-SUBRC <> 0.                                          "trace
    if p_set_abgs = yes.                                    "H450841
      READ TABLE posnr_Tab_down                             "H450841
                           WITH KEY vbeln = auftraege-vbeln "H450841
                                    posnr = posnr_tab-posnr. "H450841
      IF sy-subrc = 0.                                            "trace
        PERFORM trace_abh_obj_skip.
        CALL FUNCTION 'STATUS_CHECK'                        "H450841
                     EXPORTING objnr  = posnr_tab_down-objnr "H450841
                               status = i_status_abgs       "H450841
                     EXCEPTIONS object_not_found  = 01      "H450841
                                status_not_active = 02.     "H450841
        if sy-subrc = 02.                                   "H450841
          p_abgs_all = no.                                  "H450841
        endif.                                              "H450841
        PERFORM trace_cur_status_upos                       "H450841
                          USING trace_text_abgs sy-subrc.   "H450841
        if p_set_tabg = yes.                                "H450841
          p_set_abgs = no.                                  "H450841
        else.                                               "H450841
          PERFORM trace_cur_status_show_upos using yes.     "H450841
          PERFORM trace_end_abh_obj.                        "H450841
          CONTINUE.                                               "trace
        endif.                                              "H450841
      ENDIF.                                                      "trace
    endif.                                                  "H450841

    if p_set_tabg = yes.                                    "H450841
      READ TABLE posnr_Tab_down1                            "H450841
                           WITH KEY vbeln = auftraege-vbeln "H450841
                                    posnr = posnr_tab-posnr. "H450841
      IF sy-subrc = 0.                                      "H450841
        PERFORM trace_abh_obj_skip1.                        "H450841
        CALL FUNCTION 'STATUS_CHECK'                        "H450841
                     EXPORTING objnr  = posnr_tab_down1-objnr "H450841
                               status = i_status_tabg       "H450841
                     EXCEPTIONS object_not_found  = 01      "H450841
                                status_not_active = 02.     "H450841
        if sy-subrc = 02.                                   "H450841
          p_tabg_all = no.                                  "H450841
        endif.                                              "H450841
        PERFORM trace_cur_status_upos                       "H450841
                          USING trace_text_tabg sy-subrc.   "H450841
        PERFORM trace_cur_status_show_upos using yes.       "H450841
        PERFORM trace_end_abh_obj.                          "H450841
        CONTINUE.                                           "H450841
      ENDIF.                                                "H450841
    endif.                                                  "H450841

    MOVE-CORRESPONDING auftraege TO show_auftraege.
    show_auftraege-abhps = posnr_tab-posnr.
    show_auftraege-frei = ungeprueft.
    show_auftraege-glft = ungeprueft.
    show_auftraege-enfa = ungeprueft.
    show_auftraege-tabg = ungeprueft.
    show_auftraege-abgs = ungeprueft.
    show_auftraege-rcflg = space.

    REFRESH: xstat, ist_tab, abgr_tab, abgrd_tab.

*    IF set_tabg EQ yes.                                         "448915
    IF set_tabg = yes AND                                   "448915
       ( p_set_tabg = yes OR                                "448915
         p_set_tabg = no AND rst_tabg = yes ).              "448915
      IF p_set_tabg EQ yes.
        kndpos_set_tabg = yes.
      ELSE.
        kndpos_set_tabg = no.
      ENDIF.

      CALL FUNCTION 'STATUS_CHECK'
        EXPORTING
          objnr             = posnr_tab-objnr
          status            = i_status_tabg
        EXCEPTIONS
          object_not_found  = 01
          status_not_active = 02.
      IF sy-subrc EQ 0.
        show_auftraege-tabg = aktiv.
      ELSEIF sy-subrc EQ 02.
        show_auftraege-tabg = inaktiv.
      ENDIF.
      IF sy-subrc NE 0 AND kndpos_set_tabg EQ yes.
        xstat-stat = i_status_tabg.
        xstat-inact = no.
        APPEND xstat.
      ELSEIF sy-subrc EQ 0 AND kndpos_set_tabg EQ no.
        xstat-stat = i_status_tabg.
        xstat-inact = yes.
        APPEND xstat.
      ENDIF.
      PERFORM trace_cur_status_upos USING trace_text_tabg sy-subrc.

      CALL FUNCTION 'STATUS_CHECK'
        EXPORTING
          objnr             = posnr_tab-objnr
          status            = i_status_frei
        EXCEPTIONS
          object_not_found  = 01
          status_not_active = 02.
      IF sy-subrc EQ 0.
        show_auftraege-frei = aktiv.
      ELSEIF sy-subrc EQ 02.
        show_auftraege-frei = inaktiv.
      ENDIF.
      IF sy-subrc NE 0 AND kndpos_set_tabg EQ no.
        xstat-stat = i_status_frei.
        xstat-inact = no.
        APPEND xstat.
      ELSEIF sy-subrc EQ 0 AND kndpos_set_tabg EQ yes.
        xstat-stat = i_status_frei.
        xstat-inact = yes.
        APPEND xstat.
      ENDIF.
    ENDIF.
    PERFORM trace_cur_status_upos USING trace_text_frei sy-subrc.

*    IF set_abgs EQ yes.                                         "448915
    IF set_abgs = yes AND                                   "448915
       ( p_set_abgs = yes OR                                "448915
         p_set_abgs = no AND rst_abgs = yes ).              "448915
      CALL FUNCTION 'STATUS_CHECK'
        EXPORTING
          objnr             = posnr_tab-objnr
          status            = i_status_tabg
        EXCEPTIONS
          object_not_found  = 01
          status_not_active = 02.
      IF sy-subrc EQ 0.
        show_auftraege-tabg = aktiv.
      ELSEIF sy-subrc EQ 02.
        show_auftraege-tabg = inaktiv.
      ENDIF.
      IF sy-subrc EQ 0.
        kndpos_tabg = yes.
      ELSE.
        kndpos_tabg = no.
      ENDIF.
      PERFORM trace_cur_status_upos USING trace_text_tabg sy-subrc.

      IF p_set_abgs = yes.
        kndpos_set_abgs = yes.
      ELSE.
        kndpos_set_abgs = no.
      ENDIF.

      CALL FUNCTION 'STATUS_CHECK'
        EXPORTING
          objnr             = posnr_tab-objnr
          status            = i_status_abgs
        EXCEPTIONS
          object_not_found  = 01
          status_not_active = 02.
      IF sy-subrc EQ 0.
        show_auftraege-abgs = aktiv.
      ELSEIF sy-subrc EQ 02.
        show_auftraege-abgs = inaktiv.
      ENDIF.
      kndpos_abgs_reset = no.
      IF sy-subrc NE 0 AND kndpos_set_abgs EQ yes.
        xstat-stat = i_status_abgs.
        xstat-inact = no.
        APPEND xstat.
      ELSEIF rst_abgs EQ yes AND
             sy-subrc EQ 0 AND kndpos_set_abgs EQ no.
        xstat-stat = i_status_abgs.
        xstat-inact = yes.
        APPEND xstat.
        kndpos_abgs_reset = yes.
      ENDIF.
      PERFORM trace_cur_status_upos USING trace_text_abgs sy-subrc.

      ystat[] = xstat[].                                    "99.INS
      IF kndpos_set_abgs EQ yes.
        DELETE xstat WHERE stat EQ i_status_frei.
        CALL FUNCTION 'STATUS_CHECK'
          EXPORTING
            objnr             = posnr_tab-objnr
            status            = i_status_frei
          EXCEPTIONS
            object_not_found  = 01
            status_not_active = 02.
        IF sy-subrc EQ 0.
          show_auftraege-frei = aktiv.
        ELSEIF sy-subrc EQ 02.
          show_auftraege-frei = inaktiv.
        ENDIF.
        IF sy-subrc EQ 0.
          xstat-stat = i_status_frei.
          xstat-inact = yes.
          APPEND xstat.
        ENDIF.

        DELETE xstat WHERE stat EQ i_status_tabg.
        IF kndpos_tabg EQ yes.
          xstat-stat = i_status_tabg.
          xstat-inact = yes.
          APPEND xstat.
        ENDIF.
      ELSEIF kndpos_abgs_reset EQ yes AND set_tabg EQ no.
        DELETE xstat WHERE stat EQ i_status_frei.
        CALL FUNCTION 'STATUS_CHECK'
          EXPORTING
            objnr             = posnr_tab-objnr
            status            = i_status_frei
          EXCEPTIONS
            object_not_found  = 01
            status_not_active = 02.
        IF sy-subrc EQ 0.
          show_auftraege-frei = aktiv.
        ELSEIF sy-subrc EQ 02.
          show_auftraege-frei = inaktiv.
        ENDIF.
        IF sy-subrc EQ 0.
          kndpos_frei = yes.
        ELSE.
          kndpos_frei = no.
        ENDIF.

        DELETE xstat WHERE stat EQ i_status_tabg.
        IF kndpos_tabg EQ no AND kndpos_frei EQ no.
          xstat-stat = i_status_tabg.
          xstat-inact = no.
          APPEND xstat.
        ENDIF.
      ENDIF.
    ENDIF.

* Beginning insertion note 435681
* Always trace status REL in order that we can display actual state
* before status change.
    IF trace_on = yes.
      CALL FUNCTION 'STATUS_CHECK'
        EXPORTING
          objnr             = auftraege-objnr
          status            = i_status_frei
        EXCEPTIONS
          object_not_found  = 01
          status_not_active = 02.
      PERFORM trace_cur_status_upos USING trace_text_frei sy-subrc.
*     PERFORM trace_cur_status_show_upos.                       "H450841
      PERFORM trace_cur_status_show_upos using no.          "H450841
    ENDIF.
    g_output_header_status_change = 'X'.
* End insertion note 435681

    LOOP AT xstat WHERE stat = i_status_tabg                "H450841
                     OR stat = i_status_abgs.               "H450841
      CALL FUNCTION 'SD_ITEM_CHANGE_STATUS_INIT'.           "H450841
      EXIT.                                                 "H450841
    ENDLOOP.                                                "H450841

    CLEAR vrgng_change.                                     "99.INS
    vrgng_change_repeat = no.                               "99.INS
    LOOP AT xstat WHERE stat = i_status_tabg                "99.INS
                     OR stat = i_status_abgs.               "99.INS
      IF xstat-stat = i_status_tabg AND                     "99.INS
         xstat-inact = yes.                                 "99.INS
        IF vrgng_change <> vrgng_set_abgs AND               "99.INS
           vrgng_change <> vrgng_reset_abgs.                "99.INS
          vrgng_change = vrgng_reset_tabg.                  "99.INS
        ENDIF.                                              "99.INS
      ELSEIF xstat-stat = i_status_tabg AND                 "99.INS
             xstat-inact = no.                              "99.INS
        IF vrgng_change <> vrgng_set_abgs.                  "99.INS
          vrgng_change = vrgng_set_tabg.                    "99.INS
        ENDIF.                                              "99.INS
      ELSEIF xstat-stat = i_status_abgs AND                 "99.INS
             xstat-inact = yes.                             "99.INS
        IF vrgng_change <> vrgng_set_tabg.                  "99.INS
          vrgng_change = vrgng_reset_abgs.                  "99.INS
        ENDIF.                                              "99.INS
      ELSEIF xstat-stat = i_status_abgs AND                 "99.INS
             xstat-inact = no.                              "99.INS
        vrgng_change = vrgng_set_abgs.                      "99.INS
      ENDIF.                                                "99.INS
    ENDLOOP.                                                "99.INS
    IF NOT vrgng_change IS INITIAL.                         "99.INS
      CALL FUNCTION 'SD_ITEM_CHANGE_STATUS'                 "99.INS
         EXPORTING i_vrgng           = vrgng_change         "99.INS
                   i_document_number = auftraege-vbeln      "99.INS
                   i_item_number     = posnr_tab-posnr      "99.INS
                   i_external_call   = yes                  "99.INS
                   i_sloppy_check    = if_sdof1             "99.INS
                   i_check_only      = test_lf              "99.INS
         EXCEPTIONS not_allowed = 1                         "99.INS
                    fatal_error = 2                         "99.INS
                    ERROR_MESSAGE = 2                       "H697602
                    OTHERS = 2.                             "H456583A
      vrgng_change_subrc = sy-subrc.                        "99.INS
      move-corresponding sy to msg_trace.                   "H456583A
      PERFORM trace_vrgng_change USING vrgng_change sy-subrc yes.
      sy-subrc = vrgng_change_subrc.                              "trace
      IF sy-subrc = 1.                                      "99.INS
        IF vrgng_change = vrgng_set_abgs.                   "99.INS
          vrgng_change_repeat = yes.                        "99.INS
          xstat[] = ystat[].                                "99.INS
          DELETE xstat WHERE stat = i_status_abgs.          "99.INS
        ELSEIF vrgng_change = vrgng_set_tabg AND            "99.INS
               kndpos_abgs_reset EQ yes.                    "99.INS
          vrgng_change_repeat = yes.                        "99.INS
          xstat[] = ystat[].                                "99.INS
          DELETE xstat WHERE stat EQ i_status_tabg OR       "99.INS
                             stat EQ i_status_frei.         "99.INS
          CALL FUNCTION 'STATUS_CHECK'                      "99.INS
                     EXPORTING objnr  = posnr_tab-objnr     "99.INS
                               status = i_status_frei       "99.INS
                     EXCEPTIONS object_not_found  = 01      "99.INS
                                status_not_active = 02.     "99.INS
          IF sy-subrc EQ 0.                                 "99.INS
            show_auftraege-frei = aktiv.                    "99.INS
          ELSEIF sy-subrc EQ 02.                            "99.INS
            show_auftraege-frei = inaktiv.                  "99.INS
          ENDIF.                                            "99.INS
          IF sy-subrc NE 0.                                 "99.INS
            xstat-stat = i_status_frei.                     "99.INS
            xstat-inact = no.                               "99.INS
            APPEND xstat.                                   "99.INS
          ENDIF.                                            "99.INS
*  PERFORM trace_cur_status_upos USING trace_text_frei sy-subrc. "435681
        ELSE.                                               "99.INS
          DELETE xstat WHERE stat = i_status_tabg           "99.INS
                          OR stat = i_status_abgs           "99.INS
                          OR stat = i_status_frei.          "99.INS
        ENDIF.                                              "99.INS
      ELSEIF sy-subrc = 2.                                  "99.INS
        perform trace_collect_error.                        "H456583A
*       MESSAGE ID sy-msgid                                    "H456583A
*               TYPE sy-msgty                                  "H456583A
*               NUMBER sy-msgno                                "H456583A
*               WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.      "H456583A
      ENDIF.                                                "99.INS
    ELSE.                                                   "99.INS
      vrgng_change_subrc = 0.                               "99.INS
    ENDIF.                                                  "99.INS

    IF vrgng_change_repeat = yes.                           "99.INS
      CLEAR vrgng_change.                                   "99.INS
      vrgng_change_repeat = no.                             "99.INS
      LOOP AT xstat WHERE stat = i_status_tabg              "99.INS
                       OR stat = i_status_abgs.             "99.INS
        IF xstat-stat = i_status_tabg AND                   "99.INS
           xstat-inact = yes.                               "99.INS
          IF vrgng_change <> vrgng_set_abgs AND             "99.INS
             vrgng_change <> vrgng_reset_abgs.              "99.INS
            vrgng_change = vrgng_reset_tabg.                "99.INS
          ENDIF.                                            "99.INS
        ELSEIF xstat-stat = i_status_tabg AND               "99.INS
               xstat-inact = no.                            "99.INS
          IF vrgng_change <> vrgng_set_abgs.                "99.INS
            vrgng_change = vrgng_set_tabg.                  "99.INS
          ENDIF.                                            "99.INS
        ELSEIF xstat-stat = i_status_abgs AND               "99.INS
               xstat-inact = yes.                           "99.INS
          IF vrgng_change <> vrgng_set_tabg.                "99.INS
            vrgng_change = vrgng_reset_abgs.                "99.INS
          ENDIF.                                            "99.INS
        ELSEIF xstat-stat = i_status_abgs AND               "99.INS
               xstat-inact = no.                            "99.INS
          vrgng_change = vrgng_set_abgs.                    "99.INS
        ENDIF.                                              "99.INS
      ENDLOOP.                                              "99.INS
      IF NOT vrgng_change IS INITIAL.                       "99.INS
        CALL FUNCTION 'SD_ITEM_CHANGE_STATUS'               "99.INS
           EXPORTING i_vrgng           = vrgng_change       "99.INS
                     i_document_number = auftraege-vbeln    "99.INS
                     i_item_number     = posnr_tab-posnr    "99.INS
                     i_external_call   = yes                "99.INS
                     i_sloppy_check    = if_sdof1           "99.INS
                     i_check_only      = test_lf            "99.INS
           EXCEPTIONS not_allowed = 1                       "99.INS
                      fatal_error = 2                       "99.INS
                      ERROR_MESSAGE = 2                     "H697602
                      OTHERS = 2.                           "H456583A
        vrgng_change_subrc = sy-subrc.                      "99.INS
        move-corresponding sy to msg_trace.                 "H456583A
        PERFORM trace_vrgng_change USING vrgng_change sy-subrc yes.
        sy-subrc = vrgng_change_subrc.                            "trace
        IF sy-subrc = 1.                                    "99.INS
          DELETE xstat WHERE stat = i_status_tabg           "99.INS
                          OR stat = i_status_abgs           "99.INS
                          OR stat = i_status_frei.          "99.INS
        ELSEIF sy-subrc = 2.                                "99.INS
          perform trace_collect_error.                      "H456583A
*         MESSAGE ID sy-msgid                                  "H456583A
*                 TYPE sy-msgty                                "H456583A
*                 NUMBER sy-msgno                              "H456583A
*                 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.    "H456583A
        ENDIF.                                              "99.INS
      ELSE.                                                 "99.INS
        vrgng_change_subrc = 0.                             "99.INS
      ENDIF.                                                "99.INS
    ENDIF.                                                  "99.INS

*    PERFORM trace_cur_status_show_upos.                         "435681

    LOOP AT xstat.
      CASE xstat-stat.
        WHEN i_status_frei.
          IF xstat-inact EQ yes.
            show_auftraege-frei = aktiv_zu_inaktiv.
          ELSE.
            show_auftraege-frei = inaktiv_zu_aktiv.
          ENDIF.
        WHEN i_status_glft.
          IF xstat-inact EQ yes.
            show_auftraege-glft = aktiv_zu_inaktiv.
          ELSE.
            show_auftraege-glft = inaktiv_zu_aktiv.
          ENDIF.
        WHEN i_status_enfa.
          IF xstat-inact EQ yes.
            show_auftraege-enfa = aktiv_zu_inaktiv.
          ELSE.
            show_auftraege-enfa = inaktiv_zu_aktiv.
          ENDIF.
        WHEN i_status_tabg.
          IF xstat-inact EQ yes.
            show_auftraege-tabg = aktiv_zu_inaktiv.
          ELSE.
            show_auftraege-tabg = inaktiv_zu_aktiv.
          ENDIF.
        WHEN i_status_abgs.
          IF xstat-inact EQ yes.
            show_auftraege-abgs = aktiv_zu_inaktiv.
          ELSE.
            show_auftraege-abgs = inaktiv_zu_aktiv.
          ENDIF.
      ENDCASE.
    ENDLOOP.

    IF show_auftraege-tabg = inaktiv OR                     "H337605
       show_auftraege-tabg = aktiv_zu_inaktiv.              "H337605
      p_tabg_all = no.                                      "H337605
    ENDIF.                                                  "H337605

    IF show_auftraege-abgs = inaktiv OR                     "H337605
       show_auftraege-abgs = aktiv_zu_inaktiv.              "H337605
      p_abgs_all = no.                                      "H337605
    ENDIF.                                                  "H337605

    IF anz_abhp EQ yes.
      APPEND show_auftraege.
      show_auftraege_tabix = sy-tabix.
    ENDIF.

    DESCRIBE TABLE xstat LINES i.
    IF i GT 0.
      IF ANZ_ABHP EQ YES.                                   "SPC_742999
        READ TABLE show_auftraege INDEX show_auftraege_tabix.
      ENDIF.                                                "SPC_742999
      IF NOT vrgng_change IS INITIAL.                       "99.INS
        DELETE xstat WHERE stat = i_status_tabg             "99.INS
                        OR stat = i_status_abgs             "99.INS
                        OR stat = i_status_frei.            "99.INS
        DESCRIBE TABLE xstat LINES i.                       "99.INS
      ENDIF.
      IF i GT 0 AND test_lf EQ no.                          "99.INS
        CALL FUNCTION 'STATUS_CHANGE_INTERN'
          EXPORTING
            objnr               = posnr_tab-objnr
          TABLES
            status              = xstat
          EXCEPTIONS
            object_not_found    = 1
            status_inconsistent = 2
            status_not_allowed  = 3
            OTHERS              = 4.
      ELSE.                                                 "99.INS
        sy-subrc = 0.                                       "99.INS
      ENDIF.                                                "99.INS
      IF sy-subrc EQ 0 AND vrgng_change_subrc EQ 0.         "99.MOD
        show_auftraege-rcflg = text-016.
      ELSE.
        show_auftraege-rcflg = text-017.
      ENDIF.
      PERFORM trace_status_direkt USING yes.
      IF anz_abhp EQ yes.
        MODIFY show_auftraege INDEX show_auftraege_tabix.
      ENDIF.
      COMMIT WORK.
      CALL FUNCTION 'SD_ITEM_CHANGE_STATUS_INIT'.
    ENDIF.
    PERFORM trace_end_abh_obj.
  ENDLOOP.
  PERFORM trace_end_abh_obj_bl.
ENDFORM.                    "abh_positionen_verarb


*****************************************************************"99.INS
* Eintr#ge in der Tabelle TJ06, ALR (Rel. 99) zum 9.11.98        "99.INS
*                                                                "99.INS
* vrgng  istat   inact                                           "99.INS
* -----+-------+------                                           "99.INS
* babs | i0001 | x                                               "99.INS
* babs | i0002 | x                                               "99.INS
* babs | i0045 | x                                               "99.INS
* babs | i0046 |                                                 "99.INS
* babs | i0364 | x                                               "99.INS
* -----+-------+------                                           "99.INS
* btab | i0001 | x                                               "99.INS
* btab | i0002 | x                                               "99.INS
* btab | i0042 | x                                               "99.INS
* btab | i0045 |                                                 "99.INS
* btab | i0046 | x                                               "99.INS
* -----+-------+------                                           "99.INS
* buab | i0001 | x                                               "99.INS
* buab | i0002 |                                                 "99.INS
* buab | i0045 | x                                               "99.INS
* buab | i0046 | x                                               "99.INS
* -----+-------+------                                           "99.INS
* buta | i0002 |                                                 "99.INS
* buta | i0045 | x                                               "99.INS
* -----+-------+------                                           "99.INS
*                                                                "99.INS
*****************************************************************"99.INS
FORM check_tj06.
  TABLES tj06.

  SELECT * FROM tj06 WHERE vrgng = vrgng_set_tabg
                        OR vrgng = vrgng_reset_tabg
                        OR vrgng = vrgng_set_abgs
                        OR vrgng = vrgng_reset_abgs.
    CASE tj06-vrgng.
      WHEN vrgng_set_tabg.
        IF ( tj06-istat = i_status_frei OR
             tj06-istat = i_status_abgs ) AND tj06-inact = no.
          MESSAGE e508 WITH tj06-vrgng tj06-istat tj06-inact.
        ENDIF.
        IF ( tj06-istat = i_status_tabg ) AND tj06-inact = yes.
          MESSAGE e508 WITH tj06-vrgng tj06-istat tj06-inact.
        ENDIF.
      WHEN vrgng_reset_tabg.
        IF ( tj06-istat = i_status_tabg ) AND tj06-inact = no.
          MESSAGE e508 WITH tj06-vrgng tj06-istat tj06-inact.
        ENDIF.
        IF ( tj06-istat = i_status_frei ) AND tj06-inact = yes.
          MESSAGE e508 WITH tj06-vrgng tj06-istat tj06-inact.
        ENDIF.
      WHEN vrgng_set_abgs.
        IF ( tj06-istat = i_status_frei OR
             tj06-istat = i_status_tabg ) AND tj06-inact = no.
          MESSAGE e508 WITH tj06-vrgng tj06-istat tj06-inact.
        ENDIF.
        IF ( tj06-istat = i_status_abgs ) AND tj06-inact = yes.
          MESSAGE e508 WITH tj06-vrgng tj06-istat tj06-inact.
        ENDIF.
      WHEN vrgng_reset_abgs.
        IF ( tj06-istat = i_status_abgs OR
             tj06-istat = i_status_tabg ) AND tj06-inact = no.
          MESSAGE e508 WITH tj06-vrgng tj06-istat tj06-inact.
        ENDIF.
        IF ( tj06-istat = i_status_frei ) AND tj06-inact = yes.
          MESSAGE e508 WITH tj06-vrgng tj06-istat tj06-inact.
        ENDIF.
    ENDCASE.
  ENDSELECT.
ENDFORM.                                                    "check_tj06


************************************************************************
*
************************************************************************
FORM prepare_period.
  DATA: x TYPE i,
        anzbp LIKE t009-anzbp,
        anzsp LIKE t009-anzsp.

  monat_1p = monat_1.

  x = generated_periods.
  UNPACK x TO monat_max.
  monat_maxp = monat_max.

  CHECK NOT abgrkokr IS INITIAL.                                    "46c

  SELECT SINGLE * FROM tka01 WHERE kokrs = abgrkokr.
  IF sy-subrc <> 0.
    MESSAGE a214 WITH abgrkokr.
  ENDIF.
  g_waehr = tka01-waers.                                    "428806

  if maxp12 = yes.                                          "H450841
    wahl_monat_max = wahl_monat_max_12.                     "H450841
  else.                                                     "H450841
    wahl_monat_max = wahl_monat_max_sonder_per.             "H450841
  endif.                                                    "H450841

  IF wahl_monat_max = wahl_monat_max_12.
    abgr_monat_maxp = monat_12.
  ELSE.
*   Die Sonderperioden heissen immer 13, 14, 15 und 16.
*   Die Anzahl der Sonderperioden wird in ANZSP uebergeben.
*   Falls der Parameter GJAHR uebergeben wird, dann enthaelt im Falle
*   eines Rumpfgesch.Jahres der Parameter ANZBP die Anzahl der genutzten
*   Perioden.
    CALL FUNCTION 'K_PERIODS_GET_FOR_KOKRS'
                      EXPORTING i_tka01 = tka01
                                kokrs   = abgrkokr
*                               GJAHR            "falls Rumpfgesch.Jahre
                      IMPORTING anzbp = anzbp
                                anzsp = anzsp.
    x = anzbp + anzsp.
    IF x <= monat_maxp.
      abgr_monat_maxp = x.
    ELSE.
      abgr_monat_maxp = monat_maxp.
    ENDIF.
  ENDIF.

  UNPACK abgr_monat_maxp TO abgr_monat_max.

  PERFORM convert_date_to_period USING sy-datum current_period.
ENDFORM.                    "prepare_period


************************************************************************
*
************************************************************************
FORM previous_period USING per STRUCTURE current_period.
  DATA: i TYPE i.

  i = per-m.
  IF i > monat_1p.
    i = per-m - 1.
    UNPACK i TO per-m.
  ELSE.
    i = per-j - 1.
    UNPACK i TO per-j.
    per-m = abgr_monat_max.
  ENDIF.
ENDFORM.                    "previous_period


************************************************************************
*
************************************************************************
FORM minus_mon_periods USING mon like lastseit
                             per STRUCTURE current_period.
  DATA: i TYPE i.

  i = mon.
* CHECK i GT 0.                                                 "H626884
  if i gt 0.                                                "H626884
    DO i TIMES.
      PERFORM previous_period USING per.
    ENDDO.
  elseif i lt 0.                                            "H626884
    i = - i.                                                "H626884
    DO i TIMES.                                             "H626884
      PERFORM next_period USING per.                        "H626884
    ENDDO.                                                  "H626884
  endif.                                                    "H626884
ENDFORM.                    "minus_mon_periods


************************************************************************
*
************************************************************************
FORM convert_date_to_period USING dat like sy-datum
                                  per STRUCTURE current_period.
  DATA: m LIKE t009b-poper,
        j LIKE t009b-bdatj,
        i TYPE i.

  CALL FUNCTION 'DATE_TO_PERIOD_CONVERT'
    EXPORTING
      i_date  = dat
      i_periv = tka01-lmona     "T009B-PERIV
    IMPORTING
      e_buper = m
      e_gjahr = j.
  per-j = j.
  i = m.
  UNPACK i TO per-m.
ENDFORM.                    "convert_date_to_period


**********************************************************************"X
*                                                                     "X
**********************************************************************"X
FORM osalor_at_sel_scr_out.                                           "X
  IF all_sel = 'X'.
*    more_sel = '@3T@'.
    CALL FUNCTION 'ICON_CREATE'
      EXPORTING
        name   = gd_icon_data_area_collapse                   "uni
        text   = text-x00
        info   = text-col
      IMPORTING
        result = more_sel.
    LOOP AT SCREEN.
      IF screen-group1 = 'OPT'.
        screen-active = '1'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSE.
*    more_sel = '@3S@'.
    CALL FUNCTION 'ICON_CREATE'
      EXPORTING
        name   = gd_icon_data_area_expand                     "uni
        text   = text-x00
        info   = text-exp
      IMPORTING
        result = more_sel.
    IF all_sez = ' '.
      LOOP AT SCREEN.
        IF screen-group1 = 'OPT'.
          screen-active = '0'.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.
    ENDIF.
  ENDIF.

  LOOP AT SCREEN.
    IF screen-group1 = 'KOK'.
      screen-active = '0'.
      MODIFY SCREEN.
    ENDIF.
  ENDLOOP.

  IF all_se1 = 'X'.
    CALL FUNCTION 'ICON_CREATE'
      EXPORTING
        name   = gd_icon_data_area_collapse                   "uni
        text   = text-x01
        info   = text-col
      IMPORTING
        result = more_se1.
    LOOP AT SCREEN.
      IF screen-group1 = 'OP1'.
        screen-active = '1'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSE.
    CALL FUNCTION 'ICON_CREATE'
      EXPORTING
        name   = gd_icon_data_area_expand                     "uni
        text   = text-x01
        info   = text-exp
      IMPORTING
        result = more_se1.
    IF all_sez = ' '.
      LOOP AT SCREEN.
        IF screen-group1 = 'OP1'.
          screen-active = '0'.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.
    ENDIF.
  ENDIF.

  IF all_se2 = 'X'.
    CALL FUNCTION 'ICON_CREATE'
      EXPORTING
        name   = gd_icon_data_area_collapse                   "uni
        text   = text-x02
        info   = text-col
      IMPORTING
        result = more_se2.
    LOOP AT SCREEN.
      IF screen-group1 = 'OP2'.
        screen-active = '1'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSE.
    CALL FUNCTION 'ICON_CREATE'
      EXPORTING
        name   = gd_icon_data_area_expand                     "uni
        text   = text-x02
        info   = text-exp
      IMPORTING
        result = more_se2.
    IF all_sez = ' '.
      LOOP AT SCREEN.
        IF screen-group1 = 'OP2'.
          screen-active = '0'.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.
    ENDIF.
  ENDIF.

  IF all_se3 = 'X'.
    CALL FUNCTION 'ICON_CREATE'
      EXPORTING
        name   = gd_icon_data_area_collapse                   "uni
        text   = text-x03
        info   = text-col
      IMPORTING
        result = more_se3.
    LOOP AT SCREEN.
      IF screen-group1 = 'OP3' OR
         screen-group1 = 'JM3'.
        screen-active = '1'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSE.
    CALL FUNCTION 'ICON_CREATE'
      EXPORTING
        name   = gd_icon_data_area_expand                     "uni
        text   = text-x03
        info   = text-exp
      IMPORTING
        result = more_se3.
    IF all_sez = ' '.
      LOOP AT SCREEN.
        IF screen-group1 = 'OP3' OR
           screen-group1 = 'JM3'.
          screen-active = '0'.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.
    ENDIF.
  ENDIF.

  IF all_se4 = 'X'.
    CALL FUNCTION 'ICON_CREATE'
      EXPORTING
        name   = gd_icon_data_area_collapse                   "uni
        text   = text-x04
        info   = text-col
      IMPORTING
        result = more_se4.
    LOOP AT SCREEN.
      IF screen-group1 = 'OP4' OR
         screen-group1 = 'JM4'.
        screen-active = '1'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSE.
    CALL FUNCTION 'ICON_CREATE'
      EXPORTING
        name   = gd_icon_data_area_expand                     "uni
        text   = text-x04
        info   = text-exp
      IMPORTING
        result = more_se4.
    IF all_sez = ' '.
      LOOP AT SCREEN.
        IF screen-group1 = 'OP4' OR
           screen-group1 = 'JM4'.
          screen-active = '0'.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.
    ENDIF.
  ENDIF.

*Beginning insert note                                          "H503958
  IF all_se5 = 'X'.
    CALL FUNCTION 'ICON_CREATE'
      EXPORTING
        name   = gd_icon_data_area_collapse
        text   = text-x08
        info   = text-col
      IMPORTING
        result = more_se5.
    LOOP AT SCREEN.
      IF screen-group1 = 'OP5'.
        screen-active = '1'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSE.
    CALL FUNCTION 'ICON_CREATE'
      EXPORTING
        name   = gd_icon_data_area_expand
        text   = text-x08
        info   = text-exp
      IMPORTING
        result = more_se5.
    IF all_sez = ' '.
      LOOP AT SCREEN.
        IF screen-group1 = 'OP5'.
          screen-active = '0'.
          MODIFY SCREEN.
        ENDIF.
      ENDLOOP.
    ENDIF.
  ENDIF.
*End insert note                                                "H503958

  IF all_se2 = 'X' OR
     all_se3 = 'X' OR
     all_se4 = 'X'.
    LOOP AT SCREEN.
      IF screen-group1 = 'OPA' OR
         screen-group1 = 'JMA'.
        screen-active = '1'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSEIF all_sez = ' '.
    LOOP AT SCREEN.
      IF screen-group1 = 'OPA' OR
         screen-group1 = 'JMA'.
        screen-active = '0'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  IF all_se3 = 'X' OR
     all_se4 = 'X'.
    LOOP AT SCREEN.
      IF screen-group1 = 'OPB'.
        screen-active = '1'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSEIF all_sez = ' '.
    LOOP AT SCREEN.
      IF screen-group1 = 'OPB'.
        screen-active = '0'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.

  IF all_sez = 'X'.
    CALL FUNCTION 'ICON_CREATE'
      EXPORTING
        name   = gd_icon_data_area_collapse                   "uni
        text   = text-x05
        info   = text-col
      IMPORTING
        result = more_sez.
  ELSE.
    CALL FUNCTION 'ICON_CREATE'
      EXPORTING
        name   = gd_icon_data_area_expand                     "uni
        text   = text-x06
        info   = text-exp
      IMPORTING
        result = more_sez.
  ENDIF.

  IF all_sez = 'X'.
    LOOP AT SCREEN.
      IF screen-group1 = 'OPT' OR
         screen-group1 = 'OP1' OR
         screen-group1 = 'OP2' OR
         screen-group1 = 'OP3' OR
         screen-group1 = 'OP4' OR
         screen-group1 = 'OPA' OR
         screen-group1 = 'OPB' OR
         screen-group1 = 'JMA' OR
         screen-group1 = 'JM3' OR
         screen-group1 = 'JM4'.
        screen-active = '1'.
        MODIFY SCREEN.
      ENDIF.
      IF screen-group1 = 'OPZ'.
        screen-active = '0'.
        MODIFY SCREEN.
      ENDIF.
      IF screen-group1 = 'OPY'.
        screen-active = '1'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSE.
    LOOP AT SCREEN.
      IF screen-group1 = 'OPZ'.
        screen-active = '1'.
        MODIFY SCREEN.
      ENDIF.
      IF screen-group1 = 'OPY'.
        screen-active = '0'.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.
ENDFORM.                    "osalor_at_sel_scr_out


**********************************************************************"X
*                                                                     "X
**********************************************************************"X
FORM osalor_at_sel_screen.                                            "X
  IF sy-ucomm = 'MORE'.
    CLEAR: all_se1, all_se2, all_se3, all_se4, all_sez.
    clear  all_se5.                                         "H503958
    IF all_sel = 'X'.
      CLEAR all_sel.
    ELSE.
      all_sel = 'X'.
    ENDIF.
  ENDIF.
  IF sy-ucomm = 'MOR1'.
    CLEAR: all_sel, all_se2, all_se3, all_se4, all_sez.
    clear  all_se5.                                         "H503958
    IF all_se1 = 'X'.
      CLEAR all_se1.
    ELSE.
      all_se1 = 'X'.
    ENDIF.
  ENDIF.
  IF sy-ucomm = 'MOR2'.
    CLEAR: all_sel, all_se1, all_se3, all_se4, all_sez.
    clear  all_se5.                                         "H503958
    IF all_se2 = 'X'.
      CLEAR all_se2.
    ELSE.
      all_se2 = 'X'.
    ENDIF.
  ENDIF.
  IF sy-ucomm = 'MOR3'.
    CLEAR: all_sel, all_se1, all_se2, all_se4, all_sez.
    clear  all_se5.                                         "H503958
    IF all_se3 = 'X'.
      CLEAR all_se3.
    ELSE.
      all_se3 = 'X'.
    ENDIF.
  ENDIF.
  IF sy-ucomm = 'MOR4'.
    CLEAR: all_sel, all_se1, all_se2, all_se3, all_sez.
    clear  all_se5.                                         "H503958
    IF all_se4 = 'X'.
      CLEAR all_se4.
    ELSE.
      all_se4 = 'X'.
    ENDIF.
  ENDIF.
  IF sy-ucomm = 'MOR5'.                                     "H503958
    CLEAR: all_sel, all_se1, all_se2, all_se3, all_se4, all_sez. "H503958
    IF all_se5 = 'X'.                                       "H503958
      CLEAR all_se5.                                        "H503958
    ELSE.                                                   "H503958
      all_se5 = 'X'.                                        "H503958
    ENDIF.                                                  "H503958
  ENDIF.                                                    "H503958
  IF sy-ucomm = 'MORZ'.
    CLEAR: all_sel, all_se1, all_se2, all_se3, all_se4.
    clear  all_se5.                                         "H503958
    IF all_sez = 'X'.
      all_sez = ' '.
    ELSE.
      all_sez = 'X'.
    ENDIF.
  ENDIF.
ENDFORM.                    "osalor_at_sel_screen


**********************************************************************"X
*                                                                     "X
**********************************************************************"X
FORM sel_scr_block_statu2.                                            "X
  IF lastseit EQ space.                                     "H339356
    CLEAR: lastmona, lastjahr.                              "H339356
  ELSEIF lastseit CO ' 0123456789'.                         "H339356
    pern = lastseit.                                        "H339356
    lastseit = pern.                                        "H339356
  ELSEIF lastseit CO ' 0123456789-' and                     "H626884
         lastseit CA '123456789' and                        "H626884
         ( lastseit CP '-++' or                             "H626884
           lastseit CP ' -+' or                             "H626884
           lastseit CP '+- ' or                             "H626884
           lastseit CP '++-' ) and                          "H626884
         lastseit CS '-'.                                   "H626884
    lastseit = '01-'.                                       "H626884
  ELSEIF lastseit CO ' 0-' and                              "H626884
         lastseit CS '0'.                                   "H626884
    lastseit = '000'.                                       "H626884
  ELSE.                                                     "H339356
    lastseit = space.                                       "H339356
    CLEAR: lastmona, lastjahr.                              "H339356
  ENDIF.                                                    "H339356

  IF set_tabg EQ yes.
    IF lastseit IS INITIAL.
      SET CURSOR FIELD 'LASTSEIT'.                                  "uni
      MESSAGE e000 WITH text-035.
    ENDIF.
  ENDIF.
  IF NOT lastseit IS INITIAL.
    h_periode = current_period.
    PERFORM minus_mon_periods USING lastseit h_periode.
    lastmona = h_periode-m.
    lastjahr = h_periode-j.
  ENDIF.
ENDFORM.                    "sel_scr_block_statu2


**********************************************************************"X
*                                                                     "X
**********************************************************************"X
FORM sel_scr_block_statu5.                                            "X
  IF lastsei1 EQ space.                                     "H339356
    CLEAR: lastmon1, lastjah1.                              "H339356
  ELSEIF lastsei1 CO ' 0123456789'.                         "H339356
    pern = lastsei1.                                        "H339356
    lastsei1 = pern.                                        "H339356
  ELSEIF lastsei1 CO ' 0123456789-' and                     "H740296
         lastsei1 CA '123456789' and                        "H740296
         ( lastsei1 CP '-++' or                             "H740296
           lastsei1 CP ' -+' or                             "H740296
           lastsei1 CP '+- ' or                             "H740296
           lastsei1 CP '++-' ) and                          "H740296
         lastsei1 CS '-'.                                   "H740296
    lastsei1 = '01-'.                                       "H740296
  ELSEIF lastsei1 CO ' 0-' and                              "H740296
         lastsei1 CS '0'.                                   "H740296
    lastsei1 = '000'.                                       "H740296
  ELSE.                                                     "H339356
    lastsei1 = space.                                       "H339356
    CLEAR: lastmon1, lastjah1.                              "H339356
  ENDIF.                                                    "H339356

  IF set_abgs EQ yes.
    IF lastsei1 IS INITIAL.
      SET CURSOR FIELD 'LASTSEI1'.                                  "uni
      MESSAGE e000 WITH text-035.
    ENDIF.
  ENDIF.
  IF NOT lastsei1 IS INITIAL.
    h_periode = current_period.
    PERFORM minus_mon_periods USING lastsei1 h_periode.
    lastmon1 = h_periode-m.
    lastjah1 = h_periode-j.
  ENDIF.
* Beginning insertion note 412724
  IF set_abgs = yes AND rst_abgs = yes AND if_tabg1 = yes.
    MESSAGE i000 WITH text-042 text-043 text-044 text-045.
    MESSAGE i000 WITH text-046 text-047 text-048.
    MESSAGE i000 WITH text-049 text-050.
    CLEAR rst_abgs.
  ENDIF.
* End note 412724
ENDFORM.                    "sel_scr_block_statu5


**********************************************************************"X
*                                                                     "X
**********************************************************************"X
FORM sel_scr_block_statu1c.                                           "X
  IF sd_seit EQ space.                                      "H339356
    CLEAR: sd_mona, sd_jahr.                                "H339356
  ELSEIF sd_seit CO ' 0123456789'.                          "H339356
    pern = sd_seit.                                         "H339356
    sd_seit = pern.                                         "H339356
  ELSEIF sd_seit CO ' 0123456789-' and                      "H626884
         sd_seit CA '123456789' and                         "H626884
         ( sd_seit CP '-++' or                              "H626884
           sd_seit CP ' -+' or                              "H626884
           sd_seit CP '+- ' or                              "H626884
           sd_seit CP '++-' ) and                           "H626884
         sd_seit CS '-'.                                    "H626884
    sd_seit = '01-'.                                        "H626884
  ELSEIF sd_seit CO ' 0-' and                               "H626884
         sd_seit CS '0'.                                    "H626884
    sd_seit = '000'.                                        "H626884
  ELSE.                                                     "H339356
    sd_seit = space.                                        "H339356
    CLEAR: sd_mona, sd_jahr.                                "H339356
  ENDIF.                                                    "H339356

  IF set_enfa EQ yes OR                                     "H309087
     set_tabg EQ yes AND if_enfa EQ yes OR                  "H309087
     set_abgs EQ yes AND if_enfa1 EQ yes OR                 "H309087
     set_glft EQ yes OR                                     "H309087
     set_tabg EQ yes AND if_glft EQ yes OR                  "H309087
     set_abgs EQ yes AND if_glft1 EQ yes.                   "H309087
    IF sd_seit IS INITIAL.                                  "H309087
      SET CURSOR FIELD 'SD_SEIT'.                                   "uni
      MESSAGE e000 WITH text-035.                           "H309087
    ENDIF.                                                  "H309087
  ENDIF.                                                    "H309087

  IF NOT sd_seit IS INITIAL.
    h_periode = current_period.
    PERFORM minus_mon_periods USING sd_seit h_periode.
    sd_mona = h_periode-m.
    sd_jahr = h_periode-j.
  ENDIF.
ENDFORM.                    "sel_scr_block_statu1c


************************************************************************
*
************************************************************************
FORM trace_init.
  trace_exit = no.

  CHECK trace_on = yes.

* trace_title = 'Statusableitung SAPKKA12'.                     "H413129
  trace_title = text-a74.                                   "H413129
  CALL FUNCTION 'K_TRACE_INITIALIZE'
    EXPORTING
      i_title = trace_title
    IMPORTING
      e_level = trace_level.
* Beginning insertion note 435681
  IF test_lf = yes.
*   trace_name = 'Testlauf'.
    trace_name = text-a34.
*   trace_value = 'Istzustand nicht durch Sollzustand ersetzt'.
    trace_value = text-a35.
  ELSE.
*   trace_name = 'Echtlauf'.
    trace_name = text-a36.
*   trace_value = 'Istzustand durch Sollzustand ersetzt'.
    trace_value = text-a37.
  ENDIF.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.
* End insertion note 435681
ENDFORM.                    "trace_init


************************************************************************
*
************************************************************************
FORM trace_begin_auftrag.
  DATA: BEGIN OF ka,
          v LIKE vbap-vbeln,
          1 VALUE '/',
          p LIKE vbap-posnr,
        END OF ka.

  CHECK trace_on = yes.

  REFRESH trace_status_tab.
  REFRESH trace_status_tab1.
  clear msg_tab[].                                          "H456583A

  ka-v = auftraege-vbeln.
  ka-p = auftraege-posnr.
* trace_name = 'Vertriebsbeleg/-Position'.
  trace_name = text-a22.
  trace_value = ka.
  CALL FUNCTION 'K_TRACE_STEP_BEGIN'
    EXPORTING
      i_name           = trace_name
*     I_TYPE           = 'F'
      i_level          = trace_level
      i_value          = trace_value
    IMPORTING
      e_level          = trace_level
    EXCEPTIONS
      not_active       = 1
      OTHERS           = 2.

  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.                    "trace_begin_auftrag


************************************************************************
*
************************************************************************
FORM trace_end_auftrag.
  CHECK trace_on = yes.

* Beginning deletion note 435681
*  IF test_lf = yes.
**   trace_name = 'Testlauf'.
*    trace_name = text-a34.
**   trace_value = 'Istzustand nicht durch Sollzustand ersetzt'.
*    trace_value = text-a35.
*  ELSE.
**   trace_name = 'Echtlauf'.
*    trace_name = text-a36.
**   trace_value = 'Istzustand durch Sollzustand ersetzt'.
*    trace_value = text-a37.
*  ENDIF.
*  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
*      EXPORTING
*        i_name1                 = trace_name
*        i_value1                = trace_value
*        i_level                 = trace_level
*        i_type                  = 'R'.
* End deletion note 435681

* Beginning insertion note 429466:
*  IF sy-saprl CP '40*' OR sy-saprl CP '45*' OR sy-saprl = '46B'. "uni
*    trace_level = trace_level - 1.                               "uni
*  ELSE.                                                          "uni
  CALL FUNCTION 'RH_FUNCTION_EXIST'
    EXPORTING
      name               = 'K_TRACE_STEP_END'
    EXCEPTIONS
      function_not_found = 1
      OTHERS             = 2.
  IF sy-subrc <> 0.
    trace_level = trace_level - 1.
  ELSE.
* End insertion note 429466
*   trace_name = 'Vertriebsbeleg/-Position'.
    trace_name = text-a22.
    CALL FUNCTION 'K_TRACE_STEP_END'
      EXPORTING
        i_name        = trace_name
*       I_TYPE        = 'F'
      IMPORTING
        e_level       = trace_level.
  ENDIF.                                                         "uni

  IF j_sel GE trace_max_obj.
*   trace_name = 'Verarbeitung beendet'.
    trace_name = text-a38.
*   trace_value = 'nach Detailanalyse von 1000 Positionen'.
    trace_value = text-a39.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level
        i_type   = 'R'.
    trace_exit = yes.
  ENDIF.
ENDFORM.                    "trace_end_auftrag


************************************************************************
*
************************************************************************
FORM trace_display.
  CHECK trace_on = yes.

  CALL FUNCTION 'K_TRACE_DISPLAY'
*   EXPORTING
*     CALLBACK_PROGRAM            =
*     CALLBACK_USER_COMMAND       =
    EXCEPTIONS
      not_active                  = 1
      OTHERS                      = 2.

  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.                    "trace_display


************************************************************************
*
************************************************************************
FORM trace_current_status USING istat like tkkas-istat
                                subrc like sy-subrc.
  DATA: BEGIN OF st,
          s(10),     "value 'Status',
          1 VALUE ' ',
          t(20),
        END OF st,
        xrc LIKE sy-subrc.

  CHECK trace_on = yes.

  st-s = text-a23.

  xrc = subrc.

  READ TABLE trace_status_tab WITH KEY istat = istat.
  CHECK sy-subrc NE 0.
  trace_status_tab-istat = istat.
  APPEND trace_status_tab.

* trace_name = 'Status'.
  trace_name = text-a23.
  st-s = istat.
  IF xrc = 0.
*   st-t = 'Aktiv'.
    st-t = text-a24.
  ELSE.
*   st-t = 'Nicht Aktiv'.
    st-t = text-a25.
  ENDIF.
  trace_value = st.
  CONDENSE trace_value.

  trace_status_tab1-value = trace_value.
  APPEND trace_status_tab1.
ENDFORM.                    "trace_current_status


************************************************************************
*
************************************************************************
FORM trace_current_status_show.

  CHECK trace_on = yes.
  DESCRIBE TABLE trace_status_tab1 LINES sy-tabix.
  CHECK sy-tabix >= 1.

* trace_name = 'Statuslesen'.
  trace_name = text-a26.
* trace_value = 'Laufende Position'.
  trace_value = text-a27.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1                 = trace_name
*       I_TEXT_REFERENCE        = ' '
        i_value1                = trace_value
*       I_SNODE                 =
        i_level                 = trace_level
        i_type                  = 'R'
*       I_RESULT                = 'G'
*       I_HOTSPOT1              =
*       I_ADDITIONAL_ICON       =
     EXCEPTIONS
        not_active              = 1
        OTHERS                  = 2.
* IF sy-subrc <> 0.                                            "H456583A
*   MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno          "H456583A
*           WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.          "H456583A
* ENDIF.                                                       "H456583A

  trace_level = trace_level + 1.

* trace_name = 'Istzustand (vor SAPKKA12)'.
  trace_name = text-a28.
  LOOP AT trace_status_tab1.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_status_tab1-value
        i_level  = trace_level.
  ENDLOOP.

  trace_level = trace_level - 1.
  REFRESH trace_status_tab1.
ENDFORM.                    "trace_current_status_show


************************************************************************
*
************************************************************************
FORM trace_dependent_obj_fnd.
  DATA: BEGIN OF sl,
          o(30),
          1,
          t(7),
          2,
          g(7),
          3,
          e(7),
        END OF sl,
        or_found,
        vb_found,
        BEGIN OF ao,
          t(30),
          1,
          s(10),
          2,
          a(10),
        END OF ao,
        onr_tab LIKE ionra OCCURS 0 WITH HEADER LINE,
        txt(30),
        obj_traeger(30).

  CHECK trace_on = yes.

  DESCRIBE TABLE objnrtab LINES sy-tabix.
  IF sy-tabix LE 1.
*   trace_name = 'Abh#ngige Positionen u. Auftr.'.
    trace_name = text-a29.
*   trace_value = 'Keine abh#ngigen Positionen oder Auftr#ge'.
    trace_value = text-a67.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level
        i_type   = 'R'.
    EXIT.
  ENDIF.

* trace_name = 'Abh#ngige Positionen u. Auftr.'.
  trace_name = text-a29.
* trace_value = 'Objektliste'.
  trace_value = text-a30.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.

  or_found = no.
  vb_found = no.
  trace_level = trace_level + 1.
  LOOP AT objnrtab WHERE objnr NE auftraege-objnr.
    PERFORM obj_key_get_sngl_into_onr_tab(saplkkag)
      USING objnrtab-objnr.
    PERFORM get_text_objektart(saplkkag)
      USING txt obj_traeger.
    IF objnrtab-objnr(2) = 'OR'.
      or_found = yes.
    ENDIF.
    IF objnrtab-objnr(2) = 'VB'.
      vb_found = yes.
    ENDIF.
    trace_name = txt.
    CLEAR sl.
    sl-o = obj_traeger.
    IF objnrtab-tabg = yes.
      sl-t = trace_text_tabg.
    ENDIF.
    IF objnrtab-glft = yes.
      sl-g = trace_text_glft.
    ENDIF.
    IF objnrtab-enfa = yes.
      sl-e = trace_text_enfa.
    ENDIF.
    trace_long_value = sl.
    CONDENSE trace_long_value.
    PERFORM trace_var_store_longline USING trace_name
                                           space
                                           trace_long_value
                                           yes.             "H450841
  ENDLOOP.
  trace_level = trace_level - 1.

  IF or_found = yes AND all_or_tabg = yes OR
     or_found = yes AND all_or_glft = yes OR
     vb_found = yes AND all_vb_tabg = yes.
*   trace_name = 'Abh#ngige Positionen u. Auftr.'.
    trace_name = text-a29.
*   trace_value = 'Statuslesen'.
    trace_value = text-a26.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.
  trace_level = trace_level + 1.
  IF or_found = yes AND all_or_tabg = yes.
*   trace_name = 'Istzustand'.
    trace_name = text-a31.
*   ao-t = 'Alle Auftr#ge: Status'.
    ao-t = text-a32.
    ao-s = trace_text_tabg.
*   ao-a = 'aktiv'.
    ao-a = text-a24.
    trace_value = ao.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.
  IF or_found = yes AND all_or_glft = yes.
*   trace_name = 'Istzustand'.
    trace_name = text-a31.
*   ao-t = 'Alle Auftr#ge: Status'.
    ao-t = text-a32.
    ao-s = trace_text_glft.
*   ao-a = 'aktiv'.
    ao-a = text-a24.
    trace_value = ao.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.
  IF vb_found = yes AND all_vb_tabg = yes.
*   trace_name = 'Istzustand'.
    trace_name = text-a31.
*   ao-t = 'Alle Positionen: Status'.
    ao-t = text-a33.
    ao-s = trace_text_tabg.
*   ao-a = 'aktiv'.
    ao-a = text-a24.
    trace_value = ao.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.
  trace_level = trace_level - 1.
ENDFORM.                    "trace_dependent_obj_fnd


************************************************************************
*
************************************************************************
FORM trace_max_period.
  DATA: BEGIN OF p,
          b(20),    "value 'gefunden bis',
          0,
          m(3),
          1 VALUE '/',
          j(4),
          2(2) VALUE ' (',
          3(18),     "value 'Bedingung',
          5,
          t(4),
          4 VALUE ')',
        END OF p.
  DATA: BEGIN OF k,
          b(25),     "value 'keine gefunden',
          2(2) VALUE ' (',
          3(18),     "value 'Bedingung',
          5,
          t(4),
          4 VALUE ')',
        END OF k.

  CHECK trace_on = yes.

  p-b = text-a52.
  p-3 = text-a53.
  k-b = text-a54.
  k-3 = text-a53.

* trace_name = 'Buchungspr¨¹fung'.
  trace_name = text-a55.
  if auftraege-abgrs eq space.                              "H450841
*   trace_value = 'Laufende Position'.                          "H450841
    trace_value = text-a27.                                 "H450841
  else.                                                     "H450841
*   trace_value = 'Laufende + abh#ngige Positionen u. Auftr#ge'.
    trace_value = text-a04.
  endif.                                                    "H450841
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.

  trace_level = trace_level + 1.
  IF max_jahr_t NE '0000'.
*   trace_name = 'Istbuchungen'.
    trace_name = text-a56.
    IF max_jahr_t EQ '0001'.
      k-t = trace_text_tabg(4).
      trace_long_value = k.
    ELSE.
      p-m = max_period_t.
      p-j = max_jahr_t.
      p-t = trace_text_tabg(4).
      trace_long_value = p.
    ENDIF.
    CONDENSE trace_long_value.
    PERFORM trace_var_store_longline USING trace_name
                                           space
                                           trace_long_value
                                           yes.             "H450841
  ENDIF.
  IF max_jahr_a NE '0000'.
*   trace_name = 'Istbuchungen'.
    trace_name = text-a56.
*   IF max_jahr_a EQ '0001'.                                    "H456583
    IF max_jahr_a_ist EQ '0001'.                            "H456583
      k-t = trace_text_abgs(4).
      trace_long_value = k.
    ELSE.
*     p-m = max_period_a.                                       "H456583
*     p-j = max_jahr_a.                                         "H456583
      p-m = max_period_a_ist.                               "H456583
      p-j = max_jahr_a_ist.                                 "H456583
      p-t = trace_text_abgs(4).
      trace_long_value = p.
    ENDIF.
    CONDENSE trace_long_value.
    PERFORM trace_var_store_longline USING trace_name
                                           space
                                           trace_long_value
                                           yes.             "H450841
*   trace_name = 'Abgrenzungsdaten'.                            "H456583
    trace_name = text-a95.                                  "H456583
    IF max_jahr_a_abgr EQ '0001'.                           "H456583
      k-t = trace_text_abgs(4).                             "H456583
      trace_long_value = k.                                 "H456583
    ELSE.                                                   "H456583
      p-m = max_period_a_abgr.                              "H456583
      p-j = max_jahr_a_abgr.                                "H456583
      p-t = trace_text_abgs(4).                             "H456583
      trace_long_value = p.                                 "H456583
    ENDIF.                                                  "H456583
    CONDENSE trace_long_value.                              "H456583
    PERFORM trace_var_store_longline USING trace_name       "H456583
                                           space            "H456583
                                           trace_long_value "H456583
                                           yes.             "H456583
  ENDIF.
  trace_level = trace_level - 1.
ENDFORM.                    "trace_max_period


************************************************************************
*
************************************************************************
FORM trace_enfa_glft_status.
  DATA: BEGIN OF st,
          t1(10),    "value 'Position',
          1 VALUE ' ',
          t2(20),
          2,
          t3(20),
        END OF st.

  CHECK trace_on = yes.

  st-t1 = text-a20.

* trace_name = 'Statusermittlung'.
  trace_name = text-a45.
* trace_value = 'Laufende Position'.
  trace_value = text-a27.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.
  trace_level = trace_level + 1.

* trace_name = 'Sollzustand (gem## SD)'.
  trace_name = text-a40.
  IF kndpos_endgeliefert = yes.
    st-t2 = space.
  ELSE.
*   st-t2 = 'nicht'.
    st-t2 = text-a41.
  ENDIF.
* st-t3 = 'endgeliefert'.
  st-t3 = text-a42.
  trace_value = st.
  CONDENSE trace_value.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.

  trace_level = trace_level + 1.                            "HW556804

  clear s_kndpos_info_glft.                                 "HW556804
  if kndpos_info_glft is initial.                           "HW556804
* trace_name = 'Erl#uterung'                                "HW556804
    trace_name = text-a96.                                  "HW556804
* trace_value = 'Folgende Bedingung ist nicht erf¨¹llt:'     "HW556804
    trace_value = text-a97.                                 "HW556804
    trace_long_value = text-a98.                            "HW556804
    perform trace_var_store_longline USING trace_name       "HW556804
                                           trace_value      "HW556804
                                           trace_long_value "HW556804
                                           no.              "HW556804
  else.                                                     "HW556804
    loop at kndpos_info_glft into s_kndpos_info_glft.       "HW556804
* trace_name = 'Erl#uterung'                                "HW556804
      trace_name = text-a96.                                "HW556804
      trace_value = ' '.                                    "HW556804
      trace_long_value = s_kndpos_info_glft-line.           "HW556804
      perform trace_var_store_longline USING trace_name     "HW556804
                                             trace_value    "HW556804
                                             trace_long_value "HW556804
                                             no.            "HW556804
    endloop.                                                "HW556804
  endif.                                                    "HW556804
  trace_level = trace_level - 1.                            "HW556804

  clear kndpos_info_glft.                                   "HW556804



  DATA l_num_of_pos LIKE sy-tabix.                          "435681
  DESCRIBE TABLE posnr_tab LINES l_num_of_pos.              "435681

* trace_name = 'Sollzustand (gem## SD)'.
  trace_name = text-a40.
  IF auftraege-fkrel CO ' D' AND l_num_of_pos > 0.          "MOD435681
*   st-t2 = 'nicht'.
    st-t2 = text-a41.
*   st-t3 = 'fakturarelevant'.
    st-t3 = text-a43.
  ELSEIF kndpos_endfakturiert = yes.
    st-t2 = space.
*   st-t3 = 'endfakturiert'.
    st-t3 = text-a44.
  ELSE.
*   st-t2 = 'nicht'.
    st-t2 = text-a41.
*   st-t3 = 'endfakturiert'.
    st-t3 = text-a44.
  ENDIF.
  trace_value = st.
  CONDENSE trace_value.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.
  trace_level = trace_level + 1.                            "HW556804

  clear s_kndpos_info_enfa.                                 "HW556804
  if kndpos_info_enfa is initial.                           "HW556804
* trace_name = 'Erl#uterung'                                "HW556804
    trace_name = text-a96.                                  "HW556804
* trace_value = 'Folgende Bedingung ist nicht erf¨¹llt:'     "HW556804
    trace_value = text-a97.                                 "HW556804
    trace_long_value = text-a98.                            "HW556804
    perform trace_var_store_longline USING trace_name       "HW556804
                                           trace_value      "HW556804
                                           trace_long_value "HW556804
                                           no.              "HW556804
  else.                                                     "HW556804
    loop at kndpos_info_enfa into s_kndpos_info_enfa.       "HW556804
* trace_name = 'Erl#uterung'                                "HW556804
      trace_name = text-a96.                                "HW556804
      trace_value = ' '.                                    "HW556804
      trace_long_value = s_kndpos_info_enfa-line.           "HW556804
      perform trace_var_store_longline USING trace_name     "HW556804
                                             trace_value    "HW556804
                                             trace_long_value "HW556804
                                             no.            "HW556804
    endloop.                                                "HW556804
  endif.                                                    "HW556804
  trace_level = trace_level - 1.                            "HW556804

  clear kndpos_info_enfa.                                   "HW556804


*  trace_level = trace_level - 1.                                "435681
*  -> inserted in form trace_enfa_glft_status_alles              "435681

*  DESCRIBE TABLE posnr_tab LINES sy-tabix.                      "435681
*  CHECK sy-tabix GE 1.                                          "435681
  CHECK l_num_of_pos > 0.                                   "435681
* trace_value = 'Abh#ngige Positionen'.                       "MOD435681
  trace_value = text-a21.                                   "MOD435681
* trace_name = 'Statusermittlung'.                            "MOD435681
  trace_name = text-a45.                                    "MOD435681
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.
ENDFORM.                    "trace_enfa_glft_status


************************************************************************
*
************************************************************************
FORM trace_get_status_text.
  TABLES: tj02t.

  CHECK trace_on = yes.

  SELECT SINGLE * FROM tj02t WHERE istat = i_status_enfa
                               AND spras = sy-langu.
  IF sy-subrc = 0.
    trace_text_enfa = tj02t-txt04.
  ELSE.
    trace_text_enfa = i_status_enfa.
  ENDIF.

  SELECT SINGLE * FROM tj02t WHERE istat = i_status_glft
                               AND spras = sy-langu.
  IF sy-subrc = 0.
    trace_text_glft = tj02t-txt04.
  ELSE.
    trace_text_glft = i_status_glft.
  ENDIF.

  SELECT SINGLE * FROM tj02t WHERE istat = i_status_frei
                               AND spras = sy-langu.
  IF sy-subrc = 0.
    trace_text_frei = tj02t-txt04.
  ELSE.
    trace_text_frei = i_status_frei.
  ENDIF.

  SELECT SINGLE * FROM tj02t WHERE istat = 'I0046'         "i_status_tabg
                               AND spras = sy-langu.
  IF sy-subrc = 0.
    trace_text_tabg = tj02t-txt04.
  ELSE.
    trace_text_tabg = i_status_tabg.
  ENDIF.

  SELECT SINGLE * FROM tj02t WHERE istat = i_status_abgs
                               AND spras = sy-langu.
  IF sy-subrc = 0.
    trace_text_abgs = tj02t-txt04.
  ELSE.
    trace_text_abgs = i_status_abgs.
  ENDIF.
ENDFORM.                    "trace_get_status_text


************************************************************************
*
************************************************************************
FORM trace_erlaeuterungen.
  TABLES: tj01t.
  DATA: BEGIN OF e,
          t1(10),
          1,
          t2(5),
          2(3) VALUE ' : ',
          t3(30),
        END OF e.

  CHECK trace_on = yes.

* trace_name = 'Erl#uterungen'.
  trace_name = text-a50.
  trace_value = space.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.

  trace_level = trace_level + 1.

  SELECT SINGLE * FROM tj02t WHERE istat = i_status_enfa
                               AND spras = sy-langu.
  IF sy-subrc = 0.
*   trace_name = 'Status'.
    trace_name = text-a23.
    e-t1 = space.
    e-t2 = trace_text_enfa.
    e-t3 = tj02t-txt30.
    trace_value = e.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

  SELECT SINGLE * FROM tj02t WHERE istat = i_status_glft
                               AND spras = sy-langu.
  IF sy-subrc = 0.
*   trace_name = 'Status'.
    trace_name = text-a23.
    e-t1 = space.
    e-t2 = trace_text_glft.
    e-t3 = tj02t-txt30.
    trace_value = e.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

  SELECT SINGLE * FROM tj02t WHERE istat = i_status_frei
                               AND spras = sy-langu.
  IF sy-subrc = 0.
*   trace_name = 'Status'.
    trace_name = text-a23.
    e-t1 = space.
    e-t2 = trace_text_frei.
    e-t3 = tj02t-txt30.
    trace_value = e.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

  SELECT SINGLE * FROM tj02t WHERE istat = i_status_tabg
                               AND spras = sy-langu.
  IF sy-subrc = 0.
*   trace_name = 'Status'.
    trace_name = text-a23.
    e-t1 = space.
    e-t2 = trace_text_tabg.
    e-t3 = tj02t-txt30.
    trace_value = e.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

  SELECT SINGLE * FROM tj02t WHERE istat = i_status_abgs
                               AND spras = sy-langu.
  IF sy-subrc = 0.
*   trace_name = 'Status'.
    trace_name = text-a23.
    e-t1 = space.
    e-t2 = trace_text_abgs.
    e-t3 = tj02t-txt30.
    trace_value = e.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

  SELECT SINGLE * FROM tj01t WHERE vrgng = vrgng_set_enfa   "H456583A
                               AND spras = sy-langu.        "H456583A
  IF sy-subrc = 0.                                          "H456583A
*   trace_name = 'Vorgang'.                                    "H456583A
    trace_name = text-a51.                                  "H456583A
    e-t1 = space.                                           "H456583A
    e-t2 = vrgng_set_enfa.                                  "H456583A
    e-t3 = tj01t-txt.                                       "H456583A
    trace_value = e.                                        "H456583A
    CONDENSE trace_value.                                   "H456583A
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'                  "H456583A
      EXPORTING                                             "H456583A
        i_name1                 = trace_name                "H456583A
        i_value1                = trace_value               "H456583A
        i_level                 = trace_level.              "H456583A
  ENDIF.                                                    "H456583A

  SELECT SINGLE * FROM tj01t WHERE vrgng = vrgng_reset_enfa "H456583A
                               AND spras = sy-langu.        "H456583A
  IF sy-subrc = 0.                                          "H456583A
*   trace_name = 'Vorgang'.                                    "H456583A
    trace_name = text-a51.                                  "H456583A
    e-t1 = space.                                           "H456583A
    e-t2 = vrgng_reset_enfa.                                "H456583A
    e-t3 = tj01t-txt.                                       "H456583A
    trace_value = e.                                        "H456583A
    CONDENSE trace_value.                                   "H456583A
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'                  "H456583A
      EXPORTING                                             "H456583A
        i_name1                 = trace_name                "H456583A
        i_value1                = trace_value               "H456583A
        i_level                 = trace_level.              "H456583A
  ENDIF.                                                    "H456583A

  SELECT SINGLE * FROM tj01t WHERE vrgng = vrgng_set_tabg
                               AND spras = sy-langu.
  IF sy-subrc = 0.
*   trace_name = 'Vorgang'.
    trace_name = text-a51.
    e-t1 = space.
    e-t2 = vrgng_set_tabg.
    e-t3 = tj01t-txt.
    trace_value = e.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

  SELECT SINGLE * FROM tj01t WHERE vrgng = vrgng_reset_tabg
                               AND spras = sy-langu.
  IF sy-subrc = 0.
*   trace_name = 'Vorgang'.
    trace_name = text-a51.
    e-t1 = space.
    e-t2 = vrgng_reset_tabg.
    e-t3 = tj01t-txt.
    trace_value = e.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

  SELECT SINGLE * FROM tj01t WHERE vrgng = vrgng_set_abgs
                               AND spras = sy-langu.
  IF sy-subrc = 0.
*   trace_name = 'Vorgang'.
    trace_name = text-a51.
    e-t1 = space.
    e-t2 = vrgng_set_abgs.
    e-t3 = tj01t-txt.
    trace_value = e.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

  SELECT SINGLE * FROM tj01t WHERE vrgng = vrgng_reset_abgs
                               AND spras = sy-langu.
  IF sy-subrc = 0.
*   trace_name = 'Vorgang'.
    trace_name = text-a51.
    e-t1 = space.
    e-t2 = vrgng_reset_abgs.
    e-t3 = tj01t-txt.
    trace_value = e.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

* trace_name = '(+) betrifft Status GLFT/ENFA'           "HW564737
  trace_name = text-u58.                                    "HW564737
* trace_value = 'Status wird gesetzt'                    "HW564737
  trace_value = text-u59.                                   "HW564737
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'                    "HW564737
    EXPORTING                                               "HW564737
      i_name1                 = trace_name                  "HW564737
      i_value1                = trace_value                 "HW564737
      i_level                 = trace_level.                "HW564737

* trace_name = '(-) betrifft Status GLFT/ENFA'           "HW564737
  trace_name = text-u60.                                    "HW564737
* trace_value = 'Status wird zur¨¹ckgenommen'             "HW564737
  trace_value = text-u61.                                   "HW564737
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'                    "HW564737
    EXPORTING                                               "HW564737
      i_name1                 = trace_name                  "HW564737
      i_value1                = trace_value                 "HW564737
      i_level                 = trace_level.                "HW564737


  trace_level = trace_level - 1.
ENDFORM.                    "trace_erlaeuterungen


************************************************************************
*
************************************************************************
FORM trace_enfa_glft_status_upos.
  DATA: BEGIN OF st,
          t0(10),   "value 'Position',
          0,
          t1 LIKE vbap-posnr,
          1 VALUE ' ',
          t2(10),
          2,
          t3(25),
        END OF st.

  CHECK trace_on = yes.

  st-t0 = text-a20.

  trace_level = trace_level + 1.

* trace_name = 'Sollzustand (gem## SD)'.
  trace_name = text-a40.
  st-t1 = posnr_tab-posnr.
  IF kndpos_endgeliefert1 = yes.
    st-t2 = space.
  ELSE.
*   st-t2 = 'nicht'.
    st-t2 = text-a41.
  ENDIF.
* st-t3 = 'endgeliefert'.
  st-t3 = text-a42.
  trace_value = st.
  CONDENSE trace_value.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.
  trace_level = trace_level + 1.                            "HW556804

  clear s_abhpos_info_glft.                                 "HW556804
  if abhpos_info_glft is initial.                           "HW556804
* trace_name = 'Erl#uterung'                                "HW556804
    trace_name = text-a96.                                  "HW556804
* trace_value = 'Folgende Bedingung ist nicht erf¨¹llt:'     "HW556804
    trace_value = text-a97.                                 "HW556804
    trace_long_value = text-a98.                            "HW556804
    perform trace_var_store_longline USING trace_name       "HW556804
                                           trace_value      "HW556804
                                           trace_long_value "HW556804
                                           no.              "HW556804
  else.                                                     "HW556804
    loop at abhpos_info_glft into s_abhpos_info_glft.       "HW556804
* trace_name = 'Erl#uterung'                                "HW556804
      trace_name = text-a96.                                "HW556804
      trace_value = ' '.                                    "HW556804
      trace_long_value = s_abhpos_info_glft-line.           "HW556804
      perform trace_var_store_longline USING trace_name     "HW556804
                                             trace_value    "HW556804
                                             trace_long_value "HW556804
                                             no.            "HW556804
    endloop.                                                "HW556804
  endif.                                                    "HW556804
  trace_level = trace_level - 1.                            "HW556804

  clear abhpos_info_glft.                                   "HW556804


* trace_name = 'Sollzustand (gem## SD)'.
  trace_name = text-a40.
  st-t1 = posnr_tab-posnr.
  IF posnr_tab-fkrel CO ' D'.
*   st-t2 = 'nicht'.
    st-t2 = text-a41.
*   st-t3 = 'fakturarelevant'.
    st-t3 = text-a43.
  ELSEIF kndpos_endfakturiert1 = yes.
    st-t2 = space.
*   st-t3 = 'endfakturiert'.
    st-t3 = text-a44.
  ELSE.
*   st-t2 = 'nicht'.
    st-t2 = text-a41.
*   st-t3 = 'endfakturiert'.
    st-t3 = text-a44.
  ENDIF.
  trace_value = st.
  CONDENSE trace_value.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.
  trace_level = trace_level + 1.                            "HW556804

  clear s_abhpos_info_enfa.                                 "HW556804
  if abhpos_info_enfa is initial.                           "HW556804
* trace_name = 'Erl#uterung'                                "HW556804
    trace_name = text-a96.                                  "HW556804
* trace_value = 'Folgende Bedingung ist nicht erf¨¹llt:'     "HW556804
    trace_value = text-a97.                                 "HW556804
    trace_long_value = text-a98.                            "HW556804
    perform trace_var_store_longline USING trace_name       "HW556804
                                           trace_value      "HW556804
                                           trace_long_value "HW556804
                                           no.              "HW556804
  else.                                                     "HW556804
    loop at abhpos_info_enfa into s_abhpos_info_enfa.       "HW556804
* trace_name = 'Erl#uterung'                                "HW556804
      trace_name = text-a96.                                "HW556804
      trace_value = ' '.                                    "HW556804
      trace_long_value = s_abhpos_info_enfa-line.           "HW556804
      perform trace_var_store_longline USING trace_name     "HW556804
                                             trace_value    "HW556804
                                             trace_long_value "HW556804
                                             no.            "HW556804
    endloop.                                                "HW556804
  endif.                                                    "HW556804
  trace_level = trace_level - 1.                            "HW556804

  clear kndpos_info_enfa.                                   "HW556804


  trace_level = trace_level - 1.
ENDFORM.                    "trace_enfa_glft_status_upos


************************************************************************
*
************************************************************************
FORM trace_enfa_glft_status_alles.
  DATA: BEGIN OF st,
          t1(30),
          1 VALUE ' ',
          t2(15),
        END OF st.

  CHECK trace_on = yes.

  DESCRIBE TABLE posnr_tab LINES sy-tabix.
  IF sy-tabix GE 1.
* Beginning of deletion note 435681
**   trace_name = 'Statusermittlung'.
*    trace_name = text-a45.
**   trace_value = 'Laufende + abh#ngige Positionen'.
*    trace_value = text-a46.
*    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
*      EXPORTING
*        i_name1                 = trace_name
*        i_value1                = trace_value
*        i_level                 = trace_level
*        i_type                  = 'R'.
*    trace_level = trace_level + 1.
* End of deletion note 435681
*   trace_name = 'Sollzustand (gem## SAPKKA12)'.              "MOD435681
    trace_name = text-a72.                                  "MOD435681
    IF kndpos_endgeliefert = yes.
* Beginning insertion note 435681
*     'GLFT, da alle Positionen endgeliefert'
      trace_value = text-a76.
    ELSE.
*     'Nicht GLFT, da nicht alle Positionen endgeliefert'
      trace_value = text-a77.
    ENDIF.
* End insertion note 435681
* Lines deleted note 435681
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.

*   trace_name = 'Sollzustand (gem## SAPKKA12)'.              "MOD435681
    trace_name = text-a72.                                  "MOD435681
    IF kndpos_endfakturiert = yes.
* Beginning insertion note 435681
*     ENFA, da alle Positionen endfakturiert
      trace_value = text-a78.
    ELSE.
*     Nicht ENFA, da nicht alle Positionen endfakturiert
      trace_value = text-a79.
    ENDIF.
* End insertion note 435681
* Lines deleted note 435681
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
*    trace_level = trace_level - 1.                              "435681
*  ELSEIF auftraege-fkrel CO ' D'.
* Lines deleted note 435681
  ENDIF.
  trace_level = trace_level - 1.                            "435681
ENDFORM.                    "trace_enfa_glft_status_alles


************************************************************************
*
************************************************************************
FORM trace_balance.
  DATA: BEGIN OF s,
          t1(35),
          1,
          t2(14),
        END OF s,
        nur_ein_obj.

  CHECK trace_on = yes.

  CHECK if0saldo EQ yes OR if_0_wip EQ yes.

  DESCRIBE TABLE objnrtab LINES sy-tabix.
  IF sy-tabix GE 2.
    nur_ein_obj = no.
  ELSE.
    nur_ein_obj = yes.
  ENDIF.

* trace_name = 'Saldenpr¨¹fung'.
  trace_name = text-a03.
  if auftraege-abgrs eq space.                              "H450841
*   trace_value = 'Laufende Position'.                          "H450841
    trace_value = text-a27.                                 "H450841
  else.                                                     "H450841
*   trace_value = 'Laufende + abh#ngige Positionen u. Auftr#ge'.
    trace_value = text-a04.
  endif.                                                    "H450841
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.

  trace_level = trace_level + 1.

  IF if0saldo EQ yes.
    DATA: l_balance(30) TYPE c.                             "428806
    WRITE g_balance TO l_balance CURRENCY tka01-waers       "428806
      LEFT-JUSTIFIED.                                       "428806
*   trace_name = 'Istbelastung plus -Entlastung'.
    trace_name = text-a05.
    IF nur_ein_obj = no.
*     s-t1 = 'Saldo ¨¹ber alle Objekte'.
*      s-t1 = text-a06.                                          "428806
      CONCATENATE text-a06 l_balance INTO s-t1 SEPARATED BY ' '. "428806
    ELSE.
*     s-t1 = 'Saldo'.
*      s-t1 = text-a07.                                          "428806
      CONCATENATE text-a07 l_balance INTO s-t1 SEPARATED BY ' '. "428806
    ENDIF.
    IF bal_saldo = yes.
*     s-t2 = 'nicht im Limit'.                                  "M428806
      s-t2 = text-a81.                                      "M428806
    ELSE.
*     s-t2 = 'im Limit'.                                        "M428806
      s-t2 = text-a82.                                      "M428806
    ENDIF.
    trace_value = s.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

* IF if_0_wip EQ yes.                                           "H450841
  IF if_0_wip EQ yes and auftraege-abgrs ne space.          "H450841

* trace_name = 'Ergebnisermittlung'.
    trace_name = text-a10.
    IF nur_ein_obj = no.
*   s-t1 = 'WIP ¨¹ber alle Objekte'.
      s-t1 = text-a11.
    ELSE.
*   s-t1 = 'WIP'.
      s-t1 = text-a12.
    ENDIF.
    IF bal_wip = yes.
*   s-t2 = 'ungleich Null'.
      s-t2 = text-a08.
    ELSE.
*   s-t2 = 'gleich Null'.
      s-t2 = text-a09.
    ENDIF.
    trace_value = s.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.

* trace_name = 'Ergebnisermittlung'.
    trace_name = text-a10.
    IF nur_ein_obj = no.
*   s-t1 = 'R¨¹ckstellungen ¨¹ber alle Objekte'.
      s-t1 = text-a13.
    ELSE.
*   s-t1 = 'R¨¹ckstellungen'.
      s-t1 = text-a14.
    ENDIF.
    IF bal_rue = yes.
*   s-t2 = 'ungleich Null'.
      s-t2 = text-a08.
    ELSE.
*   s-t2 = 'gleich Null'.
      s-t2 = text-a09.
    ENDIF.
    trace_value = s.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.

* trace_name = 'Abrechnung ¨¹ber Buchungsregeln'.
    trace_name = text-a15.
    IF nur_ein_obj = no.
*   s-t1 = 'WIP-Entlastung ¨¹ber alle Objekte'.
      s-t1 = text-a16.
    ELSE.
*   s-t1 = 'WIP-Entlastung'.
      s-t1 = text-a17.
    ENDIF.
    IF bal_wipd = yes.
*   s-t2 = 'ungleich Null'.
      s-t2 = text-a08.
    ELSE.
*   s-t2 = 'gleich Null'.
      s-t2 = text-a09.
    ENDIF.
    trace_value = s.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.

* trace_name = 'Abrechnung ¨¹ber Buchungsregeln'.
    trace_name = text-a15.
    IF nur_ein_obj = no.
*   s-t1 = 'R¨¹ckst.-Entlast. ¨¹ber alle Objekte'.
      s-t1 = text-a18.
    ELSE.
*   s-t1 = 'R¨¹ckstellungsentlastung'.
      s-t1 = text-a19.
    ENDIF.
    IF bal_rued = yes.
*   s-t2 = 'ungleich Null'.
      s-t2 = text-a08.
    ELSE.
*   s-t2 = 'gleich Null'.
      s-t2 = text-a09.
    ENDIF.
    trace_value = s.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.

  ENDIF.

  trace_level = trace_level - 1.
ENDFORM.                    "trace_balance


************************************************************************
*
************************************************************************
FORM trace_tabg_abgs_status.
  DATA: BEGIN OF st,
          t1(6),
          1 VALUE ' ',
          t2(13),
          2,
*       t3(26) value '(SAPKKA12-Bedingungen)',                  "H413129
        t3(26),                                             "H413129
        END OF st.

  CHECK trace_on = yes.

*   st-t3 = text-a73.                                   "H413129 "435681

* trace_name = 'Statusermittlung TABG/ABGS'.                    "M435681
  trace_name = text-a46.                                    "M435681
* trace_Value = 'Laufende Position'.
  trace_value = text-a27.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.
  trace_level = trace_level + 1.

  IF set_tabg EQ yes.
*   trace_name = 'Sollzustand (gem## SAPKKA12)'.                "H413129
    trace_name = text-a72.                                  "H413129
    st-t1 = trace_text_tabg.
    IF kndpos_set_tabg = yes.
*     st-t2 = 'aktiv'.
      st-t2 = text-a24.
    ELSE.
*     st-t2 = 'nicht aktiv'.
      st-t2 = text-a25.
    ENDIF.
* Beginning insertion note 435681
*   IF abh_pos = yes AND kndpos_set_tabg = yes AND              "H450841
    IF abh_pos_tabg = yes AND kndpos_set_tabg = yes AND     "H450841
       NOT posnr_tab[] IS INITIAL.
*     (abh. Pos. noch pr¨¹fen)
      st-t3 = text-a73.
    ENDIF.
* End insertion note 435681
    trace_value = st.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

  IF set_abgs EQ yes.
*   trace_name = 'Sollzustand (gem## SAPKKA12)'.                "H413129
    trace_name = text-a72.                                  "H413129
    st-t1 = trace_text_abgs.
    IF kndpos_set_abgs = yes.
*     st-t2 = 'aktiv'.
      st-t2 = text-a24.
    ELSE.
*     st-t2 = 'nicht aktiv'.
      st-t2 = text-a25.
    ENDIF.
* Beginning insertion note 435681
*   IF abh_pos = yes AND kndpos_set_abgs = yes AND              "H450841
    IF abh_pos_abgs = yes AND kndpos_set_abgs = yes AND     "H450841
       NOT posnr_tab[] IS INITIAL.
*     (abh. Pos. noch pr¨¹fen)
      st-t3 = text-a73.
    ELSE.
      CLEAR st-t3.
    ENDIF.
* End insertion note 435681
    trace_value = st.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

  trace_level = trace_level - 1.
ENDFORM.                    "trace_tabg_abgs_status


************************************************************************
*
************************************************************************
FORM trace_tabg_abgs_status_alles.
  DATA: BEGIN OF st,
          t1(10),
          1 VALUE ' ',
          t2(15),
          2,
*       t3(30) value 'f¨¹r alle abh#ngigen Pos.',                "H413129
        t3(30),                                             "H413129
        END OF st,
        BEGIN OF st1,
          t1(10),
          1 VALUE ' ',
          t2(15),
          2,
*       t3(30) value '(Folge abh#ngige Pos.)',                  "H413129
        t3(30),                                             "H413129
        END OF st1.

  CHECK trace_on = yes.

  st-t3 = text-a71.                                         "H413129
*  st1-t3 = text-a70.                                   "H413129 "435681

  DESCRIBE TABLE posnr_tab LINES sy-tabix.
  CHECK sy-tabix >= 1.

* Beginning deletion note 435681
** trace_name = 'Status#nderung'.
*  trace_name = text-a01.
** trace_value = 'Abh#ngige Positionen, Laufende Position'.     "H413129
*  trace_value = text-a69.                                      "H413129
*  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
*    EXPORTING
*      i_name1                 = trace_name
*      i_value1                = trace_value
*      i_level                 = trace_level
*      i_type                  = 'R'.
* End deletion note 435681
  trace_level = trace_level + 1.

  trace_level = trace_level + 1.                            "435681
  IF set_tabg EQ yes AND                                    "M435681
     abh_pos_tabg = yes AND                                 "H450841
     kndpos_set_tabg_alt = yes.                             "M435681
*   trace_name = 'Zusammenfassung'.                             "M435681
    trace_name = text-a69.                                  "M435681
    st-t1 = trace_text_tabg.
    IF kndpos_set_tabg_all = yes.
      st-t2 = text-a60. "'aktiviert'.                           "M435681
    ELSE.
      st-t2 = text-a70. "'nicht aktiviert'.                     "M435681
    ENDIF.
    trace_value = st.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

  IF set_abgs EQ yes AND                                    "M435681
     abh_pos_abgs = yes AND                                 "H450841
     kndpos_set_abgs_alt = yes.                             "M435681
*   trace_name = 'Zusammenfassung'.                             "M435681
    trace_name = text-a69.                                  "M435681
    st-t1 = trace_text_abgs.
    IF kndpos_set_abgs_all = yes.
      st-t2 = text-a60. "'aktiviert'.                           "M435681
    ELSE.
      st-t2 = text-a70. "'nicht aktiviert'.                     "M435681
    ENDIF.
    trace_value = st.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

  trace_level = trace_level - 1.                            "435681

* Beginning deletion note 435681
*  IF ( set_tabg EQ yes AND
*       kndpos_set_tabg_all = no ) OR
*     ( set_abgs EQ yes AND
*       kndpos_set_abgs_all = no ).
**   trace_name = 'Statusermittlung TABG/ABGS'.                 "M435681
*    trace_name = text-a46.                                     "M435681
**   trace_value = 'Laufende Position'.
*    trace_value = text-a27.
*    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
*      EXPORTING
*        i_name1                 = trace_name
*        i_value1                = trace_value
*        i_level                 = trace_level.
*    trace_level = trace_level + 1.
*  ENDIF.
* End deletion note 435681

  IF set_tabg EQ yes AND
     abh_pos_tabg = yes AND                                 "H450841
     kndpos_set_tabg <> kndpos_set_tabg_alt.                "M435681
*    trace_name = 'Ge#nderter Sollzustand'.                     "H413129
    trace_name = text-a68.                                  "H413129
    st1-t1 = trace_text_tabg.
    IF kndpos_set_tabg = yes.
*     st1-t2 = 'aktiv'.
      st1-t2 = text-a24.
    ELSE.
*     st1-t2 = 'nicht aktiv'.
      st1-t2 = text-a25.
    ENDIF.
    trace_value = st1.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

  IF set_abgs EQ yes AND
     abh_pos_abgs = yes AND                                 "H450841
     kndpos_set_abgs <> kndpos_set_abgs_alt.                "M435681
*   trace_name = 'Ge#nderter Sollzustand'.                      "H413129
    trace_name = text-a68.                                  "H413129
    st1-t1 = trace_text_abgs.
    IF kndpos_set_abgs = yes.
*     st1-t2 = 'aktiv'.
      st1-t2 = text-a24.
    ELSE.
*     st1-t2 = 'nicht aktiv'.
      st1-t2 = text-a25.
    ENDIF.
    trace_value = st1.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDIF.

* Beginning deletion note 435681
*  IF ( set_tabg EQ yes AND
*       kndpos_set_tabg_all = no ) OR
*     ( set_abgs EQ yes AND
*       kndpos_set_abgs_all = no ).
*    trace_level = trace_level - 1.
*  ENDIF.
* End deletion note 435681

  trace_level = trace_level - 1.
ENDFORM.                    "trace_tabg_abgs_status_alles


************************************************************************
*
************************************************************************
FORM trace_vrgng_change USING vrgng like TJ01-VRGNG
                              subrc like sy-subrc
                              abh_pos_flg type kkachr1.
  DATA: BEGIN OF st,
          t1(10),    "value 'Vorgang',
          1,
          v(10),
          2,
          t2(20),
        END OF st,
        BEGIN OF m,
        t(20),     "value 'Fehlermeldung',                      "M435681
          1,
*        v(10),                                                  "435681
*        2 VALUE ':',                                            "435681
*        3(3) VALUE ' ( ',                                       "435681
          id LIKE sy-msgid,
          no LIKE sy-msgno,
        4(2) VALUE ': ',                                    "M435681
          mt(400),
        END OF m,
        xrc LIKE sy-subrc.

  CHECK trace_on = yes.

  st-t1 = text-a51.
  m-t = text-a66.                                           "M435681

  CHECK subrc = 0 OR subrc = 1.
  xrc = subrc.

  IF g_output_header_status_change = yes.                   "435681
*   trace_name = 'Status#nderung'.
    trace_name = text-a01.
    IF abh_pos_flg = yes.
*     trace_value = 'Abh#ngige Position'.
      trace_value = text-a57.
      CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
        EXPORTING
          i_name1  = trace_name
          i_value1 = trace_value
          i_level  = trace_level.
    ELSE.
*     trace_value = 'Laufende Position'.
      trace_value = text-a27.
      CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
        EXPORTING
          i_name1  = trace_name
          i_value1 = trace_value
          i_level  = trace_level
          i_type   = 'R'.
    ENDIF.
    CLEAR g_output_header_status_change.                    "435681
  ENDIF.                                                    "435681
  trace_level = trace_level + 1.

  IF xrc = 0.
    IF test_lf = yes.                                       "435681
      trace_name = text-a75. "'Ausf¨¹hrung ¨¹ber SD (Testlauf)'    "435681
    ELSE.                                                   "435681
*   trace_name = 'Ausf¨¹hrung ¨¹ber SD'.
      trace_name = text-a63.
    ENDIF.                                                  "435681
    st-v = vrgng.
*   st-t2 = 'durchgef¨¹hrt'.
    st-t2 = text-a64.
    trace_value = st.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ELSEIF xrc = 1.
    MESSAGE ID sy-msgid                              "REL.3.1-4.5 delete
            TYPE sy-msgty                            "REL.3.1-4.5 delete
            NUMBER sy-msgno                          "REL.3.1-4.5 delete
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 "REL.3.1-4.5 delete
            INTO m-mt.                               "REL.3.1-4.5 delete
    m-id = sy-msgid.
    m-no = sy-msgno.

    IF test_lf = yes.                                       "435681
      trace_name = text-a75. "'Ausf¨¹hrung ¨¹ber SD (Testlauf)'    "435681
    ELSE.                                                   "435681
*   trace_name = 'Ausf¨¹hrung ¨¹ber SD'.
      trace_name = text-a63.
    ENDIF.                                                  "435681
    st-v = vrgng.
*   st-t2 = 'nicht durchgef¨¹hrt'.
    st-t2 = text-a65.
    trace_value = st.
    CONDENSE trace_value.
* Deletion note 435681:
*    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
*      EXPORTING
*        i_name1                 = trace_name
*        i_value1                = trace_value
*        i_level                 = trace_level

*    m-v = vrgng.                                                "435681
    trace_long_value = m.
    CONDENSE trace_long_value.
    PERFORM trace_var_store_longline USING trace_name
                                           trace_value      "M435681
                                           trace_long_value
                                           yes.             "H450841
  ENDIF.

  trace_level = trace_level - 1.
ENDFORM.                    "trace_vrgng_change


************************************************************************
*
************************************************************************
FORM trace_var_store_longline USING name LIKE trace_name
                                    value_point LIKE trace_value
                                    long_value LIKE trace_long_value
                                    yellow type kkachr1.    "H450841
  DATA: na LIKE trace_name,
        va LIKE trace_value,
        BEGIN OF vag,
          t1 LIKE trace_value,
          t2 LIKE trace_long_value,
        END OF vag.

  CLEAR vag.
  vag = long_value.
  IF vag-t2 EQ space.
    va = long_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = name
        i_value1 = va
        i_level  = trace_level.
  ELSE.
    IF value_point = space.
*     va = '.....'.
      va = text-a61.
    ELSE.
      va = value_point.
    ENDIF.
    if yellow = yes.                                        "H450841
      CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
        EXPORTING
          i_name1  = trace_name
          i_value1 = va
          i_level  = trace_level
          i_type   = 'R'.
    else.                                                   "H450841
      CALL FUNCTION 'K_TRACE_VARIABLE_STORE'                "H450841
      EXPORTING                                             "H450841
        i_name1                 = trace_name                "H450841
        i_value1                = va                        "H450841
        i_level                 = trace_level.              "H450841
    endif.                                                  "H450841

    trace_level = trace_level + 1.
    vag = long_value.
    CONDENSE vag.
    WHILE vag NE space.
      va = vag-t1.
*     na = '...'.
      na = text-a62.
      CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
        EXPORTING
          i_name1  = na
          i_value1 = va
          i_level  = trace_level.
      vag-t1 = space.
      CONDENSE vag.
    ENDWHILE.
    trace_level = trace_level - 1.
  ENDIF.
ENDFORM.                    "trace_var_store_longline


************************************************************************
*
************************************************************************
FORM trace_status_direkt USING abh_pos_flg type kkachr1.
  DATA: BEGIN OF st,
          t1(10),      "value 'Status',
          1 VALUE ' ',
          t2(10),
          2,
          t3(20),
        END OF st.

  CHECK trace_on = yes.

  st-t1 = text-a23.

  DESCRIBE TABLE xstat LINES sy-tabix.
  CHECK sy-tabix >= 1.

  IF g_output_header_status_change = yes.                   "435681
*   trace_name = 'Status#nderung'.
    trace_name = text-a01.
    IF abh_pos_flg = yes.
*     trace_value = 'Abh#ngige Position'.
      trace_value = text-a57.
      CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
        EXPORTING
          i_name1  = trace_name
          i_value1 = trace_value
          i_level  = trace_level.
    ELSE.
*     trace_value = 'Laufende Position'.
      trace_value = text-a27.
      CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
        EXPORTING
          i_name1  = trace_name
          i_value1 = trace_value
          i_level  = trace_level
          i_type   = 'R'.
    ENDIF.
    CLEAR g_output_header_status_change.                    "435681
  ENDIF.                                                    "435681

  trace_level = trace_level + 1.
  LOOP AT xstat.
    IF test_lf = yes.                                       "435681
      trace_name = text-a80. "'Direkte Ausf¨¹hrung (Testlauf)'    "435681
    ELSE.                                                   "435681
*   trace_name = 'Direkte Ausf¨¹hrung'.
      trace_name = text-a58.
    ENDIF.                                                  "435681
    CASE xstat-stat.
      WHEN i_status_frei.
        st-t2 = trace_text_frei.
      WHEN i_status_glft.
        st-t2 = trace_text_glft.
      WHEN i_status_enfa.
        st-t2 = trace_text_enfa.
      WHEN i_status_tabg.
        st-t2 = trace_text_tabg.
      WHEN i_status_abgs.
        st-t2 = trace_text_abgs.
      WHEN OTHERS.
        st-t2 = xstat-stat.
    ENDCASE.
    IF xstat-inact = yes.
*     st-t3 = 'deaktiviert'.
      st-t3 = text-a59.
    ELSE.
*     st-t3 = 'aktiviert'.
      st-t3 = text-a60.
    ENDIF.
    trace_value = st.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ENDLOOP.
  trace_level = trace_level - 1.
ENDFORM.                    "trace_status_direkt


************************************************************************
*
************************************************************************
FORM trace_cur_status_upos USING istat like tkkas-istat
                                 subrc like sy-subrc.
  DATA: BEGIN OF st,
          s(10),     "value 'Status',
          1 VALUE ' ',
          t(20),
        END OF st,
        xrc LIKE sy-subrc.

  CHECK trace_on = yes.

  st-s = text-a23.

  xrc = subrc.
  READ TABLE trace_status_tab_up WITH KEY istat = istat.
  CHECK sy-subrc NE 0.
  trace_status_tab_up-istat = istat.
  APPEND trace_status_tab_up.

* trace_name = 'Status'.
  trace_name = text-a23.
  st-s = istat.
  IF xrc = 0.
*   st-t = 'Aktiv'.
    st-t = text-a24.
  ELSE.
*   st-t = 'Nicht Aktiv'.
    st-t = text-a25.
  ENDIF.
  trace_value = st.
  CONDENSE trace_value.

  trace_status_tab1_up-value = trace_value.
  APPEND trace_status_tab1_up.
ENDFORM.                    "trace_cur_status_upos


************************************************************************
*
************************************************************************
*ORM trace_cur_status_show_upos.                                "H450841
FORM trace_cur_status_show_upos using getrennt type kkachr1. "H450841
  CHECK trace_on = yes.

  DESCRIBE TABLE trace_status_tab1_up LINES sy-tabix.
  CHECK sy-tabix >= 1.

* trace_name = 'Statuslesen'.
  trace_name = text-a26.
* trace_value = 'Abh#ngige Position'.
  trace_value = text-a57.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.

  trace_level = trace_level + 1.

  if getrennt = yes.                                        "H450841
* trace_name = 'Istzustand (keine #nderung)'.                   "H450841
    trace_name = text-a87.                                  "H450841
  else.                                                     "H450841
* trace_name = 'Istzustand (vor SAPKKA12)'.
    trace_name = text-a28.
  endif.                                                    "H450841
  LOOP AT trace_status_tab1_up.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_status_tab1_up-value
        i_level  = trace_level.
  ENDLOOP.

  trace_level = trace_level - 1.
  REFRESH trace_status_tab1_up.
ENDFORM.                    "trace_cur_status_show_upos


************************************************************************
*
************************************************************************
FORM trace_begin_abh_obj_bl.
  CHECK trace_on = yes.

  DESCRIBE TABLE posnr_tab LINES sy-tabix.
  CHECK sy-tabix >= 1.

  trace_level = trace_level + 1.                            "435681
* trace_name = 'Abh#ngige Positionen'.
  trace_name = text-a21.
* trace_value = 'Status#nderung'.
  trace_value = text-a01.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.

  trace_level = trace_level + 1.
ENDFORM.                    "trace_begin_abh_obj_bl


************************************************************************
*
************************************************************************
FORM trace_begin_abh_obj.
  DATA: BEGIN OF p,
          t0(10),    "value 'Position',
          0,
          t1 LIKE vbap-posnr,
        END OF p.

  CHECK trace_on = yes.

  p-t0 = text-a20.

* trace_name = 'Status#nderung'.
  trace_name = text-a01.
  p-t1 = posnr_tab-posnr.
  trace_value = p.
  CONDENSE trace_value.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.
  trace_level = trace_level + 1.
ENDFORM.                    "trace_begin_abh_obj


************************************************************************
*
************************************************************************
FORM trace_end_abh_obj.
  CHECK trace_on = yes.
  trace_level = trace_level - 1.
ENDFORM.                    "trace_end_abh_obj


************************************************************************
*
************************************************************************
FORM trace_abh_obj_skip.
  CHECK trace_on = yes.

* trace_name = 'Status#nderung'.
  trace_name = text-a01.
* trace_value = 'Keine #nderung des Status ABGS als abh#ngige Pos.'.
* trace_value = text-a02.                                       "H450841
* CALL FUNCTION 'K_TRACE_VARIABLE_STORE'                        "H450841
*     EXPORTING                                                 "H450841
*       i_name1                 = trace_name                    "H450841
*       i_value1                = trace_value                   "H450841
*       i_level                 = trace_level.                  "H450841
  trace_value = text-a02.                                   "H450841
  concatenate text-a86 text-a88 text-a89                    "H450841
              into trace_long_value separated by space.     "H450841
  PERFORM trace_var_store_longline USING trace_name         "H450841
                                         trace_value        "H450841
                                         trace_long_value   "H450841
                                         no.                "H450841

* trace_level = trace_level - 1.                                "H450841
ENDFORM.                    "trace_abh_obj_skip


************************************************************************
*
************************************************************************
FORM trace_end_abh_obj_bl.
  CHECK trace_on = yes.

  DESCRIBE TABLE posnr_tab LINES sy-tabix.
  CHECK sy-tabix >= 1.

  trace_level = trace_level - 2.                            "M435681

ENDFORM.                    "trace_end_abh_obj_bl


****************************************************************"H437839
*                                                               "H437839
****************************************************************"H437839
form Kundenerweiterung_tabg                                 "H437839
                       TABLES t_objnr STRUCTURE objnrtab    "H437839
                       using i_vbeln like vbap-vbeln        "H437839
                             i_posnr like vbap-posnr        "H437839
                             i_objnr like vbap-objnr        "H437839
                             i_abgrs like vbap-abgrs        "H450841
                             c_kndpos_set_tabg type kkachr1. "H437839
  data: x_gjahr like coep-gjahr,
        x_perio like coep-perio,
        xt_objnr like IONRB occurs 0 with header line,
        x_text like sy-msgv1,
        x_kndpos_set_tabg.

  check k_erweiterung_tabg = yes.

  x_gjahr = current_period-j.
  x_perio = current_period-m.
  refresh xt_objnr.
  loop at t_objnr.
    xt_objnr-objnr = t_objnr-objnr.
    append xt_objnr.
  endloop.
  x_kndpos_set_tabg = c_kndpos_set_tabg.

  sy-subrc = 0.
  CALL CUSTOMER-FUNCTION '001'
       EXPORTING
            KOKRS                 = abgrkokr
            VBUK_VBELN            = i_vbeln
            VBUP_POSNR            = i_posnr
            OBJEKTNUMMER          = i_objnr
            SY_DATUM_GJAHR        = x_gjahr
            SY_DATUM_PERIO        = x_perio
            ABGRENZUNGS_SCHLUESSEL = i_abgrs                "H450841
            TESTLAUF              = test_lf                 "H559611
       IMPORTING
            DETAIL_TEXT           = x_text
       TABLES
            OBJECTS               = xt_objnr
       CHANGING
            SOLLZUSTAND_TABG      = c_kndpos_set_tabg
       EXCEPTIONS
            FEHLER_MIT_NACHRICHT  = 1
            FEHLER_OHNE_NACHRICHT = 2
            OTHERS                = 3.
  CASE SY-SUBRC.
    WHEN 0.
*     no operation
    WHEN 1.
      move-corresponding sy to msg_trace.                   "H456583A
      perform trace_collect_error.                          "H456583A
*     MESSAGE ID SY-MSGID                                      "H456583A
*             TYPE SY-MSGTY                                    "H456583A
*             NUMBER SY-MSGNO                                  "H456583A
*             WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.        "H456583A
    WHEN OTHERS.
      clear msg_trace.                                      "H456583A
      msg_trace-msgid = 'KJ'.                               "H456583A
      msg_trace-msgty = 'E'.                                "H456583A
      msg_trace-msgno = '550'.                              "H456583A
      msg_trace-msgv1 = TEXT-E01.                           "H456583A
      perform trace_collect_error.                          "H456583A
*     MESSAGE E550 WITH TEXT-E01.                              "H456583A
  ENDCASE.

  PERFORM trace_Kundenerweiterung_tabg using c_kndpos_set_tabg
                                             x_kndpos_set_tabg
                                             x_text.
endform.                    "Kundenerweiterung_tabg


****************************************************************"H437839
*                                                               "H437839
****************************************************************"H437839
form Kundenerweiterung_abgs                                 "H437839
                       TABLES t_objnr STRUCTURE objnrtab    "H437839
                       using i_vbeln like vbap-vbeln        "H437839
                             i_posnr like vbap-posnr        "H437839
                             i_objnr like vbap-objnr        "H437839
                             i_abgrs like vbap-abgrs        "H450841
                             c_kndpos_set_abgs type kkachr1. "H437839
  data: x_gjahr like coep-gjahr,
        x_perio like coep-perio,
        xt_objnr like IONRB occurs 0 with header line,
        x_text like sy-msgv1,
        x_kndpos_set_abgs.

  check k_erweiterung_abgs = yes.

  x_gjahr = current_period-j.
  x_perio = current_period-m.
  refresh xt_objnr.
  loop at t_objnr.
    xt_objnr-objnr = t_objnr-objnr.
    append xt_objnr.
  endloop.
  x_kndpos_set_abgs = c_kndpos_set_abgs.

  sy-subrc = 0.
  CALL CUSTOMER-FUNCTION '002'
       EXPORTING
            KOKRS                 = abgrkokr
            VBUK_VBELN            = i_vbeln
            VBUP_POSNR            = i_posnr
            OBJEKTNUMMER          = i_objnr
            SY_DATUM_GJAHR        = x_gjahr
            SY_DATUM_PERIO        = x_perio
            ABGRENZUNGS_SCHLUESSEL = i_abgrs                "H450841
            TESTLAUF              = test_lf                 "H559611
       IMPORTING
            DETAIL_TEXT           = x_text
       TABLES
            OBJECTS               = xt_objnr
       CHANGING
            SOLLZUSTAND_ABGS      = c_kndpos_set_abgs
       EXCEPTIONS
            FEHLER_MIT_NACHRICHT  = 1
            FEHLER_OHNE_NACHRICHT = 2
            OTHERS                = 3.
  CASE SY-SUBRC.
    WHEN 0.
*     no operation
    WHEN 1.
      move-corresponding sy to msg_trace.                   "H456583A
      perform trace_collect_error.                          "H456583A
*     MESSAGE ID SY-MSGID                                      "H456583A
*             TYPE SY-MSGTY                                    "H456583A
*             NUMBER SY-MSGNO                                  "H456583A
*             WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.        "H456583A
    WHEN OTHERS.
      clear msg_trace.                                      "H456583A
      msg_trace-msgid = 'KJ'.                               "H456583A
      msg_trace-msgty = 'E'.                                "H456583A
      msg_trace-msgno = '550'.                              "H456583A
      msg_trace-msgv1 = TEXT-E02.                           "H456583A
      perform trace_collect_error.                          "H456583A
*     MESSAGE E550 WITH TEXT-E02.                              "H456583A
  ENDCASE.

  PERFORM trace_Kundenerweiterung_abgs using c_kndpos_set_abgs
                                             x_kndpos_set_abgs
                                             x_text.


endform.                    "Kundenerweiterung_abgs


****************************************************************"H437839
*                                                               "H437839
****************************************************************"H437839
FORM trace_Kundenerweiterung_tabg using
                                  new_kndpos_set_tabg type kkachr1
                                  old_kndpos_set_tabg type kkachr1
                                  detail_text like sy-msgv1.
  data: begin of s,
          1(35),
          2 value ' ',
          3(14),
        end of s.

  CHECK trace_on = yes.

  check k_erweiterung_tabg = yes.

* trace_name = 'Kundenerweiterung'.
  trace_name = text-e03.
* trace_value = 'Status Technisch Abgeschlossen'.
  trace_value = text-e04.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.

  trace_level = trace_level + 1.

* trace_name = 'Sollzustand vor Erweiterung'.
  trace_name = text-e05.
* s-1 = 'Status Technisch Abgeschlossen'.
  s-1 = text-e04.
  if old_kndpos_set_tabg eq yes.
*   s-3 = 'aktiv'.
    s-3 = text-e06.
  else.
*   s-3 = 'nicht aktiv'.
    s-3 = text-e07.
  endif.
  trace_value = s.
  condense trace_value.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.

* trace_name = 'Erkl#rung der Erweiterung'.
  trace_name = text-e08.
  if detail_text eq space.
*   trace_value = 'keine Erkl#rung ausgegeben'.
    trace_value = text-e09.
  else.
    trace_value = detail_text.
  endif.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.

* trace_name = 'Sollzustand nach Erweiterung'.
  trace_name = text-e10.
* s-1 = 'Status Technisch Abgeschlossen'.
  s-1 = text-e04.
  if new_kndpos_set_tabg eq yes.
*   s-3 = 'aktiv'.
    s-3 = text-e06.
  else.
*   s-3 = 'nicht aktiv'.
    s-3 = text-e07.
  endif.
  trace_value = s.
  condense trace_value.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.

  trace_level = trace_level - 1.
ENDFORM.                    "trace_Kundenerweiterung_tabg


****************************************************************"H437839
*                                                               "H437839
****************************************************************"H437839
FORM trace_Kundenerweiterung_abgs using
                                  new_kndpos_set_abgs type kkachr1
                                  old_kndpos_set_abgs type kkachr1
                                  detail_text like sy-msgv1.
  data: begin of s,
          1(35),
          2 value ' ',
          3(14),
        end of s.

  CHECK trace_on = yes.

  check k_erweiterung_abgs = yes.

* trace_name = 'Kundenerweiterung'.
  trace_name = text-e03.
* trace_value = 'Status Abgeschlossen'.
  trace_value = text-e11.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.

  trace_level = trace_level + 1.

* trace_name = 'Sollzustand vor Erweiterung'.
  trace_name = text-e05.
* s-1 = 'Status Abgeschlossen'.
  s-1 = text-e11.
  if old_kndpos_set_abgs eq yes.
*   s-3 = 'aktiv'.
    s-3 = text-e06.
  else.
*   s-3 = 'nicht aktiv'.
    s-3 = text-e07.
  endif.
  trace_value = s.
  condense trace_value.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.

* trace_name = 'Erkl#rung der Erweiterung'.
  trace_name = text-e08.
  if detail_text eq space.
*   trace_value = 'keine Erkl#rung ausgegeben'.
    trace_value = text-e09.
  else.
    trace_value = detail_text.
  endif.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.

* trace_name = 'Sollzustand nach Erweiterung'.
  trace_name = text-e10.
* s-1 = 'Status Abgeschlossen'.
  s-1 = text-e11.
  if new_kndpos_set_abgs eq yes.
*   s-3 = 'aktiv'.
    s-3 = text-e06.
  else.
*   s-3 = 'nicht aktiv'.
    s-3 = text-e07.
  endif.
  trace_value = s.
  condense trace_value.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.

  trace_level = trace_level - 1.
ENDFORM.                    "trace_Kundenerweiterung_abgs


****************************************************************"H437839
*                                                               "H437839
****************************************************************"H437839
form check_if_user_exit_aktiv.                              "H437839

  CALL FUNCTION 'MODX_FUNCTION_ACTIVE_CHECK'
       EXPORTING CPROGNAME    = 'YSE_SAPKKA12'
                 FUNCNUMBER   = '001'
      IMPORTING  ACTIVE       = K_ERWEITERUNG_TABG
*     TABLES ACTIVE_FUNCNUMBERS =
      EXCEPTIONS NOT_FOUND = 1
                 OTHERS    = 2.
  IF SY-SUBRC <> 0.
    K_ERWEITERUNG_TABG = no.
  ENDIF.

  CALL FUNCTION 'MODX_FUNCTION_ACTIVE_CHECK'
       EXPORTING CPROGNAME    = 'YSE_SAPKKA12'
                 FUNCNUMBER   = '002'
      IMPORTING  ACTIVE       = K_ERWEITERUNG_ABGS
*     TABLES ACTIVE_FUNCNUMBERS =
      EXCEPTIONS NOT_FOUND = 1
                 OTHERS    = 2.
  IF SY-SUBRC <> 0.
    K_ERWEITERUNG_ABGS = no.
  ENDIF.

  CALL FUNCTION 'MODX_FUNCTION_ACTIVE_CHECK'                "H503958
       EXPORTING CPROGNAME    = 'YSE_SAPKKA12'              "H503958
                 FUNCNUMBER   = '003'                       "H503958
      IMPORTING  ACTIVE       = K_ERWEITERUNG_GLFT_ENFA     "H503958
      EXCEPTIONS NOT_FOUND = 1                              "H503958
                 OTHERS    = 2.                             "H503958
  IF SY-SUBRC <> 0.                                         "H503958
    K_ERWEITERUNG_GLFT_ENFA = no.                           "H503958
  ENDIF.                                                    "H503958
endform.                    "check_if_user_exit_aktiv


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
FORM trace_abh_obj_skip1.                                   "H450841
  CHECK trace_on = yes.

* trace_name = 'Status#nderung'.
  trace_name = text-a01.
* trace_value = 'Keine #nderung des Status TABG als abh#ngige Pos.'.
  trace_value = text-a90.
  concatenate text-a86 text-a88 text-a89
              into trace_long_value separated by space.
  PERFORM trace_var_store_longline USING trace_name
                                         trace_value
                                         trace_long_value
                                         no.
ENDFORM.                    "trace_abh_obj_skip1


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
form auftraege_lesen.                                       "H450841
  REFRESH: auftraege, vbeln_tab.

*.Selektion ueber Kostenrechnungskreis aus der Auftragsposition

  REFRESH: r_werks, twb.                                    "99.insk
  CLEAR: r_werks, twb.                                      "99.insk
  r_werks-option = 'EQ'.                                    "99.insk
  r_werks-sign = 'I'.                                       "99.insk
  SELECT * FROM tka02 WHERE kokrs =  abgrkokr AND           "99.insk
                            bukrs IN vp_bukrs.                "org
    SELECT * FROM t001k WHERE bukrs = tka02-bukrs.          "99.insk
      SELECT * FROM t001w WHERE bwkey = t001k-bwkey AND     "99.insk
                                werks IN vp_werks.            "org
        r_werks-low = t001w-werks.                          "99.insk
        APPEND r_werks.                                     "99.insk
        twb-bukrs = tka02-bukrs.                            "99.insk
        twb-werks = t001w-werks.                            "99.insk
        COLLECT twb.                                        "99.insk
      ENDSELECT.                                            "99.insk
    ENDSELECT.                                              "99.insk
  ENDSELECT.                                                "99.insk
  SORT twb.                                                 "99.insk

*.Beginn Korrektur 450841                                       "H450841
  clear: add_selection[], add_selection1[].
  if mit_abgr eq yes.
    add_selection = 'abgrs <> ''      '''.                  "#EC NOTEXT
    APPEND add_selection.
  else.
    add_selection = 'abgrs = ''      '''.                   "#EC NOTEXT
    APPEND add_selection.
  endif.
  if ohne_abg eq yes.
    add_selection1 = 'abgrs = ''      '''.                  "#EC NOTEXT
    APPEND add_selection1.
  else.
    add_selection1 = 'vbeln = '' '''.    "Dummy !!!         "#EC NOTEXT
    APPEND add_selection1.
  endif.
*.Ende Korrektur 450841                                         "H450841

  DESCRIBE TABLE r_werks LINES sy-tabix.                    "H407766
  IF sy-tabix GE 1.                                         "H407766
    SELECT vbeln                                            "99.insk
           posnr                                            "99.insk
           abgrs                                            "99.insk
           objnr                                            "99.insk
           werks                                            "99.insk
           kzbws                               "REL.3.1 delete  "99.insk
           fkrel                                            "99.insk
           uepos                                            "99.insk
           FROM vbap                                        "99.insk
           INTO CORRESPONDING FIELDS OF TABLE posnr_tab     "99.insk
          WHERE vbeln IN abgrvbel AND                       "99.insk
                 posnr IN abgrposn AND                      "99.insk
                werks IN r_werks AND                        "99.insk
                 prctr IN vp_prctr AND                      "429739
*                KZVBR NE KZVBR_PROJEKT AND             "99.insk"vbs.del
                 kzvbr EQ 'E' AND                               "vbs.ins
                 vbeln = vbap~vbelv AND                         "vbs.ins
                 posnr = vbap~posnv AND                         "vbs.ins
*                abgrs IN abgrschl AND                  "99.insk"H450841
*                abgrs <> space AND                     "99.insk"H450841
*                objnr <> space.                        "99.insk"H450841
                 objnr <> space and                         "H450841
                 ( (add_selection) AND abgrs IN abgrschl    "H450841
                   OR (add_selection1) ).                   "H450841
  ENDIF.                                                    "H407766
                                                            "99.insk
  CLEAR: vbak.                                              "99.insk
  LOOP AT posnr_tab.                                        "99.insk
    CLEAR auftraege.                                        "99.insk
    IF posnr_tab-vbeln <> vbak-vbeln.                       "99.insk
      SELECT SINGLE auart kokrs gsber                       "99.insk
                    vkorg vtweg spart                       "H697387
*            INTO (vbak-auart, vbak-kokrs, vbak-gsber)          "H697387
             INTO (vbak-auart, vbak-kokrs, vbak-gsber,      "H697387
                   vbak-vkorg, vbak-vtweg, vbak-spart)      "H697387
             FROM vbak                                      "99.insk
             WHERE vbeln = posnr_tab-vbeln AND              "99.insk
                   auart IN abgraufa AND                    "99.insk
                   vkorg IN vk_vkorg AND                      "org
                   vtweg IN vk_vtweg AND                      "org
                   spart IN vk_spart AND                      "org
                   vkbur IN vk_vkbur AND                      "org
                   vkgrp IN vk_vkgrp.                         "org
      v_subrc = sy-subrc.                                   "99.insk
      vbak-vbeln = posnr_tab-vbeln.                         "99.insk
    ENDIF.                                                  "99.insk
    CHECK v_subrc = 0.                                      "99.insk
    MOVE-CORRESPONDING vbak TO auftraege.                   "99.insk
    MOVE-CORRESPONDING posnr_tab TO auftraege.              "99.insk
    READ TABLE twb WITH KEY posnr_tab-werks.                "99.insk
    IF sy-subrc = 0.                                        "99.insk
      auftraege-bukrs = twb-bukrs.                          "99.insk
    ELSE.                                                   "99.insk
      CLEAR auftraege-bukrs.                                "99.insk
    ENDIF.                                                  "99.insk
    CALL FUNCTION 'STATUS_BUFFER_REFRESH'                     "46c
                   EXPORTING i_free = yes                     "46c
                   EXCEPTIONS OTHERS = 01.                    "46c
    CALL FUNCTION 'STATUS_CHECK'                              "46c
                     EXPORTING objnr  = auftraege-objnr       "46c
                               status = i_status_abgs         "46c
                     EXCEPTIONS object_not_found  = 01        "46c
                                status_not_active = 02.       "46c
    CHECK sy-subrc NE 0 OR rst_abgs EQ yes.                   "46c
    CHECK sy-subrc NE 01.                                         "trace
    APPEND auftraege.                                       "99.insk
  ENDLOOP.                                                  "99.insk
  REFRESH: posnr_tab.                                         "46c
  FREE: posnr_tab.                                            "46c
endform.                    "auftraege_lesen


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
form positionen_lesen using vbeln like vbap-vbeln.          "H450841
  IF vbap_puffer_vbeln NE vbeln.                                  "puf
    REFRESH posnr_tab_puf.                                        "puf
    SELECT vbeln                                            "99.INSS
           posnr                                            "99.INSS
           abgrs                                            "99.INSS
           objnr                                            "99.INSS
           werks                                            "H331018
           kzbws                                            "99.INSS
           fkrel                                            "99.INSS
           uepos                                            "99.INSS
           kzvbr                                            "H663263
           vbelv                                            "H663263
           posnv                                            "H663263
           FROM vbap INTO TABLE posnr_tab_puf              "99.INSS "puf
                       WHERE vbeln EQ vbeln.               "P45.MODY"puf
    loop at posnr_tab_puf.                                  "H663263
      if posnr_tab_puf-vbeln <> posnr_tab_puf-vbelv or      "H663263
         posnr_tab_puf-posnr <> posnr_tab_puf-posnv.        "H663263
        clear posnr_tab_puf-objnr.                          "H663263
        modify posnr_tab_puf index sy-tabix.                "H663263
      endif.                                                "H663263
    endloop.                                                "H663263
    vbap_puffer_vbeln = vbeln.                                    "puf
  ENDIF.
endform.                    "positionen_lesen


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
form perioden_ermitteln.                                    "H450841
  IF set_enfa EQ yes OR                                     "H309087
     set_tabg EQ yes AND if_enfa EQ yes OR                  "H309087
     set_abgs EQ yes AND if_enfa1 EQ yes OR                 "H309087
     set_glft EQ yes OR                                     "H309087
     set_tabg EQ yes AND if_glft EQ yes OR                  "H309087
     set_abgs EQ yes AND if_glft1 EQ yes.                   "H309087
    IF sd_seit IS INITIAL.                                  "H309087
      SET CURSOR FIELD 'SD_SEIT'.                                   "uni
      MESSAGE e000 WITH text-035.                           "H309087
    ENDIF.                                                  "H309087
  ENDIF.                                                    "H309087

  IF set_tabg EQ yes.
    IF lastseit IS INITIAL.
      SET CURSOR FIELD 'LASTSEIT'.                                  "uni
      MESSAGE e000 WITH text-035.
    ENDIF.
  ENDIF.

  IF set_abgs EQ yes.
    IF lastsei1 IS INITIAL.
      SET CURSOR FIELD 'LASTSEI1'.                                  "uni
      MESSAGE e000 WITH text-035.
    ENDIF.
  ENDIF.

  IF NOT lastseit IS INITIAL.
    h_periode = current_period.
    PERFORM minus_mon_periods USING lastseit h_periode.
    lastmona = h_periode-m.
    lastjahr = h_periode-j.
  ENDIF.

  IF NOT lastsei1 IS INITIAL.
    h_periode = current_period.
    PERFORM minus_mon_periods USING lastsei1 h_periode.
    lastmon1 = h_periode-m.
    lastjah1 = h_periode-j.
  ENDIF.

  IF NOT sd_seit IS INITIAL.
    h_periode = current_period.
    PERFORM minus_mon_periods USING sd_seit h_periode.
    sd_mona = h_periode-m.
    sd_jahr = h_periode-j.
  ENDIF.

  h_periode-m = sd_mona.                                    "99.ins
  h_periode-j = sd_jahr.                                    "99.ins
  sd_periode = h_periode.                                   "99.ins
endform.                    "perioden_ermitteln


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
form process_ind1.                                          "H450841
  ADD 1 TO abgr_obj_looped.
  abgr_obj_help_f = abgr_obj_looped * 100 / abgr_obj_to_loop.
  abgr_obj_help = abgr_obj_help_f.
  IF abgr_obj_help1 NE abgr_obj_help.
    IF abgr_obj_help1 LT 0.
      abgr_obj_help1 = 0.
    ENDIF.
    abgr_obj_help_t1 = abgr_obj_help1.
    abgr_obj_help_t2 = abgr_obj_to_loop.
    CONCATENATE abgr_obj_help_t1
                '%'
                text-sp6
                abgr_obj_help_t2
                text-sp5
                INTO abgr_obj_help_t
                SEPARATED BY ' '.
    CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
      EXPORTING
        percentage = abgr_obj_help1
        text       = abgr_obj_help_t.
    abgr_obj_help1 = abgr_obj_help.
* Beginning note 448768
    IF sy-batch = 'X'.
      MESSAGE i000 WITH abgr_obj_help_t.
    ENDIF.
* End note 448768
  ENDIF.
endform.                    "process_ind1


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
form process_ind2.                                          "H450841
  abgr_obj_help = 100.
  abgr_obj_help_t1 = abgr_obj_help.
  abgr_obj_help_t2 = abgr_obj_to_loop.
  CONCATENATE abgr_obj_help_t1
              '%'
              text-sp6
              abgr_obj_help_t2
              text-sp7
              INTO abgr_obj_help_t
              SEPARATED BY ' '.
  CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
    EXPORTING
      percentage = abgr_obj_help
      text       = abgr_obj_help_t.
  MESSAGE s000 WITH abgr_obj_help_t.
endform.                    "process_ind2


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
form process_ind0.                                          "H450841
  CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
         EXPORTING
*             PERCENTAGE = 0
              text       = text-sp3.
endform.                    "process_ind0


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
form process_ind1_prep.                                     "H450841
  abgr_obj_total = 0.
  abgr_obj_done = 0.
  abgr_obj_not_done = 0.
  abgr_obj_looped = 0.
  abgr_obj_help1 = - 1.
  DESCRIBE TABLE auftraege LINES abgr_obj_to_loop.
endform.                    "process_ind1_prep


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
FORM check_objekte_up TABLES posnr_tab_up structure posnr_tab "H450841
                      USING vbeln like vbap-vbeln           "H450841
                            posnr like vbap-posnr           "H450841
                            objnr like vbap-objnr           "H450841
                            abgrs like vbap-abgrs           "H450841
                            rflg6 like tkkap-rflg6          "H450841
                            abgr_aktiv type kkachr1         "H450841
                            pos_stru_k type kkachr1         "H450841
                            pos_stru_a type kkachr1         "H450841
                            pos_stru_b type kkachr1         "H450841
                            pos_stru_posnr like vbap-posnr  "H450841
                            pos_stru_abgrs like vbap-abgrs  "H450841
                            pos_stru_objnr like vbap-objnr. "H503958

  data: found,
        weiter,
        t_abgrs like abgrs_tab occurs 0 with header line,
        tix like sy-tabix,
        src like sy-subrc,
        posnr_tab1 like posnr_tab occurs 0 with header line.

  pos_stru_a = no.
  pos_stru_b = no.
  pos_stru_k = no.
  clear: pos_stru_posnr,
         pos_stru_abgrs,
         pos_stru_objnr,                                    "H503958
         rflg6,
         posnr_tab_up[].

  check knd_abgrs_struktur_found = yes.

  if abgrs ne space.
    read table abgrs_tab with key abgrs = abgrs.
    if sy-subrc eq 0.
      rflg6 = abgrs_tab-rflg6.
    endif.
    CALL FUNCTION 'STATUS_CHECK'
      EXPORTING
        objnr             = objnr
        status            = i_status_abgr
      EXCEPTIONS
        object_not_found  = 01
        status_not_active = 02.
    if sy-subrc = 0.
      abgr_aktiv = yes.
    else.
      abgr_aktiv = no.
    endif.
  endif.

  perform positionen_lesen using vbeln.
  posnr_tab1[] = posnr_tab_puf[].

  found = no.
  loop at posnr_tab1 where abgrs ne space
                       and not objnr is initial
                       and posnr ne posnr.
    found = yes.
    clear t_abgrs.
    t_abgrs-abgrs = posnr_tab1-abgrs.
    collect t_abgrs.
  endloop.

  check found = yes.

  found = no.
  loop at t_abgrs.
    tix = sy-tabix.
    read table abgrs_tab with key t_abgrs-abgrs.
    check sy-subrc = 0.
    t_abgrs-rflg6 = abgrs_tab-rflg6.
    modify t_abgrs index tix.
    if abgrs_tab-rflg6 = 'K'.
      pos_stru_k = yes.
    endif.
    if abgrs_tab-rflg6 CO 'AB'.
      found = yes.
    endif.
  endloop.

  if pos_stru_k = yes.
    loop at t_abgrs where rflg6 = 'K'.
      loop at posnr_tab1 where abgrs = t_abgrs-abgrs
                           and not objnr is initial
                           and posnr <> posnr.
        pos_stru_posnr = posnr_tab1-posnr.
        pos_stru_abgrs = posnr_tab1-abgrs.
        pos_stru_objnr = posnr_tab1-objnr.                  "H503958
        exit.
      endloop.
      exit.
    endloop.
  endif.

  check pos_stru_k = no.
  check found = yes.

  read table posnr_tab1 with key vbeln = vbeln
                                 posnr = posnr.
  src = sy-subrc.
  weiter = yes.
  while src = 0 and
        not posnr_tab1-uepos is initial and
        weiter = yes.
    read table posnr_tab1 with key vbeln = vbeln
                                   posnr = posnr_tab1-uepos.
    src = sy-subrc.
    if posnr_tab1-abgrs ne space.
      read table t_abgrs with key abgrs = posnr_tab1-abgrs.
    else.
      clear t_abgrs.
    endif.
    if posnr_tab1-abgrs = space or
       posnr_tab1-objnr is initial or
       t_abgrs-rflg6 = 'A' and sy-subrc = 0.
      weiter = yes.
    else.
      weiter = no.
    endif.
  endwhile.

  check posnr_tab1-abgrs ne space and
        not posnr_tab1-objnr is initial and
        posnr_tab1-posnr ne posnr.
  read table t_abgrs with key abgrs = posnr_tab1-abgrs.
  if sy-subrc eq 0.
    if t_abgrs-rflg6 eq 'A'.
      pos_stru_a = yes.
      pos_stru_posnr = posnr_tab1-posnr.
      pos_stru_abgrs = posnr_tab1-abgrs.
      pos_stru_objnr = posnr_tab1-objnr.                    "H503958
    elseif t_abgrs-rflg6 eq 'B'.
      pos_stru_b = yes.
      pos_stru_posnr = posnr_tab1-posnr.
      pos_stru_abgrs = posnr_tab1-abgrs.
      pos_stru_objnr = posnr_tab1-objnr.                    "H503958
    endif.
  endif.

  if rflg6 eq 'B'.
    posnr_tab1-uepos = posnr.
    sy-subrc = 0.
    while sy-subrc = 0 and
          not posnr_tab1-uepos is initial.
      read table posnr_tab1 with key vbeln = vbeln
                                     posnr = posnr_tab1-uepos.
      posnr_tab_up = posnr_tab1.
      append posnr_tab_up.
    endwhile.
    delete posnr_tab_up where vbeln = vbeln
                          and posnr = posnr.
  endif.
ENDFORM.                    "check_objekte_up


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
FORM trace_ohne_obj_abh.                                    "H450841

  CHECK trace_on = yes.

*   trace_name = 'Abh#ngigkeitspr¨¹fung'.
  trace_name = text-056.
*   trace_value = '#bergeordnete Ergebnisermittlungs-Position'.
  trace_value = text-057.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.

  trace_level = trace_level + 1.

*   trace_name = '#bergeordnete Position'.
  trace_name = text-058.
  trace_value = posnr_stru_posnr.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.

* Beginning insert note                                         "H503958
  if not posnr_stru_objnr is initial.
    CALL FUNCTION 'STATUS_CHECK'
      EXPORTING
        objnr             = posnr_stru_objnr
        status            = i_status_abgs
      EXCEPTIONS
        object_not_found  = 01
        status_not_active = 02.
    IF sy-subrc EQ 0.
*       trace_name = '#bergeordnete Position'.
      trace_name = text-058.
*       trace_value = 'Status Abgeschlossen ist aktiv'
      trace_value = text-073.
      CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
        EXPORTING
          i_name1  = trace_name
          i_value1 = trace_value
          i_level  = trace_level.
    ENDIF.
  endif.
* End insert note                                               "H503958

*   trace_name = 'Abgrenzungsschl¨¹ssel'.
  trace_name = text-059.
  trace_value = posnr_stru_abgrs.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.

  read table abgrs_tab with key abgrs = posnr_stru_abgrs.
  if sy-subrc = 0.
*     trace_name = 'Kundenauftragsstruktur'.
    trace_name = text-060.
    trace_value = abgrs_tab-rflg6.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  endif.

*   trace_name = 'Status#nderung'.
  trace_name = text-a01.
*   trace_value = 'Nicht direkt, nur ¨¹ber ¨¹bergeordnete Position'.
  trace_value = text-a83.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level.

  trace_level = trace_level - 1.
endform.                    "trace_ohne_obj_abh


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
FORM trace_erg_erm.                                         "H450841

  CHECK trace_on = yes.

*   trace_name = 'Abgrenzungsschl¨¹ssel'.
  trace_name = text-a91.
  if auftraege-abgrs is initial.
*     trace_value = 'nein'.
    trace_value = text-a85.
  else.
*     trace_value = 'ja'.
    trace_value = text-a84.
  endif.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.
endform.                    "trace_erg_erm


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
form export_obj_ohne_salden_prf.                            "H450841
  data: objekte_ohne_saldo_pruefung like IONRB occurs 0 with header line,
        mem_id_sapkka12(30) value 'PAKET_KKAG_PROG_SAPKKA12_NR1'.

  check if_sdcoo = yes.

  check if0saldo = yes.

  clear objekte_ohne_saldo_pruefung[].
  if auftraege-abgrs ne space.
    objekte_ohne_saldo_pruefung-objnr = auftraege-objnr.
    append objekte_ohne_saldo_pruefung.
    loop at posnr_tab_puf where posnr ne auftraege-posnr
                            and not objnr is initial.
      objekte_ohne_saldo_pruefung-objnr = posnr_tab_puf-objnr.
      append objekte_ohne_saldo_pruefung.
    endloop.
  endif.
  export objekte_ohne_saldo_pruefung to memory id mem_id_sapkka12.
endform.                    "export_obj_ohne_salden_prf


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
form clear_obj_ohne_salden_prf.                             "H450841
  data: objekte_ohne_saldo_pruefung like IONRB occurs 0 with header line,
        mem_id_sapkka12(30) value 'PAKET_KKAG_PROG_SAPKKA12_NR1'.

  check if_sdcoo = yes.

  clear objekte_ohne_saldo_pruefung[].
  export objekte_ohne_saldo_pruefung to memory id mem_id_sapkka12.
endform.                    "clear_obj_ohne_salden_prf


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
FORM stru_b_check_for_abgs                                  "H450841
                      TABLES posnr_tab_down structure posnr_tab "H450841
                             posnr_tab_up structure posnr_tab "H450841
                      USING objnr like coep-objnr           "H450841
                            rflg6 like tkkap-rflg6          "H450841
                            posnr_set_abgs type kkachr1     "H450841
                            enable_reset_abgs type kkachr1  "H450841
                            exit_from_reset_abgs type kkachr1. "H450841
  data: tix like sy-tabix.

  if rflg6 = 'B' and
     posnr_set_abgs = yes.
* posnr_tab_down wird reduziert auf Positionen mit Abgr.Schluessel
* und aktivem Abgrenzungsstatus
    delete posnr_tab_down where abgrs = space.
    loop at posnr_tab_down.
      tix = sy-tabix.
      CALL FUNCTION 'STATUS_CHECK'
        EXPORTING
          objnr             = posnr_tab_down-objnr
          status            = i_status_abgr
        EXCEPTIONS
          object_not_found  = 01
          status_not_active = 02.
      if sy-subrc <> 0.
        delete posnr_tab_down index tix.
        continue.
      endif.
    endloop.
  else.
    clear posnr_tab_down[].
  endif.

  if rflg6 = 'B' and
     posnr_set_abgs = no and
     enable_reset_abgs = yes.
    CALL FUNCTION 'STATUS_CHECK'
      EXPORTING
        objnr             = objnr
        status            = i_status_abgs
      EXCEPTIONS
        object_not_found  = 01
        status_not_active = 02.
    if sy-subrc <> 00.
      clear posnr_tab_up[].
    endif.
* posnr_tab_up wird reduziert auf Positionen mit Abgr.Schluessel mit
* Kundenauftragsstrukturkz. 'B' und aktivem Abgrenzungsstatus
* und aktivem Status ABGS.
    delete posnr_tab_up where abgrs = space.
    loop at posnr_tab_up.
      tix = sy-tabix.
      read table abgrs_tab with key posnr_tab_up-abgrs.
      if not ( sy-subrc = 0 and abgrs_tab-rflg6 = 'B' ).
        delete posnr_tab_up index tix.
        continue.
      endif.
      CALL FUNCTION 'STATUS_CHECK'
        EXPORTING
          objnr             = posnr_tab_up-objnr
          status            = i_status_abgr
        EXCEPTIONS
          object_not_found  = 01
          status_not_active = 02.
      if sy-subrc <> 0.
        delete posnr_tab_up index tix.
        continue.
      endif.
      CALL FUNCTION 'STATUS_CHECK'
        EXPORTING
          objnr             = posnr_tab_up-objnr
          status            = i_status_abgs
        EXCEPTIONS
          object_not_found  = 01
          status_not_active = 02.
      if sy-subrc <> 00.
        delete posnr_tab_up index tix.
        continue.
      endif.
    endloop.
  else.
    clear posnr_tab_up[].
  endif.

  describe table posnr_tab_up lines tix.
  if tix ge 1.
    exit_from_reset_abgs = yes.
  else.
    exit_from_reset_abgs = no.
  endif.
endform.                    "stru_b_check_for_abgs


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
FORM trace_exit_from_reset_abgs.                            "H450841

  CHECK trace_on = yes.

  check exit_from_reset_abgs = yes.

*   trace_name = 'Abh#ngigkeitspr¨¹fung'.
  trace_name = text-056.
*   trace_value = '#bergeordnete Ergebnisermittlungspositionen'.
  trace_value = text-063.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.

  trace_level = trace_level + 1.

  loop at posnr_tab_up.

*   trace_name = '#bergeordnete Position'.
    trace_name = text-058.
    trace_value = posnr_tab_up-posnr.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.

  endloop.

  trace_long_value = text-064.
  trace_name = text-a01.
  trace_value = text-065.
  perform trace_var_store_longline using trace_name
                                         trace_value
                                         trace_long_value
                                         no.

  trace_level = trace_level - 1.
endform.                    "trace_exit_from_reset_abgs


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
FORM stru_b_check_for_tabg                                  "H450841
                      TABLES posnr_tab_down1 structure posnr_tab "H450841
                             posnr_tab_up1 structure posnr_tab "H450841
                      USING objnr like coep-objnr           "H450841
                            rflg6 like tkkap-rflg6          "H450841
                            posnr_set_tabg type kkachr1     "H450841
                            enable_reset_tabg type kkachr1  "H450841
                            exit_from_reset_tabg type kkachr1. "H450841
  data: tix like sy-tabix.

  if rflg6 = 'B' and
     posnr_set_tabg = yes.
* posnr_tab_down1 wird reduziert auf Positionen mit Abgr.Schluessel
* und aktivem Abgrenzungsstatus
    delete posnr_tab_down1 where abgrs = space.
    loop at posnr_tab_down1.
      tix = sy-tabix.
      CALL FUNCTION 'STATUS_CHECK'
        EXPORTING
          objnr             = posnr_tab_down1-objnr
          status            = i_status_abgr
        EXCEPTIONS
          object_not_found  = 01
          status_not_active = 02.
      if sy-subrc <> 0.
        delete posnr_tab_down1 index tix.
        continue.
      endif.
    endloop.
  else.
    clear posnr_tab_down1[].
  endif.

  if rflg6 = 'B' and
     posnr_set_tabg = no and
     enable_reset_tabg = yes.
    CALL FUNCTION 'STATUS_CHECK'
      EXPORTING
        objnr             = objnr
        status            = i_status_tabg
      EXCEPTIONS
        object_not_found  = 01
        status_not_active = 02.
    if sy-subrc <> 00.
      clear posnr_tab_up1[].
    endif.
* posnr_tab_up1 wird reduziert auf Positionen mit Abgr.Schluessel mit
* Kundenauftragsstrukturkz. 'B' und aktivem Abgrenzungsstatus
* und aktivem Status tabg.
    delete posnr_tab_up1 where abgrs = space.
    loop at posnr_tab_up1.
      tix = sy-tabix.
      read table abgrs_tab with key posnr_tab_up1-abgrs.
      if not ( sy-subrc = 0 and abgrs_tab-rflg6 = 'B' ).
        delete posnr_tab_up1 index tix.
        continue.
      endif.
      CALL FUNCTION 'STATUS_CHECK'
        EXPORTING
          objnr             = posnr_tab_up1-objnr
          status            = i_status_abgr
        EXCEPTIONS
          object_not_found  = 01
          status_not_active = 02.
      if sy-subrc <> 0.
        delete posnr_tab_up1 index tix.
        continue.
      endif.
      CALL FUNCTION 'STATUS_CHECK'
        EXPORTING
          objnr             = posnr_tab_up1-objnr
          status            = i_status_tabg
        EXCEPTIONS
          object_not_found  = 01
          status_not_active = 02.
      if sy-subrc <> 00.
        delete posnr_tab_up1 index tix.
        continue.
      endif.
    endloop.
  else.
    clear posnr_tab_up1[].
  endif.

  describe table posnr_tab_up1 lines tix.
  if tix ge 1.
    exit_from_reset_tabg = yes.
  else.
    exit_from_reset_tabg = no.
  endif.
endform.                    "stru_b_check_for_tabg


****************************************************************"H450841
*                                                               "H450841
****************************************************************"H450841
FORM trace_exit_from_reset_tabg.                            "H450841

  CHECK trace_on = yes.

  check exit_from_reset_tabg = yes.

*   trace_name = 'Abh#ngigkeitspr¨¹fung'.
  trace_name = text-056.
*   trace_value = '#bergeordnete Ergebnisermittlungspositionen'.
  trace_value = text-063.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.

  trace_level = trace_level + 1.

  loop at posnr_tab_up1.

*   trace_name = '#bergeordnete Position'.
    trace_name = text-058.
    trace_value = posnr_tab_up1-posnr.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.

  endloop.

  trace_long_value = text-067.
  trace_name = text-a01.
  trace_value = text-068.
  perform trace_var_store_longline using trace_name
                                         trace_value
                                         trace_long_value
                                         no.

  trace_level = trace_level - 1.
endform.                    "trace_exit_from_reset_tabg


***************************************************************"H456583A
*                                                              "H456583A
***************************************************************"H456583A
form SHOW_DETAIL USING pic_ucomm LIKE sy-ucomm              "H456583A
                       pic_sel TYPE slis_selfield.          "H456583A
  data: save_trace_on like trace_on,
        save_test_lf like test_lf.
  data: use_submit value 'X'.                               "H697387
  ranges: ran_vbeln for vbak-vbeln,                         "H697387
          ran_posnr for vbap-posnr.                         "H697387

  save_trace_on = trace_on.
  save_test_lf = test_lf.

  READ TABLE show_auftraege INDEX pic_sel-tabindex.
  IF sy-subrc <> 0.
    MESSAGE e000 with text-072.
  ENDIF.

* trace_on = yes.                                               "H697387
  read table auftraege with key vbeln = show_auftraege-vbeln
                                posnr = show_auftraege-posnr.
  IF sy-subrc <> 0.
    MESSAGE e000 with text-072.
  ENDIF.

* begin of note 697387                                          "H697387
  if use_submit = yes.
    clear: ran_vbeln[], ran_posnr[].
    clear: ran_vbeln, ran_posnr.
    ran_vbeln-sign = 'I'.
    ran_vbeln-option = 'EQ'.
    ran_vbeln-low = show_auftraege-vbeln.
    append ran_vbeln.
    ran_posnr-sign = 'I'.
    ran_posnr-option = 'EQ'.
    ran_posnr-low = show_auftraege-posnr.
    append ran_posnr.
    SUBMIT YSE_SAPKKA12
        WITH ABGRAUFA in ABGRAUFA
        WITH ABGRKOKR = ABGRKOKR
        WITH ABGRPOSN in ran_posnr
        WITH ABGRSCHL in ABGRSCHL
        WITH ABGRVBEL in ran_vbeln
        WITH ABH_POS = ABH_POS
        WITH ALL_SE1 = ALL_SE1
        WITH ALL_SE2 = ALL_SE2
        WITH ALL_SE3 = ALL_SE3
        WITH ALL_SE4 = ALL_SE4
        WITH ALL_SE5 = ALL_SE5
        WITH ALL_SEL = ALL_SEL
        WITH ALL_SEZ = ALL_SEZ
        WITH ANZ_ABHP = yes
        WITH ANZ_AEND = ANZ_AEND
        WITH ANZ_ALL = yes
        WITH DET_ANAL = yes
        WITH IF0SALDO = IF0SALDO
        WITH IF_0_WIP = IF_0_WIP
        WITH IF_ENFA = IF_ENFA
        WITH IF_ENFA1 = IF_ENFA1
        WITH IF_GLFT = IF_GLFT
        WITH IF_GLFT1 = IF_GLFT1
        WITH IF_MIN1 = IF_MIN1
        WITH IF_MIN11 = IF_MIN11
        WITH IF_SDFU1 = IF_SDFU1
        WITH IF_SDOF1 = IF_SDOF1
        WITH IF_TABG1 = IF_TABG1
        WITH LASTJAH1 = LASTJAH1
        WITH LASTJAHR = LASTJAHR
        WITH LASTMON1 = LASTMON1
        WITH LASTMONA = LASTMONA
        WITH LASTSEI1 = LASTSEI1
        WITH LASTSEIT = LASTSEIT
        WITH MAXP12 = MAXP12
        WITH MAXPSO = MAXPSO
        WITH MAXSAL = MAXSAL
        WITH MIT_ABGR = MIT_ABGR
        WITH NC_ABGS = NC_ABGS
        WITH NC_ENFA = NC_ENFA
        WITH NC_GLFT = NC_GLFT
        WITH NC_TABG = NC_TABG
        WITH OHNE_ABG = OHNE_ABG
        WITH OR_TABG = OR_TABG
        WITH OR_TABG1 = OR_TABG1
        WITH RST_ABGS = RST_ABGS
        WITH RST_TABG = RST_TABG
        WITH SD_JAHR = SD_JAHR
        WITH SD_MONA = SD_MONA
        WITH SD_SEIT = SD_SEIT
        WITH SET_ABGS = SET_ABGS
        WITH SET_ENFA = SET_ENFA
        WITH SET_GLFT = SET_GLFT
        WITH SET_TABG = SET_TABG
        WITH TEST_LF = yes
        WITH VK_SPART in VK_SPART
        WITH VK_VKBUR in VK_VKBUR
        WITH VK_VKGRP in VK_VKGRP
        WITH VK_VKORG in VK_VKORG
        WITH VK_VTWEG in VK_VTWEG
        WITH VP_BUKRS in VP_BUKRS
        WITH VP_PRCTR in VP_PRCTR
        WITH VP_WERKS in VP_WERKS
        and return.
    exit.
  endif.
* end of note 697387                                            "H697387

  trace_on = yes.                                           "H697387
  PERFORM trace_get_status_text.
  PERFORM trace_init.
  PERFORM trace_erlaeuterungen.
  PERFORM trace_begin_auftrag.
  perform auftrag_verarbeiten.
  perform clear_obj_ohne_salden_prf.
  perform trace_error.
  PERFORM trace_display.

  trace_on = save_trace_on.
  test_lf = save_test_lf.
endform.                    "SHOW_DETAIL


***************************************************************"H456583A
*                                                              "H456583A
***************************************************************"H456583A
form trace_collect_error.                                   "H456583A

  CHECK trace_on = yes.

  move-corresponding msg_trace to msg_tab.
  append msg_tab.
endform.                    "trace_collect_error


***************************************************************"H456583A
*                                                              "H456583A
***************************************************************"H456583A
form trace_error.                                           "H456583A
  data: BEGIN OF m,
          id LIKE sy-msgid,
          no LIKE sy-msgno,
        END OF m.

  CHECK trace_on = yes.

  check not msg_tab[] is initial.

* trace_name = 'Sonstige Fehlernachrichten'.
  trace_name = text-a92.
  trace_value = text-a04.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.
  trace_level = trace_level + 1.

  loop at msg_tab.
    MESSAGE ID msg_tab-msgid                         "REL.3.1-4.5 delete
            TYPE msg_tab-msgty                       "REL.3.1-4.5 delete
            NUMBER msg_tab-msgno                     "REL.3.1-4.5 delete
            WITH msg_tab-msgv1                       "REL.3.1-4.5 delete
                 msg_tab-msgv2                       "REL.3.1-4.5 delete
                 msg_tab-msgv3                       "REL.3.1-4.5 delete
                 msg_tab-msgv4                       "REL.3.1-4.5 delete
            INTO trace_long_value.                   "REL.3.1-4.5 delete
    m-id = msg_tab-msgid.
    m-no = msg_tab-msgno.
    trace_name = text-a66.
    trace_value = m.
    CONDENSE trace_value.
    CONDENSE trace_long_value.
    PERFORM trace_var_store_longline USING trace_name
                                           trace_value
                                           trace_long_value
                                           yes.
  endloop.

  trace_level = trace_level - 1.
endform.                    "trace_error


***************************************************************"H456583A
*                                                              "H456583A
***************************************************************"H456583A
FORM trace_vrgng_change_1 USING vrgng LIKE tj01-vrgng
                                subrc like sy-subrc
                                abh_pos_flg type kkachr1.
  DATA: BEGIN OF st,
          t1(10),
          1,
          v(10),
          2,
          t2(20),
        END OF st,
        BEGIN OF m,
          t(20),     "value 'Fehlermeldung',
          1,
          id LIKE sy-msgid,
          no LIKE sy-msgno,
          4(2) VALUE ': ',
          mt(400),
        END OF m,
        xrc LIKE sy-subrc.

  CHECK trace_on = yes.

  st-t1 = text-a51.
  m-t = text-a66.

  CHECK subrc = 0 OR subrc = 1.
  xrc = subrc.

  IF g_output_header_status_change = yes.
*   trace_name = 'Status#nderung'.
    trace_name = text-a01.
    IF abh_pos_flg = yes.
*     trace_value = 'Abh#ngige Position'.
      trace_value = text-a57.
      CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
        EXPORTING
          i_name1  = trace_name
          i_value1 = trace_value
          i_level  = trace_level.
    ELSE.
*     trace_value = 'Laufende Position'.
      trace_value = text-a27.
      CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
        EXPORTING
          i_name1  = trace_name
          i_value1 = trace_value
          i_level  = trace_level
          i_type   = 'R'.
    ENDIF.
    CLEAR g_output_header_status_change.
  ENDIF.
  trace_level = trace_level + 1.

  IF xrc = 0.
    IF test_lf = yes.
      trace_name = text-a93.
    ELSE.
      trace_name = text-a94.
    ENDIF.
    st-v = vrgng.
*   st-t2 = 'durchgef¨¹hrt'.
    st-t2 = text-a64.
    trace_value = st.
    CONDENSE trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  ELSEIF xrc = 1.
    MESSAGE ID sy-msgid                              "REL.3.1-4.5 delete
            TYPE sy-msgty                            "REL.3.1-4.5 delete
            NUMBER sy-msgno                          "REL.3.1-4.5 delete
            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 "REL.3.1-4.5 delete
            INTO m-mt.                               "REL.3.1-4.5 delete
    m-id = sy-msgid.
    m-no = sy-msgno.

    IF test_lf = yes.
      trace_name = text-a93.
    ELSE.
      trace_name = text-a94.
    ENDIF.
    st-v = vrgng.
*   st-t2 = 'nicht durchgef¨¹hrt'.
    st-t2 = text-a65.
    trace_value = st.
    CONDENSE trace_value.
    trace_long_value = m.
    CONDENSE trace_long_value.
    PERFORM trace_var_store_longline USING trace_name
                                           trace_value
                                           trace_long_value
                                           yes.
  ENDIF.

  trace_level = trace_level - 1.
ENDFORM.                    "trace_vrgng_change_1


****************************************************************"H503958
*                                                               "H503958
****************************************************************"H503958
form Kundenerweiterung_glft_enfa                            "H503958
                       TABLES t_objnr STRUCTURE objnrtab    "H503958
                       using i_vbeln like vbap-vbeln        "H503958
                             i_posnr like vbap-posnr        "H503958
                             i_objnr like vbap-objnr        "H503958
                             i_abgrs like vbap-abgrs        "H503958
                             c_kndpos_set_glft type kkachr1 "H503958
                             c_kndpos_set_enfa type kkachr1. "H503958

  data: x_gjahr like coep-gjahr,
        x_perio like coep-perio,
        xt_objnr like IONRB occurs 0 with header line,
        x_text1 like sy-msgv1,
        x_text2 like sy-msgv1,
        x_kndpos_set_glft,
        x_kndpos_set_enfa.

  check k_erweiterung_abgs = yes.

  x_gjahr = current_period-j.
  x_perio = current_period-m.
  refresh xt_objnr.
  loop at t_objnr.
    xt_objnr-objnr = t_objnr-objnr.
    append xt_objnr.
  endloop.
  x_kndpos_set_glft = c_kndpos_set_glft.
  x_kndpos_set_enfa = c_kndpos_set_enfa.

  sy-subrc = 0.
  CALL CUSTOMER-FUNCTION '003'
       EXPORTING
            KOKRS                 = abgrkokr
            VBUK_VBELN            = i_vbeln
            VBUP_POSNR            = i_posnr
            OBJEKTNUMMER          = i_objnr
            SY_DATUM_GJAHR        = x_gjahr
            SY_DATUM_PERIO        = x_perio
            ABGRENZUNGS_SCHLUESSEL = i_abgrs                "H450841
            TESTLAUF              = test_lf                 "H559611
       IMPORTING
            DETAIL_TEXT1          = x_text1
            DETAIL_TEXT2          = x_text2
       TABLES
            OBJECTS               = xt_objnr
       CHANGING
            SOLLZUSTAND_glft      = c_kndpos_set_glft
            SOLLZUSTAND_enfa      = c_kndpos_set_enfa
       EXCEPTIONS
            FEHLER_MIT_NACHRICHT  = 1
            FEHLER_OHNE_NACHRICHT = 2
            OTHERS                = 3.
  CASE SY-SUBRC.
    WHEN 0.
*     no operation
    WHEN 1.
      move-corresponding sy to msg_trace.
      perform trace_collect_error.
    WHEN OTHERS.
      clear msg_trace.
      msg_trace-msgid = 'KJ'.
      msg_trace-msgty = 'E'.
      msg_trace-msgno = '550'.
      msg_trace-msgv1 = TEXT-E12.
      perform trace_collect_error.
  ENDCASE.

  PERFORM trace_Knd_Erw_glft_enfa using c_kndpos_set_glft
                                        x_kndpos_set_glft
                                        c_kndpos_set_enfa
                                        x_kndpos_set_enfa
                                        x_text1
                                        x_text2.

endform.                    "Kundenerweiterung_glft_enfa


****************************************************************"H503958
*                                                               "H503958
****************************************************************"H503958
FORM trace_Knd_Erw_glft_enfa using
                                  new_kndpos_set_glft type kkachr1
                                  old_kndpos_set_glft type kkachr1
                                  new_kndpos_set_enfa type kkachr1
                                  old_kndpos_set_enfa type kkachr1
                                  detail_text1 like sy-msgv1
                                  detail_text2 like sy-msgv1.
  data: begin of s,
          1(35),
          2 value ' ',
          3(14),
        end of s.

  CHECK trace_on = yes.

  check k_erweiterung_glft_enfa = yes.

* trace_name = 'Kundenerweiterung'.
  trace_name = text-e03.
* trace_value = 'Status Endgeliefert / Endfakturiert'.
  trace_value = text-e13.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.

  trace_level = trace_level + 1.

  if old_kndpos_set_glft eq yes or old_kndpos_set_glft eq no.
* trace_name = 'Sollzustand vor Erweiterung'.
    trace_name = text-e05.
* s-1 = 'Status Endgeliefert'.
    s-1 = text-e14.
    if old_kndpos_set_glft eq yes.
*   s-3 = 'aktiv'.
      s-3 = text-e06.
    else.
*   s-3 = 'nicht aktiv'.
      s-3 = text-e07.
    endif.
    trace_value = s.
    condense trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  endif.

  if old_kndpos_set_enfa eq yes or old_kndpos_set_enfa eq no.
* trace_name = 'Sollzustand vor Erweiterung'.
    trace_name = text-e05.
* s-1 = 'Status Endfakturiert'.
    s-1 = text-e15.
    if old_kndpos_set_enfa eq yes.
*   s-3 = 'aktiv'.
      s-3 = text-e06.
    else.
*   s-3 = 'nicht aktiv'.
      s-3 = text-e07.
    endif.
    trace_value = s.
    condense trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  endif.

* trace_name = 'Erkl#rung der Erweiterung'.
  trace_name = text-e08.
  if detail_text1 eq space and
     detail_text2 eq space.
*   trace_value = 'keine Erkl#rung ausgegeben'.
    trace_value = text-e09.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  endif.
  if detail_text1 ne space.
    trace_value = detail_text1.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  endif.
  if detail_text2 ne space.
    trace_value = detail_text2.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  endif.

  if old_kndpos_set_glft eq yes or old_kndpos_set_glft eq no.
* trace_name = 'Sollzustand nach Erweiterung'.
    trace_name = text-e10.
* s-1 = 'Status Endgeliefert'.
    s-1 = text-e14.
    if new_kndpos_set_glft eq yes.
*   s-3 = 'aktiv'.
      s-3 = text-e06.
    else.
*   s-3 = 'nicht aktiv'.
      s-3 = text-e07.
    endif.
    trace_value = s.
    condense trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  endif.

  if old_kndpos_set_enfa eq yes or old_kndpos_set_enfa eq no.
* trace_name = 'Sollzustand nach Erweiterung'.
    trace_name = text-e10.
* s-1 = 'Status Endfakturiert'.
    s-1 = text-e15.
    if new_kndpos_set_enfa eq yes.
*   s-3 = 'aktiv'.
      s-3 = text-e06.
    else.
*   s-3 = 'nicht aktiv'.
      s-3 = text-e07.
    endif.
    trace_value = s.
    condense trace_value.
    CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
      EXPORTING
        i_name1  = trace_name
        i_value1 = trace_value
        i_level  = trace_level.
  endif.

  trace_level = trace_level - 1.
ENDFORM.                    "trace_Knd_Erw_glft_enfa


****************************************************************"H626884
*                                                               "H626884
****************************************************************"H626884
FORM next_period USING per STRUCTURE current_period.        "H626884
  DATA: i TYPE i.

  i = per-m.
  IF i < abgr_monat_max.
    i = per-m + 1.
    UNPACK i TO per-m.
  ELSE.
    i = per-j + 1.
    UNPACK i TO per-j.
    per-m = monat_1p.
  ENDIF.
ENDFORM.                    "previous_period


****************************************************************"H676494
*                                                               "H676494
****************************************************************"H676494
FORM trace_abh_obj_skip_kzvbr.                              "H676494
  CHECK trace_on = yes.

* trace_name = 'Status#nderung'.
  trace_name = text-a01.
* trace_value = 'Abh#ngige Pos. f¨¹r Status#nderung nicht relevant'
  trace_value = text-a99.
  concatenate text-b01 text-b02
              into trace_long_value separated by space.
  PERFORM trace_var_store_longline USING trace_name
                                         trace_value
                                         trace_long_value
                                         no.

ENDFORM.                    "trace_abh_obj_skip_kzvbr


****************************************************************"H697387
*                                                               "H697387
****************************************************************"H697387
FORM trace_auth1 USING subrc like sy-subrc.                 "H697387

  CHECK trace_on = yes.
  check subrc ne 0.

* trace_name = 'Berechtigung'.
  trace_name = text-b03.
* trace_value = 'Es fehlt eine #nderungsberechtigung'.
  trace_value = text-b04.
  CALL FUNCTION 'K_TRACE_VARIABLE_STORE'
    EXPORTING
      i_name1  = trace_name
      i_value1 = trace_value
      i_level  = trace_level
      i_type   = 'R'.

  trace_level = trace_level + 1.

* trace_name = 'Berechtigung'.
  trace_name = text-b03.
* trace_value = 'Das Berechtigungsobjekt V_VBAK_VKO'.
  trace_value = text-b09.
  concatenate text-b05
              text-b06 auftraege-vkorg
              text-b07 auftraege-vtweg
              text-b08 auftraege-spart
              into trace_long_value separated by space.
  PERFORM trace_var_store_longline USING trace_name
                                         trace_value
                                         trace_long_value
                                         no.

  trace_level = trace_level - 1.
ENDFORM.                    "trace_auth1


****************************************************************"H697387
*                                                               "H697387
****************************************************************"H697387
form vorgangsberechtigung.                                  "H697387

  if set_enfa eq yes.
    CALL FUNCTION 'K_VRGNG_AUTHORITY_CHECK'
      EXPORTING
        ACTVT = '02'
        KOKRS = ABGRKOKR
        VRGNG = 'SDEF'.

    CALL FUNCTION 'K_VRGNG_AUTHORITY_CHECK'
      EXPORTING
        ACTVT = '02'
        KOKRS = ABGRKOKR
        VRGNG = 'SDES'.
  endif.

  if set_tabg eq yes.
    CALL FUNCTION 'K_VRGNG_AUTHORITY_CHECK'
      EXPORTING
        ACTVT = '02'
        KOKRS = ABGRKOKR
        VRGNG = 'BTAB'.
  endif.

  if rst_tabg eq yes.
    CALL FUNCTION 'K_VRGNG_AUTHORITY_CHECK'
      EXPORTING
        ACTVT = '02'
        KOKRS = ABGRKOKR
        VRGNG = 'BUTA'.
  endif.

  if set_abgs eq yes.
    CALL FUNCTION 'K_VRGNG_AUTHORITY_CHECK'
      EXPORTING
        ACTVT = '02'
        KOKRS = ABGRKOKR
        VRGNG = 'BABS'.
  endif.

  if rst_abgs eq yes.
    CALL FUNCTION 'K_VRGNG_AUTHORITY_CHECK'
      EXPORTING
        ACTVT = '02'
        KOKRS = ABGRKOKR
        VRGNG = 'BUAB'.
  endif.
endform.                    "vorgangsberechtigung

*Text symbol text£º
*001:Number of sales order items selected:
*002:Number of sales order items changed:
*003:Enter the year
*004:Enter the period
*005:CO status changes derived from
*006:document flow in SD
*007:costs and revenues in CO and document flow in SD
*008:Selection of Sales Orders
*009:if no cost or revenue posting (except settlement of RA data) since
*010:and if the item
*011:Costs, Revenues, RA Data, CO Status, Document Flow in SD, SD/CO Standard Verification
*012:if no cost or revenue posting and no results analysis data since
*013:selected and
*014:changed sales order items
*015:Status of sales order items changed on
*016:OK
*017:Error
*018:if the item has been fully invoiced, otherwise cancel.
*019:if the conditions are not met.
*020:if the item has been completely delivered, otherwise cancel.
*021:if the conditions are not met.
*022:and if all dependent orders
*023:Comments
*024:Determination of the statuses Final Billing and Delivered
*025:for an item takes the dependent items into account.
*026:All dependent items and orders are included in the
*027:determination of cost and revenue postings.
*028:Display
*029:Also change status TECO for
*030:and if the SD/CO (standard) check was passed
*031:Evaluate SD document flow for statuses Final Billing and Delivered to
*032:Processing Options
*033:Organizational Data
*034:SD Organizational Data
*035:Enter "minus number of periods"
*036:Calculated from the current period
*037:SD/CO Check and Procedure for Status Change TECO and CLSD
*038:If this option is selected, the status of an item can only be set if
*039:the status of all dependent items is active or was set.
*040:(Only simulated in test run)
*041:Analysis
*042:Status Closed should not be
*043:canceled if Technically Completed
*044:is a precondition for
*045:Closed
*046:Closed items no longer
*047:have the status
*048:Technically Completed
*049:Status Closed is not
*050:canceled
*051:is completely settled
*052:Maximum balance
*053:Sales Documents
*054:Sales Documents with Results Analysis Key
*055:Specify "with and/or without RA key"
*056:Dependency check
*057:Higher-level results analysis item
*058:Higher-level item
*059:Results Analysis Key
*060:Sales order structure
*061:Inclusion of Special Periods in Period Calculation
*063:Higher-level results analysis items
*064:The higher-level items have sales order structure B and statuses CLSD and RESA.
*065:Status CLSD not changed
*066:Status Change CLSD for Dependent Items
*067:The higher-level items have sales order structure B and statuses TECO and RESA.
*068:Status TECO not changed
*069:When the status is changed, status of dependent items is also changed.
*070:The status of the item can only be set if the status
*071:of all dependent items is active or was set.
*072:No detailed information available
*073:Status "Closed" is active
*074:No Authorization
*A01:Status change
*A02:No change of status CLSD for dependent items
*A03:Balance check
*A04:Current + dependent items and orders
*A05:Actual debit plus credit
*A06:Balance across all objs
*A07:Balance
*A08:not zero
*A09:zero
*A10:Results Analysis
*A11:WIP across all objects
*A12:WIP
*A13:Reserves across all objects
*A14:Reserves
*A15:Settlement via posting rules
*A16:WIP credit across all objects
*A17:WIP credit
*A18:Reserves credit across all objects
*A19:Reserves credit
*A20:Item
*A21:dependent items
*A22:Sales document/item
*A23:Status
*A24:Active
*A25:Inactive
*A26:Statuses read
*A27:Current item
*A28:Actual status (pre SAPKKA12)
*A29:Dependent items and orders
*A30:Object list
*A31:Actual status
*A32:All orders: status
*A33:All items: status
*A34:Test run
*A35:Actual status not replaced by target status
*A36:Update run
*A37:Actual status replaced by target status
*A38:Processing completed
*A39:after detailed analysis of 1000 items
*A40:Target status (per SD)
*A41:not
*A42:Delivery Compl.
*A43:Relevant for Billing
*A44:Fully Invoiced
*A45:Status determination DLV/FNBL
*A46:Status determination TECO/CLSD
*A50:Explanations
*A51:BusTran.
*A52:found to
*A53:Condition
*A54:none found
*A55:Posting check
*A56:Actual Postings
*A57:Dependent item
*A58:Direct Execution
*A59:deactivated
*A60:activated
*A61:.....
*A62:...
*A63:Execution via SD
*A64:completed
*A65:not completed
*A66:Error Message
*A67:No dependent items or orders
*A68:Changed target status
*A69:Summary
*A70:not activated
*A71:for all dependent items
*A72:Target status (per SAPKKA12)
*A73:(check dependent items)
*A74:Status derivation SAPKKA12
*A75:Execution via SD (test run)
*A76:DLV, since all items are delivered
*A77:Not DLV, since not all items are delivered
*A78:FNBL, since all items fully invoiced
*A79:Not FNBL, since not all items fully invoiced
*A80:Direct Execution (Test Run)
*A81:not in limit
*A82:in limit
*A83:Not directly, only through higher-level item
*A84:Yes
*A85:No
*A86:The current item has a results analysis key with sales order structure B.
*A87:Actual status (no change)
*A88:The dependent item has a results analysis key and status RESA.
*A89:The dependent item can only be processed separately.
*A90:Status TECO for dependent item is not changed
*A91:Results Analysis Key
*A92:Other Error Messages
*A93:Transaction execution (test)
*A94:Execution through transaction
*A95:Results Analysis Data
*A96:Explanation
*A97:The following condition is not fulfilled:
*A98:The overall delivery status of this item is completed or not relevant, and the goods issue quantity is the desired delivery quantity
*A99:Dependent item not relevant for status change
*B01:The account assignment category of the item does not have "E" (settlement via sales order) as the consumption posting indicator.
*B02:The item therefore has no status in CO.
*B03:Authorization
*B04:No change authorization
*B05:No change authorization (activity 02) for the
*B06:Sales Organization
*B07:/ Distrib. Channel
*B08:/ Division
*B09:Authorization Object V_VBAK_VKO
*COL:Collapse
*E01:EXIT_SAPKKA12_001
*E02:EXIT_SAPKKA12_002
*E03:Customer Enhancement
*E04:Status Technically Completed
*E05:Target before enhancement
*E06:active
*E07:inactive
*E08:Explanation of Enhancement
*E09:No explanation output
*E10:Target after enhancement
*E11:Status Closed
*E12:EXIT_SAPKKA12_003
*E13:Status Delivered/Final billing
*E14:Status "Delivered"
*E15:Status "Final billing"
*EXP:Expand
*SP3:Reading objects...
*SP5:objects processed
*SP6:of
*SP7:objects processed, formatting output
*U01:REL
*U02:DLV
*U03:FNBL
*U04:TECO
*U05:CLSD
*U06:Processing
*U07:DepItm
*U51:REL
*U52:DLV
*U53:FNBL
*U54:TECO
*U55:CLSD
*U56:Processing
*U57:DepItm
*U58:(+)  Concerns Status DLV/FNBL
*U59:Status Set
*U60:(-)  Concerns Status DLV/FNBL
*U61:Status Reset
*X00:Sales Order Selection Criteria
*X01:Display and Processing Options
*X02:Set Status Final Billing or Final Delivery?
*X03:Set Status Technically Completed?
*X04:Set Status Closed?
*X05:Structure Input Screen
*X06:Display All Input Parameters and Input Options
*X07:or
*X08:Comments
*XXX:
*Z01:Prerequisites for cancelling the status TECO or CLSD:
*Z02:1. The parameter "set status ..." must be set
*Z03:2. Conditions for setting must be specified that are not met
*Z04:3. The parameter "and cancel" must be set
*Z11:Documentation on program SAPKKA12 can be found in SAPNet
*Z12:under the address "http://service.sap.com/co-pc"
*Z13:and the path "Frequently Asked Questions"
*Z14:in the document "Results Analysis: Customizing"
*Z21:The customer enhancements of program SAPKKA12 are
*Z22:described in Note 438629
*Z31:The expression "dependent items (and orders)" refers to the
*Z32:processing logic in results analysis. The dependent
*Z33:items (and orders) are not processed separately
*Z34:but in results analysis for a (higher-level)
*Z35:item.
*Z41:In the list log, double-clicking on a line for the
*Z42:sales order item starts a simulation with detailed analysis.

*Z43:Note that the simulation is based on the current situation.
*Selection text£º
*ABGRAUFA:D       Sales document type
*ABGRKOKR:D       Controlling Area
*ABGRPOSN:D       Sales Document Item
*ABGRSCHL:D       Results analysis key
*ABGRVBEL:D       Sales document
*ABH_POS:        dependent items
*ANZ_ABHP:        With dependent items
*ANZ_AEND:        All changed items
*ANZ_ALL:        All selected items
*DET_ANAL:        Detail anal. (max. 1000 items)
*IF0SALDO:        has been completely settled
*IF_0_WIP:        has had final results analysis
*IF_ENFA:        has been fully invoiced
*IF_ENFA1:        has been fully invoiced
*IF_GLFT:        has been completely delivered
*IF_GLFT1:        has been completely delivered
*IF_MIN1:        has at least one posting
*IF_MIN11:        has at least one posting
*IF_SDFU1:        Standard
*IF_SDOF1:        Without production orders
*IF_TABG1:        is technically completed
*LASTJAH1:        Year
*LASTJAHR:        Year
*LASTMON1:        Period
*LASTMONA:        Period
*LASTSEI1:        minus number of periods
*LASTSEIT:        minus number of periods
*MAXP12:        Without special periods
*MAXPSO:        With special periods
*MAXSAL:        Maximum balance
*MIT_ABGR:        With results analysis key
*NC_ABGS:        Do not change CLSD or
*NC_ENFA:        Do not change FNBL or
*NC_GLFT:        Do not change DLV or
*NC_TABG:        Do not change TECO or
*OHNE_ABG:        Without results analysis key
*OR_TABG:        are business complete
*OR_TABG1:        tech. complete or comp. deliv.
*RST_ABGS:        and cancel
*RST_TABG:        and cancel
*SD_JAHR:        Year
*SD_MONA:        Period
*SD_SEIT:        minus number of periods
*SET_ABGS:        Set status CLSD
*SET_ENFA:        Set status FNBL
*SET_GLFT:        Set status DLV
*SET_TABG:        Set status TECO
*TEST_LF:        Test run
*VK_SPART:D       Division
*VK_VKBUR:D       Sales office
*VK_VKGRP:D       Sales group
*VK_VKORG:D       Sales Organization
*VK_VTWEG:D       Distribution Channel
*VP_BUKRS:D       Company Code
*VP_PRCTR:D       Profit Center
*VP_WERKS:D       Plant
