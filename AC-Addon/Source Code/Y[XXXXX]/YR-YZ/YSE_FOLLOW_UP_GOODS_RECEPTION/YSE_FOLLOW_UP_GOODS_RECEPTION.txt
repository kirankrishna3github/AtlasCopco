*&---------------------------------------------------------------------*
*& Report  YSE_FOLLOW_UP_GOODS_RECEPTION                               *
*&                                                                     *
*&---------------------------------------------------------------------*
*&                                                                     *
*&                                                                     *
*&---------------------------------------------------------------------*

REPORT  yse_follow_up_goods_reception MESSAGE-ID yse_sales_log.




*----------------------------------------------------------------------*
* PROGRAM ID           : YSE_FOLLOW_UP_GOODS_RECEPTION                 *
* PROGRAM TITLE        : Follow-up goods reception
* AUTHOR               : Andr¨¦ Blommaert
* DATE                 : 28/03/2007                                    *
* DEVELOPMENT ID       : D093-SDMM-REP-SL_MM09:Follow-up goods reception*

*                                                                      *
* CHANGE REQUEST NUMBER: CD1K913298                                    *
*                                                                      *
* Program Description:  ALV list with PO'S with goods reception in given
*                       period
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*
*                                                                      *
************************************************************************
INCLUDE yse_follow_up_class_def.
INCLUDE yse_follow_up_goods_recep_top.

*****************************
* SELECTION SCREEN
****************************


SELECTION-SCREEN BEGIN OF BLOCK 1 WITH FRAME TITLE text-001.
					" Selections

SELECT-OPTIONS: s_period FOR sy-datum NO-EXTENSION OBLIGATORY,
                s_werks FOR marc-werks OBLIGATORY,
                s_ekorg FOR ekko-ekorg OBLIGATORY.


PARAMETERS:
p_lifnr LIKE lfa1-lifnr,
p_gac(3),
p_pgc(3),
p_matnr LIKE mara-matnr.


SELECTION-SCREEN END OF BLOCK 1.

*****************************
* START-OF-SELECTION
****************************

START-OF-SELECTION.

  PERFORM fill_po_hist_tables TABLES it_po_hist.


  READ TABLE it_po_hist INDEX 1.

  IF sy-subrc NE 0.

    MESSAGE e000 WITH text-e00.

  ENDIF.

  PERFORM find_material_info TABLES it_po_hist
                                    it_mat.


  PERFORM find_mrp_type TABLES it_po_hist
                               it_marc.


  PERFORM find_vendor_info TABLES it_po_hist
                                  it_lfa1.


*****************************
* END-OF-SELECTION
****************************

END-OF-SELECTION.


  PERFORM fill_output_table TABLES it_po_hist
                                   it_mat
                                    it_output.




  CALL SCREEN 200.







  	
*&---------------------------------------------------------------------*
*&      Form  view_PO
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_E_ROW_ID  text
*----------------------------------------------------------------------*
  FORM view_po  USING    p_e_row_id.



  READ TABLE it_output INTO wa_output INDEX p_e_row_id.

  SET PARAMETER ID 'BES' FIELD wa_output-ebeln.
  CALL TRANSACTION 'ME23N' AND SKIP FIRST SCREEN.


ENDFORM.                    " view_PO
*&---------------------------------------------------------------------*
*&      Form  fill_po_hist_tables
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_PO_HIST  text
*----------------------------------------------------------------------*
FORM fill_po_hist_tables  TABLES   p_it_po_hist STRUCTURE wa_po_hist.
  .




  IF p_matnr IS INITIAL.

    IF p_lifnr IS INITIAL.

      SELECT a~ekorg a~lifnr
             b~ebeln b~ebelp  b~matnr  b~werks
             c~vgabe c~menge
        INTO CORRESPONDING FIELDS OF TABLE it_po_hist2
      FROM ekko AS a
      INNER JOIN ekpo AS b
      ON a~ebeln = b~ebeln
      INNER JOIN ekbe AS c
      ON b~ebeln = c~ebeln
       AND b~ebelp = c~ebelp
      WHERE a~ekorg IN s_ekorg
      AND b~werks IN s_werks
      AND c~budat IN s_period
      AND c~vgabe IN ('1', '2').





    ELSE.

      SELECT a~ekorg a~lifnr
              b~ebeln b~ebelp  b~matnr  b~werks
              c~vgabe c~menge
           INTO CORRESPONDING FIELDS OF TABLE it_po_hist2
           FROM ekko AS a
           INNER JOIN ekpo AS b
           ON a~ebeln = b~ebeln
           INNER JOIN ekbe AS c
           ON b~ebeln = c~ebeln
            AND b~ebelp = c~ebelp
           WHERE a~ekorg IN s_ekorg
             AND a~lifnr = p_lifnr
           AND b~werks IN s_werks
           AND c~budat IN s_period
           AND c~vgabe IN ('1', '2').


    ENDIF.

  ELSE.

    IF p_lifnr IS INITIAL.

      SELECT a~ekorg a~lifnr
             b~ebeln b~ebelp  b~matnr  b~werks
             c~vgabe c~menge
        INTO CORRESPONDING FIELDS OF TABLE it_po_hist2
      FROM ekko AS a
      INNER JOIN ekpo AS b
      ON a~ebeln = b~ebeln
      INNER JOIN ekbe AS c
      ON b~ebeln = c~ebeln
       AND b~ebelp = c~ebelp
      WHERE a~ekorg IN s_ekorg
      AND b~matnr EQ p_matnr
      AND b~werks IN s_werks
      AND c~budat IN s_period
      AND c~vgabe IN ('1', '2').





    ELSE.

      SELECT a~ekorg a~lifnr
              b~ebeln b~ebelp  b~matnr  b~werks
              c~vgabe c~menge
           INTO CORRESPONDING FIELDS OF TABLE it_po_hist2
           FROM ekko AS a
           INNER JOIN ekpo AS b
           ON a~ebeln = b~ebeln
           INNER JOIN ekbe AS c
           ON b~ebeln = c~ebeln
            AND b~ebelp = c~ebelp
           WHERE a~ekorg IN s_ekorg
             AND a~lifnr = p_lifnr
              AND b~matnr EQ p_matnr
           AND b~werks IN s_werks
           AND c~budat IN s_period
           AND c~vgabe IN ('1', '2').


    ENDIF.



  ENDIF.
  SORT it_po_hist2 BY ebeln ebelp vgabe.


* SUM OVER PURCH ORDER LINES

  LOOP AT it_po_hist2.

    MOVE-CORRESPONDING it_po_hist2 TO p_it_po_hist.
    COLLECT p_it_po_hist.

  ENDLOOP.
  SORT p_it_po_hist BY ebeln ebelp vgabe.











ENDFORM.                    " fill_po_hist_tables
*&---------------------------------------------------------------------*
*&      Form  find_material_info
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_PO_HIST  text
*      -->P_IT_MAT  text
*----------------------------------------------------------------------*
FORM find_material_info  TABLES   p_it_po_hist STRUCTURE wa_po_hist
                                  p_it_mat STRUCTURE wa_mat.

*DATA: BEGIN OF wa_mat,
*matnr LIKE mara-matnr,
*prdh LIKE mara-prdha,
*matkx LIKE makt-maktx,
*mtart LIKE mara-mtart,
*matkl LIKE mara-matkl,
*
*END OF  wa_mat.



  SELECT a~matnr a~matkl a~mtart a~prdha b~maktx
  INTO CORRESPONDING FIELDS OF TABLE it_mat
  FROM mara AS a
  INNER JOIN makt AS b
  ON a~matnr = b~matnr
  FOR ALL ENTRIES IN p_it_po_hist
  WHERE a~matnr = p_it_po_hist-matnr
  AND b~spras = 'E'.


  SORT it_mat BY matnr.
  DELETE ADJACENT DUPLICATES FROM  it_mat.

*  CHECK FOR GAC/PGC

  LOOP AT it_mat.
    IF NOT p_gac IS INITIAL.
      IF it_mat-prdha(4) NE p_gac.
        DELETE it_mat.
        CONTINUE.
      ENDIF.
    ENDIF.

    IF NOT p_pgc IS INITIAL.
      IF it_mat-prdha+4(4) NE p_pgc.
        DELETE it_mat.
      ENDIF.
    ENDIF.

  ENDLOOP.






ENDFORM.                    " find_material_info
*&---------------------------------------------------------------------*
*&      Form  fill_output_table
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_PO_HIST  text
*      -->P_IT_MAT  text
*      -->P_IT_OUTPUT  text
*----------------------------------------------------------------------*
FORM fill_output_table  TABLES   p_it_po_hist STRUCTURE wa_po_hist
                                 p_it_mat STRUCTURE wa_mat
                                 p_it_output STRUCTURE wa_output.

  DATA: lv_tabix LIKE sy-tabix.

  LOOP AT  p_it_po_hist.

    lv_tabix = sy-tabix + 1.

    IF p_it_po_hist-vgabe = c_1.


      READ TABLE p_it_mat WITH KEY  matnr  = p_it_po_hist-matnr BINARY SEARCH.



      IF sy-subrc EQ 0.


        MOVE-CORRESPONDING p_it_po_hist TO p_it_output.
        MOVE-CORRESPONDING p_it_mat TO p_it_output.
        p_it_output-gac = p_it_mat-prdha(4).
        p_it_output-pgc = p_it_mat-prdha+4(4).


        p_it_output-goods_receipt_qty = p_it_po_hist-menge.
        REPLACE '.000' IN p_it_output-goods_receipt_qty WITH space.
        CLEAR wa_po_hist.
        READ TABLE  p_it_po_hist INTO wa_po_hist INDEX lv_tabix.
        IF  wa_po_hist-ebeln = p_it_po_hist-ebeln
        AND wa_po_hist-ebelp = p_it_po_hist-ebelp
        AND wa_po_hist-vgabe = c_2.
          p_it_output-invoiced_qty = wa_po_hist-menge.
          REPLACE '.000' IN p_it_output-invoiced_qty WITH space.
        ENDIF.

* FIND MRP TYPE FOR MATNR_WERKS
        READ TABLE it_marc WITH KEY matnr = p_it_po_hist-matnr
                                    werks = p_it_po_hist-werks BINARY SEARCH.


        IF sy-subrc EQ 0.

          p_it_output-dismm = it_marc-dismm.

        ENDIF.

* * FIND VENDOR NAME
        READ TABLE it_lfa1 WITH KEY lifnr = p_it_po_hist-lifnr
                                     BINARY SEARCH.


        IF sy-subrc EQ 0.

          p_it_output-name1 = it_lfa1-name1.

        ENDIF.





        APPEND p_it_output.
        CLEAR p_it_output.

      ENDIF.
    ENDIF.

  ENDLOOP.



ENDFORM.                    " fill_output_table
*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0200 OUTPUT.
  SET PF-STATUS '200'.
  SET TITLEBAR '200'.

ENDMODULE.                 " STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  EXIT_O200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE exit_o200 INPUT.

  MOVE ok_code TO save_ok_code.
  CLEAR ok_code.

  CASE save_ok_code.

    WHEN 'BACK' OR 'CANCEL' OR 'EXIT'.

      LEAVE TO SCREEN 0.
  ENDCASE.



ENDMODULE.                 " EXIT_O200  INPUT
*&---------------------------------------------------------------------*
*&      Module  PREPARE_ALV  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE prepare_alv OUTPUT.

  PERFORM prepare_alv.

ENDMODULE.                 " PREPARE_ALV  OUTPUT
*&---------------------------------------------------------------------*
*&      Form  PREPARE_ALV
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM prepare_alv .

  IF my_container IS INITIAL.
*create the container
    CREATE OBJECT my_container
      EXPORTING
          repid           =  sy-repid
          dynnr           =  sy-dynnr
          lifetime        =  cntl_lifetime_dynpro
*          ratio           =  90.
          extension       =  5000.

*create the ALV control
    CREATE OBJECT my_alv
      EXPORTING
          i_parent  =  my_container.

* CREATE THE HANDLER OBJECT
    CREATE OBJECT obj_event_handler1.
* SET  HANDLER FOR ALV
    SET HANDLER obj_event_handler1->handle_hotspot_click FOR my_alv.


*Set parameters regarding layout, etc.
    wa_variant-report = sy-cprog.
    wa_layout-no_toolbar = ' '.
*create the fieldcatalog e.g. which fields to display
    PERFORM create_fieldcat.
*display the data in the ALV control
    my_alv->set_table_for_first_display(
                EXPORTING
*                    i_save        =  'A'
*                    is_variant    =  wa_variant
                    is_layout     =  wa_layout
                CHANGING
                    it_outtab         =  it_output
                    it_fieldcatalog   =  it_fieldcat
                 EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4 ).

    WRITE:/ 'SUBRC',  sy-subrc.

**Set thet event handler
**    set handler lcl_event_handler=>on_hotspot_click
**                    for my_alv.

  ELSE.
*If ALV control already exists, refresh data without changing the layout
*-> 'soft'
    my_alv->refresh_table_display(
      EXPORTING
          i_soft_refresh  =  c_x ).
  ENDIF.









ENDFORM.                    " PREPARE_ALV
*&---------------------------------------------------------------------*
*&      Form  create_fieldcat
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM create_fieldcat .
*werks LIKE mard-werks,
*ekorg LIKE ekko_ekorg,
*gac(4),
*pgc(4),
*matnr LIKE vbap-matnr,
*maktx LIKE makt-maktx,
*mtart LIKE mara-mtart,
*matkl LIKE mara-matkl,
*dismm LIKE marc-dismm,
*lifnr LIKE eord-lifnr,
*name1 LIKE lfa1-name1,
*ebeln LIKE ekko-ebeln,
*ebelp LIKE ekpo-ebelp,
*goods_receipt_qty(17),
*invoiced_qty(17),

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'WERKS'.
*  WA_FIELDCAT-HOTSPOT = c_x.
  wa_fieldcat-outputlen = 4.
  wa_fieldcat-coltext = 'Plant'(c07).
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'EKORG'.
*  WA_FIELDCAT-HOTSPOT = c_x.
  wa_fieldcat-outputlen = 4.
  wa_fieldcat-coltext = 'Purchase Organisation'(c17).
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.


  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'GAC'.
*  WA_FIELDCAT-HOTSPOT = c_x.
  wa_fieldcat-outputlen = 4.
  wa_fieldcat-coltext = 'GAC'(c01).
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.



  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'PGC'.
*  WA_FIELDCAT-HOTSPOT = c_x.
  wa_fieldcat-outputlen = 4.
  wa_fieldcat-coltext = 'PGC'(c02).
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'MATNR'.
*  wa_fieldcat-hotspot = c_x.
  wa_fieldcat-outputlen = 22.
  wa_fieldcat-coltext = 'Material'(c03).
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'MAKTX'.
*  WA_FIELDCAT-HOTSPOT = c_x.
  wa_fieldcat-outputlen = 35.
  wa_fieldcat-coltext = 'Material description'(c04).
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.


  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'MTART'.
*  WA_FIELDCAT-HOTSPOT = c_x.
  wa_fieldcat-outputlen = 4.
  wa_fieldcat-coltext = 'Material type'(c05).
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'MATKL'.
*  WA_FIELDCAT-HOTSPOT = c_x.
  wa_fieldcat-outputlen = 9.
  wa_fieldcat-coltext = 'Material group'(c06).
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'DISMM'.
*  WA_FIELDCAT-HOTSPOT = c_x.
  wa_fieldcat-outputlen = 2.
  wa_fieldcat-coltext = 'MRP type'(c09).
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'LIFNR'.
*  WA_FIELDCAT-HOTSPOT = c_x.
  wa_fieldcat-outputlen = 10.
  wa_fieldcat-coltext = 'Supplier'(c08).
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.


  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'NAME1'.
*  WA_FIELDCAT-HOTSPOT = c_x.
  wa_fieldcat-outputlen = 35.
  wa_fieldcat-coltext = ' Name Supplier'(c18).
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'EBELN'.
  wa_fieldcat-hotspot = c_x.
  wa_fieldcat-outputlen = 10.
  wa_fieldcat-coltext = 'Purchase Order Number'(c19).
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.


  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'EBELP'.
*  WA_FIELDCAT-HOTSPOT = c_x.
  wa_fieldcat-outputlen = 6.
  wa_fieldcat-coltext = 'Purchase Order Line'(c20).
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.


  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'GOODS_RECEIPT_QTY'.
*  WA_FIELDCAT-HOTSPOT = c_x.
  wa_fieldcat-outputlen = 17.
  wa_fieldcat-coltext = 'Goods receipt quantity'(c21).
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.



  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'INVOICED_QTY'.
*  WA_FIELDCAT-HOTSPOT = c_x.
  wa_fieldcat-outputlen = 17.
  wa_fieldcat-coltext = 'Invoiced quantity'(c22).
*  WA_FIELDCAT-TOOLTIP = 'Click on equipment to see details'.
  wa_fieldcat-fix_column = c_x.
  wa_fieldcat-emphasize = c_x.

  APPEND wa_fieldcat TO it_fieldcat.



ENDFORM.                    " create_fieldcat
*&---------------------------------------------------------------------*
*&      Form  find_mrp_type
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_PO_HIST  text
*      -->P_IT_MARC  text
*----------------------------------------------------------------------*
FORM find_mrp_type  TABLES   p_it_po_hist STRUCTURE wa_po_hist
                             p_it_marc  STRUCTURE wa_marc .


  SELECT matnr werks dismm
  INTO CORRESPONDING FIELDS OF TABLE p_it_marc
  FROM marc
  FOR ALL ENTRIES IN  p_it_po_hist
  WHERE matnr = p_it_po_hist-matnr
  AND werks = p_it_po_hist-werks.

  SORT p_it_marc.





ENDFORM.                    " find_mrp_type
*&---------------------------------------------------------------------*
*&      Form  find_vendor_info
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_IT_PO_HIST  text
*      -->P_IT_LFA1  text
*----------------------------------------------------------------------*
FORM find_vendor_info  TABLES   p_it_po_hist STRUCTURE wa_po_hist
                                p_it_lfa1 STRUCTURE wa_lfa1.


  SELECT lifnr name1
   INTO CORRESPONDING FIELDS OF TABLE p_it_lfa1
   FROM lfa1
   FOR ALL ENTRIES IN  p_it_po_hist
   WHERE lifnr = p_it_po_hist-lifnr   .

  SORT p_it_lfa1.

  DELETE ADJACENT DUPLICATES FROM p_it_lfa1.



ENDFORM.                    " find_vendor_info

*Text symbol text£º
*001:Selections
*C01:GAC
*C02:PGC
*C03:Material
*C04:Material description
*C05:Material type
*C06:Material group
*C07:Plant
*C08:Supplier
*C09:MRP type
*C17:Purchase Organisation
*C18: Name Supplier
*C19:Purchase Order Number
*C20:Purchase Order Line
*C21:Goods receipt quantity
*C22:Invoiced quantity

*E00:No goods receipts selected
*Selection text£º
*P_GAC:        GAC
*P_LIFNR:        Vendor
*P_MATNR:        Material
*P_PGC:        PGC
*S_EKORG:        Purchase organisation
*S_PERIOD:        Period (Begindate - Enddate)
*S_WERKS:        Plant
