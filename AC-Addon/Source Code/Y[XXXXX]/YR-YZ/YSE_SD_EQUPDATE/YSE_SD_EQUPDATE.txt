*&---------------------------------------------------------------------*
*& Report  YSE_SD_EQUPDATE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
REPORT  YSE_SD_EQUPDATE.
TABLES: ITOB.
DATA: L_OBJNR TYPE ITOB-OBJNR.
DATA: LS_XIPHA TYPE IHPAVB,
      IT_XIPHA TYPE STANDARD TABLE OF IHPAVB.
DATA: I_NEW_DLR TYPE I_PARNR.
LS_XIPHA-MANDT = SY-MANDT.
LS_XIPHA-OBJNR = L_OBJNR.            "   EQUIPMENT NUMBER
LS_XIPHA-OBTYP = 'IEQ'.
LS_XIPHA-ERDAT = SY-DATUM.
LS_XIPHA-ERZEIT = SY-UZEIT.
LS_XIPHA-ERNAM = SY-UNAME.
LS_XIPHA-AEDAT = SY-DATUM.
LS_XIPHA-AEZEIT = SY-UZEIT.
LS_XIPHA-AENAM = SY-UNAME.
*CHECK SHIP TO PARTY INITIAL OR NOT.

IF NOT I_NEW_DLR IS INITIAL.

DATA: C_WE TYPE C.
DATA: C_U TYPE C,
        C_I TYPE C,
        c_x type c.
data: l_valid_equi like itob,
      l_valid_equi_new like itob,
      l_itob_old like itob,
      l_itob_new like itob,
      l_itob_rec like itob.

SELECT OBJNR
  PARVW
  COUNTER
  FROM IHPA
  INTO TABLE IT_XIPHA
  WHERE OBJNR = L_OBJNR
  AND PARVW EQ C_WE.
IF SY-SUBRC EQ 0.

  LOOP AT IT_XIPHA INTO LS_XIPHA.
    LS_XIPHA-UPDKZ = C_U.
    LS_XIPHA-PARVW   = LS_XIPHA-PARVW.
    LS_XIPHA-COUNTER = LS_XIPHA-COUNTER.
    LS_XIPHA-PARNR   = I_NEW_DLR.
    APPEND LS_XIPHA TO IT_XIPHA.
  ENDLOOP.
ELSE.
  LS_XIPHA-UPDKZ = C_I.
  LS_XIPHA-PARVW   = C_WE.
  LS_XIPHA-COUNTER = 1.
  LS_XIPHA-PARNR   = I_NEW_DLR.
  APPEND LS_XIPHA TO IT_XIPHA.
ENDIF.
  CALL FUNCTION 'PM_PARTNER_UPDATE'
*           EXPORTING
    TABLES
      FXIHPA             = it_xipha.

  CALL FUNCTION 'ITOB_EQUIPMENT_READ_SINGLE'
    EXPORTING
*     I_HANDLE             =
*     I_AUTH_TCODE         =
     I_LOCK               = c_x
      I_OBJNR              =  l_objnr
   IMPORTING
     E_OBJECT_REC         =  l_valid_equi
   EXCEPTIONS
     NOT_SUCCESSFUL       = 1
     OTHERS               = 2 .
            .
  IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
  if sy-subrc eq 0.
 l_valid_equi_new        = l_valid_equi.
    l_valid_equi_new-kunde  = i_new_dlr.

     MOVE : l_valid_equi TO l_itob_old,
           l_valid_equi_new TO l_itob_new.

    CLEAR l_itob_rec.

    CALL FUNCTION 'ITOB_EQUIPMENT_MODIFY_SINGLE'
      EXPORTING
*       I_HANDLE               =
       I_AUTH_TCODE           = 'IE02'
       I_FILTER_DATA          = SPACE
       I_WRITE_BUFFER         = 'C_X'
       I_POST_BUFFER          = 'C_X'
*       I_TRANSFER_MODE        =
       I_COMMIT_WORK          = 'C_'
        I_OBJECT_REC           =  L_ITOB_NEW
       I_OBJECT_REC_OLD       =   L_ITOB_OLD
     IMPORTING
       E_OBJECT_REC           =  L_ITOB_REC
     EXCEPTIONS
       NOT_SUCCESSFUL         = 1
       OTHERS                 = 2 .
*              .
    IF SY-SUBRC <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.
    endif.
    endif.
