*&---------------------------------------------------------------------*
*&  Include           YSE_UPD_MATRL_SALESTXT_FORMS                     *
*&---------------------------------------------------------------------*
*----------------------------------------------------------------------*
* PROGRAM ID           : YSE_UPD_MATRL_SALESTXT_FORMS                  *
* PROGRAM TITLE        : Updating Material Master data                 *
* AUTHOR               : SHIREESHA DEPALA                              *
* DATE                 : 15/09/2015                                    *
* DEVELOPMENT ID       : CR3739                                        *
* CHANGE REQUEST NUMBER: CD1K986821                                    *
* PROGRAM DESCRIPTION  : Updating Material master data with sales text *
*----------------------------------------------------------------------*
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME                 |CORRECTION NR| CHANGE REF *
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  READ_FILENAME
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM read_filename .
* Get file name
  CALL FUNCTION 'F4_FILENAME'
    IMPORTING
      file_name = p_flname
    EXCEPTIONS
      OTHERS    = 1.
  IF sy-subrc <> 0.
* Cannot read file name
    MESSAGE ID 'YSE_SALES_LOG' TYPE 'E' NUMBER '000' WITH text-007.
  ENDIF.
ENDFORM.                    " READ_FILENAME
*&---------------------------------------------------------------------*
*&      Form  READ_FILEDATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM read_filedata .
* Declare filename
  DATA : w_filename TYPE string.

  w_filename = p_flname.

  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      filename                = w_filename
      filetype                = lv_asc
      has_field_separator     = abap_true
    TABLES
      data_tab                = gt_data
    EXCEPTIONS
      file_open_error         = 1
      file_read_error         = 2
      no_batch                = 3
      gui_refuse_filetransfer = 4
      invalid_type            = 5
      no_authority            = 6
      unknown_error           = 7
      bad_data_format         = 8
      header_not_allowed      = 9
      separator_not_allowed   = 10
      header_too_long         = 11
      unknown_dp_error        = 12
      access_denied           = 13
      dp_out_of_memory        = 14
      disk_full               = 15
      dp_timeout              = 16
      OTHERS                  = 17.
  IF sy-subrc <> 0.
    MESSAGE ID 'YSE_SALES_LOG' TYPE 'E' NUMBER '000' WITH text-003.
  ENDIF.
* Delete first row from file as header line is included
  DELETE gt_data INDEX 1.
ENDFORM.                    " READ_FILEDATA
*&---------------------------------------------------------------------*
*&      Form  PROCESS_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM process_data .
* Process file data
  LOOP AT gt_data INTO wa_data.
* Clear and Refresh internal data
    REFRESH: htlines.
    CLEAR:   htheader,
             htheader1,
             lv_mvke,
             lv_len,
             lv_n,
             lv_final_text,
             lv_matnr.
* Check for the material and convert into correct format
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        input  = wa_data-matnr
      IMPORTING
        output = lv_matnr.
* Check for the material for the given sales org and dist channel
    SELECT SINGLE *
             FROM mvke
             INTO lv_mvke
             WHERE matnr = lv_matnr
             AND   vkorg = p_vkorg
             AND   vtweg = p_vtweg.
    IF sy-subrc = 0 AND NOT lv_mvke IS INITIAL.
* Check for the alphanumeric or numeric materials
      IF lv_matnr CA sy-abcde.
        lv_len = STRLEN( lv_matnr ).
        lv_n = lc_mat_len - lv_len.
        DO lv_n TIMES.
          CONCATENATE lv_value lv_text INTO lv_text.
        ENDDO.
        CONCATENATE lv_matnr lv_text p_vkorg p_vtweg INTO lv_final_text.
        TRANSLATE lv_final_text USING '& '.
* Move material, sales or and distribution channel data
        MOVE lv_final_text TO htheader-tdname.
      ELSE.
* Concatenate material, sales or and distribution channel data
        CONCATENATE lv_matnr p_vkorg p_vtweg INTO htheader-tdname.
      ENDIF.
* Fill data into final table
* Move language key
      MOVE lv_spras TO htheader-tdspras.
* Move Object text id
      MOVE lc_objectid TO htheader-tdid.
* Move Object
      MOVE lc_object TO htheader-tdobject.
* Move sales text data
      MOVE wa_data-lv_salestext TO halines-tdline.
      MOVE lc_text TO halines-tdformat.
      APPEND halines TO htlines.

* Call function module to update materials with sales text data
      CALL FUNCTION 'SAVE_TEXT'
        EXPORTING
          header          = htheader
          savemode_direct = 'X'
        IMPORTING
          newheader       = htheader1
        TABLES
          lines           = htlines
        EXCEPTIONS
          id              = 1
          language        = 2
          name            = 3
          object          = 4
          OTHERS          = 5.
      IF sy-subrc <> 0.
        APPEND wa_data-matnr TO gt_error.
      ELSE.
        MOVE wa_data-matnr        TO wa_success-matnr.
        MOVE wa_data-lv_salestext TO wa_success-hscode.
        APPEND wa_success TO gt_success.
        CLEAR: wa_success.
      ENDIF.
    ELSE.
      APPEND wa_data-matnr TO gt_error1.
    ENDIF.
* Clear local variable
    CLEAR: wa_data.
  ENDLOOP.
* Display all the materials on the screen which are updated with its Sales text
  IF NOT gt_success[] IS INITIAL.
    WRITE : /'Below listed Materials are updated with Sales text:'(006) COLOR COL_HEADING.
    ULINE.
    LOOP AT gt_success INTO wa_success.
      NEW-LINE.
      WRITE: wa_success-matnr, wa_success-hscode.
      CLEAR: wa_success.
    ENDLOOP.
  ENDIF.
ENDFORM.                    " PROCESS_DATA
*&---------------------------------------------------------------------*
*&      Form  MATERIALS_NOT_UPDATED
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM materials_not_updated .
* Display the materials on the screen which are not update with its Sales text
  IF NOT gt_error[] IS INITIAL.
    ULINE.
    WRITE : /'Below listed Materials are not updated with Sales text:'(004) COLOR COL_NEGATIVE.
    ULINE.
    LOOP AT gt_error INTO wa_error.
      NEW-LINE.
      WRITE: wa_error-matnr.
      CLEAR: wa_error.
    ENDLOOP.
  ENDIF.
* Display the materials on the screen which doesn't exits for the sales or and distn chnnl
  IF NOT gt_error1[] IS INITIAL.
    ULINE.
    WRITE : /'Below listed Materials does not exists for given Sales org & Dist channel:'(005) COLOR COL_NEGATIVE.
    ULINE.
    LOOP AT gt_error1 INTO wa_error1.
      NEW-LINE.
      WRITE: wa_error1-matnr.
      CLEAR: wa_error1.
    ENDLOOP.
  ENDIF.

ENDFORM.                    " MATERIALS_NOT_UPDATED
