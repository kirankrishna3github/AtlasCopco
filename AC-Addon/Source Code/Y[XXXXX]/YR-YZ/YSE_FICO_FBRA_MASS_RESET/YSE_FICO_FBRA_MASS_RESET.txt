*----------------------------------------------------------------------
* PROGRAM ID           : YSE_FICO_FBRA_MASS_RESET                      *
* PROGRAM TITLE        : Program to reset cleared items ( MASS FBRA)   *
* AUTHOR               : Uzzawal Vemparala                             *
* DATE                 : 01/08/2010                                    *
* DEVELOPMENT ID       : CR1200                                        *
* CHANGE REQUEST NUMBER:                                               *
* PROGRAM DESCRIPTION  :                                               *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*

REPORT  YSE_FICO_FBRA_MASS_RESET NO STANDARD PAGE HEADING
                             LINE-SIZE 200.

TABLES : BSEG , BSIS.

*- SELECTION SCREEN---------------------------------------------------
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.
SELECT-OPTIONS s_BELNR    FOR  BSEG-AUGBL.
PARAMETERS:    s_BUKRS    LIKE BKPF-BUKRS.
PARAMETERS:    s_GJAHR    LIKE BKPF-GJAHR.
PARAMETERS:    s_STGRD    LIKE BKPF-STGRD default '02'.
SELECTION-SCREEN END OF BLOCK b1 .

SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE text-002.
PARAMETERS:    s_BUDAT    LIKE BSIS-BUDAT.
PARAMETERS:    s_MONAT    LIKE BSIS-MONAT.
SELECTION-SCREEN END OF BLOCK b2 .

SELECTION-SCREEN BEGIN OF BLOCK b3 WITH FRAME TITLE text-004.
SELECTION-SCREEN BEGIN OF line .
SELECTION-SCREEN: COMMENT 20(65) text-003.
SELECTION-SCREEN END OF line.
SELECTION-SCREEN END OF BLOCK b3.
*&---------------------------------------------------------------------*
*& Internal tables
*&---------------------------------------------------------------------*
 DATA : BEGIN OF IT_BELNR OCCURS 0,
        BELNR LIKE BKPF-BELNR,
        END OF IT_BELNR.

DATA: BEGIN OF msg OCCURS 0.
        INCLUDE STRUCTURE bdcmsgcoll.
DATA: END OF msg.
*&---------------------------------------------------------------------*
*& Data Declarations
*&---------------------------------------------------------------------*
  DATA:
    BELNR LIKE BKPF-BELNR,
    BUKRS LIKE BKPF-BUKRS,
    GJAHR LIKE BKPF-GJAHR,
    STGRD LIKE BKPF-STGRD,
    STODT LIKE BKPF-BUDAT,
    STOMO LIKE BKPF-MONAT,
    WA_BELNR LIKE IT_BELNR.
*&---------------------------------------------------------------------*
*&     START-OF-SELECTION
*&---------------------------------------------------------------------*
START-OF-SELECTION.
PERFORM  : SELECT_DATA.
PERFORM  : PROCESS_DATA.
*&---------------------------------------------------------------------*
*&      Form  SELECT_DATA
*&---------------------------------------------------------------------*
form SELECT_DATA .
SELECT BELNR FROM BKPF
        INTO TABLE IT_BELNR
          WHERE BUKRS = S_BUKRS
            AND BELNR IN S_BELNR
            AND GJAHR = S_GJAHR.
IF SY-SUBRC = 0.
  SORT IT_BELNR BY BELNR.
ENDIF.
endform.                    " SELECT_DATA
*&---------------------------------------------------------------------*
*&      Form  PROCESS_DATA
*&---------------------------------------------------------------------*
form PROCESS_DATA .
LOOP AT IT_BELNR INTO WA_BELNR.
   BELNR = WA_BELNR.
   BUKRS = S_BUKRS.
   GJAHR = S_GJAHR.
   STGRD = S_STGRD.
     CALL FUNCTION 'CALL_FB08'
       EXPORTING
            I_BUKRS      = BUKRS
            I_BELNR      = BELNR
            I_GJAHR      = GJAHR
            I_STGRD      = STGRD
            I_XSIMU      = 'X'
       IMPORTING
            E_BUDAT      = STODT
            E_MONAT      = STOMO
       EXCEPTIONS
            NOT_POSSIBLE = 4.
  IF SY-SUBRC <> 0.
*    RAISE NOT_POSSIBLE_FB08.
  ELSE.
   IF NOT S_BUDAT IS INITIAL .
    STODT = S_BUDAT.
   ENDIF.
   IF NOT S_MONAT IS INITIAL.
    STOMO = S_MONAT.
   ENDIF.
    CALL FUNCTION 'CALL_FBRA'
       EXPORTING
            I_BUKRS      = BUKRS
            I_AUGBL      = BELNR
            I_GJAHR      = GJAHR
            I_STODT      = STODT
            I_STOMO      = STOMO
       EXCEPTIONS
            NOT_POSSIBLE = 4.
    IF SY-SUBRC <> 0.
*      RAISE NOT_POSSIBLE_FBRA.
    ELSE.
   IF NOT S_BUDAT IS INITIAL .
    STODT = S_BUDAT.
   ENDIF.
   IF NOT S_MONAT IS INITIAL.
    STOMO = S_MONAT.
   ENDIF.
      CALL FUNCTION 'CALL_FB08'
         EXPORTING
              I_BUKRS      = BUKRS
              I_BELNR      = BELNR
              I_GJAHR      = GJAHR
              I_STGRD      = STGRD
              I_BUDAT      = STODT
              I_MONAT      = STOMO
         EXCEPTIONS
              NOT_POSSIBLE = 4.
      IF SY-SUBRC <> 0.
*        RAISE NOT_POSSIBLE_FB08.
      ENDIF.
      WAIT UP TO 1 SECONDS.
    ENDIF.
  ENDIF.
ENDLOOP.

* IMPORT statement from database
  import BUKRS
         BELNR
         GJAHR
         MSG from DATABASE RFDT(RA) ID 'FBRA'.
* Internal table to display log
  write :/5 'Message Type' , 25 'Document No' , 40 'Comp. Code'.
  write :/5 '____________' , 25 '___________' , 40 '__________'.
  Loop at msg.
    if msg-MSGNR = '539' or  msg-MSGNR = '312'.
    write :/5 msg-msgtyp , 25 msg-msgv1 , 40 msg-msgv2.
    if msg-msgv2 ne space.
        write :/5 '____________' , 25 '___________' , 40 '__________'.
     endif.
    endif.
  endloop.

endform.                    " PROCESS_DATA

*Text symbol text£º
*001:Select Options
*002:Reverse Posting Details

*003:Note : - This report needs to be executed in Background only .
*Selection text£º
*S_BELNR:        Clearing Document
*S_BUDAT:        Posting Date
*S_BUKRS:        Company Code
*S_GJAHR:        Fiscal Year
*S_MONAT:        Posting Period
*S_STGRD:        Reversal Reason
