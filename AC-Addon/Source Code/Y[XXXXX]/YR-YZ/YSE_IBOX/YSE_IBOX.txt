*&---------------------------------------------------------------------*
*& Report  YSE_IBOX                                                    *
*&                                                                     *
*&---------------------------------------------------------------------*
*& This report will allow the online maintenance of Ibox-messages      *
*&---------------------------------------------------------------------*
*& Modifications                                                       *
*&---------------------------------------------------------------------*
* MOD-001|20xx.xx.xx|                 |CD1K9xxxxx|                     *
*&---------------------------------------------------------------------*

REPORT  yse_ibox MESSAGE-ID yam_re.

*.................. Tables definitions................................ *
TABLES: eina,
        mara.

*.................. Variable definitions.............................. *
TYPE-POOLS: slis.

TYPES: BEGIN OF ty_equi.
        INCLUDE STRUCTURE yam_p057_equi.
TYPES:  selkz TYPE selkz_list,
        objnr TYPE j_objnr,
        exclu TYPE c,
        iwerk TYPE iwerk,
        land1 TYPE land1,
        spras TYPE spras,
        matnr TYPE matnr,
        vkorg TYPE vkorg,
        vtweg TYPE vtweg,
        spart TYPE spart,
        vkgrp TYPE vkgrp,
        bukrs TYPE bukrs,
       END   OF ty_equi.

*.. Global variables
DATA: gv_msg    TYPE c,
      gv_handle TYPE balloghndl,
      gv_ok(1)  TYPE c,            "creation funct.loc level 3 result
      gv_nok(1) TYPE c,            "avoid installation on floc. level 2
      gv_log    TYPE c.

DATA: gt_errmsg TYPE TABLE OF bdcmsgcoll,
      wa_errmsg LIKE LINE OF gt_errmsg.

DATA: i_inherit_flags LIKE inheritance_flags,
      s_equi          LIKE v_equi,
      r_iflo          LIKE iflo.

DATA: gv_iwerk      TYPE iwerk,
      gv_ucomm      TYPE syucomm,
      gv_kunnr      TYPE kunnr,
      gv_kunwe      TYPE kunnr,
      gv_land1      TYPE land1,
      gv_spras      TYPE spras,
      gv_vkorg      TYPE vkorg,
      gv_vtweg      TYPE vtweg,
      gv_spart      TYPE spart,
      gv_vkbur      TYPE vkbur,
      gv_vkgrp      TYPE vkgrp,
      gv_region     type regio,
      gv_sortl      TYPE sortl,
      gv_gewrk      TYPE gewrk,
      gv_costl      TYPE kostl.

DATA: BEGIN OF lt_object OCCURS 0,
        objnr LIKE aufk-objnr,
      END OF lt_object.

DATA: BEGIN OF lt_object_cp OCCURS 0,
        objnr LIKE aufk-objnr,
      END OF lt_object_cp.

* ITI-messages
DATA: BEGIN OF gt_yse_ibox_iti OCCURS 0.
        INCLUDE STRUCTURE yse_ibox_iti.
DATA: END OF gt_yse_ibox_iti.

* HQT-messages
DATA: BEGIN OF gt_yse_ibox_hqt OCCURS 0.
        INCLUDE STRUCTURE yse_ibox_hqt.
DATA: END OF gt_yse_ibox_hqt.

* Table holds common messages to be shown on ALV/for update
*DATA: BEGIN OF gt_yse_ibox_mess OCCURS 0.
*        INCLUDE STRUCTURE yse_ibox_com.
*DATA: END OF gt_yse_ibox_mess.

*.. Global constants
CONSTANTS: gc_charx     TYPE c            VALUE 'X',
           gc_blank(3)  TYPE c            VALUE '   ',
           gc_green(3)  TYPE c            VALUE 'C50',
           gc_red(3)    TYPE c            VALUE 'C60',
           gc_yellow(3) TYPE c            VALUE 'C30',
           gc_blue(3)   TYPE c            VALUE 'C40'.

DATA: gv_mode    TYPE c VALUE 'N'.

FIELD-SYMBOLS: <field1> TYPE ANY,
               <field2> TYPE ANY.

DATA: i_bdcdata LIKE bdcdata OCCURS 0 WITH HEADER LINE,
      struct_bdcdata TYPE bdcdata.

data: gv_len(2)      type n,
      gv_times       type i.

*.. Constants
CONSTANTS:
      gc_trans      LIKE tstc-tcode   VALUE 'IL01',
      gc_trans_ie02 LIKE tstc-tcode   VALUE 'IE02'.

*.................. Layout selection screen........................... *
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-b01.
PARAMETERS:
  p_vkorg      TYPE vkorg OBLIGATORY.
SELECT-OPTIONS:
  s_matnr      FOR       mara-matnr,
  s_lifnr      FOR       eina-lifnr.
SELECTION-SCREEN END   OF BLOCK b1.

*.................. Selection screen validations...................... *
AT SELECTION-SCREEN ON p_vkorg.

* authority check
  AUTHORITY-CHECK OBJECT 'V_VBAK_VKO'
         ID 'VKORG' FIELD p_vkorg
         ID 'VTWEG' FIELD '11'
         ID 'SPART' FIELD '01'
         ID 'ACTVT' FIELD '01'.

  IF sy-subrc <> 0.
    MESSAGE e001(00) WITH text-e01 p_vkorg.
  ENDIF.

*.................. Include programs.................................. *
*  INCLUDE yse_ibox_f01.

* INCLUDE yse_ibox_f02.

*  INCLUDE yse_ibox_f03.


*.................. Main program...................................... *
START-OF-SELECTION.

*...................Transaction counter...............................*
  CALL METHOD YCL_STATISTICS=>RECORD_TRANSACTION.

*.. Initialization
*  PERFORM initialization.

*.. Select the relevant records from the 2 custom tables
*.. YSE_IBOX_ITI and YSE_IBOX_HQT
*  PERFORM select_records.

*.. Output the ALV list with selected records
*  PERFORM output_list_recs.

*.. Save application log

*  PERFORM save_application_log.
*Text symbol text£º
*B01:Selection
*E01:Functional location is not country level
*E02:Functional location does not exist
*E03:No authorisation for plant :
*H00:Installation of equipments
*H01:Selected Funct. Loc.  :
*H02:Selected Date from    :
*H11:Equipment
*H12:Street
*H13:Postcode+City
*H14:Name
*P01:Install equipment?
*P02:You are about to install the equipment. Are you sure you want to continue?

*T01:Are you sure you want to process all the equipment's from the output list
*Selection text£º
*P_TPLNR:D       .
*S_DATAB:D       .
*S_EQUNR:D       .
*S_KUNNR:        Sold-to party
*S_PRDHA:D       .
*S_SERNR:D       .
*S_SHIPTO:        Ship-to party
