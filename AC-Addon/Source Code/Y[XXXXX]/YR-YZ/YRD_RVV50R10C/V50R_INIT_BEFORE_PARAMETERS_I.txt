*----------------------------------------------------------------------*
*   INCLUDE V50R_INIT_BEFORE_PARAMETERS_I                              *
*----------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  init_before_parameters_import
*&---------------------------------------------------------------------*
FORM init_before_parameters_import.

DATA: ls_funckey TYPE  smp_dyntxt.                            "n_636512

* Text on push-buttons of selection-screen
* Delivery block
  push01 = text-010.               "alle
  push02 = text-011.               "Liefervorrat
  push03 = text-014.               "keine

* Scenario and Profil
  push11 = text-023.               "Szenarien
  push12 = text-024.               "Listprofile
  push13 = text-015.               "Pflegen Fcode-Profil
  push14 = text-015.               "Pflegen Erlaubte Dialog-FCodes
  push15 = text-015.               "Pflegen Profil Anlegen Lieferung
* push16 = text-019.               "execute (determination of "SP_364965

* Set Icon on selection-screen for due-list-protocol
  MOVE icon_HISTORY TO ls_funckey-icon_id.                  "v_n_636512
  MOVE text-021     TO ls_funckey-icon_text.
  MOVE text-021     TO ls_funckey-quickinfo.
  MOVE ls_funckey   TO sscrfields-functxt_01.               "^_n_636512

* Set global Variables defined on selection screen, Call back
* in include of calling Report RVV50R10A, RVV50R10B, RVV50R10C,...
  PERFORM tabstrip_set_01.

* Get all delivery blocks relevant for collective processing and
* optimize interval
  PERFORM optimize_lifsp TABLES st_lifsp
                         USING  space 2.

* Default of shipping point from set/get-memory
  IF st_vstel[] IS INITIAL.
    GET PARAMETER ID 'VST' FIELD gs_vstel_range-low.
    IF NOT gs_vstel_range-low IS INITIAL.
      gs_vstel_range-high   = space.
      gs_vstel_range-sign   = 'I'.
      IF gs_vstel_range-low CA '*+'.                        "v_n_639607
        gs_vstel_range-option = 'CP'.
      ELSE.
        gs_vstel_range-option = 'EQ'.
      ENDIF.                                                "^_n_639607
      APPEND  gs_vstel_range TO st_vstel.
    ENDIF.
  ENDIF.

  PERFORM restrictions_set.                                "v_SP_364965

  IF sy-batch IS INITIAL.                                     "n_550266
    IMPORT
          gt_vbsk        TO gt_vbsk
          gx_list_profil TO gx_list_profil
    FROM SHARED BUFFER           indx(vl)
    ID                        sy-uname.
  ENDIF.                                                      "n_550266


  IF gx_list_profil-user_variant IS INITIAL.

*   If no selection variant is used, do here the same, what is done by
*   report basis between "initialization" and "at selection screen
*   output":
*   fill parameters from given listprofil

*   parameter p001 will be redetermiend by report basis. it works here
*   only as global flag for form list_profil_set_to___parameter.
    p001 = 'X'.        "use list_profil = yes
    PERFORM list_profil_set_to___parameter CHANGING gx_list_profil.

  ELSE.
*   Do not set parameters, as they will be set in the next step of
*   Report Basis.
*   gx_list-profil will be filled from parameters after selection
*   variant import at selection screen output
    clear gx_list_profil.

  ENDIF.

ENDFORM.                    " init_before_parameters_import
                                                           "^_SP_364965

FORM restrictions_set.                                     "v_SP_364965

TYPE-POOLS: sscr.

DATA:
  ls_opt_list                          TYPE sscr_opt_list
*  NAME    LIKE RSRESTRICT-OPTIONLIST,
*  OPTIONS LIKE RSOPTIONS,
, ls_ass                               TYPE sscr_ass
*  KIND    LIKE RSSCR-KIND,            " A(ll) B(lock) S(elect-Option)
*  NAME    LIKE RSRESTRICT-OBJECTNAME, " Blockname, maximal 20
*  SG_MAIN LIKE RSRESTRICT-SIGN,       " (only) I, SPACE = both
*  SG_ADDY LIKE RSRESTRICT-SIGN,       " additional SIGN
*                                      " on multiple selection screen
*  OP_MAIN LIKE RSRESTRICT-OPTIONLIST, " name of option list for
*                                      " main selection screen
*  OP_ADDY LIKE RSRESTRICT-OPTIONLIST, " name of additional option
*                                      " list for multiple selection
*                                      " screen
, lx_restriction                       TYPE sscr_restrict
*  OPT_LIST_TAB TYPE SSCR_OPT_LIST_TAB,
*  ASS_TAB      TYPE SSCR_ASS_TAB,
.

* exit.

  ls_opt_list-name         = 'ST_LEDAT'.
  ls_opt_list-options-bt   = 'X'.
  ls_opt_list-options-eq   = 'X'.
  ls_opt_list-options-le   = 'X'.
  ls_opt_list-options-lt   = 'X'.
  APPEND ls_opt_list TO lx_restriction-opt_list_tab.

  ls_opt_list-name         = 'ST_FCOD1'.
  ls_opt_list-options-eq   = 'X'.
  APPEND ls_opt_list TO lx_restriction-opt_list_tab.

  ls_opt_list-name         = 'ST_FCOD2'.
  ls_opt_list-options-eq   = 'X'.
  APPEND ls_opt_list TO lx_restriction-opt_list_tab.

  ls_ass-kind              = 'S'.
  ls_ass-name              = 'ST_LEDAT'.
  ls_ass-sg_main           = 'I'.
  ls_ass-sg_addy           = 'N'.
  ls_ass-op_main           = 'ST_LEDAT'.
  APPEND ls_ass TO lx_restriction-ass_tab.

  ls_ass-kind              = 'S'.
  ls_ass-name              = 'ST_FCOD1'.
  ls_ass-sg_main           = 'I'.
  ls_ass-sg_addy           = ' '.
  ls_ass-op_main           = 'ST_FCOD1'.
  APPEND ls_ass TO lx_restriction-ass_tab.

  ls_ass-kind              = 'S'.
  ls_ass-name              = 'ST_FCOD2'.
  ls_ass-sg_main           = 'I'.
  ls_ass-sg_addy           = ' '.
  ls_ass-op_main           = 'ST_FCOD2'.
  APPEND ls_ass TO lx_restriction-ass_tab.

  CALL FUNCTION 'SELECT_OPTIONS_RESTRICT'
    EXPORTING
*     PROGRAM                      =
      restriction                  = lx_restriction
*     DB                           = ' '
    EXCEPTIONS
      too_late                     = 1
      repeated                     = 2
      selopt_without_options       = 3
      selopt_without_signs         = 4
      invalid_sign                 = 5
      empty_option_list            = 6
      invalid_kind                 = 7
      repeated_kind_a              = 8
      OTHERS                       = 9
            .
  IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

* Don't show fields of EA-DFP in order screen,
* if the add on package is not active.
  CALL FUNCTION 'GET_R3_EXTENSION_SWITCH'
    EXPORTING
      i_structure_package = 'EA-DFPS'
    IMPORTING
      e_active            = g_active_eadfp
    EXCEPTIONS
      not_existing        = 1
      object_not_existing = 2
      no_extension_object = 3
      OTHERS              = 4.

*  Type the select options fo
   IF g_active_eadfp IS INITIAL.
     reloc     = 'FLAG'.
     reloc_seq = 'FLAG'.
   ELSE.
     reloc     = 'EKKO-RELOC_ID'.
     reloc_seq = 'EKKO-RELOC_SEQ_ID'.
   ENDIF.



ENDFORM.                                                   "^_SP_364965
