*&---------------------------------------------------------------------*
*&  Include           V50R_TM_CTRL_KEY_SEL_OPT_FILL
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  TM_CTRL_KEY_SEL_OPT_FILL
*&---------------------------------------------------------------------*

FORM tm_ctrl_key_sel_opt_fill  USING    iv_p_tms               TYPE shp_vl10_de_sel_ext_tms
                                        ix_select_options      TYPE shp_vl10_select_options
                               CHANGING cx_sel_opt_tm_ctrl_key TYPE shp_tm_ctrl_key_range_t.

  DATA: lo_badi        TYPE REF TO badi_lo_tm_shp,
        lr_range_line  TYPE shp_tm_ctrl_key_range,
        ls_tms_control TYPE tms_c_control,
        lt_tms_control TYPE TABLE OF tms_c_control.

  REFRESH cx_sel_opt_tm_ctrl_key.

  IF iv_p_tms IS INITIAL.
* Select only order without TM control key or with an control key
* without outbound delivery integration

* Read customizing of control keys and create selection lines
    SELECT * FROM tms_c_control INTO TABLE lt_tms_control
                                WHERE od_to_tm_ind <> space.     "n_1736072
    LOOP AT lt_tms_control INTO ls_tms_control.
      lr_range_line-sign   = 'E'.                                "n_1736072
      lr_range_line-option = 'EQ'.                               "n_1736072
      lr_range_line-low = ls_tms_control-tm_ctrl_key.
      APPEND lr_range_line TO cx_sel_opt_tm_ctrl_key.
    ENDLOOP.

  ENDIF.

  GET BADI lo_badi.
  CALL BADI lo_badi->change_vl10_sel_range
    EXPORTING
      iv_sel_ext_tms    = iv_p_tms
      ix_select_options = ix_select_options
    CHANGING
      ct_tm_ctrl_key    = cx_sel_opt_tm_ctrl_key.

ENDFORM.                    " TM_CTRL_KEY_SEL_OPT_FILL
