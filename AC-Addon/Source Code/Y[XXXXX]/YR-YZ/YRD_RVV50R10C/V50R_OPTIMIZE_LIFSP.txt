*----------------------------------------------------------------------*
*   INCLUDE V50R_OPTIMIZE_LIFSP                                        *
*----------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  OPTIMIZE_LIFSP
*&---------------------------------------------------------------------*
FORM OPTIMIZE_LIFSP TABLES CT_LIFSP STRUCTURE SHP_LIFSP_RANGE
                    USING  IF_ACCEPT_INCLUDING
                           IF_MODE.

STATICS ST_TVLS  TYPE SHP_TVLS_T.
DATA    BEGIN OF LT_LIFSP OCCURS 0. INCLUDE STRUCTURE SHP_LIFSP_RANGE.
DATA    END   OF LT_LIFSP.
DATA:   LF_SIGN   LIKE SHP_LIFSP_RANGE-SIGN,
        LF_OPTION LIKE SHP_LIFSP_RANGE-OPTION,
        LF_LOW    LIKE SHP_LIFSP_RANGE-LOW,
        LF_HIGH   LIKE SHP_LIFSP_RANGE-HIGH,
        LF_LINES1 TYPE P,
        LF_LINES2 TYPE P.


  CASE IF_MODE.
   WHEN 1.
*   liefergesperrte Indizes nicht selektieren
    REFRESH ct_lifsp.
    CT_LIFSP-SIGN   = 'E'.                    "Excluding
    ct_lifsp-option = 'NE'.                   "ungleich space
    CT_LIFSP-LOW    = SPACE.                  "Alle liefergesperrten
    CT_LIFSP-HIGH   = SPACE.                  "ablehnen = nicht
    APPEND CT_LIFSP.                          "selektieren
    clear  ct_lifsp.

   WHEN 2.
*  Optimizing

    CALL FUNCTION 'SHP_TVLS_SELECT_01'
         CHANGING   CT_TVLS          = ST_TVLS
         EXCEPTIONS OTHERS           = 1.
    IF SY-SUBRC <> 0.
      REFRESH CT_LIFSP.
      EXIT.
    ENDIF.

*   Negativ-Logik ( Option = 'E')
    PERFORM OPTIMIZE_LIFSP1 TABLES ST_TVLS CT_LIFSP
                            USING    'X' 'E'.
    IF IF_ACCEPT_INCLUDING = 'X'.
*     Positiv-Logik ( Option = 'I')
      PERFORM OPTIMIZE_LIFSP1 TABLES ST_TVLS LT_LIFSP
                              USING    SPACE 'I'.
      IF NOT LT_LIFSP[] IS INITIAL .
        LF_SIGN   = 'I'.
        LF_OPTION = 'EQ'.
        LF_LOW    = SPACE.
        LF_HIGH   = SPACE.
        PERFORM SELECT_OPTION_ADD TABLES   LT_LIFSP
                                  CHANGING LF_SIGN  LF_OPTION
                                           LF_LOW   LF_HIGH.
      ENDIF.
      DESCRIBE TABLE CT_LIFSP LINES LF_LINES1.
      DESCRIBE TABLE LT_LIFSP LINES LF_LINES2.
      IF LF_LINES2 < LF_LINES1.
        CT_LIFSP[] = LT_LIFSP[].
      ENDIF.
    ENDIF.

   WHEN 3.
*  Initialization
    CLEAR   CT_LIFSP.
    REFRESH CT_LIFSP.
  ENDCASE.

ENDFORM.                           "OPTIMIZE_LIFSP
