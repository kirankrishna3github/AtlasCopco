*&---------------------------------------------------------------------*
* PROGRAM ID           : YSE_SDMM_DEL_DOCFLOW_MM                       *
* PROGRAM TITLE        : Program to correct document flow for MM / SD. *
* AUTHOR               : Nanda Sreenivasan   / SAP Support             *
* DATE                 : 16/01/2013                                    *
* DEVELOPMENT ID       :                                               *
* CHANGE REQUEST NUMBER: Incident 28714                                *
* PROGRAM DESCRIPTION  : Program to correct document flow for MM / SD  *
*                        as provided by SAP Support.                   *
*                        ***Program as Provided by SAP****             *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NO.|  DATE    | NAME     |CORRECTION NUMBER| CHANGE REFERENCE # *
*----------------------------------------------------------------------*
************************************************************************

REPORT YSE_SDMM_DEL_STA.













INCLUDE VBLKDATA.






INCLUDE VBLPDATA.






INCLUDE VBUPDATA.






INCLUDE VBUKDATA.






TABLES: T180.













DATA: BEGIN OF LT_LIKP OCCURS 10,






           MANDT LIKE LIKP-MANDT,






           VBELN LIKE LIKP-VBELN,






           VBTYP LIKE LIKP-VBTYP,






      END   OF LT_LIKP.













DATA:    BEGIN OF OLD_VBUP OCCURS 0.






        INCLUDE STRUCTURE VBUPVB.






DATA:    END OF OLD_VBUP.













DATA:    BEGIN OF OLD_VBUK OCCURS 0.






        INCLUDE STRUCTURE VBUKVB.






DATA:    END OF OLD_VBUK.













DATA:    BEGIN OF FLD_VBUP OCCURS 0.






        INCLUDE STRUCTURE DFIES.






DATA:    END OF FLD_VBUP.













DATA:    BEGIN OF FLD_VBUK OCCURS 0.






        INCLUDE STRUCTURE DFIES.






DATA:    END OF FLD_VBUK.













DATA:    CHANGE.













SELECT-OPTIONS: DELIVERY  FOR LIKP-VBELN OBLIGATORY.





PARAMETERS:     P_TEST        DEFAULT 'X'.













IF NOT P_TEST IS INITIAL.






  WRITE:/ 'This is only a test mode, no database update performed.'.





ENDIF.













PERFORM GET_TABLE_STRUCTURE.     "get table structure in internal tables












* put only those documents to lt_likp which are deliveries (LIKP exists)





* and in the specified range.






SELECT * FROM  LIKP  WHERE VBELN IN DELIVERY.





  LT_LIKP-MANDT = LIKP-MANDT.






  LT_LIKP-VBELN = LIKP-VBELN.






  LT_LIKP-VBTYP = LIKP-VBTYP.






  APPEND LT_LIKP.






ENDSELECT.






IF SY-SUBRC NE 0.






  WRITE: / ' No deliveries in selected number range'.





  EXIT.






ENDIF.






LOOP AT lt_likp.






*   Initializing to recalculate status






  PERFORM no_dequeue(sapmv50a) IF FOUND.






  PERFORM lieferungsupdate_extern_init(sapmv50a) IF FOUND.





* IF NOT P_TEST IS INITIAL.






*   PERFORM TRANSAKTION_INIT(SAPMV50A) USING 'VL03' IF FOUND.





* ELSE.






  PERFORM transaktion_init(sapmv50a) USING
 'VL02' IF FOUND.





* ENDIF.






  PERFORM lieferungsupdate_extern_init(sapmv50a) IF FOUND.





  PERFORM synchron(sapmv50a) IF FOUND.






  PERFORM nicht_sperren(sapmv50a) IF FOUND
.





  PERFORM no_messages_update(sapmv50a) IF
FOUND.





  PERFORM aufrufer_transport(sapmv50a) IF
FOUND.





  PERFORM BELEG_DATEN_INIT(SAPMV50A).






  likp-vbeln = lt_likp-vbeln.






  IF LT_LIKP-VBTYP EQ '7'.






    T180-TRVOG = 'D'.






  ELSE.






    T180-TRVOG = '6'.






  ENDIF.













  PERFORM beleg_lesen(sapmv50a).













  PERFORM OLD_STATUS_SAVE.     " save theactual VBUP, VBUK entries












  SORT xlips BY mandt vbeln posnr.






  REFRESH ilips.






  LOOP AT xlips.






    ilips-posnr = xlips-posnr.






    ilips-tabix = sy-tabix.






    APPEND ilips.






  ENDLOOP.













  LOOP AT xlips.






    slips-tabix = sy-tabix.






    slips-tabix = sy-tabix.






    lips = xlips.






     *lips = lips.






    PERFORM lips_referenz_lesen(sapfv50p).






    PERFORM lips_bearbeiten_vorbereiten(sapfv50p).





    PERFORM lips_bearbeiten(sapfv50p).






  ENDLOOP.






  PERFORM XVBUK_PFLEGEN(SAPFV50K).     " recalculate header status





  PERFORM STATUS_COMPARE.  "compare statusbefore and after report












  IF P_TEST IS INITIAL.      "save new status when not in test mode





    PERFORM POSITION_GEWICHTSUPDATE_CHSP(SAPFV50P).





    PERFORM BELEG_SICHERN(SAPMV50A).






    COMMIT WORK.






  ENDIF.






ENDLOOP.






IF CHANGE IS INITIAL.






  WRITE :/ 'nothing to change'.






ENDIF.




















******************************************
******************************





FORM GET_TABLE_STRUCTURE.













*creates internal tables carrying the fieldnames of the database-tables












  CALL FUNCTION 'NAMETAB_GET'






       EXPORTING






            TABNAME             = 'VBUP'






       TABLES






            NAMETAB             = FLD_VBUP






       EXCEPTIONS






            INTERNAL_ERROR      = 1






            TABLE_HAS_NO_FIELDS = 2






            TABLE_NOT_ACTIV     = 3






            NO_TEXTS_FOUND      = 4






            OTHERS              = 5.













  CALL FUNCTION 'NAMETAB_GET'






       EXPORTING






            TABNAME             = 'VBUK'






       TABLES






            NAMETAB             = FLD_VBUK






       EXCEPTIONS






            INTERNAL_ERROR      = 1






            TABLE_HAS_NO_FIELDS = 2






            TABLE_NOT_ACTIV     = 3






            NO_TEXTS_FOUND      = 4






            OTHERS              = 5.













ENDFORM.






******************************************
******************************












******************************************
******************************





FORM OLD_STATUS_SAVE.






* save actual entries of VBUP to be able to write a log on screen





  LOOP AT XVBUP.






    MOVE-CORRESPONDING XVBUP TO OLD_VBUP.






    APPEND OLD_VBUP.






  ENDLOOP.






* save actual entries of VBUK to be able to write a log on screen





  MOVE-CORRESPONDING  XVBUK TO OLD_VBUK.






ENDFORM.






******************************************
******************************












******************************************
******************************





FORM STATUS_COMPARE.













* compare item status






  FIELD-SYMBOLS: <IO>, <IN>,           " item old, item new





                 <HO>, <HN>.           " header old, header new





  LOOP AT XVBUP.






    READ TABLE OLD_VBUP WITH KEY MANDT = VBUP-MANDT
VBELN = VBUP-VBELN
POSNR = VBUP-POSNR.





    IF SY-SUBRC IS INITIAL.






      LOOP AT FLD_VBUP.













        ASSIGN COMPONENT FLD_VBUP-FIELDNAME OF STRUCTURE XVBUP TO <IN>.





      ASSIGN COMPONENT FLD_VBUP-FIELDNAME
OF STRUCTURE OLD_VBUP TO <IO>.












        IF <IO> NE <IN>.






         WRITE :/'Delivery', XVBUP-VBELN,'Item', XVBUP-POSNR, 'Status ',





                  FLD_VBUP-FIELDNAME(8),
'changed from ',





                   <IO>, 'to', <IN>.






          CHANGE = 'X'.






        ENDIF.






      ENDLOOP.






    ENDIF.






  ENDLOOP.













* compare header status













  LOOP AT FLD_VBUK.






    IF NOT FLD_VBUK-FIELDNAME = 'SAPRL'.






      ASSIGN COMPONENT FLD_VBUK-FIELDNAME
OF STRUCTURE XVBUK TO <HN>.





      ASSIGN COMPONENT FLD_VBUK-FIELDNAME
OF STRUCTURE OLD_VBUK TO <HO>.












      IF <HO> NE <HN>.






        WRITE :/ 'Delivery',XVBUK-VBELN, 'Header Status ',





               FLD_VBUK-FIELDNAME(6), 'changed from ', <HO>, 'to', <HN>.





        CHANGE = 'X'.






      ENDIF.






    ENDIF.






  ENDLOOP.






ENDFORM.

*Selection text£º
*P_TEST:        TEST
