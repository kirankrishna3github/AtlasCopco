*&---------------------------------------------------------------------*
*& Report  YTEST_CVM_BACKGROUND_PRINT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  YTEST_CVM_BACKGROUND_PRINT message-id so.

  data spool_number     type rspoid.
  data contents_bin     type soli_tab.
  data print_parameters type pri_params.
  data: valid            type c,
       list_content type solix_tab,
       contents_hex type solix_tab.

*** write a list into spool
**  call function 'GET_PRINT_PARAMETERS'
**    importing
**      out_parameters         = print_parameters
**      valid                  = valid
**    exceptions
**      archive_info_not_found = 1
**      invalid_print_params   = 2
**      invalid_archive_params = 3
**      others                 = 4.
**  if sy-subrc <> 0.
**    message e105 with 'GET_PRINT_PARAMETERS'.
**  elseif valid is initial.
**    return.
**  endif.
**  new-page print on parameters print_parameters no dialog.

  do 100 times.
   write : / 'ZTEST PRINT'.
   enddo.


  new-page print off.

  spool_number = sy-spono.

* you can also send OTF documents from spool with this function
* module. The importing parameter real_type gives you the doc type
* that you have to give to the send interface. The parameter is not
* used here
**  call function 'RSPO_RETURN_SPOOLJOB'
**    exporting
**      rqident              = spool_number
**    tables
**      buffer               = contents_bin
**    exceptions
**      no_such_job          = 1
**      job_contains_no_data = 2
**      selection_empty      = 3
**      no_permission        = 4
**      can_not_access       = 5
**      read_error           = 6
**      type_no_match        = 7
**      others               = 8.

  if sy-subrc <> 0.
    message e105 with 'RSPO_RETURN_SPOOLJOB'.
  endif.

* convert to hex table
  call function 'SO_SOLITAB_TO_SOLIXTAB'
    exporting
      ip_solitab  = contents_bin
    importing
      ep_solixtab = contents_hex.
