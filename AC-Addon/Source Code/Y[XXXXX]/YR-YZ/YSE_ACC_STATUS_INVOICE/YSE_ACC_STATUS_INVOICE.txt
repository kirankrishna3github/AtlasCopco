*&---------------------------------------------------------------------*
*& Report  YSE_ACC_STATUS_INVOICE
*&
*&---------------------------------------------------------------------*
*&                                                                     *
*& AC Connect : Send status '280' for invoiced orders                  *
*&              Send status '260' for cancellations of invoices        *
*&                                                                     *
*&---------------------------------------------------------------------*
*  Author                : Jules Smets
*  Date                  : 09.09.2011
*  Change Request Number : CR
*  Transport request Nr. : CD1K968798
*----------------------------------------------------------------------*
*                                                                      *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD.NR. | DATE       | NAME           | CORRECTION NR. | CHANGE REF. *
*----------------------------------------------------------------------*
* MOD-001 | xx.xx.201x | x              | CD1K9xxxxx     | CRxxxx      *
*----------------------------------------------------------------------*

************************************************************************

REPORT  yse_acc_status_invoice.

* Tables
TABLES: yse_sd_acc_log,
        vbak,
        vbfa,
        vbrk.

* Types
TYPES: BEGIN OF ty_log,
         vbeln     TYPE vbeln_va,
         posnr     TYPE posnr,
         erdat     TYPE erdat,
         erzet     TYPE erzet,
       END OF ty_log.

TYPES: BEGIN OF ty_inv,
         vbeln     TYPE vbeln_va,
         posnr     TYPE posnr,
         vbeln_i   TYPE vbeln_vf,
         posnr_i   TYPE posnr,
         fkimg     TYPE fkimg,
       END OF ty_inv.

* Internal table with selected Orders
DATA: gt_log       TYPE STANDARD TABLE OF ty_log.

* Internal table with Orders (status 260)
DATA: gt_log_260   TYPE STANDARD TABLE OF ty_log
                        WITH HEADER LINE.

* Internal table with Orders (status 280)
DATA: gt_log_280   TYPE HASHED TABLE OF ty_log
                        WITH UNIQUE KEY vbeln posnr
                        WITH HEADER LINE.

* Internal table with selected Invoices (Initial selection)
DATA: gt_inv_i     TYPE STANDARD TABLE OF ty_inv.

* Internal table with selected Invoices
DATA: gt_inv       TYPE HASHED TABLE OF ty_inv
                        WITH UNIQUE KEY vbeln posnr
                        WITH HEADER LINE.

* General data fields
DATA: gv_text      TYPE char80,
      gv_inv       TYPE xfeld,
      gv_tstamp1   TYPE tzntstmps,
      gv_tstamp2   TYPE tzntstmps,
      gv_ystat     TYPE ynstat.

* Constants
CONSTANTS: c_260   TYPE ynstat  VALUE '260',
           c_280   TYPE ynstat  VALUE '280',
           c_m     TYPE vbtyp   VALUE 'M',
           c_x     TYPE xfeld   VALUE 'X'.

* Selections
SELECTION-SCREEN  BEGIN OF BLOCK sel  WITH FRAME  TITLE text-s01.
SELECT-OPTIONS: s_vbeln FOR yse_sd_acc_log-vbeln.
SELECTION-SCREEN  END OF BLOCK sel.


*&---------------------------------------------------------------------*
*&  Main program                                                       *
*&---------------------------------------------------------------------*
START-OF-SELECTION.

* Select data
  PERFORM select_data.

* Check anything selected
  IF gt_log_260[] IS INITIAL.
    MESSAGE ID 'YSE_GENERAL' TYPE 'S' NUMBER '000'
            WITH 'No orders selected'(e01).
    EXIT.
  ENDIF.

* Process data
  PERFORM process_data.


*&---------------------------------------------------------------------*
*&  Forms                                                              *
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  SELECT_DATA
*&---------------------------------------------------------------------*
*       Select data
*----------------------------------------------------------------------*
FORM select_data .

* Progress indicator
  IF sy-batch IS INITIAL.
    gv_text = 'Data is being selected'(i01).
    CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
      EXPORTING
        text = gv_text.
  ENDIF.

* Select orders with status 260
  SELECT vbeln posnr erdat erzet
         INTO TABLE gt_log_260
         FROM yse_sd_acc_log
         WHERE vbeln IN s_vbeln
           AND ystat =  c_260.

  CHECK NOT gt_log_260[] IS INITIAL.
  SORT gt_log_260 BY vbeln posnr erdat DESCENDING erzet DESCENDING.
  DELETE ADJACENT DUPLICATES FROM gt_log_260
         COMPARING vbeln posnr.

* Select orders with status 280
  SELECT vbeln posnr erdat erzet
         INTO TABLE gt_log
         FROM yse_sd_acc_log
         FOR ALL ENTRIES IN gt_log_260
         WHERE vbeln = gt_log_260-vbeln
           AND posnr = gt_log_260-posnr
           AND ystat = c_280.

  SORT gt_log BY vbeln posnr erdat DESCENDING erzet DESCENDING.
  DELETE ADJACENT DUPLICATES FROM gt_log
         COMPARING vbeln posnr.
  gt_log_280[] = gt_log[].

* Select invoiced orders
  SELECT f~vbelv f~posnv f~vbeln f~posnn p~fkimg
         INTO TABLE gt_inv_i
         FROM vbfa AS f
         INNER JOIN vbrk AS h
                         ON f~vbeln = h~vbeln
         INNER JOIN vbrp AS p
                         ON f~vbeln = p~vbeln AND
                            f~posnn = p~posnr
         FOR ALL ENTRIES IN gt_log_260
         WHERE f~vbelv   =  gt_log_260-vbeln
           AND f~posnv   =  gt_log_260-posnr
           AND f~vbtyp_n =  c_m
           AND h~fksto   NE c_x.

  SORT gt_inv_i BY vbeln posnr vbeln_i DESCENDING posnr_i DESCENDING.
  DELETE ADJACENT DUPLICATES FROM gt_inv_i
         COMPARING vbeln posnr.
  gt_inv[] = gt_inv_i[].

ENDFORM.                    " SELECT_DATA

*&---------------------------------------------------------------------*
*&      Form  PROCESS_DATA
*&---------------------------------------------------------------------*
*       Process data
*----------------------------------------------------------------------*
FORM process_data .

  LOOP AT gt_log_260.

*   Progress indicator
    IF sy-batch IS INITIAL.
      gv_text = 'Order &/& is being processed'(i02).
      REPLACE '&' WITH gt_log_260-vbeln INTO gv_text.
      REPLACE '&' WITH gt_log_260-posnr INTO gv_text.
      CONDENSE gv_text.
      CALL FUNCTION 'SAPGUI_PROGRESS_INDICATOR'
        EXPORTING
          text = gv_text.
    ENDIF.

    CLEAR: gt_inv,
           gt_log_280,
           gv_inv,
           gv_tstamp1,
           gv_tstamp2,
           gv_ystat.

*   Get timestamp for status 260
    PERFORM get_timestamp USING gt_log_260-erdat
                                gt_log_260-erzet
                                gv_tstamp1.

*   Check if order is invoiced
    READ TABLE gt_inv WITH TABLE KEY vbeln = gt_log_260-vbeln
                                     posnr = gt_log_260-posnr.
    IF sy-subrc = 0.
      gv_inv = 'X'.
    ENDIF.

*   Check if status 280 exists
    READ TABLE gt_log_280 WITH TABLE KEY vbeln = gt_log_260-vbeln
                                         posnr = gt_log_260-posnr.
    IF sy-subrc = 0.
*     Get timestamp for status 280
      PERFORM get_timestamp USING gt_log_280-erdat
                                  gt_log_280-erzet
                                  gv_tstamp2.
    ELSE.
      IF gv_inv IS INITIAL.
        CONTINUE.
      ENDIF.
    ENDIF.

*   Compare timestamps
    IF gv_inv IS INITIAL.
*     Cancel invoice
      IF gv_tstamp1 GE gv_tstamp2.
        CONTINUE.
      ELSE.
        gv_ystat = c_260.
      ENDIF.
    ELSE.
*     Invoice
      IF gv_tstamp2 GE gv_tstamp1.
        CONTINUE.
      ELSE.
        gv_ystat = c_280.
      ENDIF.
    ENDIF.

*   Send status 280 to AC Connect
    CALL FUNCTION 'YSE_ACC_SD_STATUS_UPDATE'
      EXPORTING
        im_vbeln  = gt_log_260-vbeln
        im_posnr  = gt_log_260-posnr
        im_status = gv_ystat
        im_quan   = gt_inv-fkimg
        im_delta  = gt_inv-fkimg.

  ENDLOOP.

ENDFORM.                    " PROCESS_DATA

*&---------------------------------------------------------------------*
*&      Form  GET_TIMESTAMP
*&---------------------------------------------------------------------*
*       Get timestamp (Date/Time)
*----------------------------------------------------------------------*
*      -->P_DATE   : Date
*      -->P_TIME   : Time
*      -->P_TSTAMP : Timestamp
*----------------------------------------------------------------------*
FORM get_timestamp  USING    p_date
                             p_time
                             p_tstamp.

  CALL FUNCTION 'CONVERT_INTO_TIMESTAMP'
    EXPORTING
      i_datlo     = p_date
      i_timlo     = p_time
*      I_TZONE     = SY-ZONLO
    IMPORTING
      e_timestamp = p_tstamp.

ENDFORM.                    " GET_TIMESTAMP

*Text symbol text£º
*E01:No orders selected
*I01:Data is being selected
*I02:Order &/& is being processed

*S01:Selection
*Selection text£º
*S_VBELN:D       .
