*&---------------------------------------------------------------------*
*&  Include           YSE_JP_SEVENTH_FUN_01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Form  SET_HEADER
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM SET_HEADER .
  ls_head-1 = text-d01.
  ls_head-2 = text-d02.
  ls_head-3 = text-d03.
  ls_head-4 = text-d04.
  ls_head-5 = text-d05.
  ls_head-6 = text-d06.

  IF rb_list IS NOT INITIAL. " If choose the SAP LIST DISPLAY
    WRITE: ls_head-1, 20 ls_head-2, 50 ls_head-3,70 ls_head-4, 90 ls_head-5, 110 ls_head-6.
  ENDIF.

ENDFORM.                    " SET_HEADER
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_DATA .
SELECT  equi~equnr "<- source fields from database table
        equi~erdat
        equi~warpl
        equi~eqtyp
        equi~matnr
        equi~sernr
        mara~prdha
   FROM equi
   INNER JOIN  mara
   ON equi~matnr = mara~matnr
   INTO  TABLE lt_equi
  WHERE  equi~equnr IN s_equnr
       AND mara~prdha IN s_prdha
       AND equi~matnr IN s_matnr.


IF lt_equi IS NOT INITIAL.
  SELECT  equnr
          spras
          eqktx
    FROM eqkt
    INTO TABLE lt_eqkt
    FOR ALL ENTRIES IN lt_equi
    WHERE  equnr = lt_equi-equnr.
ENDIF.

IF lt_equi IS NOT INITIAL.
  SELECT  equz~equnr
          equz~iloan
          swerk
    FROM equz
    INNER JOIN iloa
    ON iloa~iloan = equz~iloan
    INTO TABLE lt_equz
    FOR ALL ENTRIES IN lt_equi
    WHERE  equnr = lt_equi-equnr
      AND swerk IN s_swerk.
ENDIF.
ENDFORM.                    " GET_DATA
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_RESULT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM DISPLAY_RESULT .
IF rb_list IS NOT INITIAL. " If choose the SAP LIST DISPLAY


  IF s_equnr-low IS NOT INITIAL AND lt_equi IS NOT INITIAL.
    LOOP AT lt_equi INTO  ls_equi.
      READ TABLE lt_eqkt INTO  ls_eqkt WITH KEY equnr = ls_equi-equnr.
      READ TABLE  lt_equz INTO ls_equz WITH KEY equnr = ls_equi-equnr.
      IF sy-subrc = 0.

       IF cb_chan is NOT INITIAL AND LS_EQUZ-swerk = s_werk2-low.
*          ls_equi-swerk = 'AFRA'.
          " 1. BDC
          " 2. FM
          " 3. BAPI
*          PERFORM CHANG_MAIN_PLAN.
**          1. BDc

          CLEAR bdcdata_wa.
          bdcdata_wa-program  = 'SAPMIEQ0'.
          bdcdata_wa-dynpro   = '0100'.
          bdcdata_wa-dynbegin = 'X'.
          APPEND bdcdata_wa TO bdcdata_tab.

          CLEAR bdcdata_wa.
          bdcdata_wa-fnam = 'BDC_CURSOR'.
          bdcdata_wa-fval = 'RM63E-EQUNR'.
          APPEND bdcdata_wa TO bdcdata_tab.


          CLEAR bdcdata_wa.
          bdcdata_wa-fnam = 'BDC_OKCODE'.
          bdcdata_wa-fval = '/00'.
          APPEND bdcdata_wa TO bdcdata_tab.

          CLEAR bdcdata_wa.
          bdcdata_wa-fnam = 'RM63E-EQUNR'.
          bdcdata_wa-fval = ls_equi-equnr.
          APPEND bdcdata_wa TO bdcdata_tab.

          CLEAR bdcdata_wa.
          bdcdata_wa-program  = 'SAPMIEQ0'.
          bdcdata_wa-dynpro   = '0101'.
          bdcdata_wa-dynbegin = 'X'.
          APPEND bdcdata_wa TO bdcdata_tab.

         CLEAR bdcdata_wa.
          bdcdata_wa-fnam = 'BDC_OKCODE'.
          bdcdata_wa-fval = '=T\02'.
          APPEND bdcdata_wa TO bdcdata_tab.

          CLEAR bdcdata_wa.
          bdcdata_wa-program  = 'SAPMIEQ0'.
          bdcdata_wa-dynpro   = '0101'.
          bdcdata_wa-dynbegin = 'X'.
          APPEND bdcdata_wa TO bdcdata_tab.

         CLEAR bdcdata_wa.
          bdcdata_wa-fnam = 'BDC_OKCODE'.
          bdcdata_wa-fval = '=BU'.
          APPEND bdcdata_wa TO bdcdata_tab.

          CLEAR bdcdata_wa.
          bdcdata_wa-fnam = 'BDC_CURSOR'.
          bdcdata_wa-fval = 'ITOB-SWERK'.
          APPEND bdcdata_wa TO bdcdata_tab.


          CLEAR bdcdata_wa.
          bdcdata_wa-fnam = 'ITOB-SWERK'.
          bdcdata_wa-fval = s_werk2-high.
          APPEND bdcdata_wa TO bdcdata_tab.

          opt-dismode = 'A'.
          opt-defsize = 'X'.

          CALL TRANSACTION 'IE02' USING bdcdata_tab OPTIONS FROM opt.
          REFRESH: bdcdata_tab.
        ELSE.
          ls_equi-swerk = LS_EQUZ-swerk.
        ENDIF.

        WRITE: / ls_equi-equnr  UNDER ls_head-1,
                 ls_eqkt-eqktx  UNDER ls_head-2,
                 ls_equi-swerk  UNDER ls_head-3,
                 ls_equi-sernr  UNDER ls_head-4,
                 ls_equi-matnr  UNDER ls_head-5,
                 ls_equi-prdha  UNDER ls_head-6.
      ENDIF.

    ENDLOOP.
  ELSE.
    WRITE: / 'EQUIPMENT ', s_equnr , 'DOES NOT EXIST'.
  ENDIF.

ELSEIF rb_alv IS NOT INITIAL. " If choose the SAP ALV DISPLAY
*  1. Prepare the data:
*  2. Set the fieldcat
*  3. set ALV Layout
*  4. other set of ALV
*  5. Call FM to display ALV
  DATA:
     lv_linecnt  TYPE i,
     ls_fieldcat TYPE slis_fieldcat_alv.

  LOOP AT lt_equi INTO  ls_equi.

    READ TABLE  lt_equz INTO ls_equz WITH KEY equnr = ls_equi-equnr.
    IF sy-subrc = 0.
      IF cb_chan IS NOT INITIAL AND ls_equz-swerk = 'ADEA'.
        ls_equi-swerk = 'Jan'.
*          PERFORM CHANG_MAIN_PLAN.
      ELSE.
        ls_equi-swerk = ls_equz-swerk.
      ENDIF.

      MODIFY lt_equi FROM ls_equi.
    ENDIF.

  ENDLOOP.



  CLEAR lv_linecnt.
* Equipment Number
  CLEAR ls_fieldcat.
  lv_linecnt = lv_linecnt + 1.
  ls_fieldcat-col_pos = lv_linecnt.
  ls_fieldcat-fieldname = 'EQUNR'.
*  ls_fieldcat-seltext_s = text-d01.
*  ls_fieldcat-seltext_m = text-d01.
  ls_fieldcat-hotspot = gc_x.
  ls_fieldcat-ref_fieldname =  'EQUNR'.
  ls_fieldcat-ref_tabname   = 'EQUI'.
  ls_fieldcat-fix_column = gc_x.
  APPEND ls_fieldcat TO gt_fieldcat.

* Equipment serial number
  CLEAR ls_fieldcat.
  lv_linecnt = lv_linecnt + 1.
  ls_fieldcat-col_pos = lv_linecnt.
  ls_fieldcat-fieldname = 'SERNR'.
  ls_fieldcat-ref_fieldname =  'SERNR'.
  ls_fieldcat-ref_tabname   = 'EQUI'.
  ls_fieldcat-fix_column = gc_x.
  APPEND ls_fieldcat TO gt_fieldcat.

* Equipment material number
  CLEAR ls_fieldcat.
  lv_linecnt = lv_linecnt + 1.
  ls_fieldcat-col_pos = lv_linecnt.
  ls_fieldcat-fieldname = 'MATNR'.
  ls_fieldcat-hotspot = gc_x.
  ls_fieldcat-ref_fieldname =  'MATNR'.
  ls_fieldcat-ref_tabname   = 'EQUI'.
  ls_fieldcat-fix_column = gc_x.
  APPEND ls_fieldcat TO gt_fieldcat.

* Equipment maintenace plant
  CLEAR ls_fieldcat.
  lv_linecnt = lv_linecnt + 1.
  ls_fieldcat-col_pos = lv_linecnt.
  ls_fieldcat-fieldname = 'SWERK'.
  ls_fieldcat-ref_fieldname =  'SWERK'.
  ls_fieldcat-ref_tabname   = 'ILOA'.
  ls_fieldcat-fix_column = gc_x.
  APPEND ls_fieldcat TO gt_fieldcat.


*  Equipment product hierarchy
  CLEAR ls_fieldcat.
  lv_linecnt = lv_linecnt + 1.
  ls_fieldcat-col_pos = lv_linecnt.
  ls_fieldcat-fieldname = 'PRDHA'.
  ls_fieldcat-ref_fieldname =  'PRDHA'.
  ls_fieldcat-ref_tabname   = 'MARA'.
  ls_fieldcat-fix_column = gc_x.
  APPEND ls_fieldcat TO gt_fieldcat.



  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
   EXPORTING
*     I_INTERFACE_CHECK                 = ' '
*     I_BYPASSING_BUFFER                = ' '
*     I_BUFFER_ACTIVE                   = ' '
     i_callback_program                = 'YSE_JP_SIX'
*     I_CALLBACK_PF_STATUS_SET          = ' '
     i_callback_user_command           = 'USER_COMMAND'
*     I_CALLBACK_TOP_OF_PAGE            = ' '
*     I_CALLBACK_HTML_TOP_OF_PAGE       = ' '
*     I_CALLBACK_HTML_END_OF_LIST       = ' '
*     I_STRUCTURE_NAME                  =
*     I_BACKGROUND_ID                   = ' '
*     I_GRID_TITLE                      =
*     I_GRID_SETTINGS                   =
*     IS_LAYOUT                         =
     it_fieldcat                       = gt_fieldcat
*     IT_EXCLUDING                      =
*     IT_SPECIAL_GROUPS                 =
*     IT_SORT                           =
*     IT_FILTER                         =
*     IS_SEL_HIDE                       =
*     I_DEFAULT                         = 'X'
*     I_SAVE                            = ' '
*     IS_VARIANT                        =
*     IT_EVENTS                         =
*     IT_EVENT_EXIT                     =
*     IS_PRINT                          =
*     IS_REPREP_ID                      =
*     I_SCREEN_START_COLUMN             = 0
*     I_SCREEN_START_LINE               = 0
*     I_SCREEN_END_COLUMN               = 0
*     I_SCREEN_END_LINE                 = 0
*     I_HTML_HEIGHT_TOP                 = 0
*     I_HTML_HEIGHT_END                 = 0
*     IT_ALV_GRAPHICS                   =
*     IT_HYPERLINK                      =
*     IT_ADD_FIELDCAT                   =
*     IT_EXCEPT_QINFO                   =
*     IR_SALV_FULLSCREEN_ADAPTER        =
*   IMPORTING
*     E_EXIT_CAUSED_BY_CALLER           =
*     ES_EXIT_CAUSED_BY_USER            =
    TABLES
      t_outtab                          = lt_equi
*   EXCEPTIONS
*     PROGRAM_ERROR                     = 1
*     OTHERS                            = 2
            .
  IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.


ENDIF.


ENDFORM.                    " DISPLAY_RESULT



*&---------------------------------------------------------------------*
*&      Form  ALV_OTHERS_SET
*&---------------------------------------------------------------------*
*       USER_COMMAND
*----------------------------------------------------------------------*
FORM user_command USING u_ucomm     LIKE sy-ucomm           "#EC CALLED
                        p_selfield  TYPE slis_selfield.

  CASE u_ucomm.
    WHEN '&IC1'.        " SAP standard code for double-clicking
      IF p_selfield-fieldname = 'EQUNR'.
        IF p_selfield-value IS NOT INITIAL.
          SET PARAMETER ID 'EQN' FIELD p_selfield-value.
          CALL TRANSACTION 'IE03' AND SKIP FIRST SCREEN.
        ENDIF.
      ELSEIF p_selfield-fieldname = 'MATNR'.
        SET PARAMETER ID 'MAT' FIELD p_selfield-value.
        CALL TRANSACTION 'MM03' AND SKIP FIRST SCREEN.
      ENDIF.


    WHEN OTHERS.
  ENDCASE.

*  CASE u_ucomm.
*WHEN '&IC1'.        " SAP standard code for double-clicking
*      IF p_selfield-fieldname = 'MATNR'.
*        IF p_selfield-value IS NOT INITIAL.
*          SET PARAMETER ID 'MAT' FIELD p_selfield-value.
*          CALL TRANSACTION 'MM03' AND SKIP FIRST SCREEN.
*           ENDIF.
*      ENDIF.
*         WHEN OTHERS.
*  ENDCASE.
ENDFORM.                    " USER_COMMAND
