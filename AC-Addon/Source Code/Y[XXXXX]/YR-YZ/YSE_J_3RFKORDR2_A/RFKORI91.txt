***INCLUDE RFKORI91 .

*NCLUDE RFKORI00.

*-----------------------------------------------------------------------
*       FORM DEBI_KRED_ANZAHL
*-----------------------------------------------------------------------
FORM debi_kred_anzahl.
  CLEAR xmultk.
  CLEAR save_koar1.
  CLEAR save_kont1.
  LOOP AT hextract.
    IF sy-tabix = 1.
      save_koar1 =  hextract-koar1.
      save_kont1 =  hextract-kont1.
    ELSE.
      IF save_koar1 NE hextract-koar1
      OR save_kont1 NE hextract-kont1.
        xmultk = 'X'.
      ENDIF.
    ENDIF.
  ENDLOOP.
ENDFORM.                    "DEBI_KRED_ANZAHL

*-----------------------------------------------------------------------
*       FORM DEBI_KRED_DATEN
*-----------------------------------------------------------------------
FORM debi_kred_daten.
  IF bkorm-koart = 'D'.
    hdkoar2    = bkorm-koart.
    hdkont2    = bkorm-konto.
    save_koart = bkorm-koart.
    save_kunnr = bkorm-konto.
    save_bukrs = bkorm-bukrs.
    Perform Pruefen_hkna1.                                      "1996349
    If Xvorh ne 'X'.                                            "1996349
       Perform Read_kna1.
    IF sy-subrc NE 0.
      xkausg = 'X'.
    ENDIF.
       Perform Save_kna1.                                       "1996349
    Endif.                                                      "1996349
    Perform Pruefen_hknb1.                                      "1996349
    If Xvorh ne 'X'.                                            "1996349
    PERFORM read_knb1.
    IF sy-subrc NE 0.
      xkausg = 'X'.
    ENDIF.
       Perform Save_knb1.                                       "1996349
    Endif.                                                      "1996349
  ENDIF.
  IF bkorm-koart = 'K'.
    hdkoar2    = bkorm-koart.
    hdkont2    = bkorm-konto.
    save_koart = bkorm-koart.
    save_lifnr = bkorm-konto.
    save_bukrs = bkorm-bukrs.
    Perform Pruefen_hlfa1.                                      "1996349
    If Xvorh ne 'X'.                                            "1996349
       Perform Read_lfa1.
    IF sy-subrc NE 0.
      xkausg = 'X'.
    ENDIF.
       Perform Save_lfa1.                                       "1996349
    Endif.                                                      "1996349
    Perform Pruefen_hlfb1.                                      "1996349
    If Xvorh ne 'X'.                                            "1996349
    PERFORM read_lfb1.
    IF sy-subrc NE 0.
      xkausg = 'X'.
    ENDIF.
       Perform Save_lfb1.                                       "1996349
    Endif.                                                      "1996349
  ENDIF.
ENDFORM.                    "DEBI_KRED_DATEN

*-----------------------------------------------------------------------
*       FORM DEBI_KRED_IM_BELEG
*-----------------------------------------------------------------------
FORM debi_kred_im_beleg.

  LOOP AT hextractd
    WHERE xbearb = ' '.
    CLEAR hextract.

    hextract-bukrs = hextractd-bukrs.
    hextract-koar1 = hextractd-koar1.
    hextract-kont1 = hextractd-kont1.
    hextract-empf1 = hextractd-empf1.
    hextract-belnr = hextractd-belnr.
    hextract-gjahr = hextractd-gjahr.
    hextract-buzei = hextractd-buzei.

    APPEND hextract.
    hextractd-xbearb = 'X'.
    MODIFY hextractd.
  ENDLOOP.

  LOOP AT hextractk
    WHERE xbearb = ' '.
    CLEAR hextract.

    hextract-bukrs = hextractk-bukrs.
    hextract-koar1 = hextractk-koar1.
    hextract-kont1 = hextractk-kont1.
    hextract-empf1 = hextractk-empf1.
    hextract-belnr = hextractk-belnr.
    hextract-gjahr = hextractk-gjahr.
    hextract-buzei = hextractk-buzei.

    APPEND hextract.
    hextractk-xbearb = 'X'.
    MODIFY hextractk.
  ENDLOOP.

ENDFORM.                    "DEBI_KRED_IM_BELEG

*-----------------------------------------------------------------------
*       FORM DEBI_KRED_ZUORDNEN_2
*-----------------------------------------------------------------------
FORM debi_kred_zuordnen_2.
  CLEAR save2_lifnr.
  LOOP AT hextractk.
    save_lifnr = hextractk-kont1.
    PERFORM pruefen_hlfa1.        "note 370984
    IF xvorh NE 'X'.              "note 370984
      PERFORM read_lfa1.          "note 370984
      IF sy-subrc NE 0.           "note 370984
        xkausg = 'X'.             "note 370984
      ENDIF.                      "note 370984
      PERFORM save_lfa1.          "note 370984
    ENDIF.                        "note 370984
    save_bukrs = hdbukrs.
    PERFORM pruefen_hlfb1.
    IF xvorh NE 'X'.
      PERFORM read_lfb1.
      IF sy-subrc NE 0.
        xkausg = 'X'.
      ENDIF.
      PERFORM save_lfb1.
    ENDIF.

    IF  NOT hlfa1-kunnr IS INITIAL
    AND NOT hlfb1-xverr IS INITIAL.
      save_kunnr = hlfa1-kunnr.                                 "1926702
      PERFORM pruefen_hknb1.
      IF xvorh NE 'X'.
        PERFORM read_knb1.
        IF sy-subrc NE 0.
          xkausg = 'X'.
        ENDIF.
        PERFORM save_knb1.
      ENDIF.
      IF NOT hlfb1-xverr IS INITIAL.
        LOOP AT hextractd
          WHERE kont1 = hlfa1-kunnr.
          IF hextractd-xbearb IS INITIAL.
            CLEAR hextract.
            hextract-bukrs = hextractd-bukrs.
            hextract-koar1 = hextractd-koar1.
            hextract-kont1 = hextractd-kont1.
            hextract-empf1 = hextractd-empf1.
            hextract-belnr = hextractd-belnr.
            hextract-gjahr = hextractd-gjahr.
            hextract-buzei = hextractd-buzei.

            hextract-koar2 = hextractk-koar1.
            hextract-kont2 = hextractk-kont1.
            hextract-empf2 = hextractk-empf1.
            APPEND hextract.
            hextractd-xbearb = 'X'.
            MODIFY hextractd.
          ENDIF.
          save_koar1 = hextractd-koar1.
          save_kont1 = hextractd-kont1.
          save_empf1 = hextractd-empf1.
        ENDLOOP.
      ENDIF.
      IF sy-subrc = '0'.
        IF save_lifnr NE save2_lifnr.
          save2_lifnr = save_lifnr.
          countk = countk - 1.
        ENDIF.
        CLEAR hextract.

        hextract-bukrs = hextractk-bukrs.
        hextract-koar2 = hextractk-koar1.
        hextract-kont2 = hextractk-kont1.
        hextract-empf2 = hextractk-empf1.
        hextract-belnr = hextractk-belnr.
        hextract-gjahr = hextractk-gjahr.
        hextract-buzei = hextractk-buzei.

        hextract-koar1 = save_koar1.
        hextract-kont1 = save_kont1.
        hextract-empf1 = save_empf1.
        APPEND hextract.
        hextractk-xbearb = 'X'.
        MODIFY hextractk.
      ENDIF.
    ENDIF.
  ENDLOOP.

ENDFORM.                    "DEBI_KRED_ZUORDNEN_2

*-----------------------------------------------------------------------
*       FORM EXTRACT
*-----------------------------------------------------------------------
FORM extract.
  EXTRACT daten.
  xextra = 'X'.
ENDFORM.                    "EXTRACT

*-----------------------------------------------------------------------
*       FORM EXTRACT_BELEG
*-----------------------------------------------------------------------
FORM extract_beleg.
*-------Headerfelder f¨¹r Extract----------------------------------------
  hdbukrs       = save_bukrs.
  hdkoart       = '   '.
  hdkonto       = '   '.
  hdbelgj(4)    = bkpf-gjahr.
  hdbelgj+4(10) = bkpf-belnr.
  hdusnam       = sy-uname.
  hddatum       = sy-datum.
  hduzeit       = sy-uzeit.

*-------Datenfelder f¨¹r Extract-----------------------------------------
  extract(1)    = 'X'.
  dabelnr       = bkpf-belnr.
  dagjahr       = bkpf-gjahr.
  paramet       = hparame.
  IF NOT t048-xbukr IS INITIAL.
    dabbukr = save_bbukr.
  ELSE.
    dabbukr = '    '.
  ENDIF.
  xbkorm        = ' '.

  PERFORM extract.
ENDFORM.                    "EXTRACT_BELEG

*-----------------------------------------------------------------------
*       FORM EXTRACT_FELDER_BKORM
*-----------------------------------------------------------------------
FORM extract_felder_bkorm.
*-------Headerfelder f¨¹r Extract----------------------------------------
  hdbukrs       = bkorm-bukrs.
  hdkoart       = bkorm-koart.
  hdkonto       = bkorm-konto.
  hdbelgj(4)    = bkorm-gjahr.
  hdbelgj+4(10) = bkorm-belnr.
  hdusnam       = bkorm-usnam.
  hddatum       = bkorm-datum.
  hduzeit       = bkorm-uzeit.

*-------Datenfelder f¨¹r Extract-----------------------------------------
  extract(1)    = 'X'.
  dabelnr       = bkorm-belnr.
  dagjahr       = bkorm-gjahr.
  daerldt       = bkorm-erldt.
  datum01       = bkorm-param(8).
  datum02       = bkorm-param+8(8).
  paramet(64)   = bkorm-param+16(64).
  davsid        = bkorm-avsid.
  dabbukr       = bkorm-bbukr.
  dacajon       = bkorm-cajon.
  xbkorm        = 'X'.

  IF sortid = '1'
  OR sortid = '2'
  OR sortid = '3'.
    CLEAR save_bukrs.
    CLEAR save_belnr.
    CLEAR save_gjahr.
    IF t048-xbukr IS INITIAL.
      save_bukrs = bkorm-bukrs.
    ELSE.
      save_bukrs = bkorm-bbukr.
    ENDIF.
    save_belnr = bkorm-belnr.
    save_gjahr = bkorm-gjahr.
    CLEAR sy-subrc.
    PERFORM read_bkpf.
    IF sy-subrc NE 0.
      CLEAR fimsg.
      fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
      fimsg-msgno = '547'.
      fimsg-msgv1 = bkorm-bukrs.
      fimsg-msgv2 = bkorm-belnr.
      fimsg-msgv3 = bkorm-gjahr.
      PERFORM message_append.
      bkorm-erldt = sy-datum.
      UPDATE bkorm.
      IF sy-subrc NE 0.
        CLEAR hbkormkey.
        CLEAR herdata.
        hbkormkey-bukrs = bkorm-bukrs.
        hbkormkey-koart = bkorm-koart.
        hbkormkey-konto = bkorm-konto.
        hbkormkey-belnr = bkorm-belnr.
        hbkormkey-gjahr = bkorm-gjahr.
        CONDENSE hbkormkey.
        herdata-usnam = bkorm-usnam.
        herdata-datum = bkorm-datum.
        herdata-uzeit = bkorm-uzeit.
        MESSAGE e546 WITH 'BKORM' bkorm-event hbkormkey herdata.
      ENDIF.
      xkausg = 'X'.
      CLEAR hbkormkey.
      CLEAR herdata.
      hbkormkey-bukrs = bkorm-bukrs.
      hbkormkey-koart = bkorm-koart.
      hbkormkey-konto = bkorm-konto.
      hbkormkey-belnr = bkorm-belnr.
      hbkormkey-gjahr = bkorm-gjahr.
      CONDENSE hbkormkey.
      herdata-usnam = bkorm-usnam.
      herdata-datum = bkorm-datum.
      herdata-uzeit = bkorm-uzeit.
      CLEAR fimsg.
      fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
      fimsg-msgno = '548'.
      fimsg-msgv1 = bkorm-event.
      fimsg-msgv2 = hbkormkey.
      fimsg-msgv3 = herdata.
      PERFORM message_append.
    ELSE.

      CLEAR xkausg.
      CASE sortid.
        WHEN '1'.
          PERFORM extract_vorbereitung_1.
        WHEN '2'.
          PERFORM extract_vorbereitung_2.
        WHEN '3'.
          PERFORM extract_vorbereitung_3.
      ENDCASE.
    ENDIF.
    IF xkausg IS INITIAL.
      CLEAR sy-subrc.
      CLEAR save4_koart.
      CLEAR save3_konto.
      CLEAR hdempfg.
      LOOP AT hextract.
        IF t048-xbukr IS INITIAL.
          CHECK hextract-bukrs = hdbukrs.
        ENDIF.
        IF save4_koart NE hextract-koar1
        OR save3_konto NE hextract-kont1.
          IF hextract-koar1 = 'D'.
            save_koart = hextract-koar1.
            save_kunnr = hextract-kont1.
            save_bukrs = hextract-bukrs.
            PERFORM pruefen_hkna1.
            IF xvorh NE 'X'.
              PERFORM read_kna1.
              IF sy-subrc NE 0.
                xkausg = 'X'.
              ENDIF.
              PERFORM save_kna1.
            ENDIF.
            PERFORM pruefen_hknb1.
            IF xvorh NE 'X'.
              PERFORM read_knb1.
              IF sy-subrc NE 0.
                xkausg = 'X'.
              ENDIF.
              PERFORM save_knb1.
            ENDIF.
            IF  NOT kna1-xcpdk IS INITIAL
            AND     sortid     NE '2'.
              LOOP AT hbsec
                WHERE bukrs = hextract-bukrs
                AND   belnr = hextract-belnr
                AND   gjahr = hextract-gjahr.
*               WHERE EMPFG = HEXTRACT-EMPF1.
                bsec = hbsec.
                hdempfg = bsec-empfg.
                EXIT.
              ENDLOOP.
            ELSE.
              CLEAR bsec.
              CLEAR hdempfg.
            ENDIF.
            IF  sortid NE '2'.
              PERFORM sortierung USING 'K' 'K' 'X'.
            ELSE.
              PERFORM sortierung USING 'K' 'K' ' '.
            ENDIF.
          ENDIF.
          IF hextract-koar1 = 'K'.
            save_koart = hextract-koar1.
            save_lifnr = hextract-kont1.
            save_bukrs = hextract-bukrs.
            PERFORM pruefen_hlfa1.
            IF xvorh NE 'X'.
              PERFORM read_lfa1.
              IF sy-subrc NE 0.
                xkausg = 'X'.
              ENDIF.
              PERFORM save_lfa1.
            ENDIF.
            PERFORM pruefen_hlfb1.
            IF xvorh NE 'X'.
              PERFORM read_lfb1.
              IF sy-subrc NE 0.
                xkausg = 'X'.
              ENDIF.
              PERFORM save_lfb1.
            ENDIF.
            IF NOT lfa1-xcpdk IS INITIAL
            AND     sortid     NE '2'.
              LOOP AT hbsec
                WHERE bukrs = hextract-bukrs
                AND   belnr = hextract-belnr
                AND   gjahr = hextract-gjahr.
*               WHERE EMPFG = HEXTRACT-EMPF1.
                bsec = hbsec.
                hdempfg = bsec-empfg.
                EXIT.
              ENDLOOP.
            ELSE.
              CLEAR bsec.
              CLEAR hdempfg.
            ENDIF.
            IF  sortid NE '2'.
              PERFORM sortierung USING 'K' 'K' 'X'.
            ELSE.
              PERFORM sortierung USING 'K' 'K' ' '.
            ENDIF.
          ENDIF.
          save4_koart  =  hextract-koar1.
          save3_konto  =  hextract-kont1.
        ENDIF.
*       IF XKAUSG IS INITIAL.
        LOOP AT hbseg
          WHERE bukrs = hextract-bukrs
          AND   belnr = hextract-belnr
          AND   gjahr = hextract-gjahr
          AND   buzei = hextract-buzei.
          CLEAR bseg.
          MOVE-CORRESPONDING hbseg TO bseg.
          hdkoar2 = hextract-koar1.
          hdkont2 = hextract-kont1.
          PERFORM extract.
*         CLEAR  SORT1.
*         CLEAR  SORT2.
*         CLEAR  SORT3.
*         CASE SAVE_SORT.
*           WHEN '1'.
*             SORT1 = HBSEG-GJAHR.
*             SORT2 = HBSEG-BELNR.
*             HDKOAR2 = HEXTRACT-KOAR1.
*             HDKONT2 = HEXTRACT-KONT1.
*             PERFORM EXTRACT.
*           WHEN '2'.
*             SORT1 = HEXTRACT-KOAR1.
*             SORT2 = HEXTRACT-KONT1.
*             HDKOAR2 = HEXTRACT-KOAR1.
*             HDKONT2 = HEXTRACT-KONT1.
*             PERFORM EXTRACT.
*           WHEN OTHERS.
*         ENDCASE.
        ENDLOOP.
*       ELSE.
*         CLEAR HBKORMKEY.
*         CLEAR HERDATA.
*         CLEAR HKOKON.
*         HBKORMKEY-BUKRS = BKORM-BUKRS.
*         HBKORMKEY-KOART = BKORM-KOART.
*         HBKORMKEY-KONTO = BKORM-KONTO.
*         HBKORMKEY-BELNR = BKORM-BELNR.
*         HBKORMKEY-GJAHR = BKORM-GJAHR.
*         CONDENSE HBKORMKEY.
*         HERDATA-USNAM = BKORM-USNAM.
*         HERDATA-DATUM = BKORM-DATUM.
*         HERDATA-UZEIT = BKORM-UZEIT.
*         HDKOAR2 = HEXTRACT-KOAR1.
*         HDKONT2 = HEXTRACT-KONT1.
*         HKOKON-KOART = HDKOAR2.
*         HKOKON-KONTO = HDKONT2.
*         CLEAR FIMSG.
*         FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
*         FIMSG-MSGNO = '827'.
*         FIMSG-MSGV1 = BKORM-EVENT.
*         FIMSG-MSGV2 = HBKORMKEY.
*         FIMSG-MSGV3 = HERDATA.
*         FIMSG-MSGV4 = HKOKON.
*         PERFORM MESSAGE_APPEND.
*         IF BKORM-ERLDT IS INITIAL.
*           BKORM-ERLDT = SY-DATUM.
*           UPDATE BKORM.
*         ENDIF.
*       ENDIF.
      ENDLOOP.
      IF sy-subrc NE 0.
        CLEAR fimsg.
        fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
        fimsg-msgno = '552'.
        fimsg-msgv1 = bkorm-bukrs.
        fimsg-msgv2 = bkorm-belnr.
        fimsg-msgv3 = bkorm-gjahr.
        PERFORM message_append.
        bkorm-erldt = sy-datum.
        UPDATE bkorm.
        IF sy-subrc NE 0.
          CLEAR hbkormkey.
          CLEAR herdata.
          hbkormkey-bukrs = bkorm-bukrs.
          hbkormkey-koart = bkorm-koart.
          hbkormkey-konto = bkorm-konto.
          hbkormkey-belnr = bkorm-belnr.
          hbkormkey-gjahr = bkorm-gjahr.
          CONDENSE hbkormkey.
          herdata-usnam = bkorm-usnam.
          herdata-datum = bkorm-datum.
          herdata-uzeit = bkorm-uzeit.
          MESSAGE e546 WITH 'BKORM' bkorm-event hbkormkey herdata.
        ENDIF.
        CLEAR hbkormkey.
        CLEAR herdata.
        hbkormkey-bukrs = bkorm-bukrs.
        hbkormkey-koart = bkorm-koart.
        hbkormkey-konto = bkorm-konto.
        hbkormkey-belnr = bkorm-belnr.
        hbkormkey-gjahr = bkorm-gjahr.
        CONDENSE hbkormkey.
        herdata-usnam = bkorm-usnam.
        herdata-datum = bkorm-datum.
        herdata-uzeit = bkorm-uzeit.
        CLEAR fimsg.
        fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
        fimsg-msgno = '548'.
        fimsg-msgv1 = bkorm-event.
        fimsg-msgv2 = hbkormkey.
        fimsg-msgv3 = herdata.
        PERFORM message_append.
      ENDIF.
    ELSE.
      bkorm-erldt = sy-datum.
      UPDATE bkorm.
      IF sy-subrc NE 0.
        CLEAR hbkormkey.
        CLEAR herdata.
        hbkormkey-bukrs = bkorm-bukrs.
        hbkormkey-koart = bkorm-koart.
        hbkormkey-konto = bkorm-konto.
        hbkormkey-belnr = bkorm-belnr.
        hbkormkey-gjahr = bkorm-gjahr.
        CONDENSE hbkormkey.
        herdata-usnam = bkorm-usnam.
        herdata-datum = bkorm-datum.
        herdata-uzeit = bkorm-uzeit.
        MESSAGE e546 WITH 'BKORM' bkorm-event hbkormkey herdata.
      ENDIF.
      CLEAR hbkormkey.
      CLEAR herdata.
      hbkormkey-bukrs = bkorm-bukrs.
      hbkormkey-koart = bkorm-koart.
      hbkormkey-konto = bkorm-konto.
      hbkormkey-belnr = bkorm-belnr.
      hbkormkey-gjahr = bkorm-gjahr.
      CONDENSE hbkormkey.
      herdata-usnam = bkorm-usnam.
      herdata-datum = bkorm-datum.
      herdata-uzeit = bkorm-uzeit.
      CLEAR fimsg.
      fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
      fimsg-msgno = '548'.
      fimsg-msgv1 = bkorm-event.
      fimsg-msgv2 = hbkormkey.
      fimsg-msgv3 = herdata.
      PERFORM message_append.
    ENDIF.
  ENDIF.

  IF sortid = '4'.
    CLEAR save_bukrs.
    CLEAR save_belnr.
    CLEAR save_gjahr.
    IF t048-xbukr IS INITIAL.
      save_bukrs = bkorm-bukrs.
    ELSE.
      save_bukrs = bkorm-bbukr.
    ENDIF.
    save_belnr = bkorm-belnr.
    save_gjahr = bkorm-gjahr.
    CLEAR sy-subrc.
    PERFORM read_bkpf.
    IF sy-subrc NE 0.
      CLEAR fimsg.
      fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
      fimsg-msgno = '547'.
      fimsg-msgv1 = bkorm-bukrs.
      fimsg-msgv2 = bkorm-belnr.
      fimsg-msgv3 = bkorm-gjahr.
      PERFORM message_append.
      bkorm-erldt = sy-datum.
      UPDATE bkorm.
      IF sy-subrc NE 0.
        CLEAR hbkormkey.
        CLEAR herdata.
        hbkormkey-bukrs = bkorm-bukrs.
        hbkormkey-koart = bkorm-koart.
        hbkormkey-konto = bkorm-konto.
        hbkormkey-belnr = bkorm-belnr.
        hbkormkey-gjahr = bkorm-gjahr.
        CONDENSE hbkormkey.
        herdata-usnam = bkorm-usnam.
        herdata-datum = bkorm-datum.
        herdata-uzeit = bkorm-uzeit.
        MESSAGE e546 WITH 'BKORM' bkorm-event hbkormkey herdata.
      ENDIF.
      xkausg = 'X'.
      CLEAR hbkormkey.
      CLEAR herdata.
      hbkormkey-bukrs = bkorm-bukrs.
      hbkormkey-koart = bkorm-koart.
      hbkormkey-konto = bkorm-konto.
      hbkormkey-belnr = bkorm-belnr.
      hbkormkey-gjahr = bkorm-gjahr.
      CONDENSE hbkormkey.
      herdata-usnam = bkorm-usnam.
      herdata-datum = bkorm-datum.
      herdata-uzeit = bkorm-uzeit.
      CLEAR fimsg.
      fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
      fimsg-msgno = '548'.
      fimsg-msgv1 = bkorm-event.
      fimsg-msgv2 = hbkormkey.
      fimsg-msgv3 = herdata.
      PERFORM message_append.
    ELSE.
      PERFORM sortierung USING 'K' 'B' ' '.
      PERFORM extract.
*     CASE SAVE_SORT.
*       WHEN '1'.
*         PERFORM EXTRACT.
*       WHEN '2'.
*         SORT1(4)    = HBKPF-GJAHR.
*         SORT1+4(16) = HBKPF-XBLNR.
*         PERFORM EXTRACT.
*       WHEN OTHERS.
*     ENDCASE.
    ENDIF.
  ENDIF.

  IF sortid = '5'.
    CLEAR save_bukrs.
    CLEAR save_belnr.
    CLEAR save_gjahr.
    save_bukrs = bkorm-bukrs.
    save_belnr = bkorm-belnr.
    save_gjahr = bkorm-gjahr.
    CLEAR sy-subrc.
    PERFORM read_bkpf.
    IF sy-subrc NE 0.
      CLEAR fimsg.
      fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
      fimsg-msgno = '547'.
      fimsg-msgv1 = bkorm-bukrs.
      fimsg-msgv2 = bkorm-belnr.
      fimsg-msgv3 = bkorm-gjahr.
      PERFORM message_append.
      bkorm-erldt = sy-datum.
      UPDATE bkorm.
      IF sy-subrc NE 0.
        CLEAR hbkormkey.
        CLEAR herdata.
        hbkormkey-bukrs = bkorm-bukrs.
        hbkormkey-koart = bkorm-koart.
        hbkormkey-konto = bkorm-konto.
        hbkormkey-belnr = bkorm-belnr.
        hbkormkey-gjahr = bkorm-gjahr.
        CONDENSE hbkormkey.
        herdata-usnam = bkorm-usnam.
        herdata-datum = bkorm-datum.
        herdata-uzeit = bkorm-uzeit.
        MESSAGE e546 WITH 'BKORM' bkorm-event hbkormkey herdata.
      ENDIF.
      xkausg = 'X'.
      CLEAR hbkormkey.
      CLEAR herdata.
      hbkormkey-bukrs = bkorm-bukrs.
      hbkormkey-koart = bkorm-koart.
      hbkormkey-konto = bkorm-konto.
      hbkormkey-belnr = bkorm-belnr.
      hbkormkey-gjahr = bkorm-gjahr.
      CONDENSE hbkormkey.
      herdata-usnam = bkorm-usnam.
      herdata-datum = bkorm-datum.
      herdata-uzeit = bkorm-uzeit.
      CLEAR fimsg.
      fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
      fimsg-msgno = '548'.
      fimsg-msgv1 = bkorm-event.
      fimsg-msgv2 = hbkormkey.
      fimsg-msgv3 = herdata.
      PERFORM message_append.
    ELSE.
      save_idpos  = bkorm-param+16(1).
      save2_repid = bkorm-param+18(8).
      CLEAR xkausg.
      PERFORM extract_vorbereitung_4.
    ENDIF.
    IF xkausg IS INITIAL.
*     LOOP AT HEXTRACT.
      save_koart = 'D'.
      save_kunnr = save_konto.
      save_bukrs = save_bukrs.
      PERFORM pruefen_hkna1.
      PERFORM pruefen_hknb1.
      PERFORM sortierung USING 'K' 'K' ' '.
      hdkoar2 = 'D'.
      hdkont2 = save_konto.
      sort1 = bkorm-param+16(1).
*       IF XKAUSG IS INITIAL.
      LOOP AT hbseg.
*         WHERE BUKRS = HEXTRACT-BUKRS
*         AND   BELNR = HEXTRACT-BELNR
*         AND   GJAHR = HEXTRACT-GJAHR
*         AND   BUZEI = HEXTRACT-BUZEI.
        CLEAR bseg.
        MOVE-CORRESPONDING hbseg TO bseg.
        PERFORM extract.
*         CLEAR  SORT1.
*         CLEAR  SORT2.
*         CLEAR  SORT3.
*         CASE SAVE_SORT.
*           WHEN '1'.
*             SORT1 = BKORM-PARAM+16(1).
*             HDKOAR2 = 'D'.
*             HDKONT2 = SAVE_KONTO.
*             PERFORM EXTRACT.
*           WHEN '2'.
*             SORT1 = BKORM-PARAM+16(1).
*             SORT2 = 'D'.
*             SORT3 = SAVE_KONTO.
*             HDKOAR2 = 'D'.
*             HDKONT2 = SAVE_KONTO.
*             PERFORM EXTRACT.
*           WHEN OTHERS.
*         ENDCASE.
      ENDLOOP.
*     ENDLOOP.
      IF sy-subrc NE 0.
        CLEAR fimsg.
        fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
        fimsg-msgno = '552'.
        fimsg-msgv1 = bkorm-bukrs.
        fimsg-msgv2 = bkorm-belnr.
        fimsg-msgv3 = bkorm-gjahr.
        PERFORM message_append.
        bkorm-erldt = sy-datum.
        UPDATE bkorm.
        IF sy-subrc NE 0.
          CLEAR hbkormkey.
          CLEAR herdata.
          hbkormkey-bukrs = bkorm-bukrs.
          hbkormkey-koart = bkorm-koart.
          hbkormkey-konto = bkorm-konto.
          hbkormkey-belnr = bkorm-belnr.
          hbkormkey-gjahr = bkorm-gjahr.
          CONDENSE hbkormkey.
          herdata-usnam = bkorm-usnam.
          herdata-datum = bkorm-datum.
          herdata-uzeit = bkorm-uzeit.
          MESSAGE e546 WITH 'BKORM' bkorm-event hbkormkey herdata.
        ENDIF.
        CLEAR hbkormkey.
        CLEAR herdata.
        hbkormkey-bukrs = bkorm-bukrs.
        hbkormkey-koart = bkorm-koart.
        hbkormkey-konto = bkorm-konto.
        hbkormkey-belnr = bkorm-belnr.
        hbkormkey-gjahr = bkorm-gjahr.
        CONDENSE hbkormkey.
        herdata-usnam = bkorm-usnam.
        herdata-datum = bkorm-datum.
        herdata-uzeit = bkorm-uzeit.
        CLEAR fimsg.
        fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
        fimsg-msgno = '548'.
        fimsg-msgv1 = bkorm-event.
        fimsg-msgv2 = hbkormkey.
        fimsg-msgv3 = herdata.
        PERFORM message_append.
      ENDIF.
*     ELSE.
**    Message in Sortierroutine
*       BKORM-ERLDT = SY-DATUM.
*       UPDATE BKORM.
*       IF SY-SUBRC NE 0.
*         CLEAR HBKORMKEY.
*         CLEAR HERDATA.
*         HBKORMKEY-BUKRS = BKORM-BUKRS.
*         HBKORMKEY-KOART = BKORM-KOART.
*         HBKORMKEY-KONTO = BKORM-KONTO.
*         HBKORMKEY-BELNR = BKORM-BELNR.
*         HBKORMKEY-GJAHR = BKORM-GJAHR.
*         CONDENSE HBKORMKEY.
*         HERDATA-USNAM = BKORM-USNAM.
*         HERDATA-DATUM = BKORM-DATUM.
*         HERDATA-UZEIT = BKORM-UZEIT.
*         MESSAGE E546 WITH 'BKORM' BKORM-EVENT HBKORMKEY HERDATA.
*       ENDIF.
*       CLEAR HBKORMKEY.
*       CLEAR HERDATA.
*       HBKORMKEY-BUKRS = BKORM-BUKRS.
*       HBKORMKEY-KOART = BKORM-KOART.
*       HBKORMKEY-KONTO = BKORM-KONTO.
*       HBKORMKEY-BELNR = BKORM-BELNR.
*       HBKORMKEY-GJAHR = BKORM-GJAHR.
*       CONDENSE HBKORMKEY.
*       HERDATA-USNAM = BKORM-USNAM.
*       HERDATA-DATUM = BKORM-DATUM.
*       HERDATA-UZEIT = BKORM-UZEIT.
*       CLEAR FIMSG.
*       FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
*       FIMSG-MSGNO = '548'.
*       FIMSG-MSGV1 = BKORM-EVENT.
*       FIMSG-MSGV2 = HBKORMKEY.
*       FIMSG-MSGV3 = HERDATA.
*       PERFORM MESSAGE_APPEND.
*     endif.
    ELSE.
*     Message in Analyseroutine
      bkorm-erldt = sy-datum.
      UPDATE bkorm.
      IF sy-subrc NE 0.
        CLEAR hbkormkey.
        CLEAR herdata.
        hbkormkey-bukrs = bkorm-bukrs.
        hbkormkey-koart = bkorm-koart.
        hbkormkey-konto = bkorm-konto.
        hbkormkey-belnr = bkorm-belnr.
        hbkormkey-gjahr = bkorm-gjahr.
        CONDENSE hbkormkey.
        herdata-usnam = bkorm-usnam.
        herdata-datum = bkorm-datum.
        herdata-uzeit = bkorm-uzeit.
        MESSAGE e546 WITH 'BKORM' bkorm-event hbkormkey herdata.
      ENDIF.
      CLEAR hbkormkey.
      CLEAR herdata.
      hbkormkey-bukrs = bkorm-bukrs.
      hbkormkey-koart = bkorm-koart.
      hbkormkey-konto = bkorm-konto.
      hbkormkey-belnr = bkorm-belnr.
      hbkormkey-gjahr = bkorm-gjahr.
      CONDENSE hbkormkey.
      herdata-usnam = bkorm-usnam.
      herdata-datum = bkorm-datum.
      herdata-uzeit = bkorm-uzeit.
      CLEAR fimsg.
      fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
      fimsg-msgno = '548'.
      fimsg-msgv1 = bkorm-event.
      fimsg-msgv2 = hbkormkey.
      fimsg-msgv3 = herdata.
      PERFORM message_append.
    ENDIF.
  ENDIF.

  IF sortid = '6'.
    IF bkorm-cajon IS INITIAL.
      bkorm-cajon = bkorm-gjahr.
      bkorm-gjahr = '0000'.
      dacajon     = bkorm-cajon.
    ENDIF.
    CHECK bkorm-cajon IN hcajon.
    hdkonto       = bkorm-cajon.
    SELECT SINGLE * FROM  tcj_documents
           WHERE  comp_code       = bkorm-bukrs
           AND    cajo_number     = bkorm-cajon
           AND    fisc_year       = bkorm-gjahr
           AND    posting_number  = bkorm-belnr.

    CLEAR bkpf.
    bkpf-belnr       = tcj_documents-posting_number.
    bkpf-bukrs       = tcj_documents-comp_code.
    bkpf-gjahr       = tcj_documents-fisc_year.
    bkpf-budat       = tcj_documents-posting_date.
    bkpf-bldat       = tcj_documents-document_date.
    bkpf-waers       = tcj_documents-currency.
    bkpf-awtyp       = 'CAJO'.
    bkpf-awkey(10)   = tcj_documents-posting_number.
    bkpf-awkey+10(4) = tcj_documents-cajo_number.
    bkpf-awkey+14(4) = tcj_documents-comp_code.

    PERFORM sortierung USING 'K' 'B' ' '.
    PERFORM extract.
  ENDIF.
ENDFORM.                    "EXTRACT_FELDER_BKORM

*-----------------------------------------------------------------------
*       FORM EXTRACT_SPLIT_1
*-----------------------------------------------------------------------
FORM extract_split_1.
  CLEAR   hextract.
  REFRESH hextract.
  CLEAR   hextractd.
  REFRESH hextractd.
  CLEAR   hextractk.
  REFRESH hextractk.
  CLEAR countd.
  CLEAR countk.
  CLEAR save2_kunnr.
  CLEAR save2_lifnr.

* CLEAR XNZGZ.
* PERFORM INIT_BELEG_SPLIT.

  LOOP AT yaccnt.
    LOOP AT postab
      WHERE bukrs = yaccnt-bukrs
      AND   koart = yaccnt-koart
      AND   konto = yaccnt-ktnra.
      IF yaccnt-koart = 'D'.


*-------Debitoren in Beleg----------------------------------------------
        CLEAR hextractd.
        MOVE postab-bukrs TO hextractd-bukrs.
        MOVE postab-koart TO hextractd-koar1.
        MOVE postab-konto TO hextractd-kont1.
*     MOVE HBSEC-EMPFG TO HEXTRACTD-EMPF1.
        MOVE postab-belnr TO hextractd-belnr.
        MOVE postab-gjahr TO hextractd-gjahr.
        MOVE postab-buzei TO hextractd-buzei.
        COLLECT hextractd.

      ENDIF.
      IF yaccnt-koart = 'K'.

*-------Kreditoren in Beleg---------------------------------------------
        CLEAR hextractk.
        MOVE postab-bukrs TO hextractk-bukrs.
        MOVE postab-koart TO hextractk-koar1.
        MOVE postab-konto TO hextractk-kont1.
*     MOVE HBSEC-EMPFG TO HEXTRACTK-EMPF1.
        MOVE postab-belnr TO hextractk-belnr.
        MOVE postab-gjahr TO hextractk-gjahr.
        MOVE postab-buzei TO hextractk-buzei.
        COLLECT hextractk.

      ENDIF.
    ENDLOOP.
  ENDLOOP.

  CLEAR save2_kunnr.
  CLEAR save2_lifnr.
ENDFORM.                    "EXTRACT_SPLIT_1

*-----------------------------------------------------------------------
*       FORM EXTRACT_SPLIT_2
*-----------------------------------------------------------------------
FORM extract_split_2.
  CLEAR   hextract.
  REFRESH hextract.
  CLEAR   hextractd.
  REFRESH hextractd.
  CLEAR   hextractk.
  REFRESH hextractk.
* PERFORM INIT_BELEG_SPLIT_2.

*-------Adressdaten lesen ----------------------------------------------
  LOOP AT hbseg.
    IF hbseg-koart = 'D'.
*     MOVE HBSEG-BUZEI TO HBUZEI-BUZEI.
*     APPEND HBUZEI.
*     COUNTZ = COUNTZ + 1.

      save_kunnr = hbseg-kunnr.
      PERFORM pruefen_hkna1.
      IF xvorh NE 'X'.
        PERFORM read_kna1.
        IF sy-subrc NE 0.
          xkausg = 'X'.
        ENDIF.
        PERFORM save_kna1.
      ENDIF.
      save_bukrs = hbseg-bukrs.
      PERFORM pruefen_hknb1.
      IF xvorh NE 'X'.
        PERFORM read_knb1.
        IF sy-subrc NE 0.
          xkausg = 'X'.
        ENDIF.
        PERFORM save_knb1.
      ENDIF.
    ENDIF.
    IF hbseg-koart = 'K'.
*     MOVE HBSEG-BUZEI TO HBUZEI-BUZEI.
*     APPEND HBUZEI.
*     COUNTZ = COUNTZ + 1.

      save_lifnr = hbseg-lifnr.
      PERFORM pruefen_hlfa1.
      IF xvorh NE 'X'.
        PERFORM read_lfa1.
        IF sy-subrc NE 0.
          xkausg = 'X'.
        ENDIF.
        PERFORM save_lfa1.
      ENDIF.
      save_bukrs = hbseg-bukrs.
      PERFORM pruefen_hlfb1.
      IF xvorh NE 'X'.
        PERFORM read_lfb1.
        IF sy-subrc NE 0.
          xkausg = 'X'.
        ENDIF.
        PERFORM save_lfb1.
      ENDIF.
    ENDIF.
*-------Wechselzeilen merken--------------------------------------------

*-------Debitoren in Beleg ---------------------------------------------
    IF hbseg-koart = 'D'.
      IF hbseg-umsks = 'W'.
        CLEAR hextractd.
        MOVE hbseg-bukrs TO hextractd-bukrs.
        MOVE hbseg-koart TO hextractd-koar1.
        MOVE hbseg-kunnr TO hextractd-kont1.
        MOVE hbsec-empfg TO hextractd-empf1.
        MOVE hbseg-belnr TO hextractd-belnr.
        MOVE hbseg-gjahr TO hextractd-gjahr.
        MOVE hbseg-buzei TO hextractd-buzei.
        COLLECT hextractd.
      ENDIF.
    ENDIF.
*-------Kreditoren in Beleg---------------------------------------------
    IF hbseg-koart = 'K'.
      IF hbseg-umsks = 'W'.
        CLEAR hextractk.
        MOVE hbseg-bukrs TO hextractk-bukrs.
        MOVE hbseg-koart TO hextractk-koar1.
        MOVE hbseg-lifnr TO hextractk-kont1.
        MOVE hbsec-empfg TO hextractk-empf1.
        MOVE hbseg-belnr TO hextractk-belnr.
        MOVE hbseg-gjahr TO hextractk-gjahr.
        MOVE hbseg-buzei TO hextractk-buzei.
        COLLECT hextractd.
      ENDIF.
    ENDIF.

*-------Spesenzeilen zusammenfassen und merken--------------------------
    IF hbseg-buzid = 'D'
    OR hbseg-buzid = 'I'
    OR hbseg-buzid = 'W'.
      IF xbegin IS INITIAL.
        xbegin = 'X'.
        CLEAR   hbuzei2.
        REFRESH hbuzei2.
      ENDIF.
    ENDIF.
    IF NOT xbegin IS INITIAL.
      IF hbseg-buzid = 'D'.
        CLEAR hbuzei2.
        MOVE-CORRESPONDING hbseg TO hbuzei2.
        APPEND hbuzei2.
      ENDIF.
      IF hbseg-buzid = 'I'.
        CLEAR hbuzei2.
        MOVE-CORRESPONDING hbseg TO hbuzei2.
        APPEND hbuzei2.
      ENDIF.
      IF hbseg-buzid = 'W'.
        CLEAR hbuzei2.
        MOVE-CORRESPONDING hbseg TO hbuzei2.
        APPEND hbuzei2.
      ENDIF.
      IF hbseg-buzid = 'S'.
        LOOP AT hbuzei2.
          hbuzei2-koart = hbseg-koart.
          hbuzei2-kunnr = hbseg-kunnr.
          hbuzei2-lifnr = hbseg-lifnr.
          MODIFY hbuzei2.
        ENDLOOP.

        CLEAR hbuzei2.
        MOVE-CORRESPONDING hbseg TO hbuzei2.
        APPEND hbuzei2.

        LOOP AT hbuzei2.
          IF hbuzei2-koart = 'D'.
            CLEAR hextractd.
            MOVE hbuzei2-bukrs TO hextractd-bukrs.
            MOVE hbuzei2-koart TO hextractd-koar1.
            MOVE hbuzei2-kunnr TO hextractd-kont1.
            MOVE hbsec-empfg   TO hextractd-empf1.
            MOVE hbuzei2-belnr TO hextractd-belnr.
            MOVE hbuzei2-gjahr TO hextractd-gjahr.
            MOVE hbuzei2-buzei TO hextractd-buzei.
            COLLECT hextractd.
          ELSE.
            CLEAR hextractk.
            MOVE hbuzei2-bukrs TO hextractk-bukrs.
            MOVE hbuzei2-koart TO hextractk-koar1.
            MOVE hbuzei2-lifnr TO hextractk-kont1.
            MOVE hbsec-empfg   TO hextractk-empf1.
            MOVE hbuzei2-belnr TO hextractk-belnr.
            MOVE hbuzei2-gjahr TO hextractk-gjahr.
            MOVE hbuzei2-buzei TO hextractk-buzei.
            COLLECT hextractk.
          ENDIF.
        ENDLOOP.

        CLEAR xbegin.
      ENDIF.
    ENDIF.
  ENDLOOP.

ENDFORM.                    "EXTRACT_SPLIT_2

*-----------------------------------------------------------------------
*       FORM EXTRACT_SPLIT_3
*-----------------------------------------------------------------------
FORM extract_split_3.
  CLEAR   hextract.
  REFRESH hextract.
  CLEAR   hextractd.
  REFRESH hextractd.
  CLEAR   hextractk.
  REFRESH hextractk.
  CLEAR countd.
  CLEAR countk.
  CLEAR save2_kunnr.
  CLEAR save2_lifnr.

* CLEAR XNZGZ.
* PERFORM INIT_BELEG_SPLIT.

  CLEAR xsel.
  LOOP AT hbseg.
    IF  hbseg-bschl IN hbschl
    AND hbseg-umskz IN humskz.
      xsel = 'X'.
      IF hbseg-koart = 'D'.
*       MOVE HBSEG-BUZEI TO HBUZEI-BUZEI.
*       APPEND HBUZEI.
*       COUNTZ = COUNTZ + 1.

        save_kunnr = hbseg-kunnr.
        IF save_kunnr NE save2_kunnr.
          save2_kunnr = save_kunnr.
          countd = countd + 1.
        ENDIF.
        PERFORM pruefen_hkna1.
        IF xvorh NE 'X'.
          PERFORM read_kna1.
          IF sy-subrc NE 0.
            xkausg = 'X'.
          ENDIF.
          PERFORM save_kna1.
        ENDIF.
        save_bukrs = hbseg-bukrs.
        PERFORM pruefen_hknb1.
        IF xvorh NE 'X'.
          PERFORM read_knb1.
          IF sy-subrc NE 0.
            xkausg = 'X'.
          ENDIF.
          PERFORM save_knb1.
        ENDIF.
        IF NOT kna1-xcpdk IS INITIAL.
          save_bukrs = hbseg-bukrs.
          save_belnr = hbseg-belnr.
          save_gjahr = hbseg-gjahr.
          save_buzei = hbseg-buzei.
          IF bkpf-bstat = 'V'.
            PERFORM read_vbsec.
          ELSE.
            PERFORM read_bsec.
          ENDIF.
          IF sy-subrc NE 0.
            xkausg = 'X'.
          ENDIF.
          PERFORM save_bsec.
        ELSE.
          CLEAR hbsec.
        ENDIF.

*-------Debitoren in Beleg----------------------------------------------
        CLEAR hextractd.
        MOVE hbseg-bukrs TO hextractd-bukrs.
        MOVE hbseg-koart TO hextractd-koar1.
        MOVE hbseg-kunnr TO hextractd-kont1.
        MOVE hbsec-empfg TO hextractd-empf1.
        MOVE hbseg-belnr TO hextractd-belnr.
        MOVE hbseg-gjahr TO hextractd-gjahr.
        MOVE hbseg-buzei TO hextractd-buzei.
        COLLECT hextractd.

      ENDIF.
      IF hbseg-koart = 'K'.
*       MOVE HBSEG-BUZEI TO HBUZEI-BUZEI.
*       APPEND HBUZEI.
*       COUNTZ = COUNTZ + 1.

        save_lifnr = hbseg-lifnr.
        IF save_lifnr NE save2_lifnr.
          save2_lifnr = save_lifnr.
          countk = countk + 1.
        ENDIF.
        PERFORM pruefen_hlfa1.
        IF xvorh NE 'X'.
          PERFORM read_lfa1.
          IF sy-subrc NE 0.
            xkausg = 'X'.
          ENDIF.
          PERFORM save_lfa1.
        ENDIF.
        save_bukrs = hbseg-bukrs.
        PERFORM pruefen_hlfb1.
        IF xvorh NE 'X'.
          PERFORM read_lfb1.
          IF sy-subrc NE 0.
            xkausg = 'X'.
          ENDIF.
          PERFORM save_lfb1.
        ENDIF.
        IF NOT lfa1-xcpdk IS INITIAL.
          save_bukrs = hbseg-bukrs.
          save_belnr = hbseg-belnr.
          save_gjahr = hbseg-gjahr.
          save_buzei = hbseg-buzei.
          IF bkpf-bstat = 'V'.
            PERFORM read_vbsec.
          ELSE.
            PERFORM read_bsec.
          ENDIF.
          IF sy-subrc NE 0.
            xkausg = 'X'.
          ENDIF.
          PERFORM save_bsec.
        ELSE.
          CLEAR hbsec.
        ENDIF.

*-------Kreditoren in Beleg---------------------------------------------
        CLEAR hextractk.
        MOVE hbseg-bukrs TO hextractk-bukrs.
        MOVE hbseg-koart TO hextractk-koar1.
        MOVE hbseg-lifnr TO hextractk-kont1.
        MOVE hbsec-empfg TO hextractk-empf1.
        MOVE hbseg-belnr TO hextractk-belnr.
        MOVE hbseg-gjahr TO hextractk-gjahr.
        MOVE hbseg-buzei TO hextractk-buzei.
        COLLECT hextractk.

      ENDIF.
    ENDIF.
  ENDLOOP.

  IF xsel IS INITIAL.
    xkausg = 'X'.
    CLEAR fimsg.
    fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
    fimsg-msgno = '552'.
    fimsg-msgv1 = save_bukrs.
    fimsg-msgv2 = save_belnr.
    fimsg-msgv3 = save_gjahr.
    PERFORM message_append.
  ENDIF.

*-------Konsistenztest ob alle Debi/Kredzeilen zugeordnet---------------
* IF COUNTZ NE 0.
*   PERFORM NICHT_ZUGEORDNETE_ZEILEN.
*   XNZGZ = 'X'.
* ENDIF.

  CLEAR save2_kunnr.
  CLEAR save2_lifnr.
ENDFORM.                    "EXTRACT_SPLIT_3

*-----------------------------------------------------------------------
*       FORM EXTRACT_SPLIT_4
*-----------------------------------------------------------------------
FORM extract_split_4.
  CLEAR save_koart.
  CLEAR save_konto.
* CLEAR RF140-WAERS.
  LOOP AT hbseg.
    CASE tinso-idpos.
      WHEN '1'.
        IF  hbseg-shkzg = 'S'
        AND hbseg-umsks = 'W'
        AND hbseg-koart = 'D'
        AND NOT hbseg-augdt IS INITIAL
        AND NOT hbseg-augbl IS INITIAL.
          save_kunnr = hbseg-kunnr.
          PERFORM pruefen_hkna1.
          IF xvorh NE 'X'.
            PERFORM read_kna1.
            IF sy-subrc NE 0.
              xkausg = 'X'.
            ENDIF.
            PERFORM save_kna1.
          ENDIF.
          save_bukrs = hbseg-bukrs.
          PERFORM pruefen_hknb1.
          IF xvorh NE 'X'.
            PERFORM read_knb1.
            IF sy-subrc NE 0.
              xkausg = 'X'.
            ENDIF.
            PERFORM save_knb1.
          ENDIF.

          IF  NOT save_konto IS INITIAL
          AND save_konto NE hbseg-kunnr.
            CLEAR save_konto.
            xkausg = 'X'.
            CLEAR fimsg.
            fimsg-msort = '    '. fimsg-msgid = 'FB'.
            fimsg-msgty = 'I'.
            fimsg-msgno = '552'.
            fimsg-msgv1 = save_bukrs.
            fimsg-msgv2 = save_belnr.
            fimsg-msgv3 = save_gjahr.
            PERFORM message_append.
            EXIT.
          ELSE.
            save_koart = hbseg-koart.
            save_konto = hbseg-kunnr.
          ENDIF.
        ENDIF.
      WHEN '2'.
        xkausg = 'X'.
        CLEAR fimsg.
        fimsg-msort = '    '. fimsg-msgid = 'FB'.
        fimsg-msgty = 'I'.
        fimsg-msgno = '551'.
        fimsg-msgv1 = save_bukrs.
        fimsg-msgv2 = save_belnr.
        fimsg-msgv3 = save_gjahr.
        PERFORM message_append.
      WHEN  '3'.
        IF  hbseg-koart = 'D'
        AND hbseg-kunnr = tinso-kunnr.
          save_kunnr = hbseg-kunnr.
          PERFORM pruefen_hkna1.
          IF xvorh NE 'X'.
            PERFORM read_kna1.
            IF sy-subrc NE 0.
              xkausg = 'X'.
            ENDIF.
            PERFORM save_kna1.
          ENDIF.
          save_bukrs = hbseg-bukrs.
          PERFORM pruefen_hknb1.
          IF xvorh NE 'X'.
            PERFORM read_knb1.
            IF sy-subrc NE 0.
              xkausg = 'X'.
            ENDIF.
            PERFORM save_knb1.
          ENDIF.

          IF  NOT save_konto IS INITIAL
          AND save_konto NE hbseg-kunnr.
            CLEAR save_konto.
            xkausg = 'X'.
            CLEAR fimsg.
            fimsg-msort = '    '. fimsg-msgid = 'FB'.
            fimsg-msgty = 'I'.
            fimsg-msgno = '553'.
            fimsg-msgv1 = save_bukrs.
            fimsg-msgv2 = save_belnr.
            fimsg-msgv3 = save_gjahr.
            PERFORM message_append.
            EXIT.
          ELSE.
            save_koart = hbseg-koart.
            save_konto = hbseg-kunnr.
          ENDIF.
        ENDIF.
      WHEN OTHERS.
        CLEAR fimsg.
        fimsg-msort = '    '. fimsg-msgid = 'FB'.
        fimsg-msgty = 'I'.
        fimsg-msgno = '551'.
        fimsg-msgv1 = save_bukrs.
        fimsg-msgv2 = save_belnr.
        fimsg-msgv3 = save_gjahr.
        PERFORM message_append.
        xkausg = 'X'.
    ENDCASE.
  ENDLOOP.

ENDFORM.                    "EXTRACT_SPLIT_4

*-----------------------------------------------------------------------
*       FORM EXTRACT_VORBEREITUNG_1
*-----------------------------------------------------------------------
FORM extract_vorbereitung_1.
* CLEAR   RF140.
* CLEAR   COUNTZ.
  CLEAR   hbkpf.
  REFRESH hbkpf.
  CLEAR   hbseg.
  REFRESH hbseg.
* CLEAR   HBUZEI.
* REFRESH HBUZEI.

*-------Beleg einlesen--------------------------------------------------
  IF  NOT save_rindko IS INITIAL
  AND     save_rxbkor IS INITIAL.
    PERFORM read_bkpf.
    IF sy-subrc NE 0.
      CLEAR fimsg.
      fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
      fimsg-msgno = '547'.
      fimsg-msgv1 = save_bukrs.
      fimsg-msgv2 = save_belnr.
      fimsg-msgv3 = save_gjahr.
      PERFORM message_append.
      xkausg = 'X'.
    ENDIF.
  ENDIF.
  IF bkpf-bstat = 'V'
  OR bkpf-bstat = 'W'
  OR bkpf-bstat = 'Z'.
* OR BKPF-BSTAT = 'A'.
    CLEAR fimsg.
    fimsg-msort = '    '. fimsg-msgid = 'FB'.
    fimsg-msgty = 'I'.
    fimsg-msgno = '850'.
    fimsg-msgv1 = bkpf-bstat.
    fimsg-msgv2 = bkpf-bukrs.
    fimsg-msgv3 = bkpf-belnr.
    fimsg-msgv4 = bkpf-gjahr.
    PERFORM message_append.
    xkausg = 'X'.
  ENDIF.
  MOVE-CORRESPONDING bkpf TO hbkpf.
  APPEND hbkpf.
* RF140-WAERS = HBKPF-WAERS.
* PERFORM SAVE_BKPF.

*-------Pr¨¹fen ob buchungskreis¨¹bergreifender Vorgang-------------------
  PERFORM pruefen_bvorg.
* IF NOT SAVE_BVORG IS INITIAL.
*   CLEAR FIMSG.
*   FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
*   FIMSG-MSGNO = '550'.
*   FIMSG-MSGV1 = SAVE_BUKRS.
*   FIMSG-MSGV2 = SAVE_BELNR.
*   FIMSG-MSGV3 = SAVE_GJAHR.
*   FIMSG-MSGV4 = SAVE_BVORG.
*   PERFORM MESSAGE_APPEND.
*   XKAUSG = 'X'.
* ENDIF.
  IF xkausg IS INITIAL.
    REFRESH postab.
    REFRESH yaccnt.

    CALL FUNCTION 'GET_CLEARED_ITEMS'
         EXPORTING
              i_belnr                = save_belnr
              i_bukrs                = save_bukrs
              i_gjahr                = save_gjahr
              i_bvorg                = save_bvorg
*            I_AUGDT                =
*            I_RFZEI                =
*       IMPORTING
*            E_XKDF                 =
*            E_XSKV                 =
         TABLES
              t_items                = postab
              t_accnt                = yaccnt
         EXCEPTIONS
              not_found              = 1
              error_cleared_accounts = 2
              OTHERS                 = 3.
*   IF sy-subrc <> 0.
*     CLEAR fimsg.
*     fimsg-msort = '    '. fimsg-msgid = sy-msgid.
*     fimsg-msgty = 'I'.
*     fimsg-msgno = sy-msgno.
*     fimsg-msgv1 = sy-msgv1.
*     fimsg-msgv2 = sy-msgv2.
*     fimsg-msgv3 = sy-msgv3.
*     fimsg-msgv4 = sy-msgv4.
*     PERFORM message_append.
*     xkausg = 'X'.
*   ENDIF.

    DATA: lt_bseg TYPE fagl_t_bseg.
    CALL FUNCTION 'FAGL_GET_BSEG'
      EXPORTING
        i_bukrs               = save_bukrs
        i_belnr               = save_belnr
        i_gjahr               = save_gjahr
      IMPORTING
        et_bseg               = lt_bseg
      EXCEPTIONS
        OTHERS                = 2.
    IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    LOOP AT lt_bseg INTO bseg
      WHERE augbl NE save_belnr.
      IF bseg-koart = 'D'
      OR bseg-koart = 'K'.
        yaccnt-bukrs = bseg-bukrs.
        yaccnt-koart = bseg-koart.
        IF bseg-koart = 'D'.
          yaccnt-ktnra = bseg-kunnr.
        ELSE.
          yaccnt-ktnra = bseg-lifnr.
        ENDIF.
        COLLECT yaccnt.
        MOVE-CORRESPONDING bseg TO postab.
        IF bseg-koart = 'D'.
          postab-konto = bseg-kunnr.
        ELSE.
          postab-konto = bseg-lifnr.
        ENDIF.
        APPEND postab.
      ENDIF.
    ENDLOOP.
    IF NOT xbvorg IS INITIAL.
      LOOP AT hbvor
        WHERE bukrs NE save_bukrs.
        CLEAR: lt_bseg.
        CALL FUNCTION 'FAGL_GET_BSEG'
          EXPORTING
            i_bukrs               = hbvor-bukrs
            i_belnr               = hbvor-belnr
            i_gjahr               = hbvor-gjahr
          IMPORTING
            et_bseg               = lt_bseg
          EXCEPTIONS
            OTHERS                = 2.
        IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
        ENDIF.
        LOOP AT lt_bseg INTO bseg
          WHERE augbl NE hbvor-belnr.
          IF bseg-koart = 'D'
          OR bseg-koart = 'K'.
            yaccnt-bukrs = bseg-bukrs.
            yaccnt-koart = bseg-koart.
            IF bseg-koart = 'D'.
              yaccnt-ktnra = bseg-kunnr.
            ELSE.
              yaccnt-ktnra = bseg-lifnr.
            ENDIF.
            COLLECT yaccnt.
            MOVE-CORRESPONDING bseg TO postab.
            IF bseg-koart = 'D'.
              postab-konto = bseg-kunnr.
            ELSE.
              postab-konto = bseg-lifnr.
            ENDIF.
            APPEND postab.
          ENDIF.
        ENDLOOP.
      ENDLOOP.
    ENDIF.

*   IF NOT SAVE_BVORG IS INITIAL.
*     SAVE2_BUKRS = SAVE_BUKRS.
*     SAVE2_BELNR = SAVE_BELNR.
*     SAVE2_GJAHR = SAVE_GJAHR.
*     PERFORM BVORG_BKPF.
*   ENDIF.

*-------Beleg splitten f¨¹r Extract--------------------------------------
    PERFORM extract_split_1.
*   PERFORM DESCRIBE_TABLES_BSEG.
*   PERFORM SAVE_BSAD.
*   PERFORM SAVE_BSAK.

*-------Debitoren-Kreditorenzuordnung-----------------------------------
    DESCRIBE TABLE hextractd  LINES kunlines.
    DESCRIBE TABLE hextractk  LINES liflines.
    IF  NOT kunlines IS INITIAL
    AND NOT liflines IS INITIAL.
      PERFORM debi_kred_zuordnen_2.
    ENDIF.

*   IF NOT SAVE_RINDKO IS INITIAL.
*     COUNTD = COUNTD + COUNTK.
*     IF COUNTD NE '1'.
*       XKAUSG = 'X'.
*     ENDIF.
*   ENDIF.

*-------Debitoren- und Kreditoren Belegzeilen f¨¹r Extract---------------
*   IF XKAUSG IS INITIAL.
    PERFORM debi_kred_im_beleg.
*   ENDIF.
    PERFORM fill_hbseg.
  ENDIF.
ENDFORM.                    "EXTRACT_VORBEREITUNG_1

*-----------------------------------------------------------------------
*       FORM EXTRACT_VORBEREITUNG_2
*-----------------------------------------------------------------------
FORM extract_vorbereitung_2.
* CLEAR   RF140.
  CLEAR   hbkpf.
  REFRESH hbkpf.
  CLEAR   hbseg.
  REFRESH hbseg.
* CLEAR   HBUZEI.
* REFRESH HBUZEI.

*-------Beleg einlesen--------------------------------------------------
* PERFORM READ_BKPF.
  IF bkpf-bstat = 'V'
  OR bkpf-bstat = 'W'
  OR bkpf-bstat = 'Z'
  OR bkpf-bstat = 'A'.
    CLEAR fimsg.
    fimsg-msort = '    '. fimsg-msgid = 'FB'.
    fimsg-msgty = 'I'.
    fimsg-msgno = '850'.
    fimsg-msgv1 = bkpf-bstat.
    fimsg-msgv2 = bkpf-bukrs.
    fimsg-msgv3 = bkpf-belnr.
    fimsg-msgv4 = bkpf-gjahr.
    PERFORM message_append.
    xkausg = 'X'.
  ENDIF.
  MOVE-CORRESPONDING bkpf TO hbkpf.
  APPEND hbkpf.
* RF140-WAERS = HBKPF-WAERS.
* PERFORM SAVE_BKPF.

*-------Pr¨¹fen ob buchungskreis¨¹bergreifender Vorgang-------------------
  PERFORM pruefen_bvorg.
* IF NOT SAVE_BVORG IS INITIAL.
*   CLEAR FIMSG.
*   FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
*   FIMSG-MSGNO = '550'.
*   FIMSG-MSGV1 = SAVE_BUKRS.
*   FIMSG-MSGV2 = SAVE_BELNR.
*   FIMSG-MSGV3 = SAVE_GJAHR.
*   FIMSG-MSGV4 = SAVE_BVORG.
*   PERFORM MESSAGE_APPEND.
*   XKAUSG = 'X'.
* ENDIF.

  IF xkausg IS INITIAL.
    PERFORM read_bseg.
    IF sy-subrc NE 0.
      CLEAR fimsg.
      fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
      fimsg-msgno = '554'.
      fimsg-msgv1 = save_bukrs.
      fimsg-msgv2 = save_belnr.
      fimsg-msgv3 = save_gjahr.
      PERFORM message_append.
      xkausg = 'X'.
    ENDIF.

*-------bei buchungskreis¨¹bergreifendem Vorgang zus#tzliche ------------
*-------Informationen einlesen------------------------------------------
    IF  NOT save_bvorg IS INITIAL
    AND NOT t048-xbukr IS INITIAL.
*       PERFORM READ_BVOR.
      PERFORM save_bseg.
      save2_bukrs = save_bukrs.
      save2_belnr = save_belnr.
      save2_gjahr = save_gjahr.
      PERFORM bvorg_bkpf.
      PERFORM bvorg_bseg.
      PERFORM restore_bseg.
    ENDIF.

*-------Beleg splitten f¨¹r Extract--------------------------------------
    PERFORM extract_split_2.
*   PERFORM DESCRIBE_TABLES_BSEG.
*   PERFORM SAVE_BSAD.
*   PERFORM SAVE_BSAK.

*-------Zentralen/Filialen pr¨¹fen---------------------------------------
*   PERFORM PRUEFEN_ZENTFIL.

*-------Debitoren-Kreditorenzuordnung-----------------------------------
*   DESCRIBE TABLE KUNNR_wespe LINES KUNLINES.
*   DESCRIBE TABLE LIFNR_wespe LINES LIFLINES.
*   IF  NOT KUNLINES IS INITIAL
*   AND NOT LIFLINES IS INITIAL.
*     PERFORM DEBI_KRED_ZUORDNEN.
*   ENDIF.
* ENDIF.

*-------Debitoren- und Kreditoren Belegzeilen f¨¹r Extract---------------
    PERFORM debi_kred_im_beleg.
  ENDIF.
ENDFORM.                    "EXTRACT_VORBEREITUNG_2

*-----------------------------------------------------------------------
*       FORM EXTRACT_VORBEREITUNG_3
*-----------------------------------------------------------------------
FORM extract_vorbereitung_3.
* CLEAR   RF140.
* CLEAR   COUNTZ.
  CLEAR   hbkpf.
  REFRESH hbkpf.
  CLEAR   hbseg.
  REFRESH hbseg.
* CLEAR   HBUZEI.
* REFRESH HBUZEI.

*-------Beleg einlesen--------------------------------------------------
  IF  NOT save_rindko IS INITIAL
  AND     save_rxbkor IS INITIAL.
    PERFORM read_bkpf.
    IF sy-subrc NE 0.
      CLEAR fimsg.
      fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
      fimsg-msgno = '547'.
      fimsg-msgv1 = save_bukrs.
      fimsg-msgv2 = save_belnr.
      fimsg-msgv3 = save_gjahr.
      PERFORM message_append.
      xkausg = 'X'.
    ENDIF.
  ENDIF.
* IF BKPF-BSTAT = 'V'
  IF bkpf-bstat = 'W'
  OR bkpf-bstat = 'Z'.
    CLEAR fimsg.
    fimsg-msort = '    '. fimsg-msgid = 'FB'.
    fimsg-msgty = 'I'.
    fimsg-msgno = '856'.
    fimsg-msgv1 = bkpf-bstat.
    fimsg-msgv2 = bkpf-bukrs.
    fimsg-msgv3 = bkpf-belnr.
    fimsg-msgv4 = bkpf-gjahr.
    PERFORM message_append.
    xkausg = 'X'.
  ENDIF.
  CASE bkpf-bstat.
    WHEN ' '.
    WHEN 'V'.
    WHEN 'S'.
      IF save_statbl IS INITIAL.
        xkausg = 'X'.
        CLEAR fimsg.
        fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
        fimsg-msgno = '556'.
        fimsg-msgv1 = save_bukrs.
        fimsg-msgv2 = save_belnr.
        fimsg-msgv3 = save_gjahr.
        PERFORM message_append.
      ENDIF.
    WHEN OTHERS.
      CLEAR fimsg.
      fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
      fimsg-msgno = '555'.
      fimsg-msgv1 = save_bukrs.
      fimsg-msgv2 = save_belnr.
      fimsg-msgv3 = save_gjahr.
      fimsg-msgv4 = bkpf-bstat.
      PERFORM message_append.
      xkausg = 'X'.
  ENDCASE.
  IF xkausg IS INITIAL.
    MOVE-CORRESPONDING bkpf TO hbkpf.
    APPEND hbkpf.
*   RF140-WAERS = HBKPF-WAERS.
*   PERFORM SAVE_BKPF.

*-------Pr¨¹fen ob buchungskreis¨¹bergreifender Vorgang-------------------
    PERFORM pruefen_bvorg.
*   IF NOT SAVE_BVORG IS INITIAL.
*     CLEAR FIMSG.
*     FIMSG-MSORT = '    '. FIMSG-MSGID = 'FB'. FIMSG-MSGTY = 'I'.
*     FIMSG-MSGNO = '550'.
*     FIMSG-MSGV1 = SAVE_BUKRS.
*     FIMSG-MSGV2 = SAVE_BELNR.
*     FIMSG-MSGV3 = SAVE_GJAHR.
*     FIMSG-MSGV4 = SAVE_BVORG.
*     PERFORM MESSAGE_APPEND.
*     XKAUSG = 'X'.
*   ENDIF.
    IF xkausg IS INITIAL.
      IF bkpf-bstat = 'V'.
        PERFORM read_prel_document.
        PERFORM read_vbseg.
      ELSE.
        PERFORM read_bseg.
      ENDIF.
      IF sy-subrc NE 0.
        CLEAR fimsg.
        fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
        fimsg-msgno = '554'.
        fimsg-msgv1 = save_bukrs.
        fimsg-msgv2 = save_belnr.
        fimsg-msgv3 = save_gjahr.
        PERFORM message_append.
        xkausg = 'X'.
      ENDIF.
*     PERFORM SAVE_BSEG.

*-------bei buchungskreis¨¹bergreifendem Vorgang zus#tzliche ------------
*-------Informationen einlesen------------------------------------------
      IF  NOT save_bvorg IS INITIAL
      AND NOT t048-xbukr IS INITIAL.
*       PERFORM READ_BVOR.
        PERFORM save_bseg.
        save2_bukrs = save_bukrs.
        save2_belnr = save_belnr.
        save2_gjahr = save_gjahr.
        PERFORM bvorg_bkpf.
        PERFORM bvorg_bseg.
        PERFORM restore_bseg.
      ENDIF.

*-------Beleg splitten f¨¹r Extract--------------------------------------
      PERFORM extract_split_3.
*     PERFORM DESCRIBE_TABLES_BSEG.
*     PERFORM SAVE_BSAD.
*     PERFORM SAVE_BSAK.

*-------Debitoren-Kreditorenzuordnung-----------------------------------
      DESCRIBE TABLE hextractd  LINES kunlines.
      DESCRIBE TABLE hextractk  LINES liflines.
      IF  NOT kunlines IS INITIAL
      AND NOT liflines IS INITIAL.
        PERFORM debi_kred_zuordnen_2.
      ENDIF.

*     IF NOT SAVE_RINDKO IS INITIAL.
*       COUNTD = COUNTD + COUNTK.
*       IF COUNTD NE '1'.
*         XKAUSG = 'X'.
*       ENDIF.
*     ENDIF.

*-------Debitoren- und Kreditoren Belegzeilen f¨¹r Extract---------------
*     IF XKAUSG IS INITIAL.
      PERFORM debi_kred_im_beleg.
*     ENDIF.
    ENDIF.
  ENDIF.
ENDFORM.                    "EXTRACT_VORBEREITUNG_3

*-----------------------------------------------------------------------
*       FORM EXTRACT_VORBEREITUNG_4
*-----------------------------------------------------------------------
FORM extract_vorbereitung_4.
* CLEAR   RF140.
* CLEAR   COUNTZ.
  CLEAR   hbkpf.
  REFRESH hbkpf.
  CLEAR   hbseg.
  REFRESH hbseg.
* CLEAR   HBUZEI.
* REFRESH HBUZEI.

*-------Beleg einlesen--------------------------------------------------
  IF save_rxbkor IS INITIAL.
    PERFORM read_bkpf.
    IF sy-subrc NE 0.
      CLEAR fimsg.
      fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
      fimsg-msgno = '547'.
      fimsg-msgv1 = save_bukrs.
      fimsg-msgv2 = save_belnr.
      fimsg-msgv3 = save_gjahr.
      PERFORM message_append.
      xkausg = 'X'.
    ENDIF.
  ENDIF.
  IF bkpf-bstat = 'V'
  OR bkpf-bstat = 'W'
  OR bkpf-bstat = 'Z'
  OR bkpf-bstat = 'A'.
    CLEAR fimsg.
    fimsg-msort = '    '. fimsg-msgid = 'FB'.
    fimsg-msgty = 'I'.
    fimsg-msgno = '850'.
    fimsg-msgv1 = bkpf-bstat.
    fimsg-msgv2 = bkpf-bukrs.
    fimsg-msgv3 = bkpf-belnr.
    fimsg-msgv4 = bkpf-gjahr.
    PERFORM message_append.
    xkausg = 'X'.
  ENDIF.
  IF  save_rindko IS INITIAL
  AND save_rxbkor IS INITIAL.
  ELSE.
    PERFORM pruefen_htinso.
    IF xvorh IS INITIAL.
      PERFORM read_tinso.
      IF sy-subrc = 0.
        htinso = tinso.
        APPEND htinso.
      ELSE.
        save2_gjahr = save_gjahr.
        CLEAR save_gjahr.
        PERFORM read_tinso.
        IF sy-subrc = 0.
          save_gjahr   = save2_gjahr.
          tinso-gjahr  = save2_gjahr.
          htinso-gjahr = save2_gjahr.
          htinso = tinso.
          APPEND htinso.
        ELSE.
          CLEAR fimsg.
          fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
          fimsg-msgno = '557'.
          fimsg-msgv1 = save_bukrs.
          fimsg-msgv2 = save_belnr.
          fimsg-msgv3 = save2_gjahr.
          PERFORM message_append.
          xkausg = 'X'.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.
  IF tinso-idpos NE '1'.
    xkausg = 'X'.
    CLEAR fimsg.
    fimsg-msort = '    '. fimsg-msgid = 'FB'.
    fimsg-msgty = 'I'.
    fimsg-msgno = '551'.
    fimsg-msgv1 = save_bukrs.
    fimsg-msgv2 = save_belnr.
    fimsg-msgv3 = save_gjahr.
    PERFORM message_append.
  ENDIF.
*  IF  BKPF-WAERS NE TINSO-WAERS
*  AND TINSO-WAERS NE SPACE.
*  ELSE.
  MOVE-CORRESPONDING bkpf TO hbkpf.
  APPEND hbkpf.
*   RF140-WAERS = HBKPF-WAERS.
*   PERFORM SAVE_BKPF.

*-------Pr¨¹fen ob buchungskreis¨¹bergreifender Vorgang-------------------
  PERFORM pruefen_bvorg.
  IF NOT save_bvorg IS INITIAL.
    CLEAR fimsg.
    fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
    fimsg-msgno = '550'.
    fimsg-msgv1 = save_bukrs.
    fimsg-msgv2 = save_belnr.
    fimsg-msgv3 = save_gjahr.
    fimsg-msgv4 = save_bvorg.
    PERFORM message_append.
    xkausg = 'X'.
  ENDIF.
  IF xkausg IS INITIAL.
    PERFORM read_bseg.
    IF sy-subrc NE 0.
      CLEAR fimsg.
      fimsg-msort = '    '. fimsg-msgid = 'FB'. fimsg-msgty = 'I'.
      fimsg-msgno = '554'.
      fimsg-msgv1 = save_bukrs.
      fimsg-msgv2 = save_belnr.
      fimsg-msgv3 = save_gjahr.
      PERFORM message_append.
      xkausg = 'X'.
    ENDIF.
*   PERFORM SAVE_BSEG.

*-------bei buchungskreis¨¹bergreifendem Vorgang zus#tzliche ------------
*-------Informationen einlesen------------------------------------------
*   IF NOT SAVE_BVORG IS INITIAL.
*     PERFORM READ_BVOR.
*     PERFORM BVORG_BKPF.
*     PERFORM BVORG_BSEG.
*   ENDIF.

*-------Beleg splitten--------------------------------------------------
    PERFORM extract_split_4.
*     PERFORM DESCRIBE_TABLES_BSEG.
*     PERFORM SAVE_BSAD.
*     PERFORM SAVE_BSAK.

*-------Zentralen/Filialen pr¨¹fen---------------------------------------
*     PERFORM PRUEFEN_ZENTFIL.

  ENDIF.
*  ENDIF.
ENDFORM.                    "EXTRACT_VORBEREITUNG_4
