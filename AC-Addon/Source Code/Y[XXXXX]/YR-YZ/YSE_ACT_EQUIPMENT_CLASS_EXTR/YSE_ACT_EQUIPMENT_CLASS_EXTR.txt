*&---------------------------------------------------------------------*
*& Report  YSE_ACT_EQUIPMENT_CLASS_EXTR
*&
*&---------------------------------------------------------------------*
*&                                                                     *
*& ACT! : Equipment Class extraction                                   *
*&                                                                     *
*&---------------------------------------------------------------------*
*  Author                : Jules Smets
*  Date                  : 06.09.2012
*  Change Request Number :
*  Transport request Nr. : CD1K973190
*----------------------------------------------------------------------*
*                                                                      *
*----------------------------------------------------------------------*
* CHANGE HISTORY LOG                                                   *
*----------------------------------------------------------------------*
* MOD. NR.|   DATE     | NAME            | CORRECTION NR.| CHANGE REF. *
*----------------------------------------------------------------------*
* MOD-001 | 19.03.2014 | Jules Smets     | CD1K980489    | CR1794 (Act)*
*----------------------------------------------------------------------*

************************************************************************

REPORT  yse_act_equipment_class_extr.

TABLES: equi,
        equz,
        iloa,
        jest,
        kssk,
        klah.

TYPES: BEGIN OF ty_equi,
         equnr      TYPE equnr,
         objnr      TYPE j_objnr,
      END OF ty_equi.

TYPES: BEGIN OF ty_equo,
         equnr      TYPE equnr,
         objek      TYPE objnum,
      END OF ty_equo.

TYPES: BEGIN OF ty_dlfl,
         objnr      TYPE j_objnr,
      END OF ty_dlfl.

TYPES: BEGIN OF ty_class,
         objek      TYPE objnum,
         class      TYPE klasse_d,
         klart      TYPE klassenart,
         statu      TYPE klstatus,
       END OF ty_class.

DATA: gt_equi  TYPE TABLE OF ty_equi
                    WITH HEADER LINE.

DATA: gt_equo  TYPE TABLE OF ty_equo
                    WITH HEADER LINE.

DATA: gt_dlfl  TYPE HASHED TABLE OF ty_dlfl
                    WITH UNIQUE KEY objnr
                    WITH HEADER LINE,
      gt_dlfli TYPE TABLE OF ty_dlfl
                    WITH HEADER LINE.

DATA: gt_class TYPE SORTED TABLE OF ty_class
                    WITH NON-UNIQUE KEY objek
                    WITH HEADER LINE.

DATA: BEGIN OF gt_out  OCCURS 0,
        equnr      TYPE equnr,
        tab01(1)   TYPE c,
        class      TYPE klasse_d,
        tab02(1)   TYPE c,
        klart      TYPE klassenart,
        tab03(1)   TYPE c,
        statu      TYPE klstatus,
        tab04(1)   TYPE c,
      END OF gt_out.

DATA: BEGIN OF gt_outh  OCCURS 0,
        equnr      TYPE fieldname,
        tab01(1)   TYPE c,
        class      TYPE fieldname,
        tab02(1)   TYPE c,
        klart      TYPE fieldname,
        tab03(1)   TYPE c,
        statu      TYPE fieldname,
        tab04(1)   TYPE c,
      END OF gt_outh.

DATA: gv_directory(25) TYPE c VALUE '/var/load/xxx/UK/read/',
      gv_ofile         LIKE /sapdmc/lsoinp-filename,
      gv_logsys        LIKE tbdlst-logsys,
      gv_error         TYPE xfeld.

CONSTANTS: gc_stat_dl  TYPE j_status  VALUE 'I0076',
           gc_stat_in  TYPE j_status  VALUE 'I0320',
           gc_stat_scr TYPE j_status  VALUE 'E0005'.

SELECTION-SCREEN  BEGIN OF BLOCK input  WITH FRAME  TITLE text-s01.
PARAMETERS: p_swerk  LIKE iloa-swerk  OBLIGATORY  MEMORY ID swk.
SELECTION-SCREEN SKIP.
SELECT-OPTIONS: s_equnr  FOR equi-equnr.
SELECTION-SCREEN  END OF BLOCK input.


************************************************************************
*       I N I T I A L I Z A T I O N    E V E N T                       *
************************************************************************
INITIALIZATION.

* Logical system
  CALL FUNCTION 'OWN_LOGICAL_SYSTEM_GET'
    IMPORTING
      own_logical_system             = gv_logsys
    EXCEPTIONS
      own_logical_system_not_defined = 1
      OTHERS                         = 2.
  IF sy-subrc <> 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
         WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.


************************************************************************
*       S T A R T - O F - S E L E C T I O N    E V E N T               *
************************************************************************
START-OF-SELECTION.

* Select data
  PERFORM select_data.

* Check anything selected
  IF gt_equi[] IS INITIAL.
    MESSAGE ID 'YSE_GENERAL' TYPE 'S' NUMBER '000'
            WITH 'No equipments selected'(e01).
    RETURN.
  ENDIF.

* Build output
  PERFORM build_output.

* Save output.
  PERFORM save_output.

  IF gv_error IS INITIAL.
    WRITE: /01 'Program ended succesfully'(i01).
  ENDIF.


************************************************************************
*       S U B R O U T I N E S                                          *
************************************************************************

*&---------------------------------------------------------------------*
*&      Form  SELECT_DATA
*&---------------------------------------------------------------------*
*       Select data
*----------------------------------------------------------------------*
FORM select_data .

* Equipment time segment
  SELECT e~equnr e~objnr
         INTO TABLE gt_equi
         FROM equi AS e
         INNER JOIN equz AS z
                    ON z~equnr = e~equnr
         INNER JOIN iloa AS l
                    ON l~iloan = z~iloan
         WHERE e~equnr IN s_equnr
           AND z~datbi =  '99991231'
           AND l~swerk =  p_swerk.
  CHECK NOT gt_equi[] IS INITIAL.

*** MOD-001 * begin ***
** Check for deleted/scrapped equipments
*  SELECT objnr
*         INTO TABLE gt_dlfli
*         FROM jest
*         FOR ALL ENTRIES IN gt_equi
*         WHERE objnr = gt_equi-objnr
*           AND ( stat = gc_stat_dl   OR
*                 stat = gc_stat_in   OR
*                 stat = gc_stat_scr )
*           AND inact = ' '.
*  SORT gt_dlfli BY objnr.
*  DELETE ADJACENT DUPLICATES FROM gt_dlfli
*                                  COMPARING objnr.
*  gt_dlfl[] = gt_dlfli[].
*  FREE gt_dlfli.
*** MOD-001 * end ***

  LOOP AT gt_equi.
*** MOD-001 * begin ***
*    READ TABLE gt_dlfl WITH TABLE KEY objnr = gt_equi-objnr.
*    IF sy-subrc = 0.
*      DELETE gt_equi.
*    ELSE.
*** MOD-001 * end ***
*   Objects
    gt_equo-equnr = gt_equi-equnr.
    gt_equo-objek = gt_equi-equnr.
    APPEND gt_equo.
*    ENDIF.                                                 "MOD-001
  ENDLOOP.
*  FREE gt_dlfl.                                            "MOD-001

  CHECK NOT gt_equo[] IS INITIAL.

* Class data
  SELECT o~objek c~class o~klart c~statu
         INTO TABLE gt_class
         FROM kssk AS o
         INNER JOIN klah AS c
                    ON c~clint = o~clint
         FOR ALL ENTRIES IN gt_equo
         WHERE o~objek    = gt_equo-objek
           AND o~mafid = 'O'
           AND o~lkenz = ' '.

ENDFORM.                    " SELECT_DATA

*&---------------------------------------------------------------------*
*&      Form  BUILD_OUTPUT
*&---------------------------------------------------------------------*
*       Build table fot output file
*----------------------------------------------------------------------*
FORM build_output .

  LOOP AT gt_equo.

    LOOP AT gt_class WHERE objek = gt_equo-objek.

      CLEAR: gt_out.
      MOVE '|' TO: gt_out-tab01, gt_out-tab02, gt_out-tab03,
                   gt_out-tab04.
      gt_out-equnr = gt_equo-equnr.
      gt_out-class = gt_class-class.
      gt_out-klart = gt_class-klart.
      gt_out-statu = gt_class-statu.
      APPEND gt_out.

    ENDLOOP.

  ENDLOOP.

ENDFORM.                    " BUILD_OUTPUT

*&---------------------------------------------------------------------*
*&      Form  SAVE_OUTPUT
*&---------------------------------------------------------------------*
*       Save output file
*----------------------------------------------------------------------*
FORM save_output .

  CONCATENATE 'EQUIPMENT' 'CLASS' p_swerk
             INTO gv_ofile SEPARATED BY '_'.

  REPLACE 'xxx' IN gv_directory WITH gv_logsys(3).
  CONCATENATE gv_directory gv_ofile INTO gv_ofile.

  OPEN DATASET gv_ofile FOR OUTPUT IN TEXT MODE ENCODING DEFAULT.
  IF sy-subrc <> 0.
    WRITE: / text-e02, gv_ofile.
    gv_error = 'X'.
    EXIT.
  ENDIF.

* Fill header
  PERFORM fill_header.
  LOOP AT gt_outh.
    TRANSFER gt_outh TO gv_ofile.
  ENDLOOP.

* Fill output
  LOOP AT gt_out.
    TRANSFER gt_out TO gv_ofile.
  ENDLOOP.

ENDFORM.                    " SAVE_OUTPUT

*&---------------------------------------------------------------------*
*&      Form  FILL_HEADER
*&---------------------------------------------------------------------*
*       Fill header
*----------------------------------------------------------------------*
FORM fill_header .

  CLEAR: gt_outh.
  MOVE '|' TO: gt_outh-tab01, gt_outh-tab02, gt_outh-tab03,
               gt_outh-tab04.

  gt_outh-equnr  = 'EQUNR'.
  gt_outh-class  = 'KLASSE_D'.
  gt_outh-klart  = 'KLASSENART'.
  gt_outh-statu  = 'KLSTATUS'.
  APPEND gt_outh.

  gt_outh-equnr  = 'Equipment'.
  gt_outh-class  = 'Class'.
  gt_outh-klart  = 'Class Type'.
  gt_outh-statu  = 'Class Status'.
  APPEND gt_outh.

ENDFORM.                    " FILL_HEADER

*Text symbol text£º
*E01:No equipments selected
*E02:Could not open output file
*I01:Program ended succesfully

*S01:Selection
*Selection text£º
*P_SWERK:D       .
*S_EQUNR:D       .
