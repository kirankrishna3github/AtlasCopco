************************************************************************
* Program ID           : YSE_SD_PO_MAPPING_UPDATE                      *
* Program Title        : Update table YSE_PO_MAPPING                   *
* Author               : Inge Bruyndonckx                              *
* Date                 : 22.05.2007                                    *
* Description          :                                               *
*----------------------------------------------------------------------*

REPORT  yse_sd_po_mapping_update.

*----------------------------------------------------------------------*
* Data declarations                                                    *
*----------------------------------------------------------------------*

*--- Tables
TABLES: ekko, ekpo, t001, eket.


*--- Internal tables
DATA: BEGIN OF i_t001 OCCURS 0.
        INCLUDE STRUCTURE t001.
DATA: END OF i_t001.

DATA: BEGIN OF i_ekko OCCURS 0,
ebeln LIKE ekko-ebeln,
bukrs LIKE ekko-bukrs,
ihrez LIKE ekko-ihrez,
EKORG LIKE EKKO-EKORG,
LIFNR LIKE EKKO-LIFNR.
DATA: END OF i_ekko.

DATA: BEGIN OF i_ekpo OCCURS 0,
ebeln LIKE ekpo-ebeln,
ebelp LIKE ekpo-ebelp.
DATA: END OF i_ekpo.

DATA: BEGIN OF i_eket OCCURS 0,
ebeln LIKE eket-ebeln,
ebelp LIKE eket-ebelp,
licha LIKE eket-licha.
DATA: END OF i_eket.

DATA: BEGIN OF i_yse_po_mapping OCCURS 0.
        INCLUDE STRUCTURE yse_po_mapping.
DATA: END OF i_yse_po_mapping.



*--- Variables
DATA: lv_ihrez(15).
DATA: lv_licha LIKE eket-licha.

*----------------------------------------------------------------------*
* Selection screen                                                     *
*----------------------------------------------------------------------*
SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME.
SELECT-OPTIONS: s_land1 FOR t001-land1.
SELECT-OPTIONS: S_EKORG FOR EKKO-EKORG.
SELECT-OPTIONS: S_LIFNR FOR EKKO-LIFNR.
SELECTION-SCREEN END OF BLOCK b1.


************************************************************************
* START MAIN PROGRAM                                                   *
************************************************************************
START-OF-SELECTION.

*  PERFORM initialize_data.
*
  PERFORM select_data.
  PERFORM process_data.
  PERFORM output_dupl.

*&---------------------------------------------------------------------*
*&      Form  select_data
*&---------------------------------------------------------------------*
FORM select_data .

* Select all relevant company codes
  SELECT *
  FROM t001
  INTO TABLE i_t001
  WHERE land1 IN s_land1.

  DESCRIBE TABLE i_t001 LINES sy-tfill.

  IF sy-tfill NE 0.
    SORT i_t001.
* Select all relevant pos
    SELECT ebeln bukrs ihrez EKORG lifnr
    FROM ekko
    INTO CORRESPONDING FIELDS OF TABLE i_ekko
    FOR ALL ENTRIES IN i_t001
    WHERE bukrs EQ i_t001-bukrs
    AND EKORG IN S_EKORG
    AND LIFNR IN S_LIFNR
    AND ihrez NE ' '
    AND loekz NE 'X'.

    DESCRIBE TABLE i_ekko LINES sy-tfill.
    IF sy-tfill NE 0.
* select all relevant po lines
      SELECT ebeln ebelp
      FROM ekpo
      INTO CORRESPONDING FIELDS OF TABLE i_ekpo
      FOR ALL ENTRIES IN i_ekko
      WHERE ebeln = i_ekko-ebeln
      AND loekz EQ SPACE.
*      AND LOEKZ NE 'X'.

      DESCRIBE TABLE i_ekpo LINES sy-tfill.
      IF sy-tfill NE 0.
        SELECT ebeln ebelp licha
        FROM eket
        INTO CORRESPONDING FIELDS OF TABLE i_eket
        FOR ALL ENTRIES IN i_ekpo
        WHERE ebeln = i_ekpo-ebeln
        AND ebelp = i_ekpo-ebelp.
      ENDIF.
    ENDIF.
  ENDIF.

ENDFORM.                    " select_data

*&---------------------------------------------------------------------*
*&      Form  process_data
*&---------------------------------------------------------------------*

FORM process_data .

  SORT i_ekko.
  SORT i_ekpo.
  SORT i_eket.
  LOOP AT i_ekpo.
    CLEAR: i_ekko, lv_licha, lv_ihrez.
    READ TABLE i_ekko WITH KEY ebeln = i_ekpo-ebeln.
    IF sy-subrc EQ 0.

      SHIFT i_ekko-ihrez LEFT DELETING LEADING SPACE.
      i_yse_po_mapping-po = i_ekko-ihrez(10).

      CLEAR i_eket.
      READ TABLE i_eket WITH KEY ebeln = i_ekpo-ebeln
                                 ebelp = i_ekpo-ebelp.
      SHIFT i_eket-licha LEFT DELETING LEADING '0'.
      i_yse_po_mapping-poline = i_eket-licha(3).
      i_yse_po_mapping-ebeln = i_ekpo-ebeln.
      i_yse_po_mapping-ebelp = i_ekpo-ebelp.
      i_yse_po_mapping-bukrs = i_ekko-bukrs.
      i_yse_po_mapping-EKORG = i_ekko-EKORG.
      i_yse_po_mapping-LIFNR = i_ekko-LIFNR.
      APPEND i_yse_po_mapping.
    ENDIF.
  ENDLOOP.


  MODIFY yse_po_mapping FROM TABLE i_yse_po_mapping.

ENDFORM.                    " process data

*&---------------------------------------------------------------------*
*&      Form  output_dupl
*&---------------------------------------------------------------------*
FORM output_dupl .

  DATA:
    WA_MAP LIKE LINE  OF I_YSE_PO_MAPPING,
    LT_MAP LIKE TABLE OF I_YSE_PO_MAPPING WITH HEADER LINE.

  CONSTANTS:
    C_TAB TYPE C VALUE CL_ABAP_CHAR_UTILITIES=>HORIZONTAL_TAB.

  SORT I_YSE_PO_MAPPING BY PO POLINE.
  LOOP AT I_YSE_PO_MAPPING.

    IF     I_YSE_PO_MAPPING-PO     EQ WA_MAP-PO
       AND I_YSE_PO_MAPPING-POLINE EQ WA_MAP-POLINE
       AND I_YSE_PO_MAPPING-EKORG  EQ WA_MAP-EKORG.
      APPEND WA_MAP TO LT_MAP.
    ELSE.
      MOVE-CORRESPONDING I_YSE_PO_MAPPING TO WA_MAP.
    ENDIF.

  ENDLOOP.

  IF NOT LT_MAP[] IS INITIAL.
    WRITE: 'Some of the following lines will not be in mapping table',
           'due to duplicate key:'.
    LOOP AT LT_MAP.

      LOOP AT I_YSE_PO_MAPPING WHERE PO     = LT_MAP-PO AND
                                     POLINE = LT_MAP-POLINE.
        WRITE: / I_YSE_PO_MAPPING-PO,
                 C_TAB,
                 I_YSE_PO_MAPPING-POLINE,
                 C_TAB,
                 I_YSE_PO_MAPPING-EKORG,
                 C_TAB,
                 I_YSE_PO_MAPPING-EBELN,
                 C_TAB,
                 I_YSE_PO_MAPPING-EBELP,
                 C_TAB,
                 I_YSE_PO_MAPPING-BUKRS,
                 C_TAB,
                 I_YSE_PO_MAPPING-LIFNR.
      ENDLOOP.
    ENDLOOP.
  ENDIF.

ENDFORM.                    " output_dupl

*Selection text£º
*S_EKORG:D       Purch. Organization
*S_LAND1:D       Country Key
*S_LIFNR:D       Vendor
